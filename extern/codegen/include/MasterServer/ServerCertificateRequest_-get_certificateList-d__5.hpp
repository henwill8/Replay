// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ServerCertificateRequest
#include "MasterServer/ServerCertificateRequest.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
// Type namespace: MasterServer
namespace MasterServer {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: MasterServer.ServerCertificateRequest/<get_certificateList>d__5
  // [] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: D1B84C
  class ServerCertificateRequest::$get_certificateList$d__5 : public ::Il2CppObject/*, public System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>, public System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>*/ {
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$1__state and: $$2__current
    char __padding0[0x4] = {};
    // private System.Byte[] <>2__current
    // Size: 0x8
    // Offset: 0x18
    ::Array<uint8_t>* $$2__current;
    // Field size check
    static_assert(sizeof(::Array<uint8_t>*) == 0x8);
    // private System.Int32 <>l__initialThreadId
    // Size: 0x4
    // Offset: 0x20
    int $$l__initialThreadId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$l__initialThreadId and: $$4__this
    char __padding2[0x4] = {};
    // public MasterServer.ServerCertificateRequest <>4__this
    // Size: 0x8
    // Offset: 0x28
    MasterServer::ServerCertificateRequest* $$4__this;
    // Field size check
    static_assert(sizeof(MasterServer::ServerCertificateRequest*) == 0x8);
    // private System.Int32 <i>5__2
    // Size: 0x4
    // Offset: 0x30
    int $i$5__2;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: $get_certificateList$d__5
    $get_certificateList$d__5(int $$1__state_ = {}, ::Array<uint8_t>* $$2__current_ = {}, int $$l__initialThreadId_ = {}, MasterServer::ServerCertificateRequest* $$4__this_ = {}, int $i$5__2_ = {}) noexcept : $$1__state{$$1__state_}, $$2__current{$$2__current_}, $$l__initialThreadId{$$l__initialThreadId_}, $$4__this{$$4__this_}, $i$5__2{$i$5__2_} {}
    // Creating interface conversion operator: operator System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>
    operator System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>*>(this);
    }
    // Creating interface conversion operator: operator System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>
    operator System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>*>(this);
    }
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x11258D0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ServerCertificateRequest::$get_certificateList$d__5* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ServerCertificateRequest::$get_certificateList$d__5*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x112637C
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x1126380
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Boolean IEnumerator::MoveNext()
    bool MoveNext();
    // Creating proxy method: System_Collections_IEnumerator_MoveNext
    // Maps to method: MoveNext
    bool System_Collections_IEnumerator_MoveNext();
    // private System.Byte[] System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current()
    // Offset: 0x1126438
    // Implemented from: System.Collections.Generic.IEnumerator`1
    // Base method: T IEnumerator_1::get_Current()
    ::Array<uint8_t>* System_Collections_Generic_IEnumerator_1_get_Current();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x1126440
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Void IEnumerator::Reset()
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x11264A0
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Object IEnumerator::get_Current()
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // private System.Collections.Generic.IEnumerator`1<System.Byte[]> System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator()
    // Offset: 0x11264A8
    // Implemented from: System.Collections.Generic.IEnumerable`1
    // Base method: System.Collections.Generic.IEnumerator`1<T> IEnumerable_1::GetEnumerator()
    System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>* System_Collections_Generic_IEnumerable_1_GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x112655C
    // Implemented from: System.Collections.IEnumerable
    // Base method: System.Collections.IEnumerator IEnumerable::GetEnumerator()
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
  }; // MasterServer.ServerCertificateRequest/<get_certificateList>d__5
  #pragma pack(pop)
  static check_size<sizeof(ServerCertificateRequest::$get_certificateList$d__5), 48 + sizeof(int)> __MasterServer_ServerCertificateRequest_$get_certificateList$d__5SizeCheck;
  static_assert(sizeof(ServerCertificateRequest::$get_certificateList$d__5) == 0x34);
}
DEFINE_IL2CPP_ARG_TYPE(MasterServer::ServerCertificateRequest::$get_certificateList$d__5*, "MasterServer", "ServerCertificateRequest/<get_certificateList>d__5");
