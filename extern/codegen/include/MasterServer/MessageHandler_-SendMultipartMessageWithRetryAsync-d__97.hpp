// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler
#include "MasterServer/MessageHandler.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Runtime.CompilerServices.TaskAwaiter
#include "System/Runtime/CompilerServices/TaskAwaiter.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: IPEndPoint
  class IPEndPoint;
}
// Forward declaring namespace: MasterServer
namespace MasterServer {
  // Forward declaring type: IMasterServerReliableRequest
  class IMasterServerReliableRequest;
}
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`5<T1, T2, T3, T4, TResult>
  template<typename T1, typename T2, typename T3, typename T4, typename TResult>
  class Func_5;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Completed forward declares
// Type namespace: MasterServer
namespace MasterServer {
  // Autogenerated type: MasterServer.MessageHandler/<SendMultipartMessageWithRetryAsync>d__97
  struct MessageHandler::$SendMultipartMessageWithRetryAsync$d__97 : public System::ValueType/*, public System::Runtime::CompilerServices::IAsyncStateMachine*/ {
    public:
    // public System.Int32 <>1__state
    // Offset: 0x0
    int $$1__state;
    // public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
    // Offset: 0x8
    System::Runtime::CompilerServices::AsyncTaskMethodBuilder $$t__builder;
    // public MasterServer.MessageHandler <>4__this
    // Offset: 0x20
    MasterServer::MessageHandler* $$4__this;
    // public System.UInt32 protocolVersion
    // Offset: 0x28
    uint protocolVersion;
    // public System.Net.IPEndPoint remoteEndPoint
    // Offset: 0x30
    System::Net::IPEndPoint* remoteEndPoint;
    // public System.Threading.CancellationToken cancellationToken
    // Offset: 0x38
    System::Threading::CancellationToken cancellationToken;
    // public MasterServer.IMasterServerReliableRequest message
    // Offset: 0x40
    MasterServer::IMasterServerReliableRequest* message;
    // public LiteNetLib.Utils.NetDataWriter data
    // Offset: 0x48
    LiteNetLib::Utils::NetDataWriter* data;
    // public System.Func`5<System.UInt32,System.Net.IPEndPoint,MasterServer.IMasterServerReliableRequest,System.Threading.CancellationToken,System.Threading.Tasks.Task> onSendFailed
    // Offset: 0x50
    System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed;
    // private MasterServer.MessageHandler/<>c__DisplayClass97_0 <>8__1
    // Offset: 0x58
    MasterServer::MessageHandler::$$c__DisplayClass97_0* $$8__1;
    // private System.Boolean <shouldReleaseMessage>5__2
    // Offset: 0x60
    bool $shouldReleaseMessage$5__2;
    // private System.Object <>7__wrap2
    // Offset: 0x68
    ::Il2CppObject* $$7__wrap2;
    // private System.Int32 <>7__wrap3
    // Offset: 0x70
    int $$7__wrap3;
    // private System.Runtime.CompilerServices.TaskAwaiter <>u__1
    // Offset: 0x78
    System::Runtime::CompilerServices::TaskAwaiter $$u__1;
    // Creating value type constructor for type: $SendMultipartMessageWithRetryAsync$d__97
    constexpr $SendMultipartMessageWithRetryAsync$d__97(int $$1__state_ = {}, System::Runtime::CompilerServices::AsyncTaskMethodBuilder $$t__builder_ = {}, MasterServer::MessageHandler* $$4__this_ = {}, uint protocolVersion_ = {}, System::Net::IPEndPoint* remoteEndPoint_ = {}, System::Threading::CancellationToken cancellationToken_ = {}, MasterServer::IMasterServerReliableRequest* message_ = {}, LiteNetLib::Utils::NetDataWriter* data_ = {}, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed_ = {}, MasterServer::MessageHandler::$$c__DisplayClass97_0* $$8__1_ = {}, bool $shouldReleaseMessage$5__2_ = {}, ::Il2CppObject* $$7__wrap2_ = {}, int $$7__wrap3_ = {}, System::Runtime::CompilerServices::TaskAwaiter $$u__1_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, $$4__this{$$4__this_}, protocolVersion{protocolVersion_}, remoteEndPoint{remoteEndPoint_}, cancellationToken{cancellationToken_}, message{message_}, data{data_}, onSendFailed{onSendFailed_}, $$8__1{$$8__1_}, $shouldReleaseMessage$5__2{$shouldReleaseMessage$5__2_}, $$7__wrap2{$$7__wrap2_}, $$7__wrap3{$$7__wrap3_}, $$u__1{$$u__1_} {}
    // Creating interface conversion operator: operator System::Runtime::CompilerServices::IAsyncStateMachine
    operator System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
      return *reinterpret_cast<System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
    }
    // private System.Void MoveNext()
    // Offset: 0xE7FD40
    // Implemented from: System.Runtime.CompilerServices.IAsyncStateMachine
    // Base method: System.Void IAsyncStateMachine::MoveNext()
    void MoveNext();
    // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
    // Offset: 0xE7FD48
    // Implemented from: System.Runtime.CompilerServices.IAsyncStateMachine
    // Base method: System.Void IAsyncStateMachine::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
    void SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine);
  }; // MasterServer.MessageHandler/<SendMultipartMessageWithRetryAsync>d__97
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__97, "MasterServer", "MessageHandler/<SendMultipartMessageWithRetryAsync>d__97");
#pragma pack(pop)
