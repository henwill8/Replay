// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServerUnreliableMessage
#include "MasterServer/IMasterServerUnreliableMessage.hpp"
// Including type: MasterServer.IUserServerToClientMessage
#include "MasterServer/IUserServerToClientMessage.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PacketPool`1<T>
  template<typename T>
  class PacketPool_1;
}
// Forward declaring namespace: MasterServer
namespace MasterServer {
  // Skipping declaration: Result because it is already included!
}
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
  // Forward declaring type: NetDataReader
  class NetDataReader;
}
// Completed forward declares
// Type namespace: MasterServer
namespace MasterServer {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: MasterServer.BroadcastServerHeartbeatResponse
  // [] Offset: FFFFFFFF
  class BroadcastServerHeartbeatResponse : public ::Il2CppObject/*, public MasterServer::IMasterServerUnreliableMessage, public MasterServer::IUserServerToClientMessage*/ {
    public:
    // Nested type: MasterServer::BroadcastServerHeartbeatResponse::Result
    struct Result;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: MasterServer.BroadcastServerHeartbeatResponse/Result
    // [] Offset: FFFFFFFF
    struct Result/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: Result
      constexpr Result(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MasterServer.BroadcastServerHeartbeatResponse/Result Success
      static constexpr const int Success = 0;
      // Get static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result Success
      static MasterServer::BroadcastServerHeartbeatResponse::Result _get_Success();
      // Set static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result Success
      static void _set_Success(MasterServer::BroadcastServerHeartbeatResponse::Result value);
      // static field const value: static public MasterServer.BroadcastServerHeartbeatResponse/Result ServerDoesNotExist
      static constexpr const int ServerDoesNotExist = 1;
      // Get static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result ServerDoesNotExist
      static MasterServer::BroadcastServerHeartbeatResponse::Result _get_ServerDoesNotExist();
      // Set static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result ServerDoesNotExist
      static void _set_ServerDoesNotExist(MasterServer::BroadcastServerHeartbeatResponse::Result value);
      // static field const value: static public MasterServer.BroadcastServerHeartbeatResponse/Result UnknownError
      static constexpr const int UnknownError = 2;
      // Get static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result UnknownError
      static MasterServer::BroadcastServerHeartbeatResponse::Result _get_UnknownError();
      // Set static field: static public MasterServer.BroadcastServerHeartbeatResponse/Result UnknownError
      static void _set_UnknownError(MasterServer::BroadcastServerHeartbeatResponse::Result value);
    }; // MasterServer.BroadcastServerHeartbeatResponse/Result
    #pragma pack(pop)
    static check_size<sizeof(BroadcastServerHeartbeatResponse::Result), 0 + sizeof(int)> __MasterServer_BroadcastServerHeartbeatResponse_ResultSizeCheck;
    static_assert(sizeof(BroadcastServerHeartbeatResponse::Result) == 0x4);
    // public MasterServer.BroadcastServerHeartbeatResponse/Result result
    // Size: 0x4
    // Offset: 0x10
    MasterServer::BroadcastServerHeartbeatResponse::Result result;
    // Field size check
    static_assert(sizeof(MasterServer::BroadcastServerHeartbeatResponse::Result) == 0x4);
    // Creating value type constructor for type: BroadcastServerHeartbeatResponse
    BroadcastServerHeartbeatResponse(MasterServer::BroadcastServerHeartbeatResponse::Result result_ = {}) noexcept : result{result_} {}
    // Creating interface conversion operator: operator MasterServer::IMasterServerUnreliableMessage
    operator MasterServer::IMasterServerUnreliableMessage() noexcept {
      return *reinterpret_cast<MasterServer::IMasterServerUnreliableMessage*>(this);
    }
    // Creating interface conversion operator: operator MasterServer::IUserServerToClientMessage
    operator MasterServer::IUserServerToClientMessage() noexcept {
      return *reinterpret_cast<MasterServer::IUserServerToClientMessage*>(this);
    }
    // Creating conversion operator: operator MasterServer::BroadcastServerHeartbeatResponse::Result
    constexpr operator MasterServer::BroadcastServerHeartbeatResponse::Result() const noexcept {
      return result;
    }
    // static public PacketPool`1<MasterServer.BroadcastServerHeartbeatResponse> get_pool()
    // Offset: 0x11195A0
    static GlobalNamespace::PacketPool_1<MasterServer::BroadcastServerHeartbeatResponse*>* get_pool();
    // public MasterServer.BroadcastServerHeartbeatResponse Init(MasterServer.BroadcastServerHeartbeatResponse/Result result)
    // Offset: 0x11195E8
    MasterServer::BroadcastServerHeartbeatResponse* Init(MasterServer::BroadcastServerHeartbeatResponse::Result result);
    // public System.Void Serialize(LiteNetLib.Utils.NetDataWriter writer)
    // Offset: 0x11195F0
    // Implemented from: LiteNetLib.Utils.INetSerializable
    // Base method: System.Void INetSerializable::Serialize(LiteNetLib.Utils.NetDataWriter writer)
    void Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // Creating proxy method: LiteNetLib_Utils_INetSerializable_Serialize
    // Maps to method: Serialize
    void LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // public System.Void Deserialize(LiteNetLib.Utils.NetDataReader reader)
    // Offset: 0x1119614
    // Implemented from: LiteNetLib.Utils.INetSerializable
    // Base method: System.Void INetSerializable::Deserialize(LiteNetLib.Utils.NetDataReader reader)
    void Deserialize(LiteNetLib::Utils::NetDataReader* reader);
    // Creating proxy method: LiteNetLib_Utils_INetSerializable_Deserialize
    // Maps to method: Deserialize
    void LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader);
    // public System.Void Release()
    // Offset: 0x111964C
    // Implemented from: IPoolablePacket
    // Base method: System.Void IPoolablePacket::Release()
    void Release();
    // public System.Void .ctor()
    // Offset: 0x11196A8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BroadcastServerHeartbeatResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BroadcastServerHeartbeatResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BroadcastServerHeartbeatResponse*, creationType>()));
    }
  }; // MasterServer.BroadcastServerHeartbeatResponse
  #pragma pack(pop)
  static check_size<sizeof(BroadcastServerHeartbeatResponse), 16 + sizeof(MasterServer::BroadcastServerHeartbeatResponse::Result)> __MasterServer_BroadcastServerHeartbeatResponseSizeCheck;
  static_assert(sizeof(BroadcastServerHeartbeatResponse) == 0x14);
}
DEFINE_IL2CPP_ARG_TYPE(MasterServer::BroadcastServerHeartbeatResponse*, "MasterServer", "BroadcastServerHeartbeatResponse");
DEFINE_IL2CPP_ARG_TYPE(MasterServer::BroadcastServerHeartbeatResponse::Result, "MasterServer", "BroadcastServerHeartbeatResponse/Result");
