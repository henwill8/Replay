// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseMasterServerReliableResponse
#include "GlobalNamespace/BaseMasterServerReliableResponse.hpp"
// Including type: MasterServer.IUserMessage
#include "MasterServer/IUserMessage.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
// Including type: AuthenticationToken
#include "GlobalNamespace/AuthenticationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PacketPool`1<T>
  template<typename T>
  class PacketPool_1;
}
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
  // Forward declaring type: NetDataReader
  class NetDataReader;
}
// Completed forward declares
// Type namespace: MasterServer
namespace MasterServer {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: MasterServer.AuthenticateUserRequest
  // [] Offset: FFFFFFFF
  class AuthenticateUserRequest : public GlobalNamespace::BaseMasterServerReliableResponse/*, public MasterServer::IUserMessage, public MasterServer::IMasterServerAuthenticateRequest*/ {
    public:
    // public AuthenticationToken authenticationToken
    // Size: 0x20
    // Offset: 0x18
    GlobalNamespace::AuthenticationToken authenticationToken;
    // Field size check
    static_assert(sizeof(GlobalNamespace::AuthenticationToken) == 0x20);
    // Creating value type constructor for type: AuthenticateUserRequest
    AuthenticateUserRequest(GlobalNamespace::AuthenticationToken authenticationToken_ = {}) noexcept : authenticationToken{authenticationToken_} {}
    // Creating interface conversion operator: operator MasterServer::IUserMessage
    operator MasterServer::IUserMessage() noexcept {
      return *reinterpret_cast<MasterServer::IUserMessage*>(this);
    }
    // Creating interface conversion operator: operator MasterServer::IMasterServerAuthenticateRequest
    operator MasterServer::IMasterServerAuthenticateRequest() noexcept {
      return *reinterpret_cast<MasterServer::IMasterServerAuthenticateRequest*>(this);
    }
    // Creating conversion operator: operator GlobalNamespace::AuthenticationToken
    constexpr operator GlobalNamespace::AuthenticationToken() const noexcept {
      return authenticationToken;
    }
    // static public PacketPool`1<MasterServer.AuthenticateUserRequest> get_pool()
    // Offset: 0x11D9D68
    static GlobalNamespace::PacketPool_1<MasterServer::AuthenticateUserRequest*>* get_pool();
    // public MasterServer.AuthenticateUserRequest Init(AuthenticationToken authenticationToken)
    // Offset: 0x11D9DB0
    MasterServer::AuthenticateUserRequest* Init(GlobalNamespace::AuthenticationToken authenticationToken);
    // public override System.Void Serialize(LiteNetLib.Utils.NetDataWriter writer)
    // Offset: 0x11D9DE8
    // Implemented from: BaseMasterServerReliableResponse
    // Base method: System.Void BaseMasterServerReliableResponse::Serialize(LiteNetLib.Utils.NetDataWriter writer)
    void Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // Creating proxy method: LiteNetLib_Utils_INetSerializable_Serialize
    // Maps to method: Serialize
    void LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // public override System.Void Deserialize(LiteNetLib.Utils.NetDataReader reader)
    // Offset: 0x11D9E14
    // Implemented from: BaseMasterServerReliableResponse
    // Base method: System.Void BaseMasterServerReliableResponse::Deserialize(LiteNetLib.Utils.NetDataReader reader)
    void Deserialize(LiteNetLib::Utils::NetDataReader* reader);
    // Creating proxy method: LiteNetLib_Utils_INetSerializable_Deserialize
    // Maps to method: Deserialize
    void LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader);
    // public override System.Void Release()
    // Offset: 0x11D9E64
    // Implemented from: BaseMasterServerReliableResponse
    // Base method: System.Void BaseMasterServerReliableResponse::Release()
    void Release();
    // public System.Void .ctor()
    // Offset: 0x11D9EC0
    // Implemented from: BaseMasterServerReliableResponse
    // Base method: System.Void BaseMasterServerReliableResponse::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuthenticateUserRequest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateUserRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuthenticateUserRequest*, creationType>()));
    }
  }; // MasterServer.AuthenticateUserRequest
  #pragma pack(pop)
  static check_size<sizeof(AuthenticateUserRequest), 24 + sizeof(GlobalNamespace::AuthenticationToken)> __MasterServer_AuthenticateUserRequestSizeCheck;
  static_assert(sizeof(AuthenticateUserRequest) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(MasterServer::AuthenticateUserRequest*, "MasterServer", "AuthenticateUserRequest");
