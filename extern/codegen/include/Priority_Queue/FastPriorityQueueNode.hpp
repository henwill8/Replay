// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Priority_Queue
namespace Priority_Queue {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Priority_Queue.FastPriorityQueueNode
  // [] Offset: FFFFFFFF
  class FastPriorityQueueNode : public ::Il2CppObject {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xD4591C
    // private System.Single <Priority>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    float Priority;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xD4592C
    // private System.Int32 <QueueIndex>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    int QueueIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: FastPriorityQueueNode
    FastPriorityQueueNode(float Priority_ = {}, int QueueIndex_ = {}) noexcept : Priority{Priority_}, QueueIndex{QueueIndex_} {}
    // public System.Single get_Priority()
    // Offset: 0xFBFAD0
    float get_Priority();
    // protected internal System.Void set_Priority(System.Single value)
    // Offset: 0xFBFAD8
    void set_Priority(float value);
    // public System.Int32 get_QueueIndex()
    // Offset: 0xFBFAE0
    int get_QueueIndex();
    // System.Void set_QueueIndex(System.Int32 value)
    // Offset: 0xFBFAE8
    void set_QueueIndex(int value);
    // public System.Void .ctor()
    // Offset: 0xFBFAF0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FastPriorityQueueNode* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Priority_Queue::FastPriorityQueueNode::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FastPriorityQueueNode*, creationType>()));
    }
  }; // Priority_Queue.FastPriorityQueueNode
  #pragma pack(pop)
  static check_size<sizeof(FastPriorityQueueNode), 20 + sizeof(int)> __Priority_Queue_FastPriorityQueueNodeSizeCheck;
  static_assert(sizeof(FastPriorityQueueNode) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(Priority_Queue::FastPriorityQueueNode*, "Priority_Queue", "FastPriorityQueueNode");
