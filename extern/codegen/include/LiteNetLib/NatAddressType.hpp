// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: LiteNetLib
namespace LiteNetLib {
  // Autogenerated type: LiteNetLib.NatAddressType
  struct NatAddressType : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: NatAddressType
    constexpr NatAddressType(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public LiteNetLib.NatAddressType Internal
    static constexpr const int Internal = 0;
    // Get static field: static public LiteNetLib.NatAddressType Internal
    static LiteNetLib::NatAddressType _get_Internal();
    // Set static field: static public LiteNetLib.NatAddressType Internal
    static void _set_Internal(LiteNetLib::NatAddressType value);
    // static field const value: static public LiteNetLib.NatAddressType External
    static constexpr const int External = 1;
    // Get static field: static public LiteNetLib.NatAddressType External
    static LiteNetLib::NatAddressType _get_External();
    // Set static field: static public LiteNetLib.NatAddressType External
    static void _set_External(LiteNetLib::NatAddressType value);
  }; // LiteNetLib.NatAddressType
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(LiteNetLib::NatAddressType, "LiteNetLib", "NatAddressType");
#pragma pack(pop)
