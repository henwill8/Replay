// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib
namespace LiteNetLib {
  // Forward declaring type: NetPacket
  class NetPacket;
}
// Completed forward declares
// Type namespace: LiteNetLib
namespace LiteNetLib {
  // Autogenerated type: LiteNetLib.NetConnectAcceptPacket
  class NetConnectAcceptPacket : public ::Il2CppObject {
    public:
    // public readonly System.Int64 ConnectionId
    // Offset: 0x10
    int64_t ConnectionId;
    // public readonly System.Byte ConnectionNumber
    // Offset: 0x18
    uint8_t ConnectionNumber;
    // public readonly System.Boolean IsReusedPeer
    // Offset: 0x19
    bool IsReusedPeer;
    // static field const value: static public System.Int32 Size
    static constexpr const int Size = 11;
    // Get static field: static public System.Int32 Size
    static int _get_Size();
    // Set static field: static public System.Int32 Size
    static void _set_Size(int value);
    // private System.Void .ctor(System.Int64 connectionId, System.Byte connectionNumber, System.Boolean isReusedPeer)
    // Offset: 0x1DC5F20
    static NetConnectAcceptPacket* New_ctor(int64_t connectionId, uint8_t connectionNumber, bool isReusedPeer);
    // static public LiteNetLib.NetConnectAcceptPacket FromData(LiteNetLib.NetPacket packet)
    // Offset: 0x1DC5F68
    static LiteNetLib::NetConnectAcceptPacket* FromData(LiteNetLib::NetPacket* packet);
    // static public LiteNetLib.NetPacket Make(System.Int64 connectId, System.Byte connectNum, System.Boolean reusedPeer)
    // Offset: 0x1DC6078
    static LiteNetLib::NetPacket* Make(int64_t connectId, uint8_t connectNum, bool reusedPeer);
  }; // LiteNetLib.NetConnectAcceptPacket
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(LiteNetLib::NetConnectAcceptPacket*, "LiteNetLib", "NetConnectAcceptPacket");
#pragma pack(pop)
