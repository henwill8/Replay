// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NetPacketProcessor
#include "LiteNetLib/Utils/NetPacketProcessor.hpp"
// Completed includes
// Type namespace: LiteNetLib.Utils
namespace LiteNetLib::Utils {
  // Autogenerated type: LiteNetLib.Utils.NetPacketProcessor/HashCache`1
  template<typename T>
  class NetPacketProcessor::HashCache_1 : public ::Il2CppObject {
    public:
    // Autogenerated static field getter
    // Get static field: static public System.Boolean Initialized
    static bool _get_Initialized() {
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<NetPacketProcessor::HashCache_1<T>*>::get(), "Initialized"));
    }
    // Autogenerated static field setter
    // Set static field: static public System.Boolean Initialized
    static void _set_Initialized(bool value) {
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<NetPacketProcessor::HashCache_1<T>*>::get(), "Initialized", value));
    }
    // Autogenerated static field getter
    // Get static field: static public System.UInt64 Id
    static uint64_t _get_Id() {
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<NetPacketProcessor::HashCache_1<T>*>::get(), "Id"));
    }
    // Autogenerated static field setter
    // Set static field: static public System.UInt64 Id
    static void _set_Id(uint64_t value) {
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<NetPacketProcessor::HashCache_1<T>*>::get(), "Id", value));
    }
  }; // LiteNetLib.Utils.NetPacketProcessor/HashCache`1
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(LiteNetLib::Utils::NetPacketProcessor::HashCache_1, "LiteNetLib.Utils", "NetPacketProcessor/HashCache`1");
#pragma pack(pop)
