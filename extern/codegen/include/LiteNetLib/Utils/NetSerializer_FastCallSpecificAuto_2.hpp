// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NetSerializer
#include "LiteNetLib/Utils/NetSerializer.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/FastCallSpecific`2
#include "LiteNetLib/Utils/NetSerializer_FastCallSpecific_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataReader
  class NetDataReader;
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
}
// Completed forward declares
// Type namespace: LiteNetLib.Utils
namespace LiteNetLib::Utils {
  // Autogenerated type: LiteNetLib.Utils.NetSerializer/FastCallSpecificAuto`2
  template<typename TClass, typename TProperty>
  class NetSerializer::FastCallSpecificAuto_2 : public LiteNetLib::Utils::NetSerializer::FastCallSpecific_2<TClass, TProperty> {
    public:
    // protected System.Void ElementRead(LiteNetLib.Utils.NetDataReader r, out TProperty prop)
    // Offset: 0xFFFFFFFF
    void ElementRead(LiteNetLib::Utils::NetDataReader* r, TProperty& prop) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "ElementRead", r, prop));
    }
    // protected System.Void ElementWrite(LiteNetLib.Utils.NetDataWriter w, ref TProperty prop)
    // Offset: 0xFFFFFFFF
    void ElementWrite(LiteNetLib::Utils::NetDataWriter* w, TProperty& prop) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "ElementWrite", w, prop));
    }
    // public override System.Void Read(TClass inf, LiteNetLib.Utils.NetDataReader r)
    // Offset: 0xFFFFFFFF
    // Implemented from: LiteNetLib.Utils.NetSerializer/FastCall`1
    // Base method: System.Void FastCall_1::Read(TClass inf, LiteNetLib.Utils.NetDataReader r)
    void Read(TClass inf, LiteNetLib::Utils::NetDataReader* r) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "Read", inf, r));
    }
    // public override System.Void Write(TClass inf, LiteNetLib.Utils.NetDataWriter w)
    // Offset: 0xFFFFFFFF
    // Implemented from: LiteNetLib.Utils.NetSerializer/FastCall`1
    // Base method: System.Void FastCall_1::Write(TClass inf, LiteNetLib.Utils.NetDataWriter w)
    void Write(TClass inf, LiteNetLib::Utils::NetDataWriter* w) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "Write", inf, w));
    }
    // public override System.Void ReadArray(TClass inf, LiteNetLib.Utils.NetDataReader r)
    // Offset: 0xFFFFFFFF
    // Implemented from: LiteNetLib.Utils.NetSerializer/FastCall`1
    // Base method: System.Void FastCall_1::ReadArray(TClass inf, LiteNetLib.Utils.NetDataReader r)
    void ReadArray(TClass inf, LiteNetLib::Utils::NetDataReader* r) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReadArray", inf, r));
    }
    // public override System.Void WriteArray(TClass inf, LiteNetLib.Utils.NetDataWriter w)
    // Offset: 0xFFFFFFFF
    // Implemented from: LiteNetLib.Utils.NetSerializer/FastCall`1
    // Base method: System.Void FastCall_1::WriteArray(TClass inf, LiteNetLib.Utils.NetDataWriter w)
    void WriteArray(TClass inf, LiteNetLib::Utils::NetDataWriter* w) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "WriteArray", inf, w));
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: LiteNetLib.Utils.NetSerializer/FastCallSpecific`2
    // Base method: System.Void FastCallSpecific_2::.ctor()
    // Base method: System.Void FastCall_1::.ctor()
    // Base method: System.Void Object::.ctor()
    static NetSerializer::FastCallSpecificAuto_2<TClass, TProperty>* New_ctor() {
      return THROW_UNLESS((il2cpp_utils::New<NetSerializer::FastCallSpecificAuto_2<TClass, TProperty>*>()));
    }
  }; // LiteNetLib.Utils.NetSerializer/FastCallSpecificAuto`2
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(LiteNetLib::Utils::NetSerializer::FastCallSpecificAuto_2, "LiteNetLib.Utils", "NetSerializer/FastCallSpecificAuto`2");
#pragma pack(pop)
