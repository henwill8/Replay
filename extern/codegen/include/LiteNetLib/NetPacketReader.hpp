// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib
namespace LiteNetLib {
  // Forward declaring type: NetPacket
  class NetPacket;
  // Forward declaring type: NetManager
  class NetManager;
  // Forward declaring type: NetEvent
  class NetEvent;
}
// Completed forward declares
// Type namespace: LiteNetLib
namespace LiteNetLib {
  // Autogenerated type: LiteNetLib.NetPacketReader
  class NetPacketReader : public LiteNetLib::Utils::NetDataReader {
    public:
    // private LiteNetLib.NetPacket _packet
    // Offset: 0x28
    LiteNetLib::NetPacket* packet;
    // private readonly LiteNetLib.NetManager _manager
    // Offset: 0x30
    LiteNetLib::NetManager* manager;
    // private readonly LiteNetLib.NetEvent _evt
    // Offset: 0x38
    LiteNetLib::NetEvent* evt;
    // System.Void .ctor(LiteNetLib.NetManager manager, LiteNetLib.NetEvent evt)
    // Offset: 0x1DC6C8C
    static NetPacketReader* New_ctor(LiteNetLib::NetManager* manager, LiteNetLib::NetEvent* evt);
    // System.Void SetSource(LiteNetLib.NetPacket packet)
    // Offset: 0x1DC8550
    void SetSource(LiteNetLib::NetPacket* packet);
    // System.Void RecycleInternal()
    // Offset: 0x1DC8C44
    void RecycleInternal();
    // public System.Void Recycle()
    // Offset: 0x1DCD838
    void Recycle();
  }; // LiteNetLib.NetPacketReader
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(LiteNetLib::NetPacketReader*, "LiteNetLib", "NetPacketReader");
#pragma pack(pop)
