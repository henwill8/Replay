// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataReader
  class NetDataReader;
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
}
// Forward declaring namespace: LiteNetLib
namespace LiteNetLib {
  // Forward declaring type: NetPacket
  class NetPacket;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: SocketAddress
  class SocketAddress;
}
// Completed forward declares
// Type namespace: LiteNetLib
namespace LiteNetLib {
  // Autogenerated type: LiteNetLib.NetConnectRequestPacket
  class NetConnectRequestPacket : public ::Il2CppObject {
    public:
    // public readonly System.Int64 ConnectionTime
    // Offset: 0x10
    int64_t ConnectionTime;
    // public readonly System.Byte ConnectionNumber
    // Offset: 0x18
    uint8_t ConnectionNumber;
    // public readonly System.Byte[] TargetAddress
    // Offset: 0x20
    ::Array<uint8_t>* TargetAddress;
    // public readonly LiteNetLib.Utils.NetDataReader Data
    // Offset: 0x28
    LiteNetLib::Utils::NetDataReader* Data;
    // static field const value: static public System.Int32 HeaderSize
    static constexpr const int HeaderSize = 14;
    // Get static field: static public System.Int32 HeaderSize
    static int _get_HeaderSize();
    // Set static field: static public System.Int32 HeaderSize
    static void _set_HeaderSize(int value);
    // private System.Void .ctor(System.Int64 connectionTime, System.Byte connectionNumber, System.Byte[] targetAddress, LiteNetLib.Utils.NetDataReader data)
    // Offset: 0x1DC6224
    static NetConnectRequestPacket* New_ctor(int64_t connectionTime, uint8_t connectionNumber, ::Array<uint8_t>* targetAddress, LiteNetLib::Utils::NetDataReader* data);
    // static public System.Int32 GetProtocolId(LiteNetLib.NetPacket packet)
    // Offset: 0x1DC628C
    static int GetProtocolId(LiteNetLib::NetPacket* packet);
    // static public LiteNetLib.NetConnectRequestPacket FromData(LiteNetLib.NetPacket packet)
    // Offset: 0x1DC6304
    static LiteNetLib::NetConnectRequestPacket* FromData(LiteNetLib::NetPacket* packet);
    // static public LiteNetLib.NetPacket Make(LiteNetLib.Utils.NetDataWriter connectData, System.Net.SocketAddress addressBytes, System.Int64 connectId)
    // Offset: 0x1DC654C
    static LiteNetLib::NetPacket* Make(LiteNetLib::Utils::NetDataWriter* connectData, System::Net::SocketAddress* addressBytes, int64_t connectId);
  }; // LiteNetLib.NetConnectRequestPacket
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(LiteNetLib::NetConnectRequestPacket*, "LiteNetLib", "NetConnectRequestPacket");
#pragma pack(pop)
