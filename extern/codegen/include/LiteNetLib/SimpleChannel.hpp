// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.BaseChannel
#include "LiteNetLib/BaseChannel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib
namespace LiteNetLib {
  // Forward declaring type: NetPeer
  class NetPeer;
  // Forward declaring type: NetPacket
  class NetPacket;
}
// Completed forward declares
// Type namespace: LiteNetLib
namespace LiteNetLib {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: LiteNetLib.SimpleChannel
  // [] Offset: FFFFFFFF
  class SimpleChannel : public LiteNetLib::BaseChannel {
    public:
    // Creating value type constructor for type: SimpleChannel
    SimpleChannel() noexcept {}
    // public System.Void .ctor(LiteNetLib.NetPeer peer)
    // Offset: 0x1AA7AB4
    // Implemented from: LiteNetLib.BaseChannel
    // Base method: System.Void BaseChannel::.ctor(LiteNetLib.NetPeer peer)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SimpleChannel* New_ctor(LiteNetLib::NetPeer* peer) {
      static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::SimpleChannel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SimpleChannel*, creationType>(peer)));
    }
    // public override System.Void SendNextPackets()
    // Offset: 0x1AA7AB8
    // Implemented from: LiteNetLib.BaseChannel
    // Base method: System.Void BaseChannel::SendNextPackets()
    void SendNextPackets();
    // public override System.Boolean ProcessPacket(LiteNetLib.NetPacket packet)
    // Offset: 0x1AA7C04
    // Implemented from: LiteNetLib.BaseChannel
    // Base method: System.Boolean BaseChannel::ProcessPacket(LiteNetLib.NetPacket packet)
    bool ProcessPacket(LiteNetLib::NetPacket* packet);
  }; // LiteNetLib.SimpleChannel
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(LiteNetLib::SimpleChannel*, "LiteNetLib", "SimpleChannel");
