// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.BaseChannel
#include "LiteNetLib/BaseChannel.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib
namespace LiteNetLib {
  // Forward declaring type: NetPacket
  class NetPacket;
  // Forward declaring type: NetPeer
  class NetPeer;
}
// Completed forward declares
// Type namespace: LiteNetLib
namespace LiteNetLib {
  // Autogenerated type: LiteNetLib.SequencedChannel
  class SequencedChannel : public LiteNetLib::BaseChannel {
    public:
    // private System.Int32 _localSequence
    // Offset: 0x28
    int localSequence;
    // private System.UInt16 _remoteSequence
    // Offset: 0x2C
    uint16_t remoteSequence;
    // private readonly System.Boolean _reliable
    // Offset: 0x2E
    bool reliable;
    // private LiteNetLib.NetPacket _lastPacket
    // Offset: 0x30
    LiteNetLib::NetPacket* lastPacket;
    // private readonly LiteNetLib.NetPacket _ackPacket
    // Offset: 0x38
    LiteNetLib::NetPacket* ackPacket;
    // private System.Boolean _mustSendAck
    // Offset: 0x40
    bool mustSendAck;
    // private readonly System.Byte _id
    // Offset: 0x41
    uint8_t id;
    // private System.Int64 _lastPacketSendTime
    // Offset: 0x48
    int64_t lastPacketSendTime;
    // public System.Void .ctor(LiteNetLib.NetPeer peer, System.Boolean reliable, System.Byte id)
    // Offset: 0x1DCDED8
    static SequencedChannel* New_ctor(LiteNetLib::NetPeer* peer, bool reliable, uint8_t id);
    // public override System.Void SendNextPackets()
    // Offset: 0x1DD24A8
    // Implemented from: LiteNetLib.BaseChannel
    // Base method: System.Void BaseChannel::SendNextPackets()
    void SendNextPackets();
    // public override System.Boolean ProcessPacket(LiteNetLib.NetPacket packet)
    // Offset: 0x1DD27AC
    // Implemented from: LiteNetLib.BaseChannel
    // Base method: System.Boolean BaseChannel::ProcessPacket(LiteNetLib.NetPacket packet)
    bool ProcessPacket(LiteNetLib::NetPacket* packet);
  }; // LiteNetLib.SequencedChannel
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(LiteNetLib::SequencedChannel*, "LiteNetLib", "SequencedChannel");
#pragma pack(pop)
