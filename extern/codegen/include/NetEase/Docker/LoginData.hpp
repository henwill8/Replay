// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppString;
// Completed il2cpp-utils forward declares
// Type namespace: NetEase.Docker
namespace NetEase::Docker {
  // Autogenerated type: NetEase.Docker.LoginData
  struct LoginData : public System::ValueType {
    public:
    // private System.Boolean <LoginSuccessful>k__BackingField
    // Offset: 0x0
    bool LoginSuccessful;
    // private System.Int32 <LoginCode>k__BackingField
    // Offset: 0x4
    int LoginCode;
    // private System.String <UserName>k__BackingField
    // Offset: 0x8
    ::Il2CppString* UserName;
    // Creating value type constructor for type: LoginData
    constexpr LoginData(bool LoginSuccessful_ = {}, int LoginCode_ = {}, ::Il2CppString* UserName_ = {}) noexcept : LoginSuccessful{LoginSuccessful_}, LoginCode{LoginCode_}, UserName{UserName_} {}
    // public System.Boolean get_LoginSuccessful()
    // Offset: 0xA60670
    bool get_LoginSuccessful();
    // public System.Void set_LoginSuccessful(System.Boolean value)
    // Offset: 0xA60678
    void set_LoginSuccessful(bool value);
    // public System.Void set_LoginCode(System.Int32 value)
    // Offset: 0xA60684
    void set_LoginCode(int value);
    // public System.String get_UserName()
    // Offset: 0xA6068C
    ::Il2CppString* get_UserName();
    // public System.Void set_UserName(System.String value)
    // Offset: 0xA60694
    void set_UserName(::Il2CppString* value);
  }; // NetEase.Docker.LoginData
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(NetEase::Docker::LoginData, "NetEase.Docker", "LoginData");
#pragma pack(pop)
