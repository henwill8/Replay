// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: NetEase.Docker.ScoreData
#include "NetEase/Docker/ScoreData.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppString;
// Completed il2cpp-utils forward declares
// Type namespace: NetEase.Docker
namespace NetEase::Docker {
  // Autogenerated type: NetEase.Docker.ReceivedHighscoreData
  struct ReceivedHighscoreData : public System::ValueType {
    public:
    // private System.Boolean <FetchingSuccessful>k__BackingField
    // Offset: 0x0
    bool FetchingSuccessful;
    // private System.Int32 <HighscoreCode>k__BackingField
    // Offset: 0x4
    int HighscoreCode;
    // private System.String <Track>k__BackingField
    // Offset: 0x8
    ::Il2CppString* Track;
    // private System.Collections.Generic.List`1<NetEase.Docker.ScoreData> <Scores>k__BackingField
    // Offset: 0x10
    System::Collections::Generic::List_1<NetEase::Docker::ScoreData>* Scores;
    // Creating value type constructor for type: ReceivedHighscoreData
    constexpr ReceivedHighscoreData(bool FetchingSuccessful_ = {}, int HighscoreCode_ = {}, ::Il2CppString* Track_ = {}, System::Collections::Generic::List_1<NetEase::Docker::ScoreData>* Scores_ = {}) noexcept : FetchingSuccessful{FetchingSuccessful_}, HighscoreCode{HighscoreCode_}, Track{Track_}, Scores{Scores_} {}
    // public System.Boolean get_FetchingSuccessful()
    // Offset: 0xA606E0
    bool get_FetchingSuccessful();
    // public System.Void set_FetchingSuccessful(System.Boolean value)
    // Offset: 0xA606E8
    void set_FetchingSuccessful(bool value);
    // public System.Void set_HighscoreCode(System.Int32 value)
    // Offset: 0xA606F4
    void set_HighscoreCode(int value);
    // public System.String get_Track()
    // Offset: 0xA606FC
    ::Il2CppString* get_Track();
    // public System.Void set_Track(System.String value)
    // Offset: 0xA60704
    void set_Track(::Il2CppString* value);
    // public System.Collections.Generic.List`1<NetEase.Docker.ScoreData> get_Scores()
    // Offset: 0xA6070C
    System::Collections::Generic::List_1<NetEase::Docker::ScoreData>* get_Scores();
    // public System.Void set_Scores(System.Collections.Generic.List`1<NetEase.Docker.ScoreData> value)
    // Offset: 0xA60714
    void set_Scores(System::Collections::Generic::List_1<NetEase::Docker::ScoreData>* value);
  }; // NetEase.Docker.ReceivedHighscoreData
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(NetEase::Docker::ReceivedHighscoreData, "NetEase.Docker", "ReceivedHighscoreData");
#pragma pack(pop)
