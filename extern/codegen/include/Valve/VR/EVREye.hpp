// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Valve.VR
namespace Valve::VR {
  // Autogenerated type: Valve.VR.EVREye
  struct EVREye : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: EVREye
    constexpr EVREye(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Valve.VR.EVREye Eye_Left
    static constexpr const int Eye_Left = 0;
    // Get static field: static public Valve.VR.EVREye Eye_Left
    static Valve::VR::EVREye _get_Eye_Left();
    // Set static field: static public Valve.VR.EVREye Eye_Left
    static void _set_Eye_Left(Valve::VR::EVREye value);
    // static field const value: static public Valve.VR.EVREye Eye_Right
    static constexpr const int Eye_Right = 1;
    // Get static field: static public Valve.VR.EVREye Eye_Right
    static Valve::VR::EVREye _get_Eye_Right();
    // Set static field: static public Valve.VR.EVREye Eye_Right
    static void _set_Eye_Right(Valve::VR::EVREye value);
  }; // Valve.VR.EVREye
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Valve::VR::EVREye, "Valve.VR", "EVREye");
#pragma pack(pop)
