// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Valve.VR.HmdVector3_t
#include "Valve/VR/HmdVector3_t.hpp"
// Completed includes
// Type namespace: Valve.VR
namespace Valve::VR {
  // Autogenerated type: Valve.VR.RenderModel_Vertex_t
  struct RenderModel_Vertex_t : public System::ValueType {
    public:
    // public Valve.VR.HmdVector3_t vPosition
    // Offset: 0x0
    Valve::VR::HmdVector3_t vPosition;
    // public Valve.VR.HmdVector3_t vNormal
    // Offset: 0xC
    Valve::VR::HmdVector3_t vNormal;
    // public System.Single rfTextureCoord0
    // Offset: 0x18
    float rfTextureCoord0;
    // public System.Single rfTextureCoord1
    // Offset: 0x1C
    float rfTextureCoord1;
    // Creating value type constructor for type: RenderModel_Vertex_t
    constexpr RenderModel_Vertex_t(Valve::VR::HmdVector3_t vPosition_ = {}, Valve::VR::HmdVector3_t vNormal_ = {}, float rfTextureCoord0_ = {}, float rfTextureCoord1_ = {}) noexcept : vPosition{vPosition_}, vNormal{vNormal_}, rfTextureCoord0{rfTextureCoord0_}, rfTextureCoord1{rfTextureCoord1_} {}
  }; // Valve.VR.RenderModel_Vertex_t
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Valve::VR::RenderModel_Vertex_t, "Valve.VR", "RenderModel_Vertex_t");
#pragma pack(pop)
