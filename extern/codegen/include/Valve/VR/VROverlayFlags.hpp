// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Valve.VR
namespace Valve::VR {
  // Autogenerated type: Valve.VR.VROverlayFlags
  struct VROverlayFlags : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: VROverlayFlags
    constexpr VROverlayFlags(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Valve.VR.VROverlayFlags None
    static constexpr const int None = 0;
    // Get static field: static public Valve.VR.VROverlayFlags None
    static Valve::VR::VROverlayFlags _get_None();
    // Set static field: static public Valve.VR.VROverlayFlags None
    static void _set_None(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags Curved
    static constexpr const int Curved = 1;
    // Get static field: static public Valve.VR.VROverlayFlags Curved
    static Valve::VR::VROverlayFlags _get_Curved();
    // Set static field: static public Valve.VR.VROverlayFlags Curved
    static void _set_Curved(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags RGSS4X
    static constexpr const int RGSS4X = 2;
    // Get static field: static public Valve.VR.VROverlayFlags RGSS4X
    static Valve::VR::VROverlayFlags _get_RGSS4X();
    // Set static field: static public Valve.VR.VROverlayFlags RGSS4X
    static void _set_RGSS4X(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags NoDashboardTab
    static constexpr const int NoDashboardTab = 3;
    // Get static field: static public Valve.VR.VROverlayFlags NoDashboardTab
    static Valve::VR::VROverlayFlags _get_NoDashboardTab();
    // Set static field: static public Valve.VR.VROverlayFlags NoDashboardTab
    static void _set_NoDashboardTab(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags AcceptsGamepadEvents
    static constexpr const int AcceptsGamepadEvents = 4;
    // Get static field: static public Valve.VR.VROverlayFlags AcceptsGamepadEvents
    static Valve::VR::VROverlayFlags _get_AcceptsGamepadEvents();
    // Set static field: static public Valve.VR.VROverlayFlags AcceptsGamepadEvents
    static void _set_AcceptsGamepadEvents(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags ShowGamepadFocus
    static constexpr const int ShowGamepadFocus = 5;
    // Get static field: static public Valve.VR.VROverlayFlags ShowGamepadFocus
    static Valve::VR::VROverlayFlags _get_ShowGamepadFocus();
    // Set static field: static public Valve.VR.VROverlayFlags ShowGamepadFocus
    static void _set_ShowGamepadFocus(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags SendVRScrollEvents
    static constexpr const int SendVRScrollEvents = 6;
    // Get static field: static public Valve.VR.VROverlayFlags SendVRScrollEvents
    static Valve::VR::VROverlayFlags _get_SendVRScrollEvents();
    // Set static field: static public Valve.VR.VROverlayFlags SendVRScrollEvents
    static void _set_SendVRScrollEvents(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags SendVRTouchpadEvents
    static constexpr const int SendVRTouchpadEvents = 7;
    // Get static field: static public Valve.VR.VROverlayFlags SendVRTouchpadEvents
    static Valve::VR::VROverlayFlags _get_SendVRTouchpadEvents();
    // Set static field: static public Valve.VR.VROverlayFlags SendVRTouchpadEvents
    static void _set_SendVRTouchpadEvents(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags ShowTouchPadScrollWheel
    static constexpr const int ShowTouchPadScrollWheel = 8;
    // Get static field: static public Valve.VR.VROverlayFlags ShowTouchPadScrollWheel
    static Valve::VR::VROverlayFlags _get_ShowTouchPadScrollWheel();
    // Set static field: static public Valve.VR.VROverlayFlags ShowTouchPadScrollWheel
    static void _set_ShowTouchPadScrollWheel(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags TransferOwnershipToInternalProcess
    static constexpr const int TransferOwnershipToInternalProcess = 9;
    // Get static field: static public Valve.VR.VROverlayFlags TransferOwnershipToInternalProcess
    static Valve::VR::VROverlayFlags _get_TransferOwnershipToInternalProcess();
    // Set static field: static public Valve.VR.VROverlayFlags TransferOwnershipToInternalProcess
    static void _set_TransferOwnershipToInternalProcess(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags SideBySide_Parallel
    static constexpr const int SideBySide_Parallel = 10;
    // Get static field: static public Valve.VR.VROverlayFlags SideBySide_Parallel
    static Valve::VR::VROverlayFlags _get_SideBySide_Parallel();
    // Set static field: static public Valve.VR.VROverlayFlags SideBySide_Parallel
    static void _set_SideBySide_Parallel(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags SideBySide_Crossed
    static constexpr const int SideBySide_Crossed = 11;
    // Get static field: static public Valve.VR.VROverlayFlags SideBySide_Crossed
    static Valve::VR::VROverlayFlags _get_SideBySide_Crossed();
    // Set static field: static public Valve.VR.VROverlayFlags SideBySide_Crossed
    static void _set_SideBySide_Crossed(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags Panorama
    static constexpr const int Panorama = 12;
    // Get static field: static public Valve.VR.VROverlayFlags Panorama
    static Valve::VR::VROverlayFlags _get_Panorama();
    // Set static field: static public Valve.VR.VROverlayFlags Panorama
    static void _set_Panorama(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags StereoPanorama
    static constexpr const int StereoPanorama = 13;
    // Get static field: static public Valve.VR.VROverlayFlags StereoPanorama
    static Valve::VR::VROverlayFlags _get_StereoPanorama();
    // Set static field: static public Valve.VR.VROverlayFlags StereoPanorama
    static void _set_StereoPanorama(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags SortWithNonSceneOverlays
    static constexpr const int SortWithNonSceneOverlays = 14;
    // Get static field: static public Valve.VR.VROverlayFlags SortWithNonSceneOverlays
    static Valve::VR::VROverlayFlags _get_SortWithNonSceneOverlays();
    // Set static field: static public Valve.VR.VROverlayFlags SortWithNonSceneOverlays
    static void _set_SortWithNonSceneOverlays(Valve::VR::VROverlayFlags value);
    // static field const value: static public Valve.VR.VROverlayFlags VisibleInDashboard
    static constexpr const int VisibleInDashboard = 15;
    // Get static field: static public Valve.VR.VROverlayFlags VisibleInDashboard
    static Valve::VR::VROverlayFlags _get_VisibleInDashboard();
    // Set static field: static public Valve.VR.VROverlayFlags VisibleInDashboard
    static void _set_VisibleInDashboard(Valve::VR::VROverlayFlags value);
  }; // Valve.VR.VROverlayFlags
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Valve::VR::VROverlayFlags, "Valve.VR", "VROverlayFlags");
#pragma pack(pop)
