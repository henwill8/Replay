// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Valve.VR
namespace Valve::VR {
  // Autogenerated type: Valve.VR.EVRInitError
  struct EVRInitError : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: EVRInitError
    constexpr EVRInitError(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Valve.VR.EVRInitError None
    static constexpr const int None = 0;
    // Get static field: static public Valve.VR.EVRInitError None
    static Valve::VR::EVRInitError _get_None();
    // Set static field: static public Valve.VR.EVRInitError None
    static void _set_None(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Unknown
    static constexpr const int Unknown = 1;
    // Get static field: static public Valve.VR.EVRInitError Unknown
    static Valve::VR::EVRInitError _get_Unknown();
    // Set static field: static public Valve.VR.EVRInitError Unknown
    static void _set_Unknown(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_InstallationNotFound
    static constexpr const int Init_InstallationNotFound = 100;
    // Get static field: static public Valve.VR.EVRInitError Init_InstallationNotFound
    static Valve::VR::EVRInitError _get_Init_InstallationNotFound();
    // Set static field: static public Valve.VR.EVRInitError Init_InstallationNotFound
    static void _set_Init_InstallationNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_InstallationCorrupt
    static constexpr const int Init_InstallationCorrupt = 101;
    // Get static field: static public Valve.VR.EVRInitError Init_InstallationCorrupt
    static Valve::VR::EVRInitError _get_Init_InstallationCorrupt();
    // Set static field: static public Valve.VR.EVRInitError Init_InstallationCorrupt
    static void _set_Init_InstallationCorrupt(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_VRClientDLLNotFound
    static constexpr const int Init_VRClientDLLNotFound = 102;
    // Get static field: static public Valve.VR.EVRInitError Init_VRClientDLLNotFound
    static Valve::VR::EVRInitError _get_Init_VRClientDLLNotFound();
    // Set static field: static public Valve.VR.EVRInitError Init_VRClientDLLNotFound
    static void _set_Init_VRClientDLLNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_FileNotFound
    static constexpr const int Init_FileNotFound = 103;
    // Get static field: static public Valve.VR.EVRInitError Init_FileNotFound
    static Valve::VR::EVRInitError _get_Init_FileNotFound();
    // Set static field: static public Valve.VR.EVRInitError Init_FileNotFound
    static void _set_Init_FileNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_FactoryNotFound
    static constexpr const int Init_FactoryNotFound = 104;
    // Get static field: static public Valve.VR.EVRInitError Init_FactoryNotFound
    static Valve::VR::EVRInitError _get_Init_FactoryNotFound();
    // Set static field: static public Valve.VR.EVRInitError Init_FactoryNotFound
    static void _set_Init_FactoryNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_InterfaceNotFound
    static constexpr const int Init_InterfaceNotFound = 105;
    // Get static field: static public Valve.VR.EVRInitError Init_InterfaceNotFound
    static Valve::VR::EVRInitError _get_Init_InterfaceNotFound();
    // Set static field: static public Valve.VR.EVRInitError Init_InterfaceNotFound
    static void _set_Init_InterfaceNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_InvalidInterface
    static constexpr const int Init_InvalidInterface = 106;
    // Get static field: static public Valve.VR.EVRInitError Init_InvalidInterface
    static Valve::VR::EVRInitError _get_Init_InvalidInterface();
    // Set static field: static public Valve.VR.EVRInitError Init_InvalidInterface
    static void _set_Init_InvalidInterface(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_UserConfigDirectoryInvalid
    static constexpr const int Init_UserConfigDirectoryInvalid = 107;
    // Get static field: static public Valve.VR.EVRInitError Init_UserConfigDirectoryInvalid
    static Valve::VR::EVRInitError _get_Init_UserConfigDirectoryInvalid();
    // Set static field: static public Valve.VR.EVRInitError Init_UserConfigDirectoryInvalid
    static void _set_Init_UserConfigDirectoryInvalid(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_HmdNotFound
    static constexpr const int Init_HmdNotFound = 108;
    // Get static field: static public Valve.VR.EVRInitError Init_HmdNotFound
    static Valve::VR::EVRInitError _get_Init_HmdNotFound();
    // Set static field: static public Valve.VR.EVRInitError Init_HmdNotFound
    static void _set_Init_HmdNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_NotInitialized
    static constexpr const int Init_NotInitialized = 109;
    // Get static field: static public Valve.VR.EVRInitError Init_NotInitialized
    static Valve::VR::EVRInitError _get_Init_NotInitialized();
    // Set static field: static public Valve.VR.EVRInitError Init_NotInitialized
    static void _set_Init_NotInitialized(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_PathRegistryNotFound
    static constexpr const int Init_PathRegistryNotFound = 110;
    // Get static field: static public Valve.VR.EVRInitError Init_PathRegistryNotFound
    static Valve::VR::EVRInitError _get_Init_PathRegistryNotFound();
    // Set static field: static public Valve.VR.EVRInitError Init_PathRegistryNotFound
    static void _set_Init_PathRegistryNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_NoConfigPath
    static constexpr const int Init_NoConfigPath = 111;
    // Get static field: static public Valve.VR.EVRInitError Init_NoConfigPath
    static Valve::VR::EVRInitError _get_Init_NoConfigPath();
    // Set static field: static public Valve.VR.EVRInitError Init_NoConfigPath
    static void _set_Init_NoConfigPath(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_NoLogPath
    static constexpr const int Init_NoLogPath = 112;
    // Get static field: static public Valve.VR.EVRInitError Init_NoLogPath
    static Valve::VR::EVRInitError _get_Init_NoLogPath();
    // Set static field: static public Valve.VR.EVRInitError Init_NoLogPath
    static void _set_Init_NoLogPath(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_PathRegistryNotWritable
    static constexpr const int Init_PathRegistryNotWritable = 113;
    // Get static field: static public Valve.VR.EVRInitError Init_PathRegistryNotWritable
    static Valve::VR::EVRInitError _get_Init_PathRegistryNotWritable();
    // Set static field: static public Valve.VR.EVRInitError Init_PathRegistryNotWritable
    static void _set_Init_PathRegistryNotWritable(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_AppInfoInitFailed
    static constexpr const int Init_AppInfoInitFailed = 114;
    // Get static field: static public Valve.VR.EVRInitError Init_AppInfoInitFailed
    static Valve::VR::EVRInitError _get_Init_AppInfoInitFailed();
    // Set static field: static public Valve.VR.EVRInitError Init_AppInfoInitFailed
    static void _set_Init_AppInfoInitFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_Retry
    static constexpr const int Init_Retry = 115;
    // Get static field: static public Valve.VR.EVRInitError Init_Retry
    static Valve::VR::EVRInitError _get_Init_Retry();
    // Set static field: static public Valve.VR.EVRInitError Init_Retry
    static void _set_Init_Retry(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_InitCanceledByUser
    static constexpr const int Init_InitCanceledByUser = 116;
    // Get static field: static public Valve.VR.EVRInitError Init_InitCanceledByUser
    static Valve::VR::EVRInitError _get_Init_InitCanceledByUser();
    // Set static field: static public Valve.VR.EVRInitError Init_InitCanceledByUser
    static void _set_Init_InitCanceledByUser(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_AnotherAppLaunching
    static constexpr const int Init_AnotherAppLaunching = 117;
    // Get static field: static public Valve.VR.EVRInitError Init_AnotherAppLaunching
    static Valve::VR::EVRInitError _get_Init_AnotherAppLaunching();
    // Set static field: static public Valve.VR.EVRInitError Init_AnotherAppLaunching
    static void _set_Init_AnotherAppLaunching(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_SettingsInitFailed
    static constexpr const int Init_SettingsInitFailed = 118;
    // Get static field: static public Valve.VR.EVRInitError Init_SettingsInitFailed
    static Valve::VR::EVRInitError _get_Init_SettingsInitFailed();
    // Set static field: static public Valve.VR.EVRInitError Init_SettingsInitFailed
    static void _set_Init_SettingsInitFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_ShuttingDown
    static constexpr const int Init_ShuttingDown = 119;
    // Get static field: static public Valve.VR.EVRInitError Init_ShuttingDown
    static Valve::VR::EVRInitError _get_Init_ShuttingDown();
    // Set static field: static public Valve.VR.EVRInitError Init_ShuttingDown
    static void _set_Init_ShuttingDown(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_TooManyObjects
    static constexpr const int Init_TooManyObjects = 120;
    // Get static field: static public Valve.VR.EVRInitError Init_TooManyObjects
    static Valve::VR::EVRInitError _get_Init_TooManyObjects();
    // Set static field: static public Valve.VR.EVRInitError Init_TooManyObjects
    static void _set_Init_TooManyObjects(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_NoServerForBackgroundApp
    static constexpr const int Init_NoServerForBackgroundApp = 121;
    // Get static field: static public Valve.VR.EVRInitError Init_NoServerForBackgroundApp
    static Valve::VR::EVRInitError _get_Init_NoServerForBackgroundApp();
    // Set static field: static public Valve.VR.EVRInitError Init_NoServerForBackgroundApp
    static void _set_Init_NoServerForBackgroundApp(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_NotSupportedWithCompositor
    static constexpr const int Init_NotSupportedWithCompositor = 122;
    // Get static field: static public Valve.VR.EVRInitError Init_NotSupportedWithCompositor
    static Valve::VR::EVRInitError _get_Init_NotSupportedWithCompositor();
    // Set static field: static public Valve.VR.EVRInitError Init_NotSupportedWithCompositor
    static void _set_Init_NotSupportedWithCompositor(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_NotAvailableToUtilityApps
    static constexpr const int Init_NotAvailableToUtilityApps = 123;
    // Get static field: static public Valve.VR.EVRInitError Init_NotAvailableToUtilityApps
    static Valve::VR::EVRInitError _get_Init_NotAvailableToUtilityApps();
    // Set static field: static public Valve.VR.EVRInitError Init_NotAvailableToUtilityApps
    static void _set_Init_NotAvailableToUtilityApps(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_Internal
    static constexpr const int Init_Internal = 124;
    // Get static field: static public Valve.VR.EVRInitError Init_Internal
    static Valve::VR::EVRInitError _get_Init_Internal();
    // Set static field: static public Valve.VR.EVRInitError Init_Internal
    static void _set_Init_Internal(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_HmdDriverIdIsNone
    static constexpr const int Init_HmdDriverIdIsNone = 125;
    // Get static field: static public Valve.VR.EVRInitError Init_HmdDriverIdIsNone
    static Valve::VR::EVRInitError _get_Init_HmdDriverIdIsNone();
    // Set static field: static public Valve.VR.EVRInitError Init_HmdDriverIdIsNone
    static void _set_Init_HmdDriverIdIsNone(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_HmdNotFoundPresenceFailed
    static constexpr const int Init_HmdNotFoundPresenceFailed = 126;
    // Get static field: static public Valve.VR.EVRInitError Init_HmdNotFoundPresenceFailed
    static Valve::VR::EVRInitError _get_Init_HmdNotFoundPresenceFailed();
    // Set static field: static public Valve.VR.EVRInitError Init_HmdNotFoundPresenceFailed
    static void _set_Init_HmdNotFoundPresenceFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_VRMonitorNotFound
    static constexpr const int Init_VRMonitorNotFound = 127;
    // Get static field: static public Valve.VR.EVRInitError Init_VRMonitorNotFound
    static Valve::VR::EVRInitError _get_Init_VRMonitorNotFound();
    // Set static field: static public Valve.VR.EVRInitError Init_VRMonitorNotFound
    static void _set_Init_VRMonitorNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_VRMonitorStartupFailed
    static constexpr const int Init_VRMonitorStartupFailed = 128;
    // Get static field: static public Valve.VR.EVRInitError Init_VRMonitorStartupFailed
    static Valve::VR::EVRInitError _get_Init_VRMonitorStartupFailed();
    // Set static field: static public Valve.VR.EVRInitError Init_VRMonitorStartupFailed
    static void _set_Init_VRMonitorStartupFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_LowPowerWatchdogNotSupported
    static constexpr const int Init_LowPowerWatchdogNotSupported = 129;
    // Get static field: static public Valve.VR.EVRInitError Init_LowPowerWatchdogNotSupported
    static Valve::VR::EVRInitError _get_Init_LowPowerWatchdogNotSupported();
    // Set static field: static public Valve.VR.EVRInitError Init_LowPowerWatchdogNotSupported
    static void _set_Init_LowPowerWatchdogNotSupported(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_InvalidApplicationType
    static constexpr const int Init_InvalidApplicationType = 130;
    // Get static field: static public Valve.VR.EVRInitError Init_InvalidApplicationType
    static Valve::VR::EVRInitError _get_Init_InvalidApplicationType();
    // Set static field: static public Valve.VR.EVRInitError Init_InvalidApplicationType
    static void _set_Init_InvalidApplicationType(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_NotAvailableToWatchdogApps
    static constexpr const int Init_NotAvailableToWatchdogApps = 131;
    // Get static field: static public Valve.VR.EVRInitError Init_NotAvailableToWatchdogApps
    static Valve::VR::EVRInitError _get_Init_NotAvailableToWatchdogApps();
    // Set static field: static public Valve.VR.EVRInitError Init_NotAvailableToWatchdogApps
    static void _set_Init_NotAvailableToWatchdogApps(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_WatchdogDisabledInSettings
    static constexpr const int Init_WatchdogDisabledInSettings = 132;
    // Get static field: static public Valve.VR.EVRInitError Init_WatchdogDisabledInSettings
    static Valve::VR::EVRInitError _get_Init_WatchdogDisabledInSettings();
    // Set static field: static public Valve.VR.EVRInitError Init_WatchdogDisabledInSettings
    static void _set_Init_WatchdogDisabledInSettings(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_VRDashboardNotFound
    static constexpr const int Init_VRDashboardNotFound = 133;
    // Get static field: static public Valve.VR.EVRInitError Init_VRDashboardNotFound
    static Valve::VR::EVRInitError _get_Init_VRDashboardNotFound();
    // Set static field: static public Valve.VR.EVRInitError Init_VRDashboardNotFound
    static void _set_Init_VRDashboardNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_VRDashboardStartupFailed
    static constexpr const int Init_VRDashboardStartupFailed = 134;
    // Get static field: static public Valve.VR.EVRInitError Init_VRDashboardStartupFailed
    static Valve::VR::EVRInitError _get_Init_VRDashboardStartupFailed();
    // Set static field: static public Valve.VR.EVRInitError Init_VRDashboardStartupFailed
    static void _set_Init_VRDashboardStartupFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_VRHomeNotFound
    static constexpr const int Init_VRHomeNotFound = 135;
    // Get static field: static public Valve.VR.EVRInitError Init_VRHomeNotFound
    static Valve::VR::EVRInitError _get_Init_VRHomeNotFound();
    // Set static field: static public Valve.VR.EVRInitError Init_VRHomeNotFound
    static void _set_Init_VRHomeNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_VRHomeStartupFailed
    static constexpr const int Init_VRHomeStartupFailed = 136;
    // Get static field: static public Valve.VR.EVRInitError Init_VRHomeStartupFailed
    static Valve::VR::EVRInitError _get_Init_VRHomeStartupFailed();
    // Set static field: static public Valve.VR.EVRInitError Init_VRHomeStartupFailed
    static void _set_Init_VRHomeStartupFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_RebootingBusy
    static constexpr const int Init_RebootingBusy = 137;
    // Get static field: static public Valve.VR.EVRInitError Init_RebootingBusy
    static Valve::VR::EVRInitError _get_Init_RebootingBusy();
    // Set static field: static public Valve.VR.EVRInitError Init_RebootingBusy
    static void _set_Init_RebootingBusy(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_FirmwareUpdateBusy
    static constexpr const int Init_FirmwareUpdateBusy = 138;
    // Get static field: static public Valve.VR.EVRInitError Init_FirmwareUpdateBusy
    static Valve::VR::EVRInitError _get_Init_FirmwareUpdateBusy();
    // Set static field: static public Valve.VR.EVRInitError Init_FirmwareUpdateBusy
    static void _set_Init_FirmwareUpdateBusy(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_FirmwareRecoveryBusy
    static constexpr const int Init_FirmwareRecoveryBusy = 139;
    // Get static field: static public Valve.VR.EVRInitError Init_FirmwareRecoveryBusy
    static Valve::VR::EVRInitError _get_Init_FirmwareRecoveryBusy();
    // Set static field: static public Valve.VR.EVRInitError Init_FirmwareRecoveryBusy
    static void _set_Init_FirmwareRecoveryBusy(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Init_USBServiceBusy
    static constexpr const int Init_USBServiceBusy = 140;
    // Get static field: static public Valve.VR.EVRInitError Init_USBServiceBusy
    static Valve::VR::EVRInitError _get_Init_USBServiceBusy();
    // Set static field: static public Valve.VR.EVRInitError Init_USBServiceBusy
    static void _set_Init_USBServiceBusy(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_Failed
    static constexpr const int Driver_Failed = 200;
    // Get static field: static public Valve.VR.EVRInitError Driver_Failed
    static Valve::VR::EVRInitError _get_Driver_Failed();
    // Set static field: static public Valve.VR.EVRInitError Driver_Failed
    static void _set_Driver_Failed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_Unknown
    static constexpr const int Driver_Unknown = 201;
    // Get static field: static public Valve.VR.EVRInitError Driver_Unknown
    static Valve::VR::EVRInitError _get_Driver_Unknown();
    // Set static field: static public Valve.VR.EVRInitError Driver_Unknown
    static void _set_Driver_Unknown(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_HmdUnknown
    static constexpr const int Driver_HmdUnknown = 202;
    // Get static field: static public Valve.VR.EVRInitError Driver_HmdUnknown
    static Valve::VR::EVRInitError _get_Driver_HmdUnknown();
    // Set static field: static public Valve.VR.EVRInitError Driver_HmdUnknown
    static void _set_Driver_HmdUnknown(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_NotLoaded
    static constexpr const int Driver_NotLoaded = 203;
    // Get static field: static public Valve.VR.EVRInitError Driver_NotLoaded
    static Valve::VR::EVRInitError _get_Driver_NotLoaded();
    // Set static field: static public Valve.VR.EVRInitError Driver_NotLoaded
    static void _set_Driver_NotLoaded(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_RuntimeOutOfDate
    static constexpr const int Driver_RuntimeOutOfDate = 204;
    // Get static field: static public Valve.VR.EVRInitError Driver_RuntimeOutOfDate
    static Valve::VR::EVRInitError _get_Driver_RuntimeOutOfDate();
    // Set static field: static public Valve.VR.EVRInitError Driver_RuntimeOutOfDate
    static void _set_Driver_RuntimeOutOfDate(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_HmdInUse
    static constexpr const int Driver_HmdInUse = 205;
    // Get static field: static public Valve.VR.EVRInitError Driver_HmdInUse
    static Valve::VR::EVRInitError _get_Driver_HmdInUse();
    // Set static field: static public Valve.VR.EVRInitError Driver_HmdInUse
    static void _set_Driver_HmdInUse(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_NotCalibrated
    static constexpr const int Driver_NotCalibrated = 206;
    // Get static field: static public Valve.VR.EVRInitError Driver_NotCalibrated
    static Valve::VR::EVRInitError _get_Driver_NotCalibrated();
    // Set static field: static public Valve.VR.EVRInitError Driver_NotCalibrated
    static void _set_Driver_NotCalibrated(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_CalibrationInvalid
    static constexpr const int Driver_CalibrationInvalid = 207;
    // Get static field: static public Valve.VR.EVRInitError Driver_CalibrationInvalid
    static Valve::VR::EVRInitError _get_Driver_CalibrationInvalid();
    // Set static field: static public Valve.VR.EVRInitError Driver_CalibrationInvalid
    static void _set_Driver_CalibrationInvalid(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_HmdDisplayNotFound
    static constexpr const int Driver_HmdDisplayNotFound = 208;
    // Get static field: static public Valve.VR.EVRInitError Driver_HmdDisplayNotFound
    static Valve::VR::EVRInitError _get_Driver_HmdDisplayNotFound();
    // Set static field: static public Valve.VR.EVRInitError Driver_HmdDisplayNotFound
    static void _set_Driver_HmdDisplayNotFound(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
    static constexpr const int Driver_TrackedDeviceInterfaceUnknown = 209;
    // Get static field: static public Valve.VR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
    static Valve::VR::EVRInitError _get_Driver_TrackedDeviceInterfaceUnknown();
    // Set static field: static public Valve.VR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
    static void _set_Driver_TrackedDeviceInterfaceUnknown(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_HmdDriverIdOutOfBounds
    static constexpr const int Driver_HmdDriverIdOutOfBounds = 211;
    // Get static field: static public Valve.VR.EVRInitError Driver_HmdDriverIdOutOfBounds
    static Valve::VR::EVRInitError _get_Driver_HmdDriverIdOutOfBounds();
    // Set static field: static public Valve.VR.EVRInitError Driver_HmdDriverIdOutOfBounds
    static void _set_Driver_HmdDriverIdOutOfBounds(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Driver_HmdDisplayMirrored
    static constexpr const int Driver_HmdDisplayMirrored = 212;
    // Get static field: static public Valve.VR.EVRInitError Driver_HmdDisplayMirrored
    static Valve::VR::EVRInitError _get_Driver_HmdDisplayMirrored();
    // Set static field: static public Valve.VR.EVRInitError Driver_HmdDisplayMirrored
    static void _set_Driver_HmdDisplayMirrored(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError IPC_ServerInitFailed
    static constexpr const int IPC_ServerInitFailed = 300;
    // Get static field: static public Valve.VR.EVRInitError IPC_ServerInitFailed
    static Valve::VR::EVRInitError _get_IPC_ServerInitFailed();
    // Set static field: static public Valve.VR.EVRInitError IPC_ServerInitFailed
    static void _set_IPC_ServerInitFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError IPC_ConnectFailed
    static constexpr const int IPC_ConnectFailed = 301;
    // Get static field: static public Valve.VR.EVRInitError IPC_ConnectFailed
    static Valve::VR::EVRInitError _get_IPC_ConnectFailed();
    // Set static field: static public Valve.VR.EVRInitError IPC_ConnectFailed
    static void _set_IPC_ConnectFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError IPC_SharedStateInitFailed
    static constexpr const int IPC_SharedStateInitFailed = 302;
    // Get static field: static public Valve.VR.EVRInitError IPC_SharedStateInitFailed
    static Valve::VR::EVRInitError _get_IPC_SharedStateInitFailed();
    // Set static field: static public Valve.VR.EVRInitError IPC_SharedStateInitFailed
    static void _set_IPC_SharedStateInitFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError IPC_CompositorInitFailed
    static constexpr const int IPC_CompositorInitFailed = 303;
    // Get static field: static public Valve.VR.EVRInitError IPC_CompositorInitFailed
    static Valve::VR::EVRInitError _get_IPC_CompositorInitFailed();
    // Set static field: static public Valve.VR.EVRInitError IPC_CompositorInitFailed
    static void _set_IPC_CompositorInitFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError IPC_MutexInitFailed
    static constexpr const int IPC_MutexInitFailed = 304;
    // Get static field: static public Valve.VR.EVRInitError IPC_MutexInitFailed
    static Valve::VR::EVRInitError _get_IPC_MutexInitFailed();
    // Set static field: static public Valve.VR.EVRInitError IPC_MutexInitFailed
    static void _set_IPC_MutexInitFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError IPC_Failed
    static constexpr const int IPC_Failed = 305;
    // Get static field: static public Valve.VR.EVRInitError IPC_Failed
    static Valve::VR::EVRInitError _get_IPC_Failed();
    // Set static field: static public Valve.VR.EVRInitError IPC_Failed
    static void _set_IPC_Failed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError IPC_CompositorConnectFailed
    static constexpr const int IPC_CompositorConnectFailed = 306;
    // Get static field: static public Valve.VR.EVRInitError IPC_CompositorConnectFailed
    static Valve::VR::EVRInitError _get_IPC_CompositorConnectFailed();
    // Set static field: static public Valve.VR.EVRInitError IPC_CompositorConnectFailed
    static void _set_IPC_CompositorConnectFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError IPC_CompositorInvalidConnectResponse
    static constexpr const int IPC_CompositorInvalidConnectResponse = 307;
    // Get static field: static public Valve.VR.EVRInitError IPC_CompositorInvalidConnectResponse
    static Valve::VR::EVRInitError _get_IPC_CompositorInvalidConnectResponse();
    // Set static field: static public Valve.VR.EVRInitError IPC_CompositorInvalidConnectResponse
    static void _set_IPC_CompositorInvalidConnectResponse(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
    static constexpr const int IPC_ConnectFailedAfterMultipleAttempts = 308;
    // Get static field: static public Valve.VR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
    static Valve::VR::EVRInitError _get_IPC_ConnectFailedAfterMultipleAttempts();
    // Set static field: static public Valve.VR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
    static void _set_IPC_ConnectFailedAfterMultipleAttempts(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Compositor_Failed
    static constexpr const int Compositor_Failed = 400;
    // Get static field: static public Valve.VR.EVRInitError Compositor_Failed
    static Valve::VR::EVRInitError _get_Compositor_Failed();
    // Set static field: static public Valve.VR.EVRInitError Compositor_Failed
    static void _set_Compositor_Failed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Compositor_D3D11HardwareRequired
    static constexpr const int Compositor_D3D11HardwareRequired = 401;
    // Get static field: static public Valve.VR.EVRInitError Compositor_D3D11HardwareRequired
    static Valve::VR::EVRInitError _get_Compositor_D3D11HardwareRequired();
    // Set static field: static public Valve.VR.EVRInitError Compositor_D3D11HardwareRequired
    static void _set_Compositor_D3D11HardwareRequired(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Compositor_FirmwareRequiresUpdate
    static constexpr const int Compositor_FirmwareRequiresUpdate = 402;
    // Get static field: static public Valve.VR.EVRInitError Compositor_FirmwareRequiresUpdate
    static Valve::VR::EVRInitError _get_Compositor_FirmwareRequiresUpdate();
    // Set static field: static public Valve.VR.EVRInitError Compositor_FirmwareRequiresUpdate
    static void _set_Compositor_FirmwareRequiresUpdate(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Compositor_OverlayInitFailed
    static constexpr const int Compositor_OverlayInitFailed = 403;
    // Get static field: static public Valve.VR.EVRInitError Compositor_OverlayInitFailed
    static Valve::VR::EVRInitError _get_Compositor_OverlayInitFailed();
    // Set static field: static public Valve.VR.EVRInitError Compositor_OverlayInitFailed
    static void _set_Compositor_OverlayInitFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Compositor_ScreenshotsInitFailed
    static constexpr const int Compositor_ScreenshotsInitFailed = 404;
    // Get static field: static public Valve.VR.EVRInitError Compositor_ScreenshotsInitFailed
    static Valve::VR::EVRInitError _get_Compositor_ScreenshotsInitFailed();
    // Set static field: static public Valve.VR.EVRInitError Compositor_ScreenshotsInitFailed
    static void _set_Compositor_ScreenshotsInitFailed(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Compositor_UnableToCreateDevice
    static constexpr const int Compositor_UnableToCreateDevice = 405;
    // Get static field: static public Valve.VR.EVRInitError Compositor_UnableToCreateDevice
    static Valve::VR::EVRInitError _get_Compositor_UnableToCreateDevice();
    // Set static field: static public Valve.VR.EVRInitError Compositor_UnableToCreateDevice
    static void _set_Compositor_UnableToCreateDevice(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
    static constexpr const int VendorSpecific_UnableToConnectToOculusRuntime = 1000;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
    static Valve::VR::EVRInitError _get_VendorSpecific_UnableToConnectToOculusRuntime();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
    static void _set_VendorSpecific_UnableToConnectToOculusRuntime(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_WindowsNotInDevMode
    static constexpr const int VendorSpecific_WindowsNotInDevMode = 1001;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_WindowsNotInDevMode
    static Valve::VR::EVRInitError _get_VendorSpecific_WindowsNotInDevMode();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_WindowsNotInDevMode
    static void _set_VendorSpecific_WindowsNotInDevMode(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
    static constexpr const int VendorSpecific_HmdFound_CantOpenDevice = 1101;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_CantOpenDevice();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
    static void _set_VendorSpecific_HmdFound_CantOpenDevice(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
    static constexpr const int VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_UnableToRequestConfigStart();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
    static void _set_VendorSpecific_HmdFound_UnableToRequestConfigStart(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
    static constexpr const int VendorSpecific_HmdFound_NoStoredConfig = 1103;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_NoStoredConfig();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
    static void _set_VendorSpecific_HmdFound_NoStoredConfig(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
    static constexpr const int VendorSpecific_HmdFound_ConfigTooBig = 1104;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_ConfigTooBig();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
    static void _set_VendorSpecific_HmdFound_ConfigTooBig(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
    static constexpr const int VendorSpecific_HmdFound_ConfigTooSmall = 1105;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_ConfigTooSmall();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
    static void _set_VendorSpecific_HmdFound_ConfigTooSmall(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
    static constexpr const int VendorSpecific_HmdFound_UnableToInitZLib = 1106;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_UnableToInitZLib();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
    static void _set_VendorSpecific_HmdFound_UnableToInitZLib(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
    static constexpr const int VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_CantReadFirmwareVersion();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
    static void _set_VendorSpecific_HmdFound_CantReadFirmwareVersion(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
    static constexpr const int VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_UnableToSendUserDataStart();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
    static void _set_VendorSpecific_HmdFound_UnableToSendUserDataStart(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
    static constexpr const int VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_UnableToGetUserDataStart();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
    static void _set_VendorSpecific_HmdFound_UnableToGetUserDataStart(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
    static constexpr const int VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_UnableToGetUserDataNext();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
    static void _set_VendorSpecific_HmdFound_UnableToGetUserDataNext(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
    static constexpr const int VendorSpecific_HmdFound_UserDataAddressRange = 1111;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_UserDataAddressRange();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
    static void _set_VendorSpecific_HmdFound_UserDataAddressRange(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataError
    static constexpr const int VendorSpecific_HmdFound_UserDataError = 1112;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataError
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_UserDataError();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataError
    static void _set_VendorSpecific_HmdFound_UserDataError(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
    static constexpr const int VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113;
    // Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
    static Valve::VR::EVRInitError _get_VendorSpecific_HmdFound_ConfigFailedSanityCheck();
    // Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
    static void _set_VendorSpecific_HmdFound_ConfigFailedSanityCheck(Valve::VR::EVRInitError value);
    // static field const value: static public Valve.VR.EVRInitError Steam_SteamInstallationNotFound
    static constexpr const int Steam_SteamInstallationNotFound = 2000;
    // Get static field: static public Valve.VR.EVRInitError Steam_SteamInstallationNotFound
    static Valve::VR::EVRInitError _get_Steam_SteamInstallationNotFound();
    // Set static field: static public Valve.VR.EVRInitError Steam_SteamInstallationNotFound
    static void _set_Steam_SteamInstallationNotFound(Valve::VR::EVRInitError value);
  }; // Valve.VR.EVRInitError
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Valve::VR::EVRInitError, "Valve.VR", "EVRInitError");
#pragma pack(pop)
