// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionTrigger
#include "RootMotion/FinalIK/InteractionTrigger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: RaycastHit
  struct RaycastHit;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: RootMotion.FinalIK.InteractionTrigger/Range
  // [] Offset: FFFFFFFF
  class InteractionTrigger::Range : public ::Il2CppObject {
    public:
    // Nested type: RootMotion::FinalIK::InteractionTrigger::Range::Interaction
    class Interaction;
    // [HideInInspector] Offset: 0xD2C7DC
    // public System.String name
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* name;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [HideInInspector] Offset: 0xD2C814
    // public System.Boolean show
    // Size: 0x1
    // Offset: 0x18
    bool show;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: show and: characterPosition
    char __padding1[0x7] = {};
    // [TooltipAttribute] Offset: 0xD2C84C
    // public RootMotion.FinalIK.InteractionTrigger/CharacterPosition characterPosition
    // Size: 0x8
    // Offset: 0x20
    RootMotion::FinalIK::InteractionTrigger::CharacterPosition* characterPosition;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::InteractionTrigger::CharacterPosition*) == 0x8);
    // [TooltipAttribute] Offset: 0xD2C884
    // public RootMotion.FinalIK.InteractionTrigger/CameraPosition cameraPosition
    // Size: 0x8
    // Offset: 0x28
    RootMotion::FinalIK::InteractionTrigger::CameraPosition* cameraPosition;
    // Field size check
    static_assert(sizeof(RootMotion::FinalIK::InteractionTrigger::CameraPosition*) == 0x8);
    // [TooltipAttribute] Offset: 0xD2C8BC
    // public RootMotion.FinalIK.InteractionTrigger/Range/Interaction[] interactions
    // Size: 0x8
    // Offset: 0x30
    ::Array<RootMotion::FinalIK::InteractionTrigger::Range::Interaction*>* interactions;
    // Field size check
    static_assert(sizeof(::Array<RootMotion::FinalIK::InteractionTrigger::Range::Interaction*>*) == 0x8);
    // Creating value type constructor for type: Range
    Range(::Il2CppString* name_ = {}, bool show_ = {}, RootMotion::FinalIK::InteractionTrigger::CharacterPosition* characterPosition_ = {}, RootMotion::FinalIK::InteractionTrigger::CameraPosition* cameraPosition_ = {}, ::Array<RootMotion::FinalIK::InteractionTrigger::Range::Interaction*>* interactions_ = {}) noexcept : name{name_}, show{show_}, characterPosition{characterPosition_}, cameraPosition{cameraPosition_}, interactions{interactions_} {}
    // public System.Boolean IsInRange(UnityEngine.Transform character, UnityEngine.Transform raycastFrom, UnityEngine.RaycastHit raycastHit, UnityEngine.Transform trigger, out System.Single maxError)
    // Offset: 0x195F9DC
    bool IsInRange(UnityEngine::Transform* character, UnityEngine::Transform* raycastFrom, UnityEngine::RaycastHit raycastHit, UnityEngine::Transform* trigger, float& maxError);
    // public System.Void .ctor()
    // Offset: 0x1960844
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InteractionTrigger::Range* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::FinalIK::InteractionTrigger::Range::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InteractionTrigger::Range*, creationType>()));
    }
  }; // RootMotion.FinalIK.InteractionTrigger/Range
  #pragma pack(pop)
  static check_size<sizeof(InteractionTrigger::Range), 48 + sizeof(::Array<RootMotion::FinalIK::InteractionTrigger::Range::Interaction*>*)> __RootMotion_FinalIK_InteractionTrigger_RangeSizeCheck;
  static_assert(sizeof(InteractionTrigger::Range) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::InteractionTrigger::Range*, "RootMotion.FinalIK", "InteractionTrigger/Range");
