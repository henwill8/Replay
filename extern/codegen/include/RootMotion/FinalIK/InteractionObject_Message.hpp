// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionObject
#include "RootMotion/FinalIK/InteractionObject.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Autogenerated type: RootMotion.FinalIK.InteractionObject/Message
  class InteractionObject::Message : public ::Il2CppObject {
    public:
    // public System.String function
    // Offset: 0x10
    ::Il2CppString* function;
    // public UnityEngine.GameObject recipient
    // Offset: 0x18
    UnityEngine::GameObject* recipient;
    // static field const value: static private System.String empty
    static constexpr const char* empty = "";
    // Get static field: static private System.String empty
    static ::Il2CppString* _get_empty();
    // Set static field: static private System.String empty
    static void _set_empty(::Il2CppString* value);
    // public System.Void Send(UnityEngine.Transform t)
    // Offset: 0x144FBA0
    void Send(UnityEngine::Transform* t);
    // public System.Void .ctor()
    // Offset: 0x144FC98
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static InteractionObject::Message* New_ctor();
  }; // RootMotion.FinalIK.InteractionObject/Message
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::InteractionObject::Message*, "RootMotion.FinalIK", "InteractionObject/Message");
#pragma pack(pop)
