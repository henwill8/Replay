// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.FBIKChain
#include "RootMotion/FinalIK/FBIKChain.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: IKSolverFullBody
  class IKSolverFullBody;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Autogenerated type: RootMotion.FinalIK.FBIKChain/ChildConstraint
  class FBIKChain::ChildConstraint : public ::Il2CppObject {
    public:
    // public System.Single pushElasticity
    // Offset: 0x10
    float pushElasticity;
    // public System.Single pullElasticity
    // Offset: 0x14
    float pullElasticity;
    // private UnityEngine.Transform bone1
    // Offset: 0x18
    UnityEngine::Transform* bone1;
    // private UnityEngine.Transform bone2
    // Offset: 0x20
    UnityEngine::Transform* bone2;
    // private System.Single <nominalDistance>k__BackingField
    // Offset: 0x28
    float nominalDistance;
    // private System.Boolean <isRigid>k__BackingField
    // Offset: 0x2C
    bool isRigid;
    // private System.Single crossFade
    // Offset: 0x30
    float crossFade;
    // private System.Single inverseCrossFade
    // Offset: 0x34
    float inverseCrossFade;
    // private System.Int32 chain1Index
    // Offset: 0x38
    int chain1Index;
    // private System.Int32 chain2Index
    // Offset: 0x3C
    int chain2Index;
    // public System.Single get_nominalDistance()
    // Offset: 0x13B69E4
    float get_nominalDistance();
    // private System.Void set_nominalDistance(System.Single value)
    // Offset: 0x13B69EC
    void set_nominalDistance(float value);
    // public System.Boolean get_isRigid()
    // Offset: 0x13B69F4
    bool get_isRigid();
    // private System.Void set_isRigid(System.Boolean value)
    // Offset: 0x13B69FC
    void set_isRigid(bool value);
    // public System.Void .ctor(UnityEngine.Transform bone1, UnityEngine.Transform bone2, System.Single pushElasticity, System.Single pullElasticity)
    // Offset: 0x13B6A08
    static FBIKChain::ChildConstraint* New_ctor(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, float pushElasticity, float pullElasticity);
    // public System.Void Initiate(RootMotion.FinalIK.IKSolverFullBody solver)
    // Offset: 0x13B4768
    void Initiate(RootMotion::FinalIK::IKSolverFullBody* solver);
    // public System.Void OnPreSolve(RootMotion.FinalIK.IKSolverFullBody solver)
    // Offset: 0x13B4CA8
    void OnPreSolve(RootMotion::FinalIK::IKSolverFullBody* solver);
    // public System.Void Solve(RootMotion.FinalIK.IKSolverFullBody solver)
    // Offset: 0x13B66E0
    void Solve(RootMotion::FinalIK::IKSolverFullBody* solver);
  }; // RootMotion.FinalIK.FBIKChain/ChildConstraint
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::FBIKChain::ChildConstraint*, "RootMotion.FinalIK", "FBIKChain/ChildConstraint");
#pragma pack(pop)
