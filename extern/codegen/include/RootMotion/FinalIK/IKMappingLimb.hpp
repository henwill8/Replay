// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKMapping
#include "RootMotion/FinalIK/IKMapping.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: IKSolverFullBody
  class IKSolverFullBody;
  // Forward declaring type: IKSolver
  class IKSolver;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Autogenerated type: RootMotion.FinalIK.IKMappingLimb
  class IKMappingLimb : public RootMotion::FinalIK::IKMapping {
    public:
    // Nested type: RootMotion::FinalIK::IKMappingLimb::BoneMapType
    struct BoneMapType;
    // public UnityEngine.Transform parentBone
    // Offset: 0x10
    UnityEngine::Transform* parentBone;
    // public UnityEngine.Transform bone1
    // Offset: 0x18
    UnityEngine::Transform* bone1;
    // public UnityEngine.Transform bone2
    // Offset: 0x20
    UnityEngine::Transform* bone2;
    // public UnityEngine.Transform bone3
    // Offset: 0x28
    UnityEngine::Transform* bone3;
    // public System.Single maintainRotationWeight
    // Offset: 0x30
    float maintainRotationWeight;
    // public System.Single weight
    // Offset: 0x34
    float weight;
    // public System.Boolean updatePlaneRotations
    // Offset: 0x38
    bool updatePlaneRotations;
    // private RootMotion.FinalIK.IKMapping/BoneMap boneMapParent
    // Offset: 0x40
    RootMotion::FinalIK::IKMapping::BoneMap* boneMapParent;
    // private RootMotion.FinalIK.IKMapping/BoneMap boneMap1
    // Offset: 0x48
    RootMotion::FinalIK::IKMapping::BoneMap* boneMap1;
    // private RootMotion.FinalIK.IKMapping/BoneMap boneMap2
    // Offset: 0x50
    RootMotion::FinalIK::IKMapping::BoneMap* boneMap2;
    // private RootMotion.FinalIK.IKMapping/BoneMap boneMap3
    // Offset: 0x58
    RootMotion::FinalIK::IKMapping::BoneMap* boneMap3;
    // public RootMotion.FinalIK.IKMapping/BoneMap GetBoneMap(RootMotion.FinalIK.IKMappingLimb/BoneMapType boneMap)
    // Offset: 0x1386D88
    RootMotion::FinalIK::IKMapping::BoneMap* GetBoneMap(RootMotion::FinalIK::IKMappingLimb::BoneMapType boneMap);
    // public System.Void SetLimbOrientation(UnityEngine.Vector3 upper, UnityEngine.Vector3 lower)
    // Offset: 0x1386E5C
    void SetLimbOrientation(UnityEngine::Vector3 upper, UnityEngine::Vector3 lower);
    // public System.Void .ctor(UnityEngine.Transform bone1, UnityEngine.Transform bone2, UnityEngine.Transform bone3, UnityEngine.Transform parentBone)
    // Offset: 0x13872E8
    static IKMappingLimb* New_ctor(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, UnityEngine::Transform* bone3, UnityEngine::Transform* parentBone);
    // public System.Void SetBones(UnityEngine.Transform bone1, UnityEngine.Transform bone2, UnityEngine.Transform bone3, UnityEngine.Transform parentBone)
    // Offset: 0x1387458
    void SetBones(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, UnityEngine::Transform* bone3, UnityEngine::Transform* parentBone);
    // public System.Void StoreDefaultLocalState()
    // Offset: 0x13874BC
    void StoreDefaultLocalState();
    // public System.Void FixTransforms()
    // Offset: 0x1387564
    void FixTransforms();
    // public System.Void ReadPose()
    // Offset: 0x13878E4
    void ReadPose();
    // public System.Void WritePose(RootMotion.FinalIK.IKSolverFullBody solver, System.Boolean fullBody)
    // Offset: 0x138799C
    void WritePose(RootMotion::FinalIK::IKSolverFullBody* solver, bool fullBody);
    // public override System.Boolean IsValid(RootMotion.FinalIK.IKSolver solver, ref System.String message)
    // Offset: 0x1386D04
    // Implemented from: RootMotion.FinalIK.IKMapping
    // Base method: System.Boolean IKMapping::IsValid(RootMotion.FinalIK.IKSolver solver, ref System.String message)
    bool IsValid(RootMotion::FinalIK::IKSolver* solver, ::Il2CppString*& message);
    // public System.Void .ctor()
    // Offset: 0x13871B0
    // Implemented from: RootMotion.FinalIK.IKMapping
    // Base method: System.Void IKMapping::.ctor()
    // Base method: System.Void Object::.ctor()
    static IKMappingLimb* New_ctor();
    // public override System.Void Initiate(RootMotion.FinalIK.IKSolverFullBody solver)
    // Offset: 0x138761C
    // Implemented from: RootMotion.FinalIK.IKMapping
    // Base method: System.Void IKMapping::Initiate(RootMotion.FinalIK.IKSolverFullBody solver)
    void Initiate(RootMotion::FinalIK::IKSolverFullBody* solver);
  }; // RootMotion.FinalIK.IKMappingLimb
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::IKMappingLimb*, "RootMotion.FinalIK", "IKMappingLimb");
#pragma pack(pop)
