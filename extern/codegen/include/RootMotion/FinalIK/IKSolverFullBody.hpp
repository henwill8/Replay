// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: FBIKChain
  class FBIKChain;
  // Forward declaring type: IKEffector
  class IKEffector;
  // Forward declaring type: IKMappingSpine
  class IKMappingSpine;
  // Forward declaring type: IKMappingBone
  class IKMappingBone;
  // Forward declaring type: IKMappingLimb
  class IKMappingLimb;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Autogenerated type: RootMotion.FinalIK.IKSolverFullBody
  class IKSolverFullBody : public RootMotion::FinalIK::IKSolver {
    public:
    // public System.Int32 iterations
    // Offset: 0x58
    int iterations;
    // public RootMotion.FinalIK.FBIKChain[] chain
    // Offset: 0x60
    ::Array<RootMotion::FinalIK::FBIKChain*>* chain;
    // public RootMotion.FinalIK.IKEffector[] effectors
    // Offset: 0x68
    ::Array<RootMotion::FinalIK::IKEffector*>* effectors;
    // public RootMotion.FinalIK.IKMappingSpine spineMapping
    // Offset: 0x70
    RootMotion::FinalIK::IKMappingSpine* spineMapping;
    // public RootMotion.FinalIK.IKMappingBone[] boneMappings
    // Offset: 0x78
    ::Array<RootMotion::FinalIK::IKMappingBone*>* boneMappings;
    // public RootMotion.FinalIK.IKMappingLimb[] limbMappings
    // Offset: 0x80
    ::Array<RootMotion::FinalIK::IKMappingLimb*>* limbMappings;
    // public System.Boolean FABRIKPass
    // Offset: 0x88
    bool FABRIKPass;
    // public RootMotion.FinalIK.IKSolver/UpdateDelegate OnPreRead
    // Offset: 0x90
    RootMotion::FinalIK::IKSolver::UpdateDelegate* OnPreRead;
    // public RootMotion.FinalIK.IKSolver/UpdateDelegate OnPreSolve
    // Offset: 0x98
    RootMotion::FinalIK::IKSolver::UpdateDelegate* OnPreSolve;
    // public RootMotion.FinalIK.IKSolver/IterationDelegate OnPreIteration
    // Offset: 0xA0
    RootMotion::FinalIK::IKSolver::IterationDelegate* OnPreIteration;
    // public RootMotion.FinalIK.IKSolver/IterationDelegate OnPostIteration
    // Offset: 0xA8
    RootMotion::FinalIK::IKSolver::IterationDelegate* OnPostIteration;
    // public RootMotion.FinalIK.IKSolver/UpdateDelegate OnPreBend
    // Offset: 0xB0
    RootMotion::FinalIK::IKSolver::UpdateDelegate* OnPreBend;
    // public RootMotion.FinalIK.IKSolver/UpdateDelegate OnPostSolve
    // Offset: 0xB8
    RootMotion::FinalIK::IKSolver::UpdateDelegate* OnPostSolve;
    // public RootMotion.FinalIK.IKSolver/UpdateDelegate OnStoreDefaultLocalState
    // Offset: 0xC0
    RootMotion::FinalIK::IKSolver::UpdateDelegate* OnStoreDefaultLocalState;
    // public RootMotion.FinalIK.IKSolver/UpdateDelegate OnFixTransforms
    // Offset: 0xC8
    RootMotion::FinalIK::IKSolver::UpdateDelegate* OnFixTransforms;
    // public RootMotion.FinalIK.IKEffector GetEffector(UnityEngine.Transform t)
    // Offset: 0x134B4E0
    RootMotion::FinalIK::IKEffector* GetEffector(UnityEngine::Transform* t);
    // public RootMotion.FinalIK.FBIKChain GetChain(UnityEngine.Transform transform)
    // Offset: 0x134B5D4
    RootMotion::FinalIK::FBIKChain* GetChain(UnityEngine::Transform* transform);
    // public System.Int32 GetChainIndex(UnityEngine.Transform transform)
    // Offset: 0x134B630
    int GetChainIndex(UnityEngine::Transform* transform);
    // public RootMotion.FinalIK.IKSolver/Node GetNode(System.Int32 chainIndex, System.Int32 nodeIndex)
    // Offset: 0x134B764
    RootMotion::FinalIK::IKSolver::Node* GetNode(int chainIndex, int nodeIndex);
    // public System.Void GetChainAndNodeIndexes(UnityEngine.Transform transform, out System.Int32 chainIndex, out System.Int32 nodeIndex)
    // Offset: 0x134B7C0
    void GetChainAndNodeIndexes(UnityEngine::Transform* transform, int& chainIndex, int& nodeIndex);
    // protected System.Void ReadPose()
    // Offset: 0x134C258
    void ReadPose();
    // protected System.Void Solve()
    // Offset: 0x134C4A4
    void Solve();
    // protected System.Void ApplyBendConstraints()
    // Offset: 0x134C77C
    void ApplyBendConstraints();
    // protected System.Void WritePose()
    // Offset: 0x134C7C0
    void WritePose();
    // public override RootMotion.FinalIK.IKSolver/Point[] GetPoints()
    // Offset: 0x134B840
    // Implemented from: RootMotion.FinalIK.IKSolver
    // Base method: RootMotion.FinalIK.IKSolver/Point[] IKSolver::GetPoints()
    ::Array<RootMotion::FinalIK::IKSolver::Point*>* GetPoints();
    // public override RootMotion.FinalIK.IKSolver/Point GetPoint(UnityEngine.Transform transform)
    // Offset: 0x134B9F0
    // Implemented from: RootMotion.FinalIK.IKSolver
    // Base method: RootMotion.FinalIK.IKSolver/Point IKSolver::GetPoint(UnityEngine.Transform transform)
    RootMotion::FinalIK::IKSolver::Point* GetPoint(UnityEngine::Transform* transform);
    // public override System.Boolean IsValid(ref System.String message)
    // Offset: 0x134BB64
    // Implemented from: RootMotion.FinalIK.IKSolver
    // Base method: System.Boolean IKSolver::IsValid(ref System.String message)
    bool IsValid(::Il2CppString*& message);
    // public override System.Void StoreDefaultLocalState()
    // Offset: 0x134BD6C
    // Implemented from: RootMotion.FinalIK.IKSolver
    // Base method: System.Void IKSolver::StoreDefaultLocalState()
    void StoreDefaultLocalState();
    // public override System.Void FixTransforms()
    // Offset: 0x134BE40
    // Implemented from: RootMotion.FinalIK.IKSolver
    // Base method: System.Void IKSolver::FixTransforms()
    void FixTransforms();
    // protected override System.Void OnInitiate()
    // Offset: 0x134BF28
    // Implemented from: RootMotion.FinalIK.IKSolver
    // Base method: System.Void IKSolver::OnInitiate()
    void OnInitiate();
    // protected override System.Void OnUpdate()
    // Offset: 0x134C09C
    // Implemented from: RootMotion.FinalIK.IKSolver
    // Base method: System.Void IKSolver::OnUpdate()
    void OnUpdate();
    // public System.Void .ctor()
    // Offset: 0x134C8B0
    // Implemented from: RootMotion.FinalIK.IKSolver
    // Base method: System.Void IKSolver::.ctor()
    // Base method: System.Void Object::.ctor()
    static IKSolverFullBody* New_ctor();
  }; // RootMotion.FinalIK.IKSolverFullBody
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::IKSolverFullBody*, "RootMotion.FinalIK", "IKSolverFullBody");
#pragma pack(pop)
