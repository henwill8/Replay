// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKMapping
#include "RootMotion/FinalIK/IKMapping.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Vector3
  struct Vector3;
}
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: IKSolverFullBody
  class IKSolverFullBody;
  // Forward declaring type: IKSolver
  class IKSolver;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Autogenerated type: RootMotion.FinalIK.IKMappingSpine
  class IKMappingSpine : public RootMotion::FinalIK::IKMapping {
    public:
    // public UnityEngine.Transform[] spineBones
    // Offset: 0x10
    ::Array<UnityEngine::Transform*>* spineBones;
    // public UnityEngine.Transform leftUpperArmBone
    // Offset: 0x18
    UnityEngine::Transform* leftUpperArmBone;
    // public UnityEngine.Transform rightUpperArmBone
    // Offset: 0x20
    UnityEngine::Transform* rightUpperArmBone;
    // public UnityEngine.Transform leftThighBone
    // Offset: 0x28
    UnityEngine::Transform* leftThighBone;
    // public UnityEngine.Transform rightThighBone
    // Offset: 0x30
    UnityEngine::Transform* rightThighBone;
    // public System.Int32 iterations
    // Offset: 0x38
    int iterations;
    // public System.Single twistWeight
    // Offset: 0x3C
    float twistWeight;
    // private System.Int32 rootNodeIndex
    // Offset: 0x40
    int rootNodeIndex;
    // private RootMotion.FinalIK.IKMapping/BoneMap[] spine
    // Offset: 0x48
    ::Array<RootMotion::FinalIK::IKMapping::BoneMap*>* spine;
    // private RootMotion.FinalIK.IKMapping/BoneMap leftUpperArm
    // Offset: 0x50
    RootMotion::FinalIK::IKMapping::BoneMap* leftUpperArm;
    // private RootMotion.FinalIK.IKMapping/BoneMap rightUpperArm
    // Offset: 0x58
    RootMotion::FinalIK::IKMapping::BoneMap* rightUpperArm;
    // private RootMotion.FinalIK.IKMapping/BoneMap leftThigh
    // Offset: 0x60
    RootMotion::FinalIK::IKMapping::BoneMap* leftThigh;
    // private RootMotion.FinalIK.IKMapping/BoneMap rightThigh
    // Offset: 0x68
    RootMotion::FinalIK::IKMapping::BoneMap* rightThigh;
    // private System.Boolean useFABRIK
    // Offset: 0x70
    bool useFABRIK;
    // public System.Void .ctor(UnityEngine.Transform[] spineBones, UnityEngine.Transform leftUpperArmBone, UnityEngine.Transform rightUpperArmBone, UnityEngine.Transform leftThighBone, UnityEngine.Transform rightThighBone)
    // Offset: 0x1387F58
    static IKMappingSpine* New_ctor(::Array<UnityEngine::Transform*>* spineBones, UnityEngine::Transform* leftUpperArmBone, UnityEngine::Transform* rightUpperArmBone, UnityEngine::Transform* leftThighBone, UnityEngine::Transform* rightThighBone);
    // public System.Void SetBones(UnityEngine.Transform[] spineBones, UnityEngine.Transform leftUpperArmBone, UnityEngine.Transform rightUpperArmBone, UnityEngine.Transform leftThighBone, UnityEngine.Transform rightThighBone)
    // Offset: 0x13880F8
    void SetBones(::Array<UnityEngine::Transform*>* spineBones, UnityEngine::Transform* leftUpperArmBone, UnityEngine::Transform* rightUpperArmBone, UnityEngine::Transform* leftThighBone, UnityEngine::Transform* rightThighBone);
    // public System.Void StoreDefaultLocalState()
    // Offset: 0x1388178
    void StoreDefaultLocalState();
    // public System.Void FixTransforms()
    // Offset: 0x13881E0
    void FixTransforms();
    // private System.Boolean UseFABRIK()
    // Offset: 0x1388938
    bool UseFABRIK();
    // public System.Void ReadPose()
    // Offset: 0x1388970
    void ReadPose();
    // public System.Void WritePose(RootMotion.FinalIK.IKSolverFullBody solver)
    // Offset: 0x1388C50
    void WritePose(RootMotion::FinalIK::IKSolverFullBody* solver);
    // public System.Void ForwardReach(UnityEngine.Vector3 position)
    // Offset: 0x1389004
    void ForwardReach(UnityEngine::Vector3 position);
    // private System.Void BackwardReach(UnityEngine.Vector3 position)
    // Offset: 0x13890F0
    void BackwardReach(UnityEngine::Vector3 position);
    // private System.Void MapToSolverPositions(RootMotion.FinalIK.IKSolverFullBody solver)
    // Offset: 0x13891B8
    void MapToSolverPositions(RootMotion::FinalIK::IKSolverFullBody* solver);
    // public override System.Boolean IsValid(RootMotion.FinalIK.IKSolver solver, ref System.String message)
    // Offset: 0x1387B08
    // Implemented from: RootMotion.FinalIK.IKMapping
    // Base method: System.Boolean IKMapping::IsValid(RootMotion.FinalIK.IKSolver solver, ref System.String message)
    bool IsValid(RootMotion::FinalIK::IKSolver* solver, ::Il2CppString*& message);
    // public System.Void .ctor()
    // Offset: 0x1387E00
    // Implemented from: RootMotion.FinalIK.IKMapping
    // Base method: System.Void IKMapping::.ctor()
    // Base method: System.Void Object::.ctor()
    static IKMappingSpine* New_ctor();
    // public override System.Void Initiate(RootMotion.FinalIK.IKSolverFullBody solver)
    // Offset: 0x1388260
    // Implemented from: RootMotion.FinalIK.IKMapping
    // Base method: System.Void IKMapping::Initiate(RootMotion.FinalIK.IKSolverFullBody solver)
    void Initiate(RootMotion::FinalIK::IKSolverFullBody* solver);
  }; // RootMotion.FinalIK.IKMappingSpine
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::IKMappingSpine*, "RootMotion.FinalIK", "IKMappingSpine");
#pragma pack(pop)
