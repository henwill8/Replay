// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverTrigonometric
#include "RootMotion/FinalIK/IKSolverTrigonometric.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Bone
#include "RootMotion/FinalIK/IKSolver_Bone.hpp"
// Completed includes
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Autogenerated type: RootMotion.FinalIK.IKSolverTrigonometric/TrigonometricBone
  class IKSolverTrigonometric::TrigonometricBone : public RootMotion::FinalIK::IKSolver::Bone {
    public:
    // private UnityEngine.Quaternion targetToLocalSpace
    // Offset: 0x74
    UnityEngine::Quaternion targetToLocalSpace;
    // private UnityEngine.Vector3 defaultLocalBendNormal
    // Offset: 0x84
    UnityEngine::Vector3 defaultLocalBendNormal;
    // public System.Void Initiate(UnityEngine.Vector3 childPosition, UnityEngine.Vector3 bendNormal)
    // Offset: 0x1356F7C
    void Initiate(UnityEngine::Vector3 childPosition, UnityEngine::Vector3 bendNormal);
    // public UnityEngine.Quaternion GetRotation(UnityEngine.Vector3 direction, UnityEngine.Vector3 bendNormal)
    // Offset: 0x1357B34
    UnityEngine::Quaternion GetRotation(UnityEngine::Vector3 direction, UnityEngine::Vector3 bendNormal);
    // public UnityEngine.Vector3 GetBendNormalFromCurrentRotation()
    // Offset: 0x1351930
    UnityEngine::Vector3 GetBendNormalFromCurrentRotation();
    // public System.Void .ctor()
    // Offset: 0x1357BFC
    // Implemented from: RootMotion.FinalIK.IKSolver/Bone
    // Base method: System.Void Bone::.ctor()
    // Base method: System.Void Point::.ctor()
    // Base method: System.Void Object::.ctor()
    static IKSolverTrigonometric::TrigonometricBone* New_ctor();
  }; // RootMotion.FinalIK.IKSolverTrigonometric/TrigonometricBone
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone*, "RootMotion.FinalIK", "IKSolverTrigonometric/TrigonometricBone");
#pragma pack(pop)
