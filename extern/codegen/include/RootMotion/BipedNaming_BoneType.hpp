// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BipedNaming
#include "RootMotion/BipedNaming.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: RootMotion
namespace RootMotion {
  // Autogenerated type: RootMotion.BipedNaming/BoneType
  struct BipedNaming::BoneType : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: BoneType
    constexpr BoneType(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public RootMotion.BipedNaming/BoneType Unassigned
    static constexpr const int Unassigned = 0;
    // Get static field: static public RootMotion.BipedNaming/BoneType Unassigned
    static RootMotion::BipedNaming::BoneType _get_Unassigned();
    // Set static field: static public RootMotion.BipedNaming/BoneType Unassigned
    static void _set_Unassigned(RootMotion::BipedNaming::BoneType value);
    // static field const value: static public RootMotion.BipedNaming/BoneType Spine
    static constexpr const int Spine = 1;
    // Get static field: static public RootMotion.BipedNaming/BoneType Spine
    static RootMotion::BipedNaming::BoneType _get_Spine();
    // Set static field: static public RootMotion.BipedNaming/BoneType Spine
    static void _set_Spine(RootMotion::BipedNaming::BoneType value);
    // static field const value: static public RootMotion.BipedNaming/BoneType Head
    static constexpr const int Head = 2;
    // Get static field: static public RootMotion.BipedNaming/BoneType Head
    static RootMotion::BipedNaming::BoneType _get_Head();
    // Set static field: static public RootMotion.BipedNaming/BoneType Head
    static void _set_Head(RootMotion::BipedNaming::BoneType value);
    // static field const value: static public RootMotion.BipedNaming/BoneType Arm
    static constexpr const int Arm = 3;
    // Get static field: static public RootMotion.BipedNaming/BoneType Arm
    static RootMotion::BipedNaming::BoneType _get_Arm();
    // Set static field: static public RootMotion.BipedNaming/BoneType Arm
    static void _set_Arm(RootMotion::BipedNaming::BoneType value);
    // static field const value: static public RootMotion.BipedNaming/BoneType Leg
    static constexpr const int Leg = 4;
    // Get static field: static public RootMotion.BipedNaming/BoneType Leg
    static RootMotion::BipedNaming::BoneType _get_Leg();
    // Set static field: static public RootMotion.BipedNaming/BoneType Leg
    static void _set_Leg(RootMotion::BipedNaming::BoneType value);
    // static field const value: static public RootMotion.BipedNaming/BoneType Tail
    static constexpr const int Tail = 5;
    // Get static field: static public RootMotion.BipedNaming/BoneType Tail
    static RootMotion::BipedNaming::BoneType _get_Tail();
    // Set static field: static public RootMotion.BipedNaming/BoneType Tail
    static void _set_Tail(RootMotion::BipedNaming::BoneType value);
    // static field const value: static public RootMotion.BipedNaming/BoneType Eye
    static constexpr const int Eye = 6;
    // Get static field: static public RootMotion.BipedNaming/BoneType Eye
    static RootMotion::BipedNaming::BoneType _get_Eye();
    // Set static field: static public RootMotion.BipedNaming/BoneType Eye
    static void _set_Eye(RootMotion::BipedNaming::BoneType value);
  }; // RootMotion.BipedNaming/BoneType
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(RootMotion::BipedNaming::BoneType, "RootMotion", "BipedNaming/BoneType");
#pragma pack(pop)
