// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RootMotion
namespace RootMotion {
}
// Completed forward declares
// Type namespace: RootMotion
namespace RootMotion {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: RootMotion.BipedLimbOrientations
  // [] Offset: FFFFFFFF
  class BipedLimbOrientations : public ::Il2CppObject {
    public:
    // Nested type: RootMotion::BipedLimbOrientations::LimbOrientation
    class LimbOrientation;
    // public RootMotion.BipedLimbOrientations/LimbOrientation leftArm
    // Size: 0x8
    // Offset: 0x10
    RootMotion::BipedLimbOrientations::LimbOrientation* leftArm;
    // Field size check
    static_assert(sizeof(RootMotion::BipedLimbOrientations::LimbOrientation*) == 0x8);
    // public RootMotion.BipedLimbOrientations/LimbOrientation rightArm
    // Size: 0x8
    // Offset: 0x18
    RootMotion::BipedLimbOrientations::LimbOrientation* rightArm;
    // Field size check
    static_assert(sizeof(RootMotion::BipedLimbOrientations::LimbOrientation*) == 0x8);
    // public RootMotion.BipedLimbOrientations/LimbOrientation leftLeg
    // Size: 0x8
    // Offset: 0x20
    RootMotion::BipedLimbOrientations::LimbOrientation* leftLeg;
    // Field size check
    static_assert(sizeof(RootMotion::BipedLimbOrientations::LimbOrientation*) == 0x8);
    // public RootMotion.BipedLimbOrientations/LimbOrientation rightLeg
    // Size: 0x8
    // Offset: 0x28
    RootMotion::BipedLimbOrientations::LimbOrientation* rightLeg;
    // Field size check
    static_assert(sizeof(RootMotion::BipedLimbOrientations::LimbOrientation*) == 0x8);
    // Creating value type constructor for type: BipedLimbOrientations
    BipedLimbOrientations(RootMotion::BipedLimbOrientations::LimbOrientation* leftArm_ = {}, RootMotion::BipedLimbOrientations::LimbOrientation* rightArm_ = {}, RootMotion::BipedLimbOrientations::LimbOrientation* leftLeg_ = {}, RootMotion::BipedLimbOrientations::LimbOrientation* rightLeg_ = {}) noexcept : leftArm{leftArm_}, rightArm{rightArm_}, leftLeg{leftLeg_}, rightLeg{rightLeg_} {}
    // public System.Void .ctor(RootMotion.BipedLimbOrientations/LimbOrientation leftArm, RootMotion.BipedLimbOrientations/LimbOrientation rightArm, RootMotion.BipedLimbOrientations/LimbOrientation leftLeg, RootMotion.BipedLimbOrientations/LimbOrientation rightLeg)
    // Offset: 0x1B47388
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BipedLimbOrientations* New_ctor(RootMotion::BipedLimbOrientations::LimbOrientation* leftArm, RootMotion::BipedLimbOrientations::LimbOrientation* rightArm, RootMotion::BipedLimbOrientations::LimbOrientation* leftLeg, RootMotion::BipedLimbOrientations::LimbOrientation* rightLeg) {
      static auto ___internal__logger = ::Logger::get().WithContext("RootMotion::BipedLimbOrientations::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BipedLimbOrientations*, creationType>(leftArm, rightArm, leftLeg, rightLeg)));
    }
    // static public RootMotion.BipedLimbOrientations get_UMA()
    // Offset: 0x1B47408
    static RootMotion::BipedLimbOrientations* get_UMA();
    // static public RootMotion.BipedLimbOrientations get_MaxBiped()
    // Offset: 0x1B476F8
    static RootMotion::BipedLimbOrientations* get_MaxBiped();
  }; // RootMotion.BipedLimbOrientations
  #pragma pack(pop)
  static check_size<sizeof(BipedLimbOrientations), 40 + sizeof(RootMotion::BipedLimbOrientations::LimbOrientation*)> __RootMotion_BipedLimbOrientationsSizeCheck;
  static_assert(sizeof(BipedLimbOrientations) == 0x30);
}
DEFINE_IL2CPP_ARG_TYPE(RootMotion::BipedLimbOrientations*, "RootMotion", "BipedLimbOrientations");
