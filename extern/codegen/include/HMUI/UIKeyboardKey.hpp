// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.KeyCode
#include "UnityEngine/KeyCode.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Completed forward declares
// Type namespace: HMUI
namespace HMUI {
  // Autogenerated type: HMUI.UIKeyboardKey
  class UIKeyboardKey : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.KeyCode _keyCode
    // Offset: 0x18
    UnityEngine::KeyCode keyCode;
    // private TMPro.TextMeshProUGUI _text
    // Offset: 0x20
    TMPro::TextMeshProUGUI* text;
    // private System.String _overrideText
    // Offset: 0x28
    ::Il2CppString* overrideText;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public UnityEngine.KeyCode get_keyCode()
    // Offset: 0x197FBF0
    UnityEngine::KeyCode get_keyCode();
    // protected System.Void Awake()
    // Offset: 0x197FBF8
    void Awake();
    // protected System.Void OnValidate()
    // Offset: 0x197FCBC
    void OnValidate();
    // public System.Void .ctor()
    // Offset: 0x197FDB8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static UIKeyboardKey* New_ctor();
  }; // HMUI.UIKeyboardKey
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(HMUI::UIKeyboardKey*, "HMUI", "UIKeyboardKey");
#pragma pack(pop)
