// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: TableView
  class TableView;
  // Forward declaring type: VerticalScrollIndicator
  class VerticalScrollIndicator;
  // Forward declaring type: ButtonBinder
  class ButtonBinder;
  // Forward declaring type: EventSystemListener
  class EventSystemListener;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: PointerEventData
  class PointerEventData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IVRPlatformHelper
  class IVRPlatformHelper;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: HMUI
namespace HMUI {
  // Autogenerated type: HMUI.TableViewScroller
  class TableViewScroller : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: HMUI::TableViewScroller::ScrollPositionType
    struct ScrollPositionType;
    // Nested type: HMUI::TableViewScroller::ScrollDirection
    struct ScrollDirection;
    // Autogenerated type: HMUI.TableViewScroller/ScrollDirection
    struct ScrollDirection : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: ScrollDirection
      constexpr ScrollDirection(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public HMUI.TableViewScroller/ScrollDirection None
      static constexpr const int None = 0;
      // Get static field: static public HMUI.TableViewScroller/ScrollDirection None
      static HMUI::TableViewScroller::ScrollDirection _get_None();
      // Set static field: static public HMUI.TableViewScroller/ScrollDirection None
      static void _set_None(HMUI::TableViewScroller::ScrollDirection value);
      // static field const value: static public HMUI.TableViewScroller/ScrollDirection Up
      static constexpr const int Up = 1;
      // Get static field: static public HMUI.TableViewScroller/ScrollDirection Up
      static HMUI::TableViewScroller::ScrollDirection _get_Up();
      // Set static field: static public HMUI.TableViewScroller/ScrollDirection Up
      static void _set_Up(HMUI::TableViewScroller::ScrollDirection value);
      // static field const value: static public HMUI.TableViewScroller/ScrollDirection Left
      static constexpr const int Left = 2;
      // Get static field: static public HMUI.TableViewScroller/ScrollDirection Left
      static HMUI::TableViewScroller::ScrollDirection _get_Left();
      // Set static field: static public HMUI.TableViewScroller/ScrollDirection Left
      static void _set_Left(HMUI::TableViewScroller::ScrollDirection value);
      // static field const value: static public HMUI.TableViewScroller/ScrollDirection Down
      static constexpr const int Down = 3;
      // Get static field: static public HMUI.TableViewScroller/ScrollDirection Down
      static HMUI::TableViewScroller::ScrollDirection _get_Down();
      // Set static field: static public HMUI.TableViewScroller/ScrollDirection Down
      static void _set_Down(HMUI::TableViewScroller::ScrollDirection value);
      // static field const value: static public HMUI.TableViewScroller/ScrollDirection Right
      static constexpr const int Right = 4;
      // Get static field: static public HMUI.TableViewScroller/ScrollDirection Right
      static HMUI::TableViewScroller::ScrollDirection _get_Right();
      // Set static field: static public HMUI.TableViewScroller/ScrollDirection Right
      static void _set_Right(HMUI::TableViewScroller::ScrollDirection value);
    }; // HMUI.TableViewScroller/ScrollDirection
    // private System.Action`2<HMUI.TableViewScroller,System.Single> positionDidChangeEvent
    // Offset: 0x18
    System::Action_2<HMUI::TableViewScroller*, float>* positionDidChangeEvent;
    // private HMUI.TableView _tableView
    // Offset: 0x20
    HMUI::TableView* tableView;
    // private System.Single _scrollableSize
    // Offset: 0x28
    float scrollableSize;
    // private System.Single _contentSize
    // Offset: 0x2C
    float contentSize;
    // private System.Single _viewportSize
    // Offset: 0x30
    float viewportSize;
    // private System.Single _targetPosition
    // Offset: 0x34
    float targetPosition;
    // private System.Boolean _hideScrollIndicatorIfNotNeeded
    // Offset: 0x38
    bool hideScrollIndicatorIfNotNeeded;
    // private HMUI.VerticalScrollIndicator _verticalScrollIndicator
    // Offset: 0x40
    HMUI::VerticalScrollIndicator* verticalScrollIndicator;
    // private System.Boolean _hideScrollButtonsIfNotNeeded
    // Offset: 0x48
    bool hideScrollButtonsIfNotNeeded;
    // private UnityEngine.UI.Button _pageUpButton
    // Offset: 0x50
    UnityEngine::UI::Button* pageUpButton;
    // private UnityEngine.UI.Button _pageDownButton
    // Offset: 0x58
    UnityEngine::UI::Button* pageDownButton;
    // private HMUI.ButtonBinder _buttonBinder
    // Offset: 0x60
    HMUI::ButtonBinder* buttonBinder;
    // private HMUI.EventSystemListener _eventSystemListener
    // Offset: 0x68
    HMUI::EventSystemListener* eventSystemListener;
    // private IVRPlatformHelper _platformHelper
    // Offset: 0x70
    GlobalNamespace::IVRPlatformHelper* platformHelper;
    // private HMUI.TableViewScroller/ScrollDirection _lastJoystickScrollDirection
    // Offset: 0x78
    HMUI::TableViewScroller::ScrollDirection lastJoystickScrollDirection;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // static field const value: static private System.Single kJoystickScrollSpeed
    static constexpr const float kJoystickScrollSpeed = 60;
    // Get static field: static private System.Single kJoystickScrollSpeed
    static float _get_kJoystickScrollSpeed();
    // Set static field: static private System.Single kJoystickScrollSpeed
    static void _set_kJoystickScrollSpeed(float value);
    // public System.Void add_positionDidChangeEvent(System.Action`2<HMUI.TableViewScroller,System.Single> value)
    // Offset: 0x1089994
    void add_positionDidChangeEvent(System::Action_2<HMUI::TableViewScroller*, float>* value);
    // public System.Void remove_positionDidChangeEvent(System.Action`2<HMUI.TableViewScroller,System.Single> value)
    // Offset: 0x1089A38
    void remove_positionDidChangeEvent(System::Action_2<HMUI::TableViewScroller*, float>* value);
    // public System.Single get_position()
    // Offset: 0x1088DFC
    float get_position();
    // private System.Void set_position(System.Single value)
    // Offset: 0x1089ADC
    void set_position(float value);
    // public System.Single get_targetPosition()
    // Offset: 0x1089BAC
    float get_targetPosition();
    // public System.Single get_scrollableSize()
    // Offset: 0x1089BB4
    float get_scrollableSize();
    // public System.Void Init(HMUI.TableView tableView, UnityEngine.UI.Button pageUpButton, UnityEngine.UI.Button pageDownButton, HMUI.VerticalScrollIndicator verticalScrollIndicator, HMUI.EventSystemListener eventSystemListener, IVRPlatformHelper platformHelper, System.Boolean hideScrollButtonsIfNotNeeded, System.Boolean hideScrollIndicatorIfNotNeeded)
    // Offset: 0x1088704
    void Init(HMUI::TableView* tableView, UnityEngine::UI::Button* pageUpButton, UnityEngine::UI::Button* pageDownButton, HMUI::VerticalScrollIndicator* verticalScrollIndicator, HMUI::EventSystemListener* eventSystemListener, GlobalNamespace::IVRPlatformHelper* platformHelper, bool hideScrollButtonsIfNotNeeded, bool hideScrollIndicatorIfNotNeeded);
    // protected System.Void OnDestroy()
    // Offset: 0x1089D1C
    void OnDestroy();
    // public System.Void ScrollToCellWithIdx(System.Int32 idx, HMUI.TableViewScroller/ScrollPositionType scrollPositionType, System.Boolean animated)
    // Offset: 0x1089700
    void ScrollToCellWithIdx(int idx, HMUI::TableViewScroller::ScrollPositionType scrollPositionType, bool animated);
    // protected System.Void Update()
    // Offset: 0x108A1D0
    void Update();
    // private System.Void UpdateVerticalScrollIndicator(System.Single posY)
    // Offset: 0x108A2F0
    void UpdateVerticalScrollIndicator(float posY);
    // private System.Single GetNumberOfVisibleCells()
    // Offset: 0x108A39C
    float GetNumberOfVisibleCells();
    // private System.Void RefreshScrollableSize()
    // Offset: 0x1089BBC
    void RefreshScrollableSize();
    // private System.Void HandleTableViewDidReloadData(HMUI.TableView tableView)
    // Offset: 0x108A480
    void HandleTableViewDidReloadData(HMUI::TableView* tableView);
    // private System.Void HandleTableViewDidInsertCells(HMUI.TableView tableView)
    // Offset: 0x108A4A4
    void HandleTableViewDidInsertCells(HMUI::TableView* tableView);
    // private System.Void HandleTableViewDidDeleteCells(HMUI.TableView tableView)
    // Offset: 0x108A4C8
    void HandleTableViewDidDeleteCells(HMUI::TableView* tableView);
    // private System.Void HandleTableViewDidChangeRectSize(HMUI.TableView tableView)
    // Offset: 0x108A4EC
    void HandleTableViewDidChangeRectSize(HMUI::TableView* tableView);
    // public System.Void PageScrollUp()
    // Offset: 0x108A510
    void PageScrollUp();
    // public System.Void PageScrollDown()
    // Offset: 0x108A624
    void PageScrollDown();
    // private System.Void RefreshScrollBar()
    // Offset: 0x1089F5C
    void RefreshScrollBar();
    // private System.Void HandlePointerDidEnter(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x108A748
    void HandlePointerDidEnter(UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Void HandlePointerDidExit(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x108A8E8
    void HandlePointerDidExit(UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Void HandleJoystickWasNotCenteredThisFrame(UnityEngine.Vector2 deltaPos)
    // Offset: 0x108AC70
    void HandleJoystickWasNotCenteredThisFrame(UnityEngine::Vector2 deltaPos);
    // private System.Void HandleJoystickWasCenteredThisFrame()
    // Offset: 0x108AA98
    void HandleJoystickWasCenteredThisFrame();
    // private System.Void <Init>b__27_0()
    // Offset: 0x108AE88
    void $Init$b__27_0();
    // private System.Void <Init>b__27_1()
    // Offset: 0x108AEAC
    void $Init$b__27_1();
    // public System.Void .ctor()
    // Offset: 0x108AE80
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static TableViewScroller* New_ctor();
  }; // HMUI.TableViewScroller
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(HMUI::TableViewScroller*, "HMUI", "TableViewScroller");
DEFINE_IL2CPP_ARG_TYPE(HMUI::TableViewScroller::ScrollDirection, "HMUI", "TableViewScroller/ScrollDirection");
#pragma pack(pop)
