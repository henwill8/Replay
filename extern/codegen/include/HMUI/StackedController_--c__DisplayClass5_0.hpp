// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.StackedController
#include "HMUI/StackedController.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: ViewController
  class ViewController;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Completed forward declares
// Type namespace: HMUI
namespace HMUI {
  // Autogenerated type: HMUI.StackedController/<>c__DisplayClass5_0
  class StackedController::$$c__DisplayClass5_0 : public ::Il2CppObject {
    public:
    // public System.Int32 numberOfViewControllersToPop
    // Offset: 0x10
    int numberOfViewControllersToPop;
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return numberOfViewControllersToPop;
    }
    // System.Void <PopViewControllers>g__AnimationLayouter|0(System.Single t, HMUI.ViewController[] viewControllers, System.Collections.Generic.HashSet`1<HMUI.ViewController> removingViewControllers)
    // Offset: 0x1086A80
    void $PopViewControllers$g__AnimationLayouter_0(float t, ::Array<HMUI::ViewController*>* viewControllers, System::Collections::Generic::HashSet_1<HMUI::ViewController*>* removingViewControllers);
    // public System.Void .ctor()
    // Offset: 0x1086920
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static StackedController::$$c__DisplayClass5_0* New_ctor();
  }; // HMUI.StackedController/<>c__DisplayClass5_0
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(HMUI::StackedController::$$c__DisplayClass5_0*, "HMUI", "StackedController/<>c__DisplayClass5_0");
#pragma pack(pop)
