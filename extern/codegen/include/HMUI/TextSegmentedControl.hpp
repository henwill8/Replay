// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: HMUI.SegmentedControl/IDataSource
#include "HMUI/SegmentedControl_IDataSource.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: TextSegmentedControlCellBase
  class TextSegmentedControlCellBase;
  // Forward declaring type: SegmentedControlCell
  class SegmentedControlCell;
}
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: DiContainer
  class DiContainer;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Completed forward declares
// Type namespace: HMUI
namespace HMUI {
  // Autogenerated type: HMUI.TextSegmentedControl
  class TextSegmentedControl : public HMUI::SegmentedControl, public HMUI::SegmentedControl::IDataSource {
    public:
    // private System.Single _fontSize
    // Offset: 0x4C
    float fontSize;
    // private System.Single _padding
    // Offset: 0x50
    float padding;
    // private HMUI.TextSegmentedControlCellBase _firstCellPrefab
    // Offset: 0x58
    HMUI::TextSegmentedControlCellBase* firstCellPrefab;
    // private HMUI.TextSegmentedControlCellBase _lastCellPrefab
    // Offset: 0x60
    HMUI::TextSegmentedControlCellBase* lastCellPrefab;
    // private HMUI.TextSegmentedControlCellBase _singleCellPrefab
    // Offset: 0x68
    HMUI::TextSegmentedControlCellBase* singleCellPrefab;
    // private HMUI.TextSegmentedControlCellBase _middleCellPrefab
    // Offset: 0x70
    HMUI::TextSegmentedControlCellBase* middleCellPrefab;
    // private Zenject.DiContainer _container
    // Offset: 0x78
    Zenject::DiContainer* container;
    // private System.String[] _texts
    // Offset: 0x80
    ::Array<::Il2CppString*>* texts;
    // public System.Void SetTexts(System.String[] texts)
    // Offset: 0x10EA0C4
    void SetTexts(::Array<::Il2CppString*>* texts);
    // private HMUI.TextSegmentedControlCellBase InstantiateCell(UnityEngine.Object prefab)
    // Offset: 0x10EA28C
    HMUI::TextSegmentedControlCellBase* InstantiateCell(UnityEngine::Object* prefab);
    // public System.Int32 NumberOfCells()
    // Offset: 0x10EA104
    // Implemented from: HMUI.SegmentedControl/IDataSource
    // Base method: System.Int32 IDataSource::NumberOfCells()
    int NumberOfCells();
    // public HMUI.SegmentedControlCell CellForCellNumber(System.Int32 cellNumber)
    // Offset: 0x10EA11C
    // Implemented from: HMUI.SegmentedControl/IDataSource
    // Base method: HMUI.SegmentedControlCell IDataSource::CellForCellNumber(System.Int32 cellNumber)
    HMUI::SegmentedControlCell* CellForCellNumber(int cellNumber);
    // public System.Void .ctor()
    // Offset: 0x10EA444
    // Implemented from: HMUI.SegmentedControl
    // Base method: System.Void SegmentedControl::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static TextSegmentedControl* New_ctor();
  }; // HMUI.TextSegmentedControl
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(HMUI::TextSegmentedControl*, "HMUI", "TextSegmentedControl");
#pragma pack(pop)
