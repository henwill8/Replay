// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System
namespace System {
  // Autogenerated type: System.UriFormat
  struct UriFormat : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: UriFormat
    constexpr UriFormat(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.UriFormat UriEscaped
    static constexpr const int UriEscaped = 1;
    // Get static field: static public System.UriFormat UriEscaped
    static System::UriFormat _get_UriEscaped();
    // Set static field: static public System.UriFormat UriEscaped
    static void _set_UriEscaped(System::UriFormat value);
    // static field const value: static public System.UriFormat Unescaped
    static constexpr const int Unescaped = 2;
    // Get static field: static public System.UriFormat Unescaped
    static System::UriFormat _get_Unescaped();
    // Set static field: static public System.UriFormat Unescaped
    static void _set_Unescaped(System::UriFormat value);
    // static field const value: static public System.UriFormat SafeUnescaped
    static constexpr const int SafeUnescaped = 3;
    // Get static field: static public System.UriFormat SafeUnescaped
    static System::UriFormat _get_SafeUnescaped();
    // Set static field: static public System.UriFormat SafeUnescaped
    static void _set_SafeUnescaped(System::UriFormat value);
  }; // System.UriFormat
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::UriFormat, "System", "UriFormat");
#pragma pack(pop)
