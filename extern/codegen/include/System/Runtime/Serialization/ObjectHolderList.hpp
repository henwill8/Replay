// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: ObjectHolder
  class ObjectHolder;
  // Forward declaring type: ObjectHolderListEnumerator
  class ObjectHolderListEnumerator;
}
// Completed forward declares
// Type namespace: System.Runtime.Serialization
namespace System::Runtime::Serialization {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Serialization.ObjectHolderList
  // [] Offset: FFFFFFFF
  class ObjectHolderList : public ::Il2CppObject {
    public:
    // System.Runtime.Serialization.ObjectHolder[] m_values
    // Size: 0x8
    // Offset: 0x10
    ::Array<System::Runtime::Serialization::ObjectHolder*>* m_values;
    // Field size check
    static_assert(sizeof(::Array<System::Runtime::Serialization::ObjectHolder*>*) == 0x8);
    // System.Int32 m_count
    // Size: 0x4
    // Offset: 0x18
    int m_count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: ObjectHolderList
    ObjectHolderList(::Array<System::Runtime::Serialization::ObjectHolder*>* m_values_ = {}, int m_count_ = {}) noexcept : m_values{m_values_}, m_count{m_count_} {}
    // System.Void .ctor(System.Int32 startingSize)
    // Offset: 0x1555BB8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObjectHolderList* New_ctor(int startingSize) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolderList::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObjectHolderList*, creationType>(startingSize)));
    }
    // System.Void Add(System.Runtime.Serialization.ObjectHolder value)
    // Offset: 0x1555C34
    void Add(System::Runtime::Serialization::ObjectHolder* value);
    // System.Runtime.Serialization.ObjectHolderListEnumerator GetFixupEnumerator()
    // Offset: 0x1555D90
    System::Runtime::Serialization::ObjectHolderListEnumerator* GetFixupEnumerator();
    // private System.Void EnlargeArray()
    // Offset: 0x1555CEC
    void EnlargeArray();
    // System.Int32 get_Version()
    // Offset: 0x1555E5C
    int get_Version();
    // System.Int32 get_Count()
    // Offset: 0x1555E64
    int get_Count();
    // System.Void .ctor()
    // Offset: 0x1555BB0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObjectHolderList* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolderList::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObjectHolderList*, creationType>()));
    }
  }; // System.Runtime.Serialization.ObjectHolderList
  #pragma pack(pop)
  static check_size<sizeof(ObjectHolderList), 24 + sizeof(int)> __System_Runtime_Serialization_ObjectHolderListSizeCheck;
  static_assert(sizeof(ObjectHolderList) == 0x1C);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Serialization::ObjectHolderList*, "System.Runtime.Serialization", "ObjectHolderList");
