// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Completed includes
// Type namespace: System.Runtime.Serialization.Formatters.Binary
namespace System::Runtime::Serialization::Formatters::Binary {
  // Autogenerated type: System.Runtime.Serialization.Formatters.Binary.IntSizedArray
  class IntSizedArray : public ::Il2CppObject, public System::ICloneable {
    public:
    // System.Int32[] objects
    // Offset: 0x10
    ::Array<int>* objects;
    // System.Int32[] negObjects
    // Offset: 0x18
    ::Array<int>* negObjects;
    // private System.Void .ctor(System.Runtime.Serialization.Formatters.Binary.IntSizedArray sizedArray)
    // Offset: 0xE2A7D4
    static IntSizedArray* New_ctor(System::Runtime::Serialization::Formatters::Binary::IntSizedArray* sizedArray);
    // System.Int32 get_Item(System.Int32 index)
    // Offset: 0xE2A958
    int get_Item(int index);
    // System.Void set_Item(System.Int32 index, System.Int32 value)
    // Offset: 0xE2A9DC
    void set_Item(int index, int value);
    // System.Void IncreaseCapacity(System.Int32 index)
    // Offset: 0xE2AA9C
    void IncreaseCapacity(int index);
    // public System.Void .ctor()
    // Offset: 0xE2A74C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static IntSizedArray* New_ctor();
    // public System.Object Clone()
    // Offset: 0xE2A8F8
    // Implemented from: System.ICloneable
    // Base method: System.Object ICloneable::Clone()
    ::Il2CppObject* Clone();
  }; // System.Runtime.Serialization.Formatters.Binary.IntSizedArray
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Serialization::Formatters::Binary::IntSizedArray*, "System.Runtime.Serialization.Formatters.Binary", "IntSizedArray");
#pragma pack(pop)
