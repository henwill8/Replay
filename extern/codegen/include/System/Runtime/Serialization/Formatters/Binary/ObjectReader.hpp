// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization::Formatters::Binary
namespace System::Runtime::Serialization::Formatters::Binary {
  // Forward declaring type: InternalFE
  class InternalFE;
  // Forward declaring type: SerObjectInfoInit
  class SerObjectInfoInit;
  // Forward declaring type: SerStack
  class SerStack;
  // Forward declaring type: IntSizedArray
  class IntSizedArray;
  // Forward declaring type: NameCache
  class NameCache;
  // Forward declaring type: __BinaryParser
  class __BinaryParser;
  // Forward declaring type: ReadObjectInfo
  class ReadObjectInfo;
  // Forward declaring type: ParseRecord
  class ParseRecord;
  // Forward declaring type: BinaryAssemblyInfo
  class BinaryAssemblyInfo;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: ISurrogateSelector
  class ISurrogateSelector;
  // Forward declaring type: ObjectManager
  class ObjectManager;
  // Forward declaring type: SerializationBinder
  class SerializationBinder;
  // Forward declaring type: IFormatterConverter
  class IFormatterConverter;
}
// Forward declaring namespace: System::Runtime::Remoting::Messaging
namespace System::Runtime::Remoting::Messaging {
  // Forward declaring type: Header
  class Header;
  // Forward declaring type: HeaderHandler
  class HeaderHandler;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: Assembly
  class Assembly;
  // Forward declaring type: AssemblyName
  class AssemblyName;
}
// Completed forward declares
// Type namespace: System.Runtime.Serialization.Formatters.Binary
namespace System::Runtime::Serialization::Formatters::Binary {
  // Autogenerated type: System.Runtime.Serialization.Formatters.Binary.ObjectReader
  class ObjectReader : public ::Il2CppObject {
    public:
    // Nested type: System::Runtime::Serialization::Formatters::Binary::ObjectReader::TypeNAssembly
    class TypeNAssembly;
    // Nested type: System::Runtime::Serialization::Formatters::Binary::ObjectReader::TopLevelAssemblyTypeResolver
    class TopLevelAssemblyTypeResolver;
    // System.IO.Stream m_stream
    // Offset: 0x10
    System::IO::Stream* m_stream;
    // System.Runtime.Serialization.ISurrogateSelector m_surrogates
    // Offset: 0x18
    System::Runtime::Serialization::ISurrogateSelector* m_surrogates;
    // System.Runtime.Serialization.StreamingContext m_context
    // Offset: 0x20
    System::Runtime::Serialization::StreamingContext m_context;
    // System.Runtime.Serialization.ObjectManager m_objectManager
    // Offset: 0x30
    System::Runtime::Serialization::ObjectManager* m_objectManager;
    // System.Runtime.Serialization.Formatters.Binary.InternalFE formatterEnums
    // Offset: 0x38
    System::Runtime::Serialization::Formatters::Binary::InternalFE* formatterEnums;
    // System.Runtime.Serialization.SerializationBinder m_binder
    // Offset: 0x40
    System::Runtime::Serialization::SerializationBinder* m_binder;
    // System.Int64 topId
    // Offset: 0x48
    int64_t topId;
    // System.Boolean bSimpleAssembly
    // Offset: 0x50
    bool bSimpleAssembly;
    // System.Object handlerObject
    // Offset: 0x58
    ::Il2CppObject* handlerObject;
    // System.Object m_topObject
    // Offset: 0x60
    ::Il2CppObject* m_topObject;
    // System.Runtime.Remoting.Messaging.Header[] headers
    // Offset: 0x68
    ::Array<System::Runtime::Remoting::Messaging::Header*>* headers;
    // System.Runtime.Remoting.Messaging.HeaderHandler handler
    // Offset: 0x70
    System::Runtime::Remoting::Messaging::HeaderHandler* handler;
    // System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit serObjectInfoInit
    // Offset: 0x78
    System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit;
    // System.Runtime.Serialization.IFormatterConverter m_formatterConverter
    // Offset: 0x80
    System::Runtime::Serialization::IFormatterConverter* m_formatterConverter;
    // System.Runtime.Serialization.Formatters.Binary.SerStack stack
    // Offset: 0x88
    System::Runtime::Serialization::Formatters::Binary::SerStack* stack;
    // private System.Runtime.Serialization.Formatters.Binary.SerStack valueFixupStack
    // Offset: 0x90
    System::Runtime::Serialization::Formatters::Binary::SerStack* valueFixupStack;
    // System.Object[] crossAppDomainArray
    // Offset: 0x98
    ::Array<::Il2CppObject*>* crossAppDomainArray;
    // private System.Boolean bFullDeserialization
    // Offset: 0xA0
    bool bFullDeserialization;
    // private System.Boolean bOldFormatDetected
    // Offset: 0xA1
    bool bOldFormatDetected;
    // private System.Runtime.Serialization.Formatters.Binary.IntSizedArray valTypeObjectIdTable
    // Offset: 0xA8
    System::Runtime::Serialization::Formatters::Binary::IntSizedArray* valTypeObjectIdTable;
    // private System.Runtime.Serialization.Formatters.Binary.NameCache typeCache
    // Offset: 0xB0
    System::Runtime::Serialization::Formatters::Binary::NameCache* typeCache;
    // private System.String previousAssemblyString
    // Offset: 0xB8
    ::Il2CppString* previousAssemblyString;
    // private System.String previousName
    // Offset: 0xC0
    ::Il2CppString* previousName;
    // private System.Type previousType
    // Offset: 0xC8
    System::Type* previousType;
    // private System.Runtime.Serialization.Formatters.Binary.SerStack get_ValueFixupStack()
    // Offset: 0xE2BFEC
    System::Runtime::Serialization::Formatters::Binary::SerStack* get_ValueFixupStack();
    // System.Object get_TopObject()
    // Offset: 0xE2C070
    ::Il2CppObject* get_TopObject();
    // System.Void set_TopObject(System.Object value)
    // Offset: 0xE2C078
    void set_TopObject(::Il2CppObject* value);
    // System.Void .ctor(System.IO.Stream stream, System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context, System.Runtime.Serialization.Formatters.Binary.InternalFE formatterEnums, System.Runtime.Serialization.SerializationBinder binder)
    // Offset: 0xE27274
    static ObjectReader* New_ctor(System::IO::Stream* stream, System::Runtime::Serialization::ISurrogateSelector* selector, System::Runtime::Serialization::StreamingContext context, System::Runtime::Serialization::Formatters::Binary::InternalFE* formatterEnums, System::Runtime::Serialization::SerializationBinder* binder);
    // System.Object Deserialize(System.Runtime.Remoting.Messaging.HeaderHandler handler, System.Runtime.Serialization.Formatters.Binary.__BinaryParser serParser, System.Boolean fCheck)
    // Offset: 0xE273CC
    ::Il2CppObject* Deserialize(System::Runtime::Remoting::Messaging::HeaderHandler* handler, System::Runtime::Serialization::Formatters::Binary::__BinaryParser* serParser, bool fCheck);
    // private System.Boolean HasSurrogate(System.Type t)
    // Offset: 0xE2C0C0
    bool HasSurrogate(System::Type* t);
    // private System.Void CheckSerializable(System.Type t)
    // Offset: 0xE2C1AC
    void CheckSerializable(System::Type* t);
    // private System.Void InitFullDeserialization()
    // Offset: 0xE2C318
    void InitFullDeserialization();
    // System.Object CrossAppDomainArray(System.Int32 index)
    // Offset: 0xE2C434
    ::Il2CppObject* CrossAppDomainArray(int index);
    // System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo CreateReadObjectInfo(System.Type objectType)
    // Offset: 0xE2B434
    System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo* CreateReadObjectInfo(System::Type* objectType);
    // System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo CreateReadObjectInfo(System.Type objectType, System.String[] memberNames, System.Type[] memberTypes)
    // Offset: 0xE2B7F0
    System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo* CreateReadObjectInfo(System::Type* objectType, ::Array<::Il2CppString*>* memberNames, ::Array<System::Type*>* memberTypes);
    // System.Void Parse(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2C470
    void Parse(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseError(System.Runtime.Serialization.Formatters.Binary.ParseRecord processing, System.Runtime.Serialization.Formatters.Binary.ParseRecord onStack)
    // Offset: 0xE2D1D4
    void ParseError(System::Runtime::Serialization::Formatters::Binary::ParseRecord* processing, System::Runtime::Serialization::Formatters::Binary::ParseRecord* onStack);
    // private System.Void ParseSerializedStreamHeader(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2C620
    void ParseSerializedStreamHeader(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseSerializedStreamHeaderEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2C63C
    void ParseSerializedStreamHeaderEnd(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseObject(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2C658
    void ParseObject(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseObjectEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2C9A0
    void ParseObjectEnd(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseArray(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2D430
    void ParseArray(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void NextRectangleMap(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2DB4C
    void NextRectangleMap(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseArrayMember(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2DC2C
    void ParseArrayMember(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseArrayMemberEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2E428
    void ParseArrayMemberEnd(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseMember(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2CBF4
    void ParseMember(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseMemberEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr)
    // Offset: 0xE2D0FC
    void ParseMemberEnd(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr);
    // private System.Void ParseString(System.Runtime.Serialization.Formatters.Binary.ParseRecord pr, System.Runtime.Serialization.Formatters.Binary.ParseRecord parentPr)
    // Offset: 0xE2E3EC
    void ParseString(System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr, System::Runtime::Serialization::Formatters::Binary::ParseRecord* parentPr);
    // private System.Void RegisterObject(System.Object obj, System.Runtime.Serialization.Formatters.Binary.ParseRecord pr, System.Runtime.Serialization.Formatters.Binary.ParseRecord objectPr)
    // Offset: 0xE2DB44
    void RegisterObject(::Il2CppObject* obj, System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr, System::Runtime::Serialization::Formatters::Binary::ParseRecord* objectPr);
    // private System.Void RegisterObject(System.Object obj, System.Runtime.Serialization.Formatters.Binary.ParseRecord pr, System.Runtime.Serialization.Formatters.Binary.ParseRecord objectPr, System.Boolean bIsString)
    // Offset: 0xE2E44C
    void RegisterObject(::Il2CppObject* obj, System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr, System::Runtime::Serialization::Formatters::Binary::ParseRecord* objectPr, bool bIsString);
    // System.Int64 GetId(System.Int64 objectId)
    // Offset: 0xE2E578
    int64_t GetId(int64_t objectId);
    // System.Type Bind(System.String assemblyString, System.String typeString)
    // Offset: 0xE2E670
    System::Type* Bind(::Il2CppString* assemblyString, ::Il2CppString* typeString);
    // System.Type FastBindToType(System.String assemblyName, System.String typeName)
    // Offset: 0xE2E6D8
    System::Type* FastBindToType(::Il2CppString* assemblyName, ::Il2CppString* typeName);
    // static private System.Reflection.Assembly ResolveSimpleAssemblyName(System.Reflection.AssemblyName assemblyName)
    // Offset: 0xE2E9C0
    static System::Reflection::Assembly* ResolveSimpleAssemblyName(System::Reflection::AssemblyName* assemblyName);
    // static private System.Void GetSimplyNamedTypeFromAssembly(System.Reflection.Assembly assm, System.String typeName, ref System.Type type)
    // Offset: 0xE2EA2C
    static void GetSimplyNamedTypeFromAssembly(System::Reflection::Assembly* assm, ::Il2CppString* typeName, System::Type*& type);
    // System.Type GetType(System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo assemblyInfo, System.String name)
    // Offset: 0xE26CE0
    System::Type* GetType(System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo* assemblyInfo, ::Il2CppString* name);
    // static private System.Void CheckTypeForwardedTo(System.Reflection.Assembly sourceAssembly, System.Reflection.Assembly destAssembly, System.Type resolvedType)
    // Offset: 0xE2EC70
    static void CheckTypeForwardedTo(System::Reflection::Assembly* sourceAssembly, System::Reflection::Assembly* destAssembly, System::Type* resolvedType);
  }; // System.Runtime.Serialization.Formatters.Binary.ObjectReader
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Serialization::Formatters::Binary::ObjectReader*, "System.Runtime.Serialization.Formatters.Binary", "ObjectReader");
#pragma pack(pop)
