// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.IFormatterConverter
#include "System/Runtime/Serialization/IFormatterConverter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Runtime.Serialization
namespace System::Runtime::Serialization {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Serialization.FormatterConverter
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CAB348
  class FormatterConverter : public ::Il2CppObject/*, public System::Runtime::Serialization::IFormatterConverter*/ {
    public:
    // Creating value type constructor for type: FormatterConverter
    FormatterConverter() noexcept {}
    // Creating interface conversion operator: operator System::Runtime::Serialization::IFormatterConverter
    operator System::Runtime::Serialization::IFormatterConverter() noexcept {
      return *reinterpret_cast<System::Runtime::Serialization::IFormatterConverter*>(this);
    }
    // public System.Void .ctor()
    // Offset: 0x158C338
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FormatterConverter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterConverter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FormatterConverter*, creationType>()));
    }
    // public System.Object Convert(System.Object value, System.Type type)
    // Offset: 0x158C340
    // Implemented from: System.Runtime.Serialization.IFormatterConverter
    // Base method: System.Object IFormatterConverter::Convert(System.Object value, System.Type type)
    ::Il2CppObject* Convert(::Il2CppObject* value, System::Type* type);
    // public System.Boolean ToBoolean(System.Object value)
    // Offset: 0x158C42C
    // Implemented from: System.Runtime.Serialization.IFormatterConverter
    // Base method: System.Boolean IFormatterConverter::ToBoolean(System.Object value)
    bool ToBoolean(::Il2CppObject* value);
    // public System.Int32 ToInt32(System.Object value)
    // Offset: 0x158C508
    // Implemented from: System.Runtime.Serialization.IFormatterConverter
    // Base method: System.Int32 IFormatterConverter::ToInt32(System.Object value)
    int ToInt32(::Il2CppObject* value);
    // public System.Int64 ToInt64(System.Object value)
    // Offset: 0x158C5E4
    // Implemented from: System.Runtime.Serialization.IFormatterConverter
    // Base method: System.Int64 IFormatterConverter::ToInt64(System.Object value)
    int64_t ToInt64(::Il2CppObject* value);
    // public System.Single ToSingle(System.Object value)
    // Offset: 0x158C6C0
    // Implemented from: System.Runtime.Serialization.IFormatterConverter
    // Base method: System.Single IFormatterConverter::ToSingle(System.Object value)
    float ToSingle(::Il2CppObject* value);
    // public System.String ToString(System.Object value)
    // Offset: 0x158C79C
    // Implemented from: System.Runtime.Serialization.IFormatterConverter
    // Base method: System.String IFormatterConverter::ToString(System.Object value)
    ::Il2CppString* ToString(::Il2CppObject* value);
  }; // System.Runtime.Serialization.FormatterConverter
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Serialization::FormatterConverter*, "System.Runtime.Serialization", "FormatterConverter");
