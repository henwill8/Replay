// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: FixupHolder
  class FixupHolder;
}
// Completed forward declares
// Type namespace: System.Runtime.Serialization
namespace System::Runtime::Serialization {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Serialization.FixupHolderList
  // [] Offset: FFFFFFFF
  class FixupHolderList : public ::Il2CppObject {
    public:
    // System.Runtime.Serialization.FixupHolder[] m_values
    // Size: 0x8
    // Offset: 0x10
    ::Array<System::Runtime::Serialization::FixupHolder*>* m_values;
    // Field size check
    static_assert(sizeof(::Array<System::Runtime::Serialization::FixupHolder*>*) == 0x8);
    // System.Int32 m_count
    // Size: 0x4
    // Offset: 0x18
    int m_count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: FixupHolderList
    FixupHolderList(::Array<System::Runtime::Serialization::FixupHolder*>* m_values_ = {}, int m_count_ = {}) noexcept : m_values{m_values_}, m_count{m_count_} {}
    // System.Void .ctor(System.Int32 startingSize)
    // Offset: 0x158C160
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FixupHolderList* New_ctor(int startingSize) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FixupHolderList::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FixupHolderList*, creationType>(startingSize)));
    }
    // System.Void Add(System.Runtime.Serialization.FixupHolder fixup)
    // Offset: 0x158C1DC
    void Add(System::Runtime::Serialization::FixupHolder* fixup);
    // private System.Void EnlargeArray()
    // Offset: 0x158C294
    void EnlargeArray();
    // System.Void .ctor()
    // Offset: 0x158C158
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FixupHolderList* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FixupHolderList::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FixupHolderList*, creationType>()));
    }
  }; // System.Runtime.Serialization.FixupHolderList
  #pragma pack(pop)
  static check_size<sizeof(FixupHolderList), 24 + sizeof(int)> __System_Runtime_Serialization_FixupHolderListSizeCheck;
  static_assert(sizeof(FixupHolderList) == 0x1C);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Serialization::FixupHolderList*, "System.Runtime.Serialization", "FixupHolderList");
