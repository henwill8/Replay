// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.ICriticalNotifyCompletion
#include "System/Runtime/CompilerServices/ICriticalNotifyCompletion.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // Autogenerated type: System.Runtime.CompilerServices.TaskAwaiter
  struct TaskAwaiter : public System::ValueType, public System::Runtime::CompilerServices::ICriticalNotifyCompletion {
    public:
    // private readonly System.Threading.Tasks.Task m_task
    // Offset: 0x0
    System::Threading::Tasks::Task* m_task;
    // Creating value type constructor for type: TaskAwaiter
    constexpr TaskAwaiter(System::Threading::Tasks::Task* m_task_ = {}) noexcept : m_task{m_task_} {}
    // Creating conversion operator: operator System::Threading::Tasks::Task*
    constexpr operator System::Threading::Tasks::Task*() const noexcept {
      return m_task;
    }
    // System.Void .ctor(System.Threading.Tasks.Task task)
    // Offset: 0xA424EC
    // ABORTED: conflicts with another method.  TaskAwaiter(System::Threading::Tasks::Task* task);
    // public System.Boolean get_IsCompleted()
    // Offset: 0xA424F4
    bool get_IsCompleted();
    // public System.Void GetResult()
    // Offset: 0xA42520
    void GetResult();
    // static System.Void ValidateEnd(System.Threading.Tasks.Task task)
    // Offset: 0x116701C
    static void ValidateEnd(System::Threading::Tasks::Task* task);
    // static private System.Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task task)
    // Offset: 0x116706C
    static void HandleNonSuccessAndDebuggerNotification(System::Threading::Tasks::Task* task);
    // static private System.Void ThrowForNonSuccess(System.Threading.Tasks.Task task)
    // Offset: 0x11670DC
    static void ThrowForNonSuccess(System::Threading::Tasks::Task* task);
    // static System.Void OnCompletedInternal(System.Threading.Tasks.Task task, System.Action continuation, System.Boolean continueOnCapturedContext, System.Boolean flowExecutionContext)
    // Offset: 0x1166F48
    static void OnCompletedInternal(System::Threading::Tasks::Task* task, System::Action* continuation, bool continueOnCapturedContext, bool flowExecutionContext);
    // public System.Void UnsafeOnCompleted(System.Action continuation)
    // Offset: 0xA42510
    // Implemented from: System.Runtime.CompilerServices.ICriticalNotifyCompletion
    // Base method: System.Void ICriticalNotifyCompletion::UnsafeOnCompleted(System.Action continuation)
    void UnsafeOnCompleted(System::Action* continuation);
  }; // System.Runtime.CompilerServices.TaskAwaiter
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::CompilerServices::TaskAwaiter, "System.Runtime.CompilerServices", "TaskAwaiter");
#pragma pack(pop)
