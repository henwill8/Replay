// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.IObjectReference
#include "System/Runtime/Serialization/IObjectReference.hpp"
// Including type: System.Runtime.Serialization.ISerializable
#include "System/Runtime/Serialization/ISerializable.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting
namespace System::Runtime::Remoting {
  // Forward declaring type: IChannelInfo
  class IChannelInfo;
  // Forward declaring type: IRemotingTypeInfo
  class IRemotingTypeInfo;
  // Forward declaring type: IEnvoyInfo
  class IEnvoyInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting
namespace System::Runtime::Remoting {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.ObjRef
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CAB7BC
  class ObjRef : public ::Il2CppObject/*, public System::Runtime::Serialization::IObjectReference, public System::Runtime::Serialization::ISerializable*/ {
    public:
    // private System.Runtime.Remoting.IChannelInfo channel_info
    // Size: 0x8
    // Offset: 0x10
    System::Runtime::Remoting::IChannelInfo* channel_info;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::IChannelInfo*) == 0x8);
    // private System.String uri
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* uri;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Runtime.Remoting.IRemotingTypeInfo typeInfo
    // Size: 0x8
    // Offset: 0x20
    System::Runtime::Remoting::IRemotingTypeInfo* typeInfo;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::IRemotingTypeInfo*) == 0x8);
    // private System.Runtime.Remoting.IEnvoyInfo envoyInfo
    // Size: 0x8
    // Offset: 0x28
    System::Runtime::Remoting::IEnvoyInfo* envoyInfo;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::IEnvoyInfo*) == 0x8);
    // private System.Int32 flags
    // Size: 0x4
    // Offset: 0x30
    int flags;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: flags and: serverType
    char __padding4[0x4] = {};
    // private System.Type _serverType
    // Size: 0x8
    // Offset: 0x38
    System::Type* serverType;
    // Field size check
    static_assert(sizeof(System::Type*) == 0x8);
    // Creating value type constructor for type: ObjRef
    ObjRef(System::Runtime::Remoting::IChannelInfo* channel_info_ = {}, ::Il2CppString* uri_ = {}, System::Runtime::Remoting::IRemotingTypeInfo* typeInfo_ = {}, System::Runtime::Remoting::IEnvoyInfo* envoyInfo_ = {}, int flags_ = {}, System::Type* serverType_ = {}) noexcept : channel_info{channel_info_}, uri{uri_}, typeInfo{typeInfo_}, envoyInfo{envoyInfo_}, flags{flags_}, serverType{serverType_} {}
    // Creating interface conversion operator: operator System::Runtime::Serialization::IObjectReference
    operator System::Runtime::Serialization::IObjectReference() noexcept {
      return *reinterpret_cast<System::Runtime::Serialization::IObjectReference*>(this);
    }
    // Creating interface conversion operator: operator System::Runtime::Serialization::ISerializable
    operator System::Runtime::Serialization::ISerializable() noexcept {
      return *reinterpret_cast<System::Runtime::Serialization::ISerializable*>(this);
    }
    // Get static field: static private System.Int32 MarshalledObjectRef
    static int _get_MarshalledObjectRef();
    // Set static field: static private System.Int32 MarshalledObjectRef
    static void _set_MarshalledObjectRef(int value);
    // Get static field: static private System.Int32 WellKnowObjectRef
    static int _get_WellKnowObjectRef();
    // Set static field: static private System.Int32 WellKnowObjectRef
    static void _set_WellKnowObjectRef(int value);
    // System.Void .ctor(System.String uri, System.Runtime.Remoting.IChannelInfo cinfo)
    // Offset: 0x157FCB8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObjRef* New_ctor(::Il2CppString* uri, System::Runtime::Remoting::IChannelInfo* cinfo) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::ObjRef::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObjRef*, creationType>(uri, cinfo)));
    }
    // System.Runtime.Remoting.ObjRef DeserializeInTheCurrentDomain(System.Int32 domainId, System.Byte[] tInfo)
    // Offset: 0x157FD08
    System::Runtime::Remoting::ObjRef* DeserializeInTheCurrentDomain(int domainId, ::Array<uint8_t>* tInfo);
    // System.Byte[] SerializeType()
    // Offset: 0x157FE30
    ::Array<uint8_t>* SerializeType();
    // System.Void .ctor(System.Type type, System.String url, System.Object remoteChannelData)
    // Offset: 0x157FED0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObjRef* New_ctor(System::Type* type, ::Il2CppString* url, ::Il2CppObject* remoteChannelData) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::ObjRef::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObjRef*, creationType>(type, url, remoteChannelData)));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x15803FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObjRef* New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::ObjRef::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObjRef*, creationType>(info, context)));
    }
    // System.Boolean get_IsReferenceToWellKnow()
    // Offset: 0x1580868
    bool get_IsReferenceToWellKnow();
    // public System.Runtime.Remoting.IChannelInfo get_ChannelInfo()
    // Offset: 0x15808E0
    System::Runtime::Remoting::IChannelInfo* get_ChannelInfo();
    // public System.Runtime.Remoting.IEnvoyInfo get_EnvoyInfo()
    // Offset: 0x15808E8
    System::Runtime::Remoting::IEnvoyInfo* get_EnvoyInfo();
    // public System.Void set_EnvoyInfo(System.Runtime.Remoting.IEnvoyInfo value)
    // Offset: 0x15808F0
    void set_EnvoyInfo(System::Runtime::Remoting::IEnvoyInfo* value);
    // public System.Runtime.Remoting.IRemotingTypeInfo get_TypeInfo()
    // Offset: 0x15808F8
    System::Runtime::Remoting::IRemotingTypeInfo* get_TypeInfo();
    // public System.Void set_TypeInfo(System.Runtime.Remoting.IRemotingTypeInfo value)
    // Offset: 0x1580900
    void set_TypeInfo(System::Runtime::Remoting::IRemotingTypeInfo* value);
    // public System.String get_URI()
    // Offset: 0x1580908
    ::Il2CppString* get_URI();
    // public System.Void set_URI(System.String value)
    // Offset: 0x1580910
    void set_URI(::Il2CppString* value);
    // System.Void UpdateChannelInfo()
    // Offset: 0x157FC50
    void UpdateChannelInfo();
    // System.Type get_ServerType()
    // Offset: 0x1580BAC
    System::Type* get_ServerType();
    // static private System.Void .cctor()
    // Offset: 0x1580CFC
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x157FC28
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObjRef* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::ObjRef::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObjRef*, creationType>()));
    }
    // public System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1580918
    // Implemented from: System.Runtime.Serialization.ISerializable
    // Base method: System.Void ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    void GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // Creating proxy method: System_Runtime_Serialization_ISerializable_GetObjectData
    // Maps to method: GetObjectData
    void System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // public System.Object GetRealObject(System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1580A88
    // Implemented from: System.Runtime.Serialization.IObjectReference
    // Base method: System.Object IObjectReference::GetRealObject(System.Runtime.Serialization.StreamingContext context)
    ::Il2CppObject* GetRealObject(System::Runtime::Serialization::StreamingContext context);
    // Creating proxy method: System_Runtime_Serialization_IObjectReference_GetRealObject
    // Maps to method: GetRealObject
    ::Il2CppObject* System_Runtime_Serialization_IObjectReference_GetRealObject(System::Runtime::Serialization::StreamingContext context);
  }; // System.Runtime.Remoting.ObjRef
  #pragma pack(pop)
  static check_size<sizeof(ObjRef), 56 + sizeof(System::Type*)> __System_Runtime_Remoting_ObjRefSizeCheck;
  static_assert(sizeof(ObjRef) == 0x40);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::ObjRef*, "System.Runtime.Remoting", "ObjRef");
