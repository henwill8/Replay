// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Principal
namespace System::Security::Principal {
  // Forward declaring type: IPrincipal
  class IPrincipal;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting.Messaging
namespace System::Runtime::Remoting::Messaging {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.Messaging.CallContextSecurityData
  // [] Offset: FFFFFFFF
  class CallContextSecurityData : public ::Il2CppObject/*, public System::ICloneable*/ {
    public:
    // private System.Security.Principal.IPrincipal _principal
    // Size: 0x8
    // Offset: 0x10
    System::Security::Principal::IPrincipal* principal;
    // Field size check
    static_assert(sizeof(System::Security::Principal::IPrincipal*) == 0x8);
    // Creating value type constructor for type: CallContextSecurityData
    CallContextSecurityData(System::Security::Principal::IPrincipal* principal_ = {}) noexcept : principal{principal_} {}
    // Creating interface conversion operator: operator System::ICloneable
    operator System::ICloneable() noexcept {
      return *reinterpret_cast<System::ICloneable*>(this);
    }
    // Creating conversion operator: operator System::Security::Principal::IPrincipal*
    constexpr operator System::Security::Principal::IPrincipal*() const noexcept {
      return principal;
    }
    // System.Boolean get_HasInfo()
    // Offset: 0x132173C
    bool get_HasInfo();
    // public System.Object Clone()
    // Offset: 0x132174C
    // Implemented from: System.ICloneable
    // Base method: System.Object ICloneable::Clone()
    ::Il2CppObject* Clone();
    // Creating proxy method: System_ICloneable_Clone
    // Maps to method: Clone
    ::Il2CppObject* System_ICloneable_Clone();
    // public System.Void .ctor()
    // Offset: 0x13217C4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CallContextSecurityData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContextSecurityData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CallContextSecurityData*, creationType>()));
    }
  }; // System.Runtime.Remoting.Messaging.CallContextSecurityData
  #pragma pack(pop)
  static check_size<sizeof(CallContextSecurityData), 16 + sizeof(System::Security::Principal::IPrincipal*)> __System_Runtime_Remoting_Messaging_CallContextSecurityDataSizeCheck;
  static_assert(sizeof(CallContextSecurityData) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Messaging::CallContextSecurityData*, "System.Runtime.Remoting.Messaging", "CallContextSecurityData");
