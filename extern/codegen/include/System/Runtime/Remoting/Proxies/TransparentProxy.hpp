// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeRemoteClassHandle
#include "Mono/RuntimeRemoteClassHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting::Proxies
namespace System::Runtime::Remoting::Proxies {
  // Forward declaring type: RealProxy
  class RealProxy;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: RuntimeType
  class RuntimeType;
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Forward declaring namespace: System::Runtime::Remoting::Contexts
namespace System::Runtime::Remoting::Contexts {
  // Forward declaring type: Context
  class Context;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting.Proxies
namespace System::Runtime::Remoting::Proxies {
  // Size: 0x21
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Runtime.Remoting.Proxies.TransparentProxy
  // [] Offset: FFFFFFFF
  class TransparentProxy : public ::Il2CppObject {
    public:
    // public System.Runtime.Remoting.Proxies.RealProxy _rp
    // Size: 0x8
    // Offset: 0x10
    System::Runtime::Remoting::Proxies::RealProxy* rp;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Proxies::RealProxy*) == 0x8);
    // private Mono.RuntimeRemoteClassHandle _class
    // Size: 0x8
    // Offset: 0x18
    Mono::RuntimeRemoteClassHandle _class;
    // Field size check
    static_assert(sizeof(Mono::RuntimeRemoteClassHandle) == 0x8);
    // private System.Boolean _custom_type_info
    // Size: 0x1
    // Offset: 0x20
    bool custom_type_info;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: TransparentProxy
    TransparentProxy(System::Runtime::Remoting::Proxies::RealProxy* rp_ = {}, Mono::RuntimeRemoteClassHandle _class_ = {}, bool custom_type_info_ = {}) noexcept : rp{rp_}, _class{_class_}, custom_type_info{custom_type_info_} {}
    // System.RuntimeType GetProxyType()
    // Offset: 0x158411C
    System::RuntimeType* GetProxyType();
    // private System.Boolean get_IsContextBoundObject()
    // Offset: 0x15841F0
    bool get_IsContextBoundObject();
    // private System.Runtime.Remoting.Contexts.Context get_TargetContext()
    // Offset: 0x1584210
    System::Runtime::Remoting::Contexts::Context* get_TargetContext();
    // private System.Boolean InCurrentContext()
    // Offset: 0x158422C
    bool InCurrentContext();
    // System.Object LoadRemoteFieldNew(System.IntPtr classPtr, System.IntPtr fieldPtr)
    // Offset: 0x1584278
    ::Il2CppObject* LoadRemoteFieldNew(System::IntPtr classPtr, System::IntPtr fieldPtr);
    // System.Void StoreRemoteField(System.IntPtr classPtr, System.IntPtr fieldPtr, System.Object arg)
    // Offset: 0x158453C
    void StoreRemoteField(System::IntPtr classPtr, System::IntPtr fieldPtr, ::Il2CppObject* arg);
    // public System.Void .ctor()
    // Offset: 0x158480C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TransparentProxy* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::TransparentProxy::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TransparentProxy*, creationType>()));
    }
  }; // System.Runtime.Remoting.Proxies.TransparentProxy
  #pragma pack(pop)
  static check_size<sizeof(TransparentProxy), 32 + sizeof(bool)> __System_Runtime_Remoting_Proxies_TransparentProxySizeCheck;
  static_assert(sizeof(TransparentProxy) == 0x21);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Proxies::TransparentProxy*, "System.Runtime.Remoting.Proxies", "TransparentProxy");
