// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
  // Forward declaring type: IList
  class IList;
}
// Forward declaring namespace: System::Runtime::Remoting::Contexts
namespace System::Runtime::Remoting::Contexts {
  // Forward declaring type: CrossContextChannel
  class CrossContextChannel;
}
// Forward declaring namespace: System::Runtime::Remoting::Messaging
namespace System::Runtime::Remoting::Messaging {
  // Forward declaring type: IMessageSink
  class IMessageSink;
  // Forward declaring type: IMessage
  class IMessage;
  // Forward declaring type: ReturnMessage
  class ReturnMessage;
}
// Forward declaring namespace: System::Runtime::Remoting::Channels
namespace System::Runtime::Remoting::Channels {
  // Forward declaring type: IChannelSender
  class IChannelSender;
  // Forward declaring type: IChannel
  class IChannel;
}
// Forward declaring namespace: System::Runtime::Remoting
namespace System::Runtime::Remoting {
  // Forward declaring type: ChannelData
  class ChannelData;
  // Forward declaring type: ProviderData
  class ProviderData;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting.Channels
namespace System::Runtime::Remoting::Channels {
  // Autogenerated type: System.Runtime.Remoting.Channels.ChannelServices
  class ChannelServices : public ::Il2CppObject {
    public:
    // Get static field: static private System.Collections.ArrayList registeredChannels
    static System::Collections::ArrayList* _get_registeredChannels();
    // Set static field: static private System.Collections.ArrayList registeredChannels
    static void _set_registeredChannels(System::Collections::ArrayList* value);
    // Get static field: static private System.Collections.ArrayList delayedClientChannels
    static System::Collections::ArrayList* _get_delayedClientChannels();
    // Set static field: static private System.Collections.ArrayList delayedClientChannels
    static void _set_delayedClientChannels(System::Collections::ArrayList* value);
    // Get static field: static private System.Runtime.Remoting.Contexts.CrossContextChannel _crossContextSink
    static System::Runtime::Remoting::Contexts::CrossContextChannel* _get__crossContextSink();
    // Set static field: static private System.Runtime.Remoting.Contexts.CrossContextChannel _crossContextSink
    static void _set__crossContextSink(System::Runtime::Remoting::Contexts::CrossContextChannel* value);
    // Get static field: static System.String CrossContextUrl
    static ::Il2CppString* _get_CrossContextUrl();
    // Set static field: static System.String CrossContextUrl
    static void _set_CrossContextUrl(::Il2CppString* value);
    // Get static field: static private System.Collections.IList oldStartModeTypes
    static System::Collections::IList* _get_oldStartModeTypes();
    // Set static field: static private System.Collections.IList oldStartModeTypes
    static void _set_oldStartModeTypes(System::Collections::IList* value);
    // static System.Runtime.Remoting.Contexts.CrossContextChannel get_CrossContextChannel()
    // Offset: 0x10562D4
    static System::Runtime::Remoting::Contexts::CrossContextChannel* get_CrossContextChannel();
    // static System.Runtime.Remoting.Messaging.IMessageSink CreateClientChannelSinkChain(System.String url, System.Object remoteChannelData, out System.String objectUri)
    // Offset: 0x105633C
    static System::Runtime::Remoting::Messaging::IMessageSink* CreateClientChannelSinkChain(::Il2CppString* url, ::Il2CppObject* remoteChannelData, ::Il2CppString*& objectUri);
    // static System.Runtime.Remoting.Messaging.IMessageSink CreateClientChannelSinkChain(System.Runtime.Remoting.Channels.IChannelSender sender, System.String url, System.Object[] channelDataArray, out System.String objectUri)
    // Offset: 0x1056B70
    static System::Runtime::Remoting::Messaging::IMessageSink* CreateClientChannelSinkChain(System::Runtime::Remoting::Channels::IChannelSender* sender, ::Il2CppString* url, ::Array<::Il2CppObject*>* channelDataArray, ::Il2CppString*& objectUri);
    // static public System.Void RegisterChannel(System.Runtime.Remoting.Channels.IChannel chnl)
    // Offset: 0x1056DA8
    static void RegisterChannel(System::Runtime::Remoting::Channels::IChannel* chnl);
    // static public System.Void RegisterChannel(System.Runtime.Remoting.Channels.IChannel chnl, System.Boolean ensureSecurity)
    // Offset: 0x1056E10
    static void RegisterChannel(System::Runtime::Remoting::Channels::IChannel* chnl, bool ensureSecurity);
    // static System.Void RegisterChannelConfig(System.Runtime.Remoting.ChannelData channel)
    // Offset: 0x1057654
    static void RegisterChannelConfig(System::Runtime::Remoting::ChannelData* channel);
    // static private System.Object CreateProvider(System.Runtime.Remoting.ProviderData prov)
    // Offset: 0x1058270
    static ::Il2CppObject* CreateProvider(System::Runtime::Remoting::ProviderData* prov);
    // static public System.Runtime.Remoting.Messaging.IMessage SyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage msg)
    // Offset: 0x10585A4
    static System::Runtime::Remoting::Messaging::IMessage* SyncDispatchMessage(System::Runtime::Remoting::Messaging::IMessage* msg);
    // static private System.Runtime.Remoting.Messaging.ReturnMessage CheckIncomingMessage(System.Runtime.Remoting.Messaging.IMessage msg)
    // Offset: 0x105867C
    static System::Runtime::Remoting::Messaging::ReturnMessage* CheckIncomingMessage(System::Runtime::Remoting::Messaging::IMessage* msg);
    // static System.Runtime.Remoting.Messaging.IMessage CheckReturnMessage(System.Runtime.Remoting.Messaging.IMessage callMsg, System.Runtime.Remoting.Messaging.IMessage retMsg)
    // Offset: 0x1058908
    static System::Runtime::Remoting::Messaging::IMessage* CheckReturnMessage(System::Runtime::Remoting::Messaging::IMessage* callMsg, System::Runtime::Remoting::Messaging::IMessage* retMsg);
    // static private System.Boolean IsLocalCall(System.Runtime.Remoting.Messaging.IMessage callMsg)
    // Offset: 0x1058EB0
    static bool IsLocalCall(System::Runtime::Remoting::Messaging::IMessage* callMsg);
    // static System.Object[] GetCurrentChannelInfo()
    // Offset: 0x1055A80
    static ::Array<::Il2CppObject*>* GetCurrentChannelInfo();
    // static private System.Void .cctor()
    // Offset: 0x1058FFC
    static void _cctor();
  }; // System.Runtime.Remoting.Channels.ChannelServices
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Channels::ChannelServices*, "System.Runtime.Remoting.Channels", "ChannelServices");
#pragma pack(pop)
