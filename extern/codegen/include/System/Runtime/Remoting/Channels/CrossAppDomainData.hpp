// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Runtime.Remoting.Channels
namespace System::Runtime::Remoting::Channels {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.Channels.CrossAppDomainData
  // [] Offset: FFFFFFFF
  class CrossAppDomainData : public ::Il2CppObject {
    public:
    // private System.Object _ContextID
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppObject* ContextID;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Int32 _DomainID
    // Size: 0x4
    // Offset: 0x18
    int DomainID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: DomainID and: processGuid
    char __padding1[0x4] = {};
    // private System.String _processGuid
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppString* processGuid;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: CrossAppDomainData
    CrossAppDomainData(::Il2CppObject* ContextID_ = {}, int DomainID_ = {}, ::Il2CppString* processGuid_ = {}) noexcept : ContextID{ContextID_}, DomainID{DomainID_}, processGuid{processGuid_} {}
    // System.Void .ctor(System.Int32 domainId)
    // Offset: 0x1313D80
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CrossAppDomainData* New_ctor(int domainId) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CrossAppDomainData*, creationType>(domainId)));
    }
    // System.Int32 get_DomainID()
    // Offset: 0x13142D4
    int get_DomainID();
    // System.String get_ProcessID()
    // Offset: 0x13142DC
    ::Il2CppString* get_ProcessID();
  }; // System.Runtime.Remoting.Channels.CrossAppDomainData
  #pragma pack(pop)
  static check_size<sizeof(CrossAppDomainData), 32 + sizeof(::Il2CppString*)> __System_Runtime_Remoting_Channels_CrossAppDomainDataSizeCheck;
  static_assert(sizeof(CrossAppDomainData) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Channels::CrossAppDomainData*, "System.Runtime.Remoting.Channels", "CrossAppDomainData");
