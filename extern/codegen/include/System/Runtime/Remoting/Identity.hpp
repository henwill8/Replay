// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting::Messaging
namespace System::Runtime::Remoting::Messaging {
  // Forward declaring type: IMessageSink
  class IMessageSink;
  // Forward declaring type: IMessage
  class IMessage;
}
// Forward declaring namespace: System::Runtime::Remoting::Contexts
namespace System::Runtime::Remoting::Contexts {
  // Forward declaring type: DynamicPropertyCollection
  class DynamicPropertyCollection;
}
// Forward declaring namespace: System::Runtime::Remoting
namespace System::Runtime::Remoting {
  // Forward declaring type: ObjRef
  class ObjRef;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting
namespace System::Runtime::Remoting {
  // Size: 0x41
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.Identity
  // [] Offset: FFFFFFFF
  class Identity : public ::Il2CppObject {
    public:
    // protected System.String _objectUri
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* objectUri;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // protected System.Runtime.Remoting.Messaging.IMessageSink _channelSink
    // Size: 0x8
    // Offset: 0x18
    System::Runtime::Remoting::Messaging::IMessageSink* channelSink;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Messaging::IMessageSink*) == 0x8);
    // protected System.Runtime.Remoting.Messaging.IMessageSink _envoySink
    // Size: 0x8
    // Offset: 0x20
    System::Runtime::Remoting::Messaging::IMessageSink* envoySink;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Messaging::IMessageSink*) == 0x8);
    // private System.Runtime.Remoting.Contexts.DynamicPropertyCollection _clientDynamicProperties
    // Size: 0x8
    // Offset: 0x28
    System::Runtime::Remoting::Contexts::DynamicPropertyCollection* clientDynamicProperties;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Contexts::DynamicPropertyCollection*) == 0x8);
    // private System.Runtime.Remoting.Contexts.DynamicPropertyCollection _serverDynamicProperties
    // Size: 0x8
    // Offset: 0x30
    System::Runtime::Remoting::Contexts::DynamicPropertyCollection* serverDynamicProperties;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::Contexts::DynamicPropertyCollection*) == 0x8);
    // protected System.Runtime.Remoting.ObjRef _objRef
    // Size: 0x8
    // Offset: 0x38
    System::Runtime::Remoting::ObjRef* objRef;
    // Field size check
    static_assert(sizeof(System::Runtime::Remoting::ObjRef*) == 0x8);
    // private System.Boolean _disposed
    // Size: 0x1
    // Offset: 0x40
    bool disposed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: Identity
    Identity(::Il2CppString* objectUri_ = {}, System::Runtime::Remoting::Messaging::IMessageSink* channelSink_ = {}, System::Runtime::Remoting::Messaging::IMessageSink* envoySink_ = {}, System::Runtime::Remoting::Contexts::DynamicPropertyCollection* clientDynamicProperties_ = {}, System::Runtime::Remoting::Contexts::DynamicPropertyCollection* serverDynamicProperties_ = {}, System::Runtime::Remoting::ObjRef* objRef_ = {}, bool disposed_ = {}) noexcept : objectUri{objectUri_}, channelSink{channelSink_}, envoySink{envoySink_}, clientDynamicProperties{clientDynamicProperties_}, serverDynamicProperties{serverDynamicProperties_}, objRef{objRef_}, disposed{disposed_} {}
    // public System.Void .ctor(System.String objectUri)
    // Offset: 0x1315360
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Identity* New_ctor(::Il2CppString* objectUri) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Identity::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Identity*, creationType>(objectUri)));
    }
    // public System.Runtime.Remoting.ObjRef CreateObjRef(System.Type requestedType)
    // Offset: 0xFFFFFFFF
    System::Runtime::Remoting::ObjRef* CreateObjRef(System::Type* requestedType);
    // public System.Runtime.Remoting.Messaging.IMessageSink get_ChannelSink()
    // Offset: 0x131B94C
    System::Runtime::Remoting::Messaging::IMessageSink* get_ChannelSink();
    // public System.Void set_ChannelSink(System.Runtime.Remoting.Messaging.IMessageSink value)
    // Offset: 0x131B954
    void set_ChannelSink(System::Runtime::Remoting::Messaging::IMessageSink* value);
    // public System.Runtime.Remoting.Messaging.IMessageSink get_EnvoySink()
    // Offset: 0x131B95C
    System::Runtime::Remoting::Messaging::IMessageSink* get_EnvoySink();
    // public System.String get_ObjectUri()
    // Offset: 0x131B964
    ::Il2CppString* get_ObjectUri();
    // public System.Void set_ObjectUri(System.String value)
    // Offset: 0x131B96C
    void set_ObjectUri(::Il2CppString* value);
    // public System.Boolean get_IsConnected()
    // Offset: 0x131B974
    bool get_IsConnected();
    // public System.Boolean get_Disposed()
    // Offset: 0x131B984
    bool get_Disposed();
    // public System.Void set_Disposed(System.Boolean value)
    // Offset: 0x131B98C
    void set_Disposed(bool value);
    // public System.Runtime.Remoting.Contexts.DynamicPropertyCollection get_ClientDynamicProperties()
    // Offset: 0x13195A8
    System::Runtime::Remoting::Contexts::DynamicPropertyCollection* get_ClientDynamicProperties();
    // public System.Boolean get_HasServerDynamicSinks()
    // Offset: 0x131B998
    bool get_HasServerDynamicSinks();
    // public System.Void NotifyClientDynamicSinks(System.Boolean start, System.Runtime.Remoting.Messaging.IMessage req_msg, System.Boolean client_site, System.Boolean async)
    // Offset: 0x131B9DC
    void NotifyClientDynamicSinks(bool start, System::Runtime::Remoting::Messaging::IMessage* req_msg, bool client_site, bool async);
    // public System.Void NotifyServerDynamicSinks(System.Boolean start, System.Runtime.Remoting.Messaging.IMessage req_msg, System.Boolean client_site, System.Boolean async)
    // Offset: 0x131BA70
    void NotifyServerDynamicSinks(bool start, System::Runtime::Remoting::Messaging::IMessage* req_msg, bool client_site, bool async);
  }; // System.Runtime.Remoting.Identity
  #pragma pack(pop)
  static check_size<sizeof(Identity), 64 + sizeof(bool)> __System_Runtime_Remoting_IdentitySizeCheck;
  static_assert(sizeof(Identity) == 0x41);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Remoting::Identity*, "System.Runtime.Remoting", "Identity");
