// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
#include "Microsoft/Win32/SafeHandles/SafeHandleZeroOrMinusOneIsInvalid.hpp"
// Completed includes
// Type namespace: System.Runtime.InteropServices
namespace System::Runtime::InteropServices {
  // Size: 0x1F
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.InteropServices.SafeBuffer
  // [] Offset: FFFFFFFF
  class SafeBuffer : public Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid {
    public:
    // private System.Boolean inited
    // Size: 0x1
    // Offset: 0x1E
    bool inited;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: SafeBuffer
    SafeBuffer(bool inited_ = {}) noexcept : inited{inited_} {}
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return inited;
    }
    // public System.Void AcquirePointer(ref System.Byte* pointer)
    // Offset: 0x130C730
    void AcquirePointer(uint8_t*& pointer);
    // public System.Void ReleasePointer()
    // Offset: 0x130C8C4
    void ReleasePointer();
  }; // System.Runtime.InteropServices.SafeBuffer
  #pragma pack(pop)
  static check_size<sizeof(SafeBuffer), 30 + sizeof(bool)> __System_Runtime_InteropServices_SafeBufferSizeCheck;
  static_assert(sizeof(SafeBuffer) == 0x1F);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::InteropServices::SafeBuffer*, "System.Runtime.InteropServices", "SafeBuffer");
