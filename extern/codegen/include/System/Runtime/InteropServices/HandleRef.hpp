// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Runtime.InteropServices
namespace System::Runtime::InteropServices {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Runtime.InteropServices.HandleRef
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CAC984
  struct HandleRef/*, public System::ValueType*/ {
    public:
    // System.Object m_wrapper
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppObject* m_wrapper;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // System.IntPtr m_handle
    // Size: 0x8
    // Offset: 0x8
    System::IntPtr m_handle;
    // Field size check
    static_assert(sizeof(System::IntPtr) == 0x8);
    // Creating value type constructor for type: HandleRef
    constexpr HandleRef(::Il2CppObject* m_wrapper_ = {}, System::IntPtr m_handle_ = {}) noexcept : m_wrapper{m_wrapper_}, m_handle{m_handle_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // public System.Void .ctor(System.Object wrapper, System.IntPtr handle)
    // Offset: 0xDF993C
    // template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    // ABORTED: conflicts with another method.  HandleRef(::Il2CppObject* wrapper, System::IntPtr handle)
    // public System.IntPtr get_Handle()
    // Offset: 0xDF996C
    System::IntPtr get_Handle();
  }; // System.Runtime.InteropServices.HandleRef
  #pragma pack(pop)
  static check_size<sizeof(HandleRef), 8 + sizeof(System::IntPtr)> __System_Runtime_InteropServices_HandleRefSizeCheck;
  static_assert(sizeof(HandleRef) == 0x10);
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::InteropServices::HandleRef, "System.Runtime.InteropServices", "HandleRef");
