// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceListener
#include "System/Diagnostics/TraceListener.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Diagnostics
namespace System::Diagnostics {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: System.Diagnostics.DefaultTraceListener
  // [] Offset: FFFFFFFF
  class DefaultTraceListener : public System::Diagnostics::TraceListener {
    public:
    // private System.String logFileName
    // Size: 0x8
    // Offset: 0x30
    ::Il2CppString* logFileName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: DefaultTraceListener
    DefaultTraceListener(::Il2CppString* logFileName_ = {}) noexcept : logFileName{logFileName_} {}
    // Get static field: static private readonly System.Boolean OnWin32
    static bool _get_OnWin32();
    // Set static field: static private readonly System.Boolean OnWin32
    static void _set_OnWin32(bool value);
    // Get static field: static private readonly System.String MonoTracePrefix
    static ::Il2CppString* _get_MonoTracePrefix();
    // Set static field: static private readonly System.String MonoTracePrefix
    static void _set_MonoTracePrefix(::Il2CppString* value);
    // Get static field: static private readonly System.String MonoTraceFile
    static ::Il2CppString* _get_MonoTraceFile();
    // Set static field: static private readonly System.String MonoTraceFile
    static void _set_MonoTraceFile(::Il2CppString* value);
    // static private System.Void .cctor()
    // Offset: 0x1797F44
    static void _cctor();
    // static private System.String GetPrefix(System.String var, System.String target)
    // Offset: 0x1798094
    static ::Il2CppString* GetPrefix(::Il2CppString* var, ::Il2CppString* target);
    // public System.String get_LogFileName()
    // Offset: 0x17981DC
    ::Il2CppString* get_LogFileName();
    // static private System.Void WriteWindowsDebugString(System.String message)
    // Offset: 0x17983B0
    static void WriteWindowsDebugString(::Il2CppString* message);
    // private System.Void WriteDebugString(System.String message)
    // Offset: 0x17983B4
    void WriteDebugString(::Il2CppString* message);
    // private System.Void WriteMonoTrace(System.String message)
    // Offset: 0x1798460
    void WriteMonoTrace(::Il2CppString* message);
    // private System.Void WritePrefix()
    // Offset: 0x1798870
    void WritePrefix();
    // private System.Void WriteImpl(System.String message)
    // Offset: 0x1798910
    void WriteImpl(::Il2CppString* message);
    // private System.Void WriteLogFile(System.String message, System.String logFile)
    // Offset: 0x1798630
    void WriteLogFile(::Il2CppString* message, ::Il2CppString* logFile);
    // public System.Void .ctor()
    // Offset: 0x1798124
    // Implemented from: System.MarshalByRefObject
    // Base method: System.Void MarshalByRefObject::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefaultTraceListener* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefaultTraceListener*, creationType>()));
    }
    // public override System.Void Fail(System.String message)
    // Offset: 0x17981E4
    // Implemented from: System.Diagnostics.TraceListener
    // Base method: System.Void TraceListener::Fail(System.String message)
    void Fail(::Il2CppString* message);
    // public override System.Void Fail(System.String message, System.String detailMessage)
    // Offset: 0x1798204
    // Implemented from: System.Diagnostics.TraceListener
    // Base method: System.Void TraceListener::Fail(System.String message, System.String detailMessage)
    void Fail(::Il2CppString* message, ::Il2CppString* detailMessage);
    // public override System.Void Write(System.String message)
    // Offset: 0x17989F0
    // Implemented from: System.Diagnostics.TraceListener
    // Base method: System.Void TraceListener::Write(System.String message)
    void Write(::Il2CppString* message);
    // public override System.Void WriteLine(System.String message)
    // Offset: 0x17989F4
    // Implemented from: System.Diagnostics.TraceListener
    // Base method: System.Void TraceListener::WriteLine(System.String message)
    void WriteLine(::Il2CppString* message);
  }; // System.Diagnostics.DefaultTraceListener
  #pragma pack(pop)
  static check_size<sizeof(DefaultTraceListener), 48 + sizeof(::Il2CppString*)> __System_Diagnostics_DefaultTraceListenerSizeCheck;
  static_assert(sizeof(DefaultTraceListener) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(System::Diagnostics::DefaultTraceListener*, "System.Diagnostics", "DefaultTraceListener");
