// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Autogenerated type: System.Diagnostics.Tracing.EventManifestOptions
  struct EventManifestOptions : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: EventManifestOptions
    constexpr EventManifestOptions(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Diagnostics.Tracing.EventManifestOptions None
    static constexpr const int None = 0;
    // Get static field: static public System.Diagnostics.Tracing.EventManifestOptions None
    static System::Diagnostics::Tracing::EventManifestOptions _get_None();
    // Set static field: static public System.Diagnostics.Tracing.EventManifestOptions None
    static void _set_None(System::Diagnostics::Tracing::EventManifestOptions value);
    // static field const value: static public System.Diagnostics.Tracing.EventManifestOptions Strict
    static constexpr const int Strict = 1;
    // Get static field: static public System.Diagnostics.Tracing.EventManifestOptions Strict
    static System::Diagnostics::Tracing::EventManifestOptions _get_Strict();
    // Set static field: static public System.Diagnostics.Tracing.EventManifestOptions Strict
    static void _set_Strict(System::Diagnostics::Tracing::EventManifestOptions value);
    // static field const value: static public System.Diagnostics.Tracing.EventManifestOptions AllCultures
    static constexpr const int AllCultures = 2;
    // Get static field: static public System.Diagnostics.Tracing.EventManifestOptions AllCultures
    static System::Diagnostics::Tracing::EventManifestOptions _get_AllCultures();
    // Set static field: static public System.Diagnostics.Tracing.EventManifestOptions AllCultures
    static void _set_AllCultures(System::Diagnostics::Tracing::EventManifestOptions value);
    // static field const value: static public System.Diagnostics.Tracing.EventManifestOptions OnlyIfNeededForRegistration
    static constexpr const int OnlyIfNeededForRegistration = 4;
    // Get static field: static public System.Diagnostics.Tracing.EventManifestOptions OnlyIfNeededForRegistration
    static System::Diagnostics::Tracing::EventManifestOptions _get_OnlyIfNeededForRegistration();
    // Set static field: static public System.Diagnostics.Tracing.EventManifestOptions OnlyIfNeededForRegistration
    static void _set_OnlyIfNeededForRegistration(System::Diagnostics::Tracing::EventManifestOptions value);
    // static field const value: static public System.Diagnostics.Tracing.EventManifestOptions AllowEventSourceOverride
    static constexpr const int AllowEventSourceOverride = 8;
    // Get static field: static public System.Diagnostics.Tracing.EventManifestOptions AllowEventSourceOverride
    static System::Diagnostics::Tracing::EventManifestOptions _get_AllowEventSourceOverride();
    // Set static field: static public System.Diagnostics.Tracing.EventManifestOptions AllowEventSourceOverride
    static void _set_AllowEventSourceOverride(System::Diagnostics::Tracing::EventManifestOptions value);
  }; // System.Diagnostics.Tracing.EventManifestOptions
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Diagnostics::Tracing::EventManifestOptions, "System.Diagnostics.Tracing", "EventManifestOptions");
#pragma pack(pop)
