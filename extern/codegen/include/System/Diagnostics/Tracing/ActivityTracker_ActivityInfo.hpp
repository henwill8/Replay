// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.ActivityTracker
#include "System/Diagnostics/Tracing/ActivityTracker.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Diagnostics.Tracing.EventActivityOptions
#include "System/Diagnostics/Tracing/EventActivityOptions.hpp"
// Completed includes
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Autogenerated type: System.Diagnostics.Tracing.ActivityTracker/ActivityInfo
  class ActivityTracker::ActivityInfo : public ::Il2CppObject {
    public:
    // readonly System.String m_name
    // Offset: 0x10
    ::Il2CppString* m_name;
    // private readonly System.Int64 m_uniqueId
    // Offset: 0x18
    int64_t m_uniqueId;
    // readonly System.Guid m_guid
    // Offset: 0x20
    System::Guid m_guid;
    // readonly System.Int32 m_activityPathGuidOffset
    // Offset: 0x30
    int m_activityPathGuidOffset;
    // readonly System.Int32 m_level
    // Offset: 0x34
    int m_level;
    // readonly System.Diagnostics.Tracing.EventActivityOptions m_eventOptions
    // Offset: 0x38
    System::Diagnostics::Tracing::EventActivityOptions m_eventOptions;
    // System.Int64 m_lastChildID
    // Offset: 0x40
    int64_t m_lastChildID;
    // System.Int32 m_stopped
    // Offset: 0x48
    int m_stopped;
    // readonly System.Diagnostics.Tracing.ActivityTracker/ActivityInfo m_creator
    // Offset: 0x50
    System::Diagnostics::Tracing::ActivityTracker::ActivityInfo* m_creator;
    // readonly System.Guid m_activityIdToRestore
    // Offset: 0x58
    System::Guid m_activityIdToRestore;
    // public System.Void .ctor(System.String name, System.Int64 uniqueId, System.Diagnostics.Tracing.ActivityTracker/ActivityInfo creator, System.Guid activityIDToRestore, System.Diagnostics.Tracing.EventActivityOptions options)
    // Offset: 0x12C3FF0
    static ActivityTracker::ActivityInfo* New_ctor(::Il2CppString* name, int64_t uniqueId, System::Diagnostics::Tracing::ActivityTracker::ActivityInfo* creator, System::Guid activityIDToRestore, System::Diagnostics::Tracing::EventActivityOptions options);
    // public System.Guid get_ActivityId()
    // Offset: 0x12C450C
    System::Guid get_ActivityId();
    // static public System.String Path(System.Diagnostics.Tracing.ActivityTracker/ActivityInfo activityInfo)
    // Offset: 0x12C4518
    static ::Il2CppString* Path(System::Diagnostics::Tracing::ActivityTracker::ActivityInfo* activityInfo);
    // static public System.String LiveActivities(System.Diagnostics.Tracing.ActivityTracker/ActivityInfo list)
    // Offset: 0x12C3C10
    static ::Il2CppString* LiveActivities(System::Diagnostics::Tracing::ActivityTracker::ActivityInfo* list);
    // public System.Boolean CanBeOrphan()
    // Offset: 0x12C4098
    bool CanBeOrphan();
    // private System.Void CreateActivityPathGuid(out System.Guid idRet, out System.Int32 activityPathGuidOffset)
    // Offset: 0x12C4474
    void CreateActivityPathGuid(System::Guid& idRet, int& activityPathGuidOffset);
    // private System.Void CreateOverflowGuid(System.Guid* outPtr)
    // Offset: 0x12C48DC
    void CreateOverflowGuid(System::Guid* outPtr);
    // static private System.Int32 AddIdToGuid(System.Guid* outPtr, System.Int32 whereToAddId, System.UInt32 id, System.Boolean overflow)
    // Offset: 0x12C4790
    static int AddIdToGuid(System::Guid* outPtr, int whereToAddId, uint id, bool overflow);
    // static private System.Void WriteNibble(ref System.Byte* ptr, System.Byte* endPtr, System.UInt32 value)
    // Offset: 0x12C4944
    static void WriteNibble(uint8_t*& ptr, uint8_t* endPtr, uint value);
    // public override System.String ToString()
    // Offset: 0x12C45B8
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // System.Diagnostics.Tracing.ActivityTracker/ActivityInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Diagnostics::Tracing::ActivityTracker::ActivityInfo*, "System.Diagnostics.Tracing", "ActivityTracker/ActivityInfo");
#pragma pack(pop)
