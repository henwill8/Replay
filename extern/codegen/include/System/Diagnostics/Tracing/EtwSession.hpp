// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Diagnostics::Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: ActivityFilter
  class ActivityFilter;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: WeakReference`1<T>
  template<typename T>
  class WeakReference_1;
}
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Diagnostics.Tracing.EtwSession
  // [] Offset: FFFFFFFF
  class EtwSession : public ::Il2CppObject {
    public:
    // Nested type: System::Diagnostics::Tracing::EtwSession::$$c__DisplayClass1_0
    class $$c__DisplayClass1_0;
    // Nested type: System::Diagnostics::Tracing::EtwSession::$$c
    class $$c;
    // public readonly System.Int32 m_etwSessionId
    // Size: 0x4
    // Offset: 0x10
    int m_etwSessionId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_etwSessionId and: m_activityFilter
    char __padding0[0x4] = {};
    // public System.Diagnostics.Tracing.ActivityFilter m_activityFilter
    // Size: 0x8
    // Offset: 0x18
    System::Diagnostics::Tracing::ActivityFilter* m_activityFilter;
    // Field size check
    static_assert(sizeof(System::Diagnostics::Tracing::ActivityFilter*) == 0x8);
    // Creating value type constructor for type: EtwSession
    EtwSession(int m_etwSessionId_ = {}, System::Diagnostics::Tracing::ActivityFilter* m_activityFilter_ = {}) noexcept : m_etwSessionId{m_etwSessionId_}, m_activityFilter{m_activityFilter_} {}
    // Get static field: static private System.Collections.Generic.List`1<System.WeakReference`1<System.Diagnostics.Tracing.EtwSession>> s_etwSessions
    static System::Collections::Generic::List_1<System::WeakReference_1<System::Diagnostics::Tracing::EtwSession*>*>* _get_s_etwSessions();
    // Set static field: static private System.Collections.Generic.List`1<System.WeakReference`1<System.Diagnostics.Tracing.EtwSession>> s_etwSessions
    static void _set_s_etwSessions(System::Collections::Generic::List_1<System::WeakReference_1<System::Diagnostics::Tracing::EtwSession*>*>* value);
    // static public System.Diagnostics.Tracing.EtwSession GetEtwSession(System.Int32 etwSessionId, System.Boolean bCreateIfNeeded)
    // Offset: 0x1514DDC
    static System::Diagnostics::Tracing::EtwSession* GetEtwSession(int etwSessionId, bool bCreateIfNeeded);
    // static public System.Void RemoveEtwSession(System.Diagnostics.Tracing.EtwSession etwSession)
    // Offset: 0x1515234
    static void RemoveEtwSession(System::Diagnostics::Tracing::EtwSession* etwSession);
    // static private System.Void TrimGlobalList()
    // Offset: 0x15150DC
    static void TrimGlobalList();
    // private System.Void .ctor(System.Int32 etwSessionId)
    // Offset: 0x15150B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EtwSession* New_ctor(int etwSessionId) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EtwSession::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EtwSession*, creationType>(etwSessionId)));
    }
    // static private System.Void .cctor()
    // Offset: 0x15153A4
    static void _cctor();
  }; // System.Diagnostics.Tracing.EtwSession
  #pragma pack(pop)
  static check_size<sizeof(EtwSession), 24 + sizeof(System::Diagnostics::Tracing::ActivityFilter*)> __System_Diagnostics_Tracing_EtwSessionSizeCheck;
  static_assert(sizeof(EtwSession) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(System::Diagnostics::Tracing::EtwSession*, "System.Diagnostics.Tracing", "EtwSession");
