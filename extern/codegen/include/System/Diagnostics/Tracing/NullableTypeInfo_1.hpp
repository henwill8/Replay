// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.TraceLoggingTypeInfo`1
#include "System/Diagnostics/Tracing/TraceLoggingTypeInfo_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: System::Diagnostics::Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: TraceLoggingDataCollector
  class TraceLoggingDataCollector;
  // Forward declaring type: TraceLoggingMetadataCollector
  class TraceLoggingMetadataCollector;
}
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Autogenerated type: System.Diagnostics.Tracing.NullableTypeInfo`1
  template<typename T>
  class NullableTypeInfo_1 : public System::Diagnostics::Tracing::TraceLoggingTypeInfo_1<System::Nullable_1<T>> {
    static_assert((!std::is_complete_v<std::remove_pointer_t<T>> || is_value_type_v<T>));
    public:
    // private readonly System.Diagnostics.Tracing.TraceLoggingTypeInfo`1<T> valueInfo
    // Offset: 0x0
    System::Diagnostics::Tracing::TraceLoggingTypeInfo_1<T>* valueInfo;
    // Creating conversion operator: operator System::Diagnostics::Tracing::TraceLoggingTypeInfo_1<T>*
    constexpr operator System::Diagnostics::Tracing::TraceLoggingTypeInfo_1<T>*() const noexcept {
      return valueInfo;
    }
    // public System.Void WriteData(System.Diagnostics.Tracing.TraceLoggingDataCollector collector, ref System.Nullable`1<T> value)
    // Offset: 0xFFFFFFFF
    void WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, System::Nullable_1<T>& value) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "WriteData", collector, value));
    }
    // public override System.Void WriteMetadata(System.Diagnostics.Tracing.TraceLoggingMetadataCollector collector, System.String name, System.Diagnostics.Tracing.EventFieldFormat format)
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Diagnostics.Tracing.TraceLoggingTypeInfo
    // Base method: System.Void TraceLoggingTypeInfo::WriteMetadata(System.Diagnostics.Tracing.TraceLoggingMetadataCollector collector, System.String name, System.Diagnostics.Tracing.EventFieldFormat format)
    void WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "WriteMetadata", collector, name, format));
    }
  }; // System.Diagnostics.Tracing.NullableTypeInfo`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Diagnostics::Tracing::NullableTypeInfo_1, "System.Diagnostics.Tracing", "NullableTypeInfo`1");
#pragma pack(pop)
