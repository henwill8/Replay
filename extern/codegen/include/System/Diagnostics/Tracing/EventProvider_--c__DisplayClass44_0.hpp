// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventProvider
#include "System/Diagnostics/Tracing/EventProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Diagnostics.Tracing.EventProvider/<>c__DisplayClass44_0
  // [] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: CAE680
  class EventProvider::$$c__DisplayClass44_0 : public ::Il2CppObject {
    public:
    // public System.Collections.Generic.List`1<System.Diagnostics.Tracing.EventProvider/SessionInfo> liveSessionList
    // Size: 0x8
    // Offset: 0x10
    System::Collections::Generic::List_1<System::Diagnostics::Tracing::EventProvider::SessionInfo>* liveSessionList;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<System::Diagnostics::Tracing::EventProvider::SessionInfo>*) == 0x8);
    // Creating value type constructor for type: $$c__DisplayClass44_0
    $$c__DisplayClass44_0(System::Collections::Generic::List_1<System::Diagnostics::Tracing::EventProvider::SessionInfo>* liveSessionList_ = {}) noexcept : liveSessionList{liveSessionList_} {}
    // Creating conversion operator: operator System::Collections::Generic::List_1<System::Diagnostics::Tracing::EventProvider::SessionInfo>*
    constexpr operator System::Collections::Generic::List_1<System::Diagnostics::Tracing::EventProvider::SessionInfo>*() const noexcept {
      return liveSessionList;
    }
    // System.Void <GetSessions>b__0(System.Int32 etwSessionId, System.Int64 matchAllKeywords)
    // Offset: 0x151A1AC
    void $GetSessions$b__0(int etwSessionId, int64_t matchAllKeywords);
    // public System.Void .ctor()
    // Offset: 0x1518534
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventProvider::$$c__DisplayClass44_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventProvider::$$c__DisplayClass44_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventProvider::$$c__DisplayClass44_0*, creationType>()));
    }
  }; // System.Diagnostics.Tracing.EventProvider/<>c__DisplayClass44_0
  #pragma pack(pop)
  static check_size<sizeof(EventProvider::$$c__DisplayClass44_0), 16 + sizeof(System::Collections::Generic::List_1<System::Diagnostics::Tracing::EventProvider::SessionInfo>*)> __System_Diagnostics_Tracing_EventProvider_$$c__DisplayClass44_0SizeCheck;
  static_assert(sizeof(EventProvider::$$c__DisplayClass44_0) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(System::Diagnostics::Tracing::EventProvider::$$c__DisplayClass44_0*, "System.Diagnostics.Tracing", "EventProvider/<>c__DisplayClass44_0");
