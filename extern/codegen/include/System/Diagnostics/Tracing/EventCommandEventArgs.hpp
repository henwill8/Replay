// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Diagnostics.Tracing.EventCommand
#include "System/Diagnostics/Tracing/EventCommand.hpp"
// Including type: System.Diagnostics.Tracing.EventLevel
#include "System/Diagnostics/Tracing/EventLevel.hpp"
// Including type: System.Diagnostics.Tracing.EventKeywords
#include "System/Diagnostics/Tracing/EventKeywords.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Forward declaring namespace: System::Diagnostics::Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: EventSource
  class EventSource;
  // Forward declaring type: EventDispatcher
  class EventDispatcher;
  // Forward declaring type: EventListener
  class EventListener;
}
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Autogenerated type: System.Diagnostics.Tracing.EventCommandEventArgs
  class EventCommandEventArgs : public System::EventArgs {
    public:
    // private System.Diagnostics.Tracing.EventCommand <Command>k__BackingField
    // Offset: 0x10
    System::Diagnostics::Tracing::EventCommand Command;
    // private System.Collections.Generic.IDictionary`2<System.String,System.String> <Arguments>k__BackingField
    // Offset: 0x18
    System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppString*>* Arguments;
    // System.Diagnostics.Tracing.EventSource eventSource
    // Offset: 0x20
    System::Diagnostics::Tracing::EventSource* eventSource;
    // System.Diagnostics.Tracing.EventDispatcher dispatcher
    // Offset: 0x28
    System::Diagnostics::Tracing::EventDispatcher* dispatcher;
    // System.Diagnostics.Tracing.EventListener listener
    // Offset: 0x30
    System::Diagnostics::Tracing::EventListener* listener;
    // System.Int32 perEventSourceSessionId
    // Offset: 0x38
    int perEventSourceSessionId;
    // System.Int32 etwSessionId
    // Offset: 0x3C
    int etwSessionId;
    // System.Boolean enable
    // Offset: 0x40
    bool enable;
    // System.Diagnostics.Tracing.EventLevel level
    // Offset: 0x44
    System::Diagnostics::Tracing::EventLevel level;
    // System.Diagnostics.Tracing.EventKeywords matchAnyKeyword
    // Offset: 0x48
    System::Diagnostics::Tracing::EventKeywords matchAnyKeyword;
    // System.Diagnostics.Tracing.EventCommandEventArgs nextCommand
    // Offset: 0x50
    System::Diagnostics::Tracing::EventCommandEventArgs* nextCommand;
    // public System.Diagnostics.Tracing.EventCommand get_Command()
    // Offset: 0xC9B2C8
    System::Diagnostics::Tracing::EventCommand get_Command();
    // System.Void set_Command(System.Diagnostics.Tracing.EventCommand value)
    // Offset: 0xC9B2D0
    void set_Command(System::Diagnostics::Tracing::EventCommand value);
    // public System.Collections.Generic.IDictionary`2<System.String,System.String> get_Arguments()
    // Offset: 0xC9B2D8
    System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppString*>* get_Arguments();
    // System.Void set_Arguments(System.Collections.Generic.IDictionary`2<System.String,System.String> value)
    // Offset: 0xC9B2E0
    void set_Arguments(System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppString*>* value);
    // System.Void .ctor(System.Diagnostics.Tracing.EventCommand command, System.Collections.Generic.IDictionary`2<System.String,System.String> arguments, System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventListener listener, System.Int32 perEventSourceSessionId, System.Int32 etwSessionId, System.Boolean enable, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword)
    // Offset: 0xC9B2E8
    static EventCommandEventArgs* New_ctor(System::Diagnostics::Tracing::EventCommand command, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppString*>* arguments, System::Diagnostics::Tracing::EventSource* eventSource, System::Diagnostics::Tracing::EventListener* listener, int perEventSourceSessionId, int etwSessionId, bool enable, System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords matchAnyKeyword);
  }; // System.Diagnostics.Tracing.EventCommandEventArgs
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Diagnostics::Tracing::EventCommandEventArgs*, "System.Diagnostics.Tracing", "EventCommandEventArgs");
#pragma pack(pop)
