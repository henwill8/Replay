// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventPayload
#include "System/Diagnostics/Tracing/EventPayload.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Diagnostics.Tracing.EventPayload/<GetEnumerator>d__17
  // [] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: CAE5F8
  class EventPayload::$GetEnumerator$d__17 : public ::Il2CppObject/*, public System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*>>*/ {
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Collections.Generic.KeyValuePair`2<System.String,System.Object> <>2__current
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*> $$2__current;
    // public System.Diagnostics.Tracing.EventPayload <>4__this
    // Size: 0x8
    // Offset: 0x28
    System::Diagnostics::Tracing::EventPayload* $$4__this;
    // Field size check
    static_assert(sizeof(System::Diagnostics::Tracing::EventPayload*) == 0x8);
    // private System.Int32 <i>5__1
    // Size: 0x4
    // Offset: 0x30
    int $i$5__1;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: $GetEnumerator$d__17
    $GetEnumerator$d__17(int $$1__state_ = {}, System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*> $$2__current_ = {}, System::Diagnostics::Tracing::EventPayload* $$4__this_ = {}, int $i$5__1_ = {}) noexcept : $$1__state{$$1__state_}, $$2__current{$$2__current_}, $$4__this{$$4__this_}, $i$5__1{$i$5__1_} {}
    // Creating interface conversion operator: operator System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*>>
    operator System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*>>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*>>*>(this);
    }
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x1516DE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventPayload::$GetEnumerator$d__17* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventPayload::$GetEnumerator$d__17*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x1517198
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x151719C
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Boolean IEnumerator::MoveNext()
    bool MoveNext();
    // Creating proxy method: System_Collections_IEnumerator_MoveNext
    // Maps to method: MoveNext
    bool System_Collections_IEnumerator_MoveNext();
    // private System.Collections.Generic.KeyValuePair`2<System.String,System.Object> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Current()
    // Offset: 0x151735C
    // Implemented from: System.Collections.Generic.IEnumerator`1
    // Base method: T IEnumerator_1::get_Current()
    System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*> System_Collections_Generic_IEnumerator_1_get_Current();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x1517368
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Void IEnumerator::Reset()
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x15173C8
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Object IEnumerator::get_Current()
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
  }; // System.Diagnostics.Tracing.EventPayload/<GetEnumerator>d__17
  // WARNING Not writing size check since size may be invalid!
}
DEFINE_IL2CPP_ARG_TYPE(System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17*, "System.Diagnostics.Tracing", "EventPayload/<GetEnumerator>d__17");
