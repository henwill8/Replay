// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Diagnostics::Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: TraceLoggingDataCollector
  class TraceLoggingDataCollector;
  // Forward declaring type: PropertyAnalysis
  class PropertyAnalysis;
}
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Diagnostics.Tracing.PropertyAccessor`1
  // [] Offset: FFFFFFFF
  template<typename ContainerType>
  class PropertyAccessor_1 : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: PropertyAccessor_1
    PropertyAccessor_1() noexcept {}
    // public System.Void Write(System.Diagnostics.Tracing.TraceLoggingDataCollector collector, ref ContainerType value)
    // Offset: 0xFFFFFFFF
    void Write(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ContainerType& value) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::PropertyAccessor_1::Write");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
    }
    // public System.Object GetData(ContainerType value)
    // Offset: 0xFFFFFFFF
    ::Il2CppObject* GetData(ContainerType value) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::PropertyAccessor_1::GetData");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value);
    }
    // static public System.Diagnostics.Tracing.PropertyAccessor`1<ContainerType> Create(System.Diagnostics.Tracing.PropertyAnalysis property)
    // Offset: 0xFFFFFFFF
    static System::Diagnostics::Tracing::PropertyAccessor_1<ContainerType>* Create(System::Diagnostics::Tracing::PropertyAnalysis* property) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::PropertyAccessor_1::Create");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<PropertyAccessor_1<ContainerType>*>::get(), "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(property))));
      return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::PropertyAccessor_1<ContainerType>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, property);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PropertyAccessor_1<ContainerType>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::PropertyAccessor_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PropertyAccessor_1<ContainerType>*, creationType>()));
    }
  }; // System.Diagnostics.Tracing.PropertyAccessor`1
  // Could not write size check! Type: System.Diagnostics.Tracing.PropertyAccessor`1 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Diagnostics::Tracing::PropertyAccessor_1, "System.Diagnostics.Tracing", "PropertyAccessor`1");
