// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventKeywords
#include "System/Diagnostics/Tracing/EventKeywords.hpp"
// Including type: System.Diagnostics.Tracing.EventLevel
#include "System/Diagnostics/Tracing/EventLevel.hpp"
// Including type: System.Diagnostics.Tracing.EventOpcode
#include "System/Diagnostics/Tracing/EventOpcode.hpp"
// Including type: System.Diagnostics.Tracing.EventTags
#include "System/Diagnostics/Tracing/EventTags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Diagnostics::Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: PropertyAnalysis
  class PropertyAnalysis;
  // Forward declaring type: EventDataAttribute
  class EventDataAttribute;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: System.Diagnostics.Tracing.TypeAnalysis
  // [] Offset: FFFFFFFF
  class TypeAnalysis : public ::Il2CppObject {
    public:
    // readonly System.Diagnostics.Tracing.PropertyAnalysis[] properties
    // Size: 0x8
    // Offset: 0x10
    ::Array<System::Diagnostics::Tracing::PropertyAnalysis*>* properties;
    // Field size check
    static_assert(sizeof(::Array<System::Diagnostics::Tracing::PropertyAnalysis*>*) == 0x8);
    // readonly System.String name
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* name;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // readonly System.Diagnostics.Tracing.EventKeywords keywords
    // Size: 0x8
    // Offset: 0x20
    System::Diagnostics::Tracing::EventKeywords keywords;
    // Field size check
    static_assert(sizeof(System::Diagnostics::Tracing::EventKeywords) == 0x8);
    // readonly System.Diagnostics.Tracing.EventLevel level
    // Size: 0x4
    // Offset: 0x28
    System::Diagnostics::Tracing::EventLevel level;
    // Field size check
    static_assert(sizeof(System::Diagnostics::Tracing::EventLevel) == 0x4);
    // readonly System.Diagnostics.Tracing.EventOpcode opcode
    // Size: 0x4
    // Offset: 0x2C
    System::Diagnostics::Tracing::EventOpcode opcode;
    // Field size check
    static_assert(sizeof(System::Diagnostics::Tracing::EventOpcode) == 0x4);
    // readonly System.Diagnostics.Tracing.EventTags tags
    // Size: 0x4
    // Offset: 0x30
    System::Diagnostics::Tracing::EventTags tags;
    // Field size check
    static_assert(sizeof(System::Diagnostics::Tracing::EventTags) == 0x4);
    // Creating value type constructor for type: TypeAnalysis
    TypeAnalysis(::Array<System::Diagnostics::Tracing::PropertyAnalysis*>* properties_ = {}, ::Il2CppString* name_ = {}, System::Diagnostics::Tracing::EventKeywords keywords_ = {}, System::Diagnostics::Tracing::EventLevel level_ = {}, System::Diagnostics::Tracing::EventOpcode opcode_ = {}, System::Diagnostics::Tracing::EventTags tags_ = {}) noexcept : properties{properties_}, name{name_}, keywords{keywords_}, level{level_}, opcode{opcode_}, tags{tags_} {}
    // public System.Void .ctor(System.Type dataType, System.Diagnostics.Tracing.EventDataAttribute eventAttrib, System.Collections.Generic.List`1<System.Type> recursionCheck)
    // Offset: 0x12A9294
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TypeAnalysis* New_ctor(System::Type* dataType, System::Diagnostics::Tracing::EventDataAttribute* eventAttrib, System::Collections::Generic::List_1<System::Type*>* recursionCheck) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TypeAnalysis::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TypeAnalysis*, creationType>(dataType, eventAttrib, recursionCheck)));
    }
  }; // System.Diagnostics.Tracing.TypeAnalysis
  #pragma pack(pop)
  static check_size<sizeof(TypeAnalysis), 48 + sizeof(System::Diagnostics::Tracing::EventTags)> __System_Diagnostics_Tracing_TypeAnalysisSizeCheck;
  static_assert(sizeof(TypeAnalysis) == 0x34);
}
DEFINE_IL2CPP_ARG_TYPE(System::Diagnostics::Tracing::TypeAnalysis*, "System.Diagnostics.Tracing", "TypeAnalysis");
