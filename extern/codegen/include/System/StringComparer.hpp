// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
// Including type: System.Collections.Generic.IEqualityComparer`1
#include "System/Collections/Generic/IEqualityComparer_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.StringComparer
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CA8388
  class StringComparer : public ::Il2CppObject/*, public System::Collections::IComparer, public System::Collections::IEqualityComparer, public System::Collections::Generic::IComparer_1<::Il2CppString*>, public System::Collections::Generic::IEqualityComparer_1<::Il2CppString*>*/ {
    public:
    // Creating value type constructor for type: StringComparer
    StringComparer() noexcept {}
    // Creating interface conversion operator: operator System::Collections::IComparer
    operator System::Collections::IComparer() noexcept {
      return *reinterpret_cast<System::Collections::IComparer*>(this);
    }
    // Creating interface conversion operator: operator System::Collections::IEqualityComparer
    operator System::Collections::IEqualityComparer() noexcept {
      return *reinterpret_cast<System::Collections::IEqualityComparer*>(this);
    }
    // Creating interface conversion operator: operator System::Collections::Generic::IComparer_1<::Il2CppString*>
    operator System::Collections::Generic::IComparer_1<::Il2CppString*>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IComparer_1<::Il2CppString*>*>(this);
    }
    // Creating interface conversion operator: operator System::Collections::Generic::IEqualityComparer_1<::Il2CppString*>
    operator System::Collections::Generic::IEqualityComparer_1<::Il2CppString*>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IEqualityComparer_1<::Il2CppString*>*>(this);
    }
    // Get static field: static private readonly System.StringComparer _invariantCulture
    static System::StringComparer* _get__invariantCulture();
    // Set static field: static private readonly System.StringComparer _invariantCulture
    static void _set__invariantCulture(System::StringComparer* value);
    // Get static field: static private readonly System.StringComparer _invariantCultureIgnoreCase
    static System::StringComparer* _get__invariantCultureIgnoreCase();
    // Set static field: static private readonly System.StringComparer _invariantCultureIgnoreCase
    static void _set__invariantCultureIgnoreCase(System::StringComparer* value);
    // Get static field: static private readonly System.StringComparer _ordinal
    static System::StringComparer* _get__ordinal();
    // Set static field: static private readonly System.StringComparer _ordinal
    static void _set__ordinal(System::StringComparer* value);
    // Get static field: static private readonly System.StringComparer _ordinalIgnoreCase
    static System::StringComparer* _get__ordinalIgnoreCase();
    // Set static field: static private readonly System.StringComparer _ordinalIgnoreCase
    static void _set__ordinalIgnoreCase(System::StringComparer* value);
    // static public System.StringComparer get_InvariantCultureIgnoreCase()
    // Offset: 0x1911ED4
    static System::StringComparer* get_InvariantCultureIgnoreCase();
    // static public System.StringComparer get_CurrentCultureIgnoreCase()
    // Offset: 0x1911F3C
    static System::StringComparer* get_CurrentCultureIgnoreCase();
    // static public System.StringComparer get_Ordinal()
    // Offset: 0x1911FD0
    static System::StringComparer* get_Ordinal();
    // static public System.StringComparer get_OrdinalIgnoreCase()
    // Offset: 0x1912038
    static System::StringComparer* get_OrdinalIgnoreCase();
    // static private System.Void .cctor()
    // Offset: 0x19123DC
    static void _cctor();
    // public System.Int32 Compare(System.Object x, System.Object y)
    // Offset: 0x19120A0
    // Implemented from: System.Collections.IComparer
    // Base method: System.Int32 IComparer::Compare(System.Object x, System.Object y)
    int Compare(::Il2CppObject* x, ::Il2CppObject* y);
    // Creating proxy method: System_Collections_IComparer_Compare
    // Maps to method: Compare
    int System_Collections_IComparer_Compare(::Il2CppObject* x, ::Il2CppObject* y);
    // public System.Boolean Equals(System.Object x, System.Object y)
    // Offset: 0x1912238
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object x, System.Object y)
    // Base method: System.Boolean IEqualityComparer::Equals(System.Object x, System.Object y)
    bool Equals(::Il2CppObject* x, ::Il2CppObject* y);
    // Creating proxy method: System_Collections_IEqualityComparer_Equals
    // Maps to method: Equals
    bool System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y);
    // public System.Int32 GetHashCode(System.Object obj)
    // Offset: 0x1912308
    // Implemented from: System.Collections.IEqualityComparer
    // Base method: System.Int32 IEqualityComparer::GetHashCode(System.Object obj)
    int GetHashCode(::Il2CppObject* obj);
    // Creating proxy method: System_Collections_IEqualityComparer_GetHashCode
    // Maps to method: GetHashCode
    int System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj);
    // public System.Int32 Compare(System.String x, System.String y)
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.Generic.IComparer`1
    // Base method: System.Int32 IComparer_1::Compare(System.String x, System.String y)
    int Compare(::Il2CppString* x, ::Il2CppString* y);
    // public System.Boolean Equals(System.String x, System.String y)
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.Generic.IEqualityComparer`1
    // Base method: System.Boolean IEqualityComparer_1::Equals(System.String x, System.String y)
    bool Equals(::Il2CppString* x, ::Il2CppString* y);
    // public System.Int32 GetHashCode(System.String obj)
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.Generic.IEqualityComparer`1
    // Base method: System.Int32 IEqualityComparer_1::GetHashCode(System.String obj)
    int GetHashCode(::Il2CppString* obj);
    // protected System.Void .ctor()
    // Offset: 0x19123D4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StringComparer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StringComparer*, creationType>()));
    }
  }; // System.StringComparer
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::StringComparer*, "System", "StringComparer");
