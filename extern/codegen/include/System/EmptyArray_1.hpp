// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System
namespace System {
  // WARNING Size may be invalid!
  // Autogenerated type: System.EmptyArray`1
  // [] Offset: FFFFFFFF
  template<typename T>
  class EmptyArray_1 : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: EmptyArray_1
    EmptyArray_1() noexcept {}
    // Autogenerated static field getter
    // Get static field: static public readonly T[] Value
    static ::Array<T>* _get_Value() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::EmptyArray_1::_get_Value");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EmptyArray_1<T>*>::get(), "Value"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly T[] Value
    static void _set_Value(::Array<T>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::EmptyArray_1::_set_Value");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EmptyArray_1<T>*>::get(), "Value", value));
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::EmptyArray_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EmptyArray_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
      ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
    }
  }; // System.EmptyArray`1
  // Could not write size check! Type: System.EmptyArray`1 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::EmptyArray_1, "System", "EmptyArray`1");
