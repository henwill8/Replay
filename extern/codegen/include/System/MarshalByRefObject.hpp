// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting
namespace System::Runtime::Remoting {
  // Forward declaring type: ServerIdentity
  class ServerIdentity;
  // Forward declaring type: ObjRef
  class ObjRef;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.MarshalByRefObject
  class MarshalByRefObject : public ::Il2CppObject {
    public:
    // private System.Object _identity
    // Offset: 0x10
    ::Il2CppObject* identity;
    // Creating conversion operator: operator ::Il2CppObject*
    constexpr operator ::Il2CppObject*() const noexcept {
      return identity;
    }
    // System.Runtime.Remoting.ServerIdentity get_ObjectIdentity()
    // Offset: 0x10177B8
    System::Runtime::Remoting::ServerIdentity* get_ObjectIdentity();
    // System.Void set_ObjectIdentity(System.Runtime.Remoting.ServerIdentity value)
    // Offset: 0x1017888
    void set_ObjectIdentity(System::Runtime::Remoting::ServerIdentity* value);
    // public System.Runtime.Remoting.ObjRef CreateObjRef(System.Type requestedType)
    // Offset: 0x10178E4
    System::Runtime::Remoting::ObjRef* CreateObjRef(System::Type* requestedType);
    // public System.Object InitializeLifetimeService()
    // Offset: 0x1017940
    ::Il2CppObject* InitializeLifetimeService();
    // protected System.Void .ctor()
    // Offset: 0x100A890
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static MarshalByRefObject* New_ctor();
  }; // System.MarshalByRefObject
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::MarshalByRefObject*, "System", "MarshalByRefObject");
#pragma pack(pop)
