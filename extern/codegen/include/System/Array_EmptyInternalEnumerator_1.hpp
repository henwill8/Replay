// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System
namespace System {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Array/EmptyInternalEnumerator`1
  // [] Offset: FFFFFFFF
  template<typename T>
  class Array::EmptyInternalEnumerator_1 : public ::Il2CppObject/*, public System::Collections::Generic::IEnumerator_1<T>*/ {
    public:
    // Creating value type constructor for type: EmptyInternalEnumerator_1
    EmptyInternalEnumerator_1() noexcept {}
    // Creating interface conversion operator: operator System::Collections::Generic::IEnumerator_1<T>
    operator System::Collections::Generic::IEnumerator_1<T>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IEnumerator_1<T>*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.Array/EmptyInternalEnumerator`1<T> Value
    static System::Array::EmptyInternalEnumerator_1<T>* _get_Value() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Array::EmptyInternalEnumerator_1::_get_Value");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Array::EmptyInternalEnumerator_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Array::EmptyInternalEnumerator_1<T>*>::get(), "Value"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.Array/EmptyInternalEnumerator`1<T> Value
    static void _set_Value(System::Array::EmptyInternalEnumerator_1<T>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Array::EmptyInternalEnumerator_1::_set_Value");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Array::EmptyInternalEnumerator_1<T>*>::get(), "Value", value));
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Array::EmptyInternalEnumerator_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Array::EmptyInternalEnumerator_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
      ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
    }
    // public System.Void Dispose()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Array::EmptyInternalEnumerator_1::Dispose");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose() {
      Dispose();
    }
    // public System.Boolean MoveNext()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Boolean IEnumerator::MoveNext()
    bool MoveNext() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Array::EmptyInternalEnumerator_1::MoveNext");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
    }
    // Creating proxy method: System_Collections_IEnumerator_MoveNext
    // Maps to method: MoveNext
    bool System_Collections_IEnumerator_MoveNext() {
      return MoveNext();
    }
    // public T get_Current()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.Generic.IEnumerator`1
    // Base method: T IEnumerator_1::get_Current()
    T get_Current() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Array::EmptyInternalEnumerator_1::get_Current");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<T, false>(this, ___internal__method);
    }
    // Creating proxy method: System_Collections_Generic_IEnumerator_1_get_Current
    // Maps to method: get_Current
    T System_Collections_Generic_IEnumerator_1_get_Current() {
      return get_Current();
    }
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Object IEnumerator::get_Current()
    ::Il2CppObject* System_Collections_IEnumerator_get_Current() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Array::EmptyInternalEnumerator_1::System.Collections.IEnumerator.get_Current");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Void IEnumerator::Reset()
    void System_Collections_IEnumerator_Reset() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Array::EmptyInternalEnumerator_1::System.Collections.IEnumerator.Reset");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Array::EmptyInternalEnumerator_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Array::EmptyInternalEnumerator_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Array::EmptyInternalEnumerator_1<T>*, creationType>()));
    }
  }; // System.Array/EmptyInternalEnumerator`1
  // Could not write size check! Type: System.Array/EmptyInternalEnumerator`1 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Array::EmptyInternalEnumerator_1, "System", "Array/EmptyInternalEnumerator`1");
