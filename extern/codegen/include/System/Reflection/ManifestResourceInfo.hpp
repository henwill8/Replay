// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.ResourceLocation
#include "System/Reflection/ResourceLocation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: Assembly
  class Assembly;
}
// Completed forward declares
// Type namespace: System.Reflection
namespace System::Reflection {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: System.Reflection.ManifestResourceInfo
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CA92A8
  class ManifestResourceInfo : public ::Il2CppObject {
    public:
    // private System.Reflection.Assembly _containingAssembly
    // Size: 0x8
    // Offset: 0x10
    System::Reflection::Assembly* containingAssembly;
    // Field size check
    static_assert(sizeof(System::Reflection::Assembly*) == 0x8);
    // private System.String _containingFileName
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* containingFileName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Reflection.ResourceLocation _resourceLocation
    // Size: 0x4
    // Offset: 0x20
    System::Reflection::ResourceLocation resourceLocation;
    // Field size check
    static_assert(sizeof(System::Reflection::ResourceLocation) == 0x4);
    // Creating value type constructor for type: ManifestResourceInfo
    ManifestResourceInfo(System::Reflection::Assembly* containingAssembly_ = {}, ::Il2CppString* containingFileName_ = {}, System::Reflection::ResourceLocation resourceLocation_ = {}) noexcept : containingAssembly{containingAssembly_}, containingFileName{containingFileName_}, resourceLocation{resourceLocation_} {}
    // public System.Void .ctor(System.Reflection.Assembly containingAssembly, System.String containingFileName, System.Reflection.ResourceLocation resourceLocation)
    // Offset: 0x1947504
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ManifestResourceInfo* New_ctor(System::Reflection::Assembly* containingAssembly, ::Il2CppString* containingFileName, System::Reflection::ResourceLocation resourceLocation) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::ManifestResourceInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ManifestResourceInfo*, creationType>(containingAssembly, containingFileName, resourceLocation)));
    }
    // public System.Reflection.Assembly get_ReferencedAssembly()
    // Offset: 0x1947560
    System::Reflection::Assembly* get_ReferencedAssembly();
    // public System.String get_FileName()
    // Offset: 0x1947568
    ::Il2CppString* get_FileName();
    // public System.Reflection.ResourceLocation get_ResourceLocation()
    // Offset: 0x1947570
    System::Reflection::ResourceLocation get_ResourceLocation();
  }; // System.Reflection.ManifestResourceInfo
  #pragma pack(pop)
  static check_size<sizeof(ManifestResourceInfo), 32 + sizeof(System::Reflection::ResourceLocation)> __System_Reflection_ManifestResourceInfoSizeCheck;
  static_assert(sizeof(ManifestResourceInfo) == 0x24);
}
DEFINE_IL2CPP_ARG_TYPE(System::Reflection::ManifestResourceInfo*, "System.Reflection", "ManifestResourceInfo");
