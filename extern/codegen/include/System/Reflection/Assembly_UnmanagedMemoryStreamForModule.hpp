// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.IO.UnmanagedMemoryStream
#include "System/IO/UnmanagedMemoryStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: Module
  class Module;
}
// Completed forward declares
// Type namespace: System.Reflection
namespace System::Reflection {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: System.Reflection.Assembly/UnmanagedMemoryStreamForModule
  // [] Offset: FFFFFFFF
  class Assembly::UnmanagedMemoryStreamForModule : public System::IO::UnmanagedMemoryStream {
    public:
    // private System.Reflection.Module module
    // Size: 0x8
    // Offset: 0x68
    System::Reflection::Module* module;
    // Field size check
    static_assert(sizeof(System::Reflection::Module*) == 0x8);
    // Creating value type constructor for type: UnmanagedMemoryStreamForModule
    UnmanagedMemoryStreamForModule(System::Reflection::Module* module_ = {}) noexcept : module{module_} {}
    // public System.Void .ctor(System.Byte* pointer, System.Int64 length, System.Reflection.Module module)
    // Offset: 0x1B25BC4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Assembly::UnmanagedMemoryStreamForModule* New_ctor(uint8_t* pointer, int64_t length, System::Reflection::Module* module) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Assembly::UnmanagedMemoryStreamForModule::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Assembly::UnmanagedMemoryStreamForModule*, creationType>(pointer, length, module)));
    }
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x1B26F6C
    // Implemented from: System.IO.UnmanagedMemoryStream
    // Base method: System.Void UnmanagedMemoryStream::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
  }; // System.Reflection.Assembly/UnmanagedMemoryStreamForModule
  #pragma pack(pop)
  static check_size<sizeof(Assembly::UnmanagedMemoryStreamForModule), 104 + sizeof(System::Reflection::Module*)> __System_Reflection_Assembly_UnmanagedMemoryStreamForModuleSizeCheck;
  static_assert(sizeof(Assembly::UnmanagedMemoryStreamForModule) == 0x70);
}
DEFINE_IL2CPP_ARG_TYPE(System::Reflection::Assembly::UnmanagedMemoryStreamForModule*, "System.Reflection", "Assembly/UnmanagedMemoryStreamForModule");
