// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.ISerializable
#include "System/Runtime/Serialization/ISerializable.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: RuntimeType
  class RuntimeType;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Reflection
namespace System::Reflection {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Reflection.Pointer
  // [] Offset: FFFFFFFF
  // [CLSCompliantAttribute] Offset: CA9628
  // [ComVisibleAttribute] Offset: CA9628
  class Pointer : public ::Il2CppObject/*, public System::Runtime::Serialization::ISerializable*/ {
    public:
    // private System.Void* _ptr
    // Size: 0x8
    // Offset: 0x10
    void* ptr;
    // Field size check
    static_assert(sizeof(void*) == 0x8);
    // private System.RuntimeType _ptrType
    // Size: 0x8
    // Offset: 0x18
    System::RuntimeType* ptrType;
    // Field size check
    static_assert(sizeof(System::RuntimeType*) == 0x8);
    // Creating value type constructor for type: Pointer
    Pointer(void* ptr_ = {}, System::RuntimeType* ptrType_ = {}) noexcept : ptr{ptr_}, ptrType{ptrType_} {}
    // Creating interface conversion operator: operator System::Runtime::Serialization::ISerializable
    operator System::Runtime::Serialization::ISerializable() noexcept {
      return *reinterpret_cast<System::Runtime::Serialization::ISerializable*>(this);
    }
    // private System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x194F5B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Pointer* New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Pointer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Pointer*, creationType>(info, context)));
    }
    // static public System.Object Box(System.Void* ptr, System.Type type)
    // Offset: 0x194F720
    static ::Il2CppObject* Box(void* ptr, System::Type* type);
    // private System.Void .ctor()
    // Offset: 0x194F5B0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Pointer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Pointer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Pointer*, creationType>()));
    }
    // private System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x194F8EC
    // Implemented from: System.Runtime.Serialization.ISerializable
    // Base method: System.Void ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    void System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
  }; // System.Reflection.Pointer
  #pragma pack(pop)
  static check_size<sizeof(Pointer), 24 + sizeof(System::RuntimeType*)> __System_Reflection_PointerSizeCheck;
  static_assert(sizeof(Pointer) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(System::Reflection::Pointer*, "System.Reflection", "Pointer");
