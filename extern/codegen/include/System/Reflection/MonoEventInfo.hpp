// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Reflection.EventAttributes
#include "System/Reflection/EventAttributes.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
  // Forward declaring type: MonoEvent
  class MonoEvent;
}
// Completed forward declares
// Type namespace: System.Reflection
namespace System::Reflection {
  // Autogenerated type: System.Reflection.MonoEventInfo
  struct MonoEventInfo : public System::ValueType {
    public:
    // public System.Type declaring_type
    // Offset: 0x0
    System::Type* declaring_type;
    // public System.Type reflected_type
    // Offset: 0x8
    System::Type* reflected_type;
    // public System.String name
    // Offset: 0x10
    ::Il2CppString* name;
    // public System.Reflection.MethodInfo add_method
    // Offset: 0x18
    System::Reflection::MethodInfo* add_method;
    // public System.Reflection.MethodInfo remove_method
    // Offset: 0x20
    System::Reflection::MethodInfo* remove_method;
    // public System.Reflection.MethodInfo raise_method
    // Offset: 0x28
    System::Reflection::MethodInfo* raise_method;
    // public System.Reflection.EventAttributes attrs
    // Offset: 0x30
    System::Reflection::EventAttributes attrs;
    // public System.Reflection.MethodInfo[] other_methods
    // Offset: 0x38
    ::Array<System::Reflection::MethodInfo*>* other_methods;
    // Creating value type constructor for type: MonoEventInfo
    constexpr MonoEventInfo(System::Type* declaring_type_ = {}, System::Type* reflected_type_ = {}, ::Il2CppString* name_ = {}, System::Reflection::MethodInfo* add_method_ = {}, System::Reflection::MethodInfo* remove_method_ = {}, System::Reflection::MethodInfo* raise_method_ = {}, System::Reflection::EventAttributes attrs_ = {}, ::Array<System::Reflection::MethodInfo*>* other_methods_ = {}) noexcept : declaring_type{declaring_type_}, reflected_type{reflected_type_}, name{name_}, add_method{add_method_}, remove_method{remove_method_}, raise_method{raise_method_}, attrs{attrs_}, other_methods{other_methods_} {}
    // static private System.Void get_event_info(System.Reflection.MonoEvent ev, out System.Reflection.MonoEventInfo info)
    // Offset: 0x1152E54
    static void get_event_info(System::Reflection::MonoEvent* ev, System::Reflection::MonoEventInfo& info);
    // static System.Reflection.MonoEventInfo GetEventInfo(System.Reflection.MonoEvent ev)
    // Offset: 0x1152A64
    static System::Reflection::MonoEventInfo GetEventInfo(System::Reflection::MonoEvent* ev);
  }; // System.Reflection.MonoEventInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Reflection::MonoEventInfo, "System.Reflection", "MonoEventInfo");
#pragma pack(pop)
