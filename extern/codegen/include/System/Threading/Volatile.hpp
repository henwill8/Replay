// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Threading
namespace System::Threading {
  // Autogenerated type: System.Threading.Volatile
  class Volatile : public ::Il2CppObject {
    public:
    // static public System.Boolean Read(ref System.Boolean location)
    // Offset: 0x1D1F594
    static bool Read(bool& location);
    // static public System.Int32 Read(ref System.Int32 location)
    // Offset: 0x1D1F5B8
    static int Read(int& location);
    // static public T Read(ref T location)
    // Offset: 0xFFFFFFFF
    template<class T>
    static T Read(T& location) {
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<T>("System.Threading", "Volatile", "Read", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, location)));
    }
    // static public System.Void Write(ref System.Boolean location, System.Boolean value)
    // Offset: 0x1D1F5DC
    static void Write(bool& location, bool value);
    // static public System.Void Write(ref System.Int32 location, System.Int32 value)
    // Offset: 0x1D1F604
    static void Write(int& location, int value);
    // static public System.Void Write(ref T location, T value)
    // Offset: 0xFFFFFFFF
    template<class T>
    static void Write(T& location, T value) {
      THROW_UNLESS(il2cpp_utils::RunGenericMethod("System.Threading", "Volatile", "Write", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, location, value));
    }
  }; // System.Threading.Volatile
}
DEFINE_IL2CPP_ARG_TYPE(System::Threading::Volatile*, "System.Threading", "Volatile");
#pragma pack(pop)
