// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadPoolWorkQueue
#include "System/Threading/ThreadPoolWorkQueue.hpp"
// Including type: System.Threading.SpinLock
#include "System/Threading/SpinLock.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: IThreadPoolWorkItem
  class IThreadPoolWorkItem;
}
// Completed forward declares
// Type namespace: System.Threading
namespace System::Threading {
  // Autogenerated type: System.Threading.ThreadPoolWorkQueue/WorkStealingQueue
  class ThreadPoolWorkQueue::WorkStealingQueue : public ::Il2CppObject {
    public:
    // System.Threading.IThreadPoolWorkItem[] m_array
    // Offset: 0x10
    ::Array<System::Threading::IThreadPoolWorkItem*>* m_array;
    // private System.Int32 m_mask
    // Offset: 0x18
    int m_mask;
    // private System.Int32 m_headIndex
    // Offset: 0x1C
    int m_headIndex;
    // private System.Int32 m_tailIndex
    // Offset: 0x20
    int m_tailIndex;
    // private System.Threading.SpinLock m_foreignLock
    // Offset: 0x24
    System::Threading::SpinLock m_foreignLock;
    // public System.Void LocalPush(System.Threading.IThreadPoolWorkItem obj)
    // Offset: 0xCEBC4C
    void LocalPush(System::Threading::IThreadPoolWorkItem* obj);
    // public System.Boolean LocalFindAndPop(System.Threading.IThreadPoolWorkItem obj)
    // Offset: 0xCEC1B8
    bool LocalFindAndPop(System::Threading::IThreadPoolWorkItem* obj);
    // public System.Boolean LocalPop(out System.Threading.IThreadPoolWorkItem obj)
    // Offset: 0xCEC660
    bool LocalPop(System::Threading::IThreadPoolWorkItem*& obj);
    // public System.Boolean TrySteal(out System.Threading.IThreadPoolWorkItem obj, ref System.Boolean missedSteal)
    // Offset: 0xCECAC4
    bool TrySteal(System::Threading::IThreadPoolWorkItem*& obj, bool& missedSteal);
    // private System.Boolean TrySteal(out System.Threading.IThreadPoolWorkItem obj, ref System.Boolean missedSteal, System.Int32 millisecondsTimeout)
    // Offset: 0xCED228
    bool TrySteal(System::Threading::IThreadPoolWorkItem*& obj, bool& missedSteal, int millisecondsTimeout);
    // public System.Void .ctor()
    // Offset: 0xCED508
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static ThreadPoolWorkQueue::WorkStealingQueue* New_ctor();
  }; // System.Threading.ThreadPoolWorkQueue/WorkStealingQueue
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Threading::ThreadPoolWorkQueue::WorkStealingQueue*, "System.Threading", "ThreadPoolWorkQueue/WorkStealingQueue");
#pragma pack(pop)
