// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.TaskCreationOptions
#include "System/Threading/Tasks/TaskCreationOptions.hpp"
// Including type: System.Threading.Tasks.TaskContinuationOptions
#include "System/Threading/Tasks/TaskContinuationOptions.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Skipping declaration: FromAsyncTrimPromise`1 because it is already included!
  // Skipping declaration: <>c__DisplayClass35_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass35_1 because it is already included!
  // Forward declaring type: TaskScheduler
  class TaskScheduler;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: AtomicBoolean
  class AtomicBoolean;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
  // Skipping declaration: IAsyncResult because it is already included!
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
  // Forward declaring type: Func`5<T1, T2, T3, T4, TResult>
  template<typename T1, typename T2, typename T3, typename T4, typename TResult>
  class Func_5;
}
// Completed forward declares
// Type namespace: System.Threading.Tasks
namespace System::Threading::Tasks {
  // Autogenerated type: System.Threading.Tasks.TaskFactory`1
  template<typename TResult>
  class TaskFactory_1 : public ::Il2CppObject {
    public:
    // Nested type: System::Threading::Tasks::TaskFactory_1::FromAsyncTrimPromise_1<TResult, TInstance>
    template<typename TInstance>
    class FromAsyncTrimPromise_1;
    // Nested type: System::Threading::Tasks::TaskFactory_1::$$c__DisplayClass35_0<TResult>
    class $$c__DisplayClass35_0;
    // Nested type: System::Threading::Tasks::TaskFactory_1::$$c__DisplayClass35_1<TResult>
    class $$c__DisplayClass35_1;
    // Autogenerated type: System.Threading.Tasks.TaskFactory`1/FromAsyncTrimPromise`1
    template<typename TInstance>
    class FromAsyncTrimPromise_1 : public System::Threading::Tasks::Task_1<TResult>, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = TaskFactory_1<TResult>*;
      static constexpr std::string_view NESTED_NAME = "FromAsyncTrimPromise_1";
      // private TInstance m_thisRef
      // Offset: 0x0
      TInstance m_thisRef;
      // private System.Func`3<TInstance,System.IAsyncResult,TResult> m_endMethod
      // Offset: 0x0
      System::Func_3<TInstance, System::IAsyncResult*, TResult>* m_endMethod;
      // Autogenerated static field getter
      // Get static field: static readonly System.AsyncCallback s_completeFromAsyncResult
      static System::AsyncCallback* _get_s_completeFromAsyncResult() {
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AsyncCallback*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TaskFactory_1<TResult>::FromAsyncTrimPromise_1<TInstance>*>::get(), "s_completeFromAsyncResult"));
      }
      // Autogenerated static field setter
      // Set static field: static readonly System.AsyncCallback s_completeFromAsyncResult
      static void _set_s_completeFromAsyncResult(System::AsyncCallback* value) {
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TaskFactory_1<TResult>::FromAsyncTrimPromise_1<TInstance>*>::get(), "s_completeFromAsyncResult", value));
      }
      // System.Void .ctor(TInstance thisRef, System.Func`3<TInstance,System.IAsyncResult,TResult> endMethod)
      // Offset: 0xFFFFFFFF
      static typename TaskFactory_1<TResult>::FromAsyncTrimPromise_1<TInstance>* New_ctor(TInstance thisRef, System::Func_3<TInstance, System::IAsyncResult*, TResult>* endMethod) {
        return THROW_UNLESS(il2cpp_utils::New<typename TaskFactory_1<TResult>::FromAsyncTrimPromise_1<TInstance>*>(thisRef, endMethod));
      }
      // static System.Void CompleteFromAsyncResult(System.IAsyncResult asyncResult)
      // Offset: 0xFFFFFFFF
      static void CompleteFromAsyncResult(System::IAsyncResult* asyncResult) {
        THROW_UNLESS(il2cpp_utils::RunMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TaskFactory_1<TResult>::FromAsyncTrimPromise_1<TInstance>*>::get(), "CompleteFromAsyncResult", asyncResult));
      }
      // System.Void Complete(TInstance thisRef, System.Func`3<TInstance,System.IAsyncResult,TResult> endMethod, System.IAsyncResult asyncResult, System.Boolean requiresSynchronization)
      // Offset: 0xFFFFFFFF
      void Complete(TInstance thisRef, System::Func_3<TInstance, System::IAsyncResult*, TResult>* endMethod, System::IAsyncResult* asyncResult, bool requiresSynchronization) {
        THROW_UNLESS(il2cpp_utils::RunMethod(this, "Complete", thisRef, endMethod, asyncResult, requiresSynchronization));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Threading.Tasks.Task`1
      // Base method: System.Void Task_1::.cctor()
      // Base method: System.Void Task::.cctor()
      static void _cctor() {
        THROW_UNLESS(il2cpp_utils::RunMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename TaskFactory_1<TResult>::FromAsyncTrimPromise_1<TInstance>*>::get(), ".cctor"));
      }
    }; // System.Threading.Tasks.TaskFactory`1/FromAsyncTrimPromise`1
    // Autogenerated type: System.Threading.Tasks.TaskFactory`1/<>c__DisplayClass35_0
    class $$c__DisplayClass35_0 : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = TaskFactory_1<TResult>*;
      static constexpr std::string_view NESTED_NAME = "$$c__DisplayClass35_0";
      // public System.Func`2<System.IAsyncResult,TResult> endFunction
      // Offset: 0x0
      System::Func_2<System::IAsyncResult*, TResult>* endFunction;
      // public System.Action`1<System.IAsyncResult> endAction
      // Offset: 0x0
      System::Action_1<System::IAsyncResult*>* endAction;
      // public System.Threading.Tasks.Task`1<TResult> promise
      // Offset: 0x0
      System::Threading::Tasks::Task_1<TResult>* promise;
      // System.Void <FromAsyncImpl>b__0(System.IAsyncResult iar)
      // Offset: 0xFFFFFFFF
      void $FromAsyncImpl$b__0(System::IAsyncResult* iar) {
        THROW_UNLESS(il2cpp_utils::RunMethod(this, "<FromAsyncImpl>b__0", iar));
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      static typename TaskFactory_1<TResult>::$$c__DisplayClass35_0* New_ctor() {
        return THROW_UNLESS(il2cpp_utils::New<typename TaskFactory_1<TResult>::$$c__DisplayClass35_0*>());
      }
    }; // System.Threading.Tasks.TaskFactory`1/<>c__DisplayClass35_0
    // Autogenerated type: System.Threading.Tasks.TaskFactory`1/<>c__DisplayClass35_1
    class $$c__DisplayClass35_1 : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = TaskFactory_1<TResult>*;
      static constexpr std::string_view NESTED_NAME = "$$c__DisplayClass35_1";
      // public System.Threading.AtomicBoolean invoked
      // Offset: 0x0
      System::Threading::AtomicBoolean* invoked;
      // public System.Threading.Tasks.TaskFactory`1/<>c__DisplayClass35_0<TResult> CS$<>8__locals1
      // Offset: 0x0
      typename System::Threading::Tasks::TaskFactory_1<TResult>::$$c__DisplayClass35_0* CS$$$8__locals1;
      // System.Void <FromAsyncImpl>b__1(System.IAsyncResult iar)
      // Offset: 0xFFFFFFFF
      void $FromAsyncImpl$b__1(System::IAsyncResult* iar) {
        THROW_UNLESS(il2cpp_utils::RunMethod(this, "<FromAsyncImpl>b__1", iar));
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      static typename TaskFactory_1<TResult>::$$c__DisplayClass35_1* New_ctor() {
        return THROW_UNLESS(il2cpp_utils::New<typename TaskFactory_1<TResult>::$$c__DisplayClass35_1*>());
      }
    }; // System.Threading.Tasks.TaskFactory`1/<>c__DisplayClass35_1
    // private System.Threading.CancellationToken m_defaultCancellationToken
    // Offset: 0x0
    System::Threading::CancellationToken m_defaultCancellationToken;
    // private System.Threading.Tasks.TaskScheduler m_defaultScheduler
    // Offset: 0x0
    System::Threading::Tasks::TaskScheduler* m_defaultScheduler;
    // private System.Threading.Tasks.TaskCreationOptions m_defaultCreationOptions
    // Offset: 0x0
    System::Threading::Tasks::TaskCreationOptions m_defaultCreationOptions;
    // private System.Threading.Tasks.TaskContinuationOptions m_defaultContinuationOptions
    // Offset: 0x0
    System::Threading::Tasks::TaskContinuationOptions m_defaultContinuationOptions;
    // public System.Void .ctor(System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler)
    // Offset: 0xFFFFFFFF
    static TaskFactory_1<TResult>* New_ctor(System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler* scheduler) {
      return THROW_UNLESS(il2cpp_utils::New<TaskFactory_1<TResult>*>(cancellationToken, creationOptions, continuationOptions, scheduler));
    }
    // public System.Threading.Tasks.Task`1<TResult> StartNew(System.Func`1<TResult> function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler)
    // Offset: 0xFFFFFFFF
    System::Threading::Tasks::Task_1<TResult>* StartNew(System::Func_1<TResult>* function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler* scheduler) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<TResult>*>(this, "StartNew", function, cancellationToken, creationOptions, scheduler));
    }
    // static private System.Void FromAsyncCoreLogic(System.IAsyncResult iar, System.Func`2<System.IAsyncResult,TResult> endFunction, System.Action`1<System.IAsyncResult> endAction, System.Threading.Tasks.Task`1<TResult> promise, System.Boolean requiresSynchronization)
    // Offset: 0xFFFFFFFF
    static void FromAsyncCoreLogic(System::IAsyncResult* iar, System::Func_2<System::IAsyncResult*, TResult>* endFunction, System::Action_1<System::IAsyncResult*>* endAction, System::Threading::Tasks::Task_1<TResult>* promise, bool requiresSynchronization) {
      THROW_UNLESS(il2cpp_utils::RunMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TaskFactory_1<TResult>*>::get(), "FromAsyncCoreLogic", iar, endFunction, endAction, promise, requiresSynchronization));
    }
    // public System.Threading.Tasks.Task`1<TResult> FromAsync(System.Func`3<System.AsyncCallback,System.Object,System.IAsyncResult> beginMethod, System.Func`2<System.IAsyncResult,TResult> endMethod, System.Object state)
    // Offset: 0xFFFFFFFF
    System::Threading::Tasks::Task_1<TResult>* FromAsync(System::Func_3<System::AsyncCallback*, ::Il2CppObject*, System::IAsyncResult*>* beginMethod, System::Func_2<System::IAsyncResult*, TResult>* endMethod, ::Il2CppObject* state) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<TResult>*>(this, "FromAsync", beginMethod, endMethod, state));
    }
    // static System.Threading.Tasks.Task`1<TResult> FromAsyncImpl(System.Func`3<System.AsyncCallback,System.Object,System.IAsyncResult> beginMethod, System.Func`2<System.IAsyncResult,TResult> endFunction, System.Action`1<System.IAsyncResult> endAction, System.Object state, System.Threading.Tasks.TaskCreationOptions creationOptions)
    // Offset: 0xFFFFFFFF
    static System::Threading::Tasks::Task_1<TResult>* FromAsyncImpl(System::Func_3<System::AsyncCallback*, ::Il2CppObject*, System::IAsyncResult*>* beginMethod, System::Func_2<System::IAsyncResult*, TResult>* endFunction, System::Action_1<System::IAsyncResult*>* endAction, ::Il2CppObject* state, System::Threading::Tasks::TaskCreationOptions creationOptions) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<TResult>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TaskFactory_1<TResult>*>::get(), "FromAsyncImpl", beginMethod, endFunction, endAction, state, creationOptions));
    }
    // static System.Threading.Tasks.Task`1<TResult> FromAsyncTrim(TInstance thisRef, TArgs args, System.Func`5<TInstance,TArgs,System.AsyncCallback,System.Object,System.IAsyncResult> beginMethod, System.Func`3<TInstance,System.IAsyncResult,TResult> endMethod)
    // Offset: 0xFFFFFFFF
    template<class TInstance, class TArgs>
    static System::Threading::Tasks::Task_1<TResult>* FromAsyncTrim(TInstance thisRef, TArgs args, System::Func_5<TInstance, TArgs, System::AsyncCallback*, ::Il2CppObject*, System::IAsyncResult*>* beginMethod, System::Func_3<TInstance, System::IAsyncResult*, TResult>* endMethod) {
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<System::Threading::Tasks::Task_1<TResult>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TaskFactory_1<TResult>*>::get(), "FromAsyncTrim", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TInstance>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TArgs>::get()}, thisRef, args, beginMethod, endMethod)));
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static TaskFactory_1<TResult>* New_ctor() {
      return THROW_UNLESS(il2cpp_utils::New<TaskFactory_1<TResult>*>());
    }
  }; // System.Threading.Tasks.TaskFactory`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Threading::Tasks::TaskFactory_1, "System.Threading.Tasks", "TaskFactory`1");
#pragma pack(pop)
