// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Threading
namespace System::Threading {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: System.Threading.AtomicBoolean
  // [] Offset: FFFFFFFF
  class AtomicBoolean : public ::Il2CppObject {
    public:
    // private System.Int32 flag
    // Size: 0x4
    // Offset: 0x10
    int flag;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: AtomicBoolean
    AtomicBoolean(int flag_ = {}) noexcept : flag{flag_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return flag;
    }
    // public System.Boolean TryRelaxedSet()
    // Offset: 0x1A79C40
    bool TryRelaxedSet();
    // public System.Boolean Exchange(System.Boolean newVal)
    // Offset: 0x1A79C70
    bool Exchange(bool newVal);
    // public System.Boolean Equals(System.Threading.AtomicBoolean rhs)
    // Offset: 0x1A79C98
    bool Equals(System::Threading::AtomicBoolean* rhs);
    // public override System.Boolean Equals(System.Object rhs)
    // Offset: 0x1A79CBC
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object rhs)
    bool Equals(::Il2CppObject* rhs);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1A79D58
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public System.Void .ctor()
    // Offset: 0x1A79D64
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AtomicBoolean* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::AtomicBoolean::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AtomicBoolean*, creationType>()));
    }
  }; // System.Threading.AtomicBoolean
  #pragma pack(pop)
  static check_size<sizeof(AtomicBoolean), 16 + sizeof(int)> __System_Threading_AtomicBooleanSizeCheck;
  static_assert(sizeof(AtomicBoolean) == 0x14);
}
DEFINE_IL2CPP_ARG_TYPE(System::Threading::AtomicBoolean*, "System.Threading", "AtomicBoolean");
