// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.EventResetMode
#include "System/Threading/EventResetMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Threading
namespace System::Threading {
  // Size: 0x29
  #pragma pack(push, 1)
  // Autogenerated type: System.Threading.EventWaitHandle
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CAA5F4
  class EventWaitHandle : public System::Threading::WaitHandle {
    public:
    // Creating value type constructor for type: EventWaitHandle
    EventWaitHandle() noexcept {}
    // public System.Void .ctor(System.Boolean initialState, System.Threading.EventResetMode mode)
    // Offset: 0x1A79D7C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventWaitHandle* New_ctor(bool initialState, System::Threading::EventResetMode mode) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::EventWaitHandle::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventWaitHandle*, creationType>(initialState, mode)));
    }
    // public System.Void .ctor(System.Boolean initialState, System.Threading.EventResetMode mode, System.String name)
    // Offset: 0x1A7C9F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventWaitHandle* New_ctor(bool initialState, System::Threading::EventResetMode mode, ::Il2CppString* name) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::EventWaitHandle::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventWaitHandle*, creationType>(initialState, mode, name)));
    }
    // public System.Boolean Reset()
    // Offset: 0x1A7CCB8
    bool Reset();
    // public System.Boolean Set()
    // Offset: 0x1A7BC24
    bool Set();
  }; // System.Threading.EventWaitHandle
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::Threading::EventWaitHandle*, "System.Threading", "EventWaitHandle");
