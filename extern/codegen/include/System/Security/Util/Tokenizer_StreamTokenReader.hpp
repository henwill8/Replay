// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Util.Tokenizer
#include "System/Security/Util/Tokenizer.hpp"
// Including type: System.Security.Util.Tokenizer/ITokenReader
#include "System/Security/Util/Tokenizer_ITokenReader.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: StreamReader
  class StreamReader;
}
// Completed forward declares
// Type namespace: System.Security.Util
namespace System::Security::Util {
  // Autogenerated type: System.Security.Util.Tokenizer/StreamTokenReader
  class Tokenizer::StreamTokenReader : public ::Il2CppObject/*, public System::Security::Util::Tokenizer::ITokenReader*/ {
    public:
    // System.IO.StreamReader _in
    // Offset: 0x10
    System::IO::StreamReader* in;
    // System.Int32 _numCharRead
    // Offset: 0x18
    int numCharRead;
    // Creating interface conversion operator: operator System::Security::Util::Tokenizer::ITokenReader
    operator System::Security::Util::Tokenizer::ITokenReader() noexcept {
      return *reinterpret_cast<System::Security::Util::Tokenizer::ITokenReader*>(this);
    }
    // System.Void .ctor(System.IO.StreamReader input)
    // Offset: 0x1288470
    static Tokenizer::StreamTokenReader* New_ctor(System::IO::StreamReader* input);
    // System.Int32 get_NumCharEncountered()
    // Offset: 0x1288B60
    int get_NumCharEncountered();
    // public System.Int32 Read()
    // Offset: 0x1288B18
    // Implemented from: System.Security.Util.Tokenizer/ITokenReader
    // Base method: System.Int32 ITokenReader::Read()
    int Read();
  }; // System.Security.Util.Tokenizer/StreamTokenReader
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Security::Util::Tokenizer::StreamTokenReader*, "System.Security.Util", "Tokenizer/StreamTokenReader");
#pragma pack(pop)
