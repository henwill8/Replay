// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.Security.Cryptography.RSASignaturePaddingMode
#include "System/Security/Cryptography/RSASignaturePaddingMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Cryptography.RSASignaturePadding
  // [] Offset: FFFFFFFF
  class RSASignaturePadding : public ::Il2CppObject/*, public System::IEquatable_1<System::Security::Cryptography::RSASignaturePadding*>*/ {
    public:
    // private readonly System.Security.Cryptography.RSASignaturePaddingMode _mode
    // Size: 0x4
    // Offset: 0x10
    System::Security::Cryptography::RSASignaturePaddingMode mode;
    // Field size check
    static_assert(sizeof(System::Security::Cryptography::RSASignaturePaddingMode) == 0x4);
    // Creating value type constructor for type: RSASignaturePadding
    RSASignaturePadding(System::Security::Cryptography::RSASignaturePaddingMode mode_ = {}) noexcept : mode{mode_} {}
    // Creating interface conversion operator: operator System::IEquatable_1<System::Security::Cryptography::RSASignaturePadding*>
    operator System::IEquatable_1<System::Security::Cryptography::RSASignaturePadding*>() noexcept {
      return *reinterpret_cast<System::IEquatable_1<System::Security::Cryptography::RSASignaturePadding*>*>(this);
    }
    // Creating conversion operator: operator System::Security::Cryptography::RSASignaturePaddingMode
    constexpr operator System::Security::Cryptography::RSASignaturePaddingMode() const noexcept {
      return mode;
    }
    // Get static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pkcs1
    static System::Security::Cryptography::RSASignaturePadding* _get_s_pkcs1();
    // Set static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pkcs1
    static void _set_s_pkcs1(System::Security::Cryptography::RSASignaturePadding* value);
    // Get static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pss
    static System::Security::Cryptography::RSASignaturePadding* _get_s_pss();
    // Set static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pss
    static void _set_s_pss(System::Security::Cryptography::RSASignaturePadding* value);
    // private System.Void .ctor(System.Security.Cryptography.RSASignaturePaddingMode mode)
    // Offset: 0x1A4DBBC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RSASignaturePadding* New_ctor(System::Security::Cryptography::RSASignaturePaddingMode mode) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RSASignaturePadding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RSASignaturePadding*, creationType>(mode)));
    }
    // static public System.Security.Cryptography.RSASignaturePadding get_Pkcs1()
    // Offset: 0x1A4DBE8
    static System::Security::Cryptography::RSASignaturePadding* get_Pkcs1();
    // static private System.Void .cctor()
    // Offset: 0x1A4DE18
    static void _cctor();
    // public override System.Int32 GetHashCode()
    // Offset: 0x1A4DC50
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x1A4DC7C
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public System.Boolean Equals(System.Security.Cryptography.RSASignaturePadding other)
    // Offset: 0x1A4DCF0
    // Implemented from: System.IEquatable`1
    // Base method: System.Boolean IEquatable_1::Equals(System.Security.Cryptography.RSASignaturePadding other)
    bool Equals(System::Security::Cryptography::RSASignaturePadding* other);
    // public override System.String ToString()
    // Offset: 0x1A4DD8C
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // System.Security.Cryptography.RSASignaturePadding
  #pragma pack(pop)
  static check_size<sizeof(RSASignaturePadding), 16 + sizeof(System::Security::Cryptography::RSASignaturePaddingMode)> __System_Security_Cryptography_RSASignaturePaddingSizeCheck;
  static_assert(sizeof(RSASignaturePadding) == 0x14);
  // static public System.Boolean op_Equality(System.Security.Cryptography.RSASignaturePadding left, System.Security.Cryptography.RSASignaturePadding right)
  // Offset: 0x1A4BF78
  bool operator ==(System::Security::Cryptography::RSASignaturePadding* left, System::Security::Cryptography::RSASignaturePadding& right);
  // static public System.Boolean op_Inequality(System.Security.Cryptography.RSASignaturePadding left, System.Security.Cryptography.RSASignaturePadding right)
  // Offset: 0x1A4CC40
  bool operator !=(System::Security::Cryptography::RSASignaturePadding* left, System::Security::Cryptography::RSASignaturePadding& right);
}
DEFINE_IL2CPP_ARG_TYPE(System::Security::Cryptography::RSASignaturePadding*, "System.Security.Cryptography", "RSASignaturePadding");
