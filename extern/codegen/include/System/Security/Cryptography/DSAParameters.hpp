// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include <stdint.h>
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
template<class T>
struct Array;
// Completed il2cpp-utils forward declares
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Autogenerated type: System.Security.Cryptography.DSAParameters
  struct DSAParameters : public System::ValueType {
    public:
    // public System.Byte[] P
    // Offset: 0x0
    ::Array<uint8_t>* P;
    // public System.Byte[] Q
    // Offset: 0x8
    ::Array<uint8_t>* Q;
    // public System.Byte[] G
    // Offset: 0x10
    ::Array<uint8_t>* G;
    // public System.Byte[] Y
    // Offset: 0x18
    ::Array<uint8_t>* Y;
    // public System.Byte[] J
    // Offset: 0x20
    ::Array<uint8_t>* J;
    // public System.Byte[] X
    // Offset: 0x28
    ::Array<uint8_t>* X;
    // public System.Byte[] Seed
    // Offset: 0x30
    ::Array<uint8_t>* Seed;
    // public System.Int32 Counter
    // Offset: 0x38
    int Counter;
    // Creating value type constructor for type: DSAParameters
    constexpr DSAParameters(::Array<uint8_t>* P_ = {}, ::Array<uint8_t>* Q_ = {}, ::Array<uint8_t>* G_ = {}, ::Array<uint8_t>* Y_ = {}, ::Array<uint8_t>* J_ = {}, ::Array<uint8_t>* X_ = {}, ::Array<uint8_t>* Seed_ = {}, int Counter_ = {}) noexcept : P{P_}, Q{Q_}, G{G_}, Y{Y_}, J{J_}, X{X_}, Seed{Seed_}, Counter{Counter_} {}
  }; // System.Security.Cryptography.DSAParameters
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Security::Cryptography::DSAParameters, "System.Security.Cryptography", "DSAParameters");
#pragma pack(pop)
