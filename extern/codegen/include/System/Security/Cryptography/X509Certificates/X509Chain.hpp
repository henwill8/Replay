// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Cryptography::X509Certificates
namespace System::Security::Cryptography::X509Certificates {
  // Forward declaring type: X509ChainImpl
  class X509ChainImpl;
  // Forward declaring type: X509ChainElementCollection
  class X509ChainElementCollection;
  // Forward declaring type: X509ChainPolicy
  class X509ChainPolicy;
  // Forward declaring type: X509ChainStatus
  struct X509ChainStatus;
  // Forward declaring type: X509Certificate2
  class X509Certificate2;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography.X509Certificates
namespace System::Security::Cryptography::X509Certificates {
  // Autogenerated type: System.Security.Cryptography.X509Certificates.X509Chain
  class X509Chain : public ::Il2CppObject/*, public System::IDisposable*/ {
    public:
    // private System.Security.Cryptography.X509Certificates.X509ChainImpl impl
    // Offset: 0x10
    System::Security::Cryptography::X509Certificates::X509ChainImpl* impl;
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // Creating conversion operator: operator System::Security::Cryptography::X509Certificates::X509ChainImpl*
    constexpr operator System::Security::Cryptography::X509Certificates::X509ChainImpl*() const noexcept {
      return impl;
    }
    // System.Security.Cryptography.X509Certificates.X509ChainImpl get_Impl()
    // Offset: 0x1465448
    System::Security::Cryptography::X509Certificates::X509ChainImpl* get_Impl();
    // public System.Void .ctor(System.Boolean useMachineContext)
    // Offset: 0x14654E4
    static X509Chain* New_ctor(bool useMachineContext);
    // public System.Security.Cryptography.X509Certificates.X509ChainElementCollection get_ChainElements()
    // Offset: 0x1465580
    System::Security::Cryptography::X509Certificates::X509ChainElementCollection* get_ChainElements();
    // public System.Security.Cryptography.X509Certificates.X509ChainPolicy get_ChainPolicy()
    // Offset: 0x14655B8
    System::Security::Cryptography::X509Certificates::X509ChainPolicy* get_ChainPolicy();
    // public System.Void set_ChainPolicy(System.Security.Cryptography.X509Certificates.X509ChainPolicy value)
    // Offset: 0x14655F0
    void set_ChainPolicy(System::Security::Cryptography::X509Certificates::X509ChainPolicy* value);
    // public System.Security.Cryptography.X509Certificates.X509ChainStatus[] get_ChainStatus()
    // Offset: 0x1465630
    ::Array<System::Security::Cryptography::X509Certificates::X509ChainStatus>* get_ChainStatus();
    // public System.Boolean Build(System.Security.Cryptography.X509Certificates.X509Certificate2 certificate)
    // Offset: 0x14646B8
    bool Build(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate);
    // static public System.Security.Cryptography.X509Certificates.X509Chain Create()
    // Offset: 0x146465C
    static System::Security::Cryptography::X509Certificates::X509Chain* Create();
    // protected System.Void Dispose(System.Boolean disposing)
    // Offset: 0x14656E4
    void Dispose(bool disposing);
    // public System.Void .ctor()
    // Offset: 0x14654DC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static X509Chain* New_ctor();
    // public System.Void Dispose()
    // Offset: 0x1465668
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose();
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose();
    // protected override System.Void Finalize()
    // Offset: 0x14657A0
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // System.Security.Cryptography.X509Certificates.X509Chain
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Security::Cryptography::X509Certificates::X509Chain*, "System.Security.Cryptography.X509Certificates", "X509Chain");
#pragma pack(pop)
