// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Completed includes
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Autogenerated type: System.Security.Cryptography.KeyedHashAlgorithm
  class KeyedHashAlgorithm : public System::Security::Cryptography::HashAlgorithm {
    public:
    // protected System.Byte[] KeyValue
    // Offset: 0x28
    ::Array<uint8_t>* KeyValue;
    // Creating conversion operator: operator ::Array<uint8_t>*
    constexpr operator ::Array<uint8_t>*() const noexcept {
      return KeyValue;
    }
    // public System.Byte[] get_Key()
    // Offset: 0x16988C8
    ::Array<uint8_t>* get_Key();
    // public System.Void set_Key(System.Byte[] value)
    // Offset: 0x1698948
    void set_Key(::Array<uint8_t>* value);
    // protected System.Void .ctor()
    // Offset: 0x1697884
    // Implemented from: System.Security.Cryptography.HashAlgorithm
    // Base method: System.Void HashAlgorithm::.ctor()
    // Base method: System.Void Object::.ctor()
    static KeyedHashAlgorithm* New_ctor();
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x1697814
    // Implemented from: System.Security.Cryptography.HashAlgorithm
    // Base method: System.Void HashAlgorithm::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
  }; // System.Security.Cryptography.KeyedHashAlgorithm
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Security::Cryptography::KeyedHashAlgorithm*, "System.Security.Cryptography", "KeyedHashAlgorithm");
#pragma pack(pop)
