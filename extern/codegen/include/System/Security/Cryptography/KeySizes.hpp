// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Autogenerated type: System.Security.Cryptography.KeySizes
  class KeySizes : public ::Il2CppObject {
    public:
    // private System.Int32 m_minSize
    // Offset: 0x10
    int m_minSize;
    // private System.Int32 m_maxSize
    // Offset: 0x14
    int m_maxSize;
    // private System.Int32 m_skipSize
    // Offset: 0x18
    int m_skipSize;
    // public System.Int32 get_MinSize()
    // Offset: 0x16987CC
    int get_MinSize();
    // public System.Int32 get_MaxSize()
    // Offset: 0x16987D4
    int get_MaxSize();
    // public System.Int32 get_SkipSize()
    // Offset: 0x16987DC
    int get_SkipSize();
    // public System.Void .ctor(System.Int32 minSize, System.Int32 maxSize, System.Int32 skipSize)
    // Offset: 0x1693DF4
    static KeySizes* New_ctor(int minSize, int maxSize, int skipSize);
    // System.Boolean IsLegal(System.Int32 keySize)
    // Offset: 0x16987E4
    bool IsLegal(int keySize);
    // static System.Boolean IsLegalKeySize(System.Security.Cryptography.KeySizes[] legalKeys, System.Int32 size)
    // Offset: 0x1698830
    static bool IsLegalKeySize(::Array<System::Security::Cryptography::KeySizes*>* legalKeys, int size);
  }; // System.Security.Cryptography.KeySizes
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Security::Cryptography::KeySizes*, "System.Security.Cryptography", "KeySizes");
#pragma pack(pop)
