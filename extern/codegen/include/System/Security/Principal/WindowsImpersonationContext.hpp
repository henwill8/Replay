// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Security.Principal
namespace System::Security::Principal {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Principal.WindowsImpersonationContext
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CAAD38
  class WindowsImpersonationContext : public ::Il2CppObject/*, public System::IDisposable*/ {
    public:
    // private System.IntPtr _token
    // Size: 0x8
    // Offset: 0x10
    System::IntPtr token;
    // Field size check
    static_assert(sizeof(System::IntPtr) == 0x8);
    // private System.Boolean undo
    // Size: 0x1
    // Offset: 0x18
    bool undo;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: WindowsImpersonationContext
    WindowsImpersonationContext(System::IntPtr token_ = {}, bool undo_ = {}) noexcept : token{token_}, undo{undo_} {}
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // System.Void .ctor(System.IntPtr token)
    // Offset: 0x14D1234
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WindowsImpersonationContext* New_ctor(System::IntPtr token) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Principal::WindowsImpersonationContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WindowsImpersonationContext*, creationType>(token)));
    }
    // public System.Void Undo()
    // Offset: 0x14D1808
    void Undo();
    // static private System.Boolean CloseToken(System.IntPtr token)
    // Offset: 0x14D18CC
    static bool CloseToken(System::IntPtr token);
    // static private System.IntPtr DuplicateToken(System.IntPtr token)
    // Offset: 0x14D17C0
    static System::IntPtr DuplicateToken(System::IntPtr token);
    // static private System.Boolean SetCurrentToken(System.IntPtr token)
    // Offset: 0x14D17C4
    static bool SetCurrentToken(System::IntPtr token);
    // static private System.Boolean RevertToSelf()
    // Offset: 0x14D18C8
    static bool RevertToSelf();
    // public System.Void Dispose()
    // Offset: 0x14D17F8
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose();
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose();
  }; // System.Security.Principal.WindowsImpersonationContext
  #pragma pack(pop)
  static check_size<sizeof(WindowsImpersonationContext), 24 + sizeof(bool)> __System_Security_Principal_WindowsImpersonationContextSizeCheck;
  static_assert(sizeof(WindowsImpersonationContext) == 0x19);
}
DEFINE_IL2CPP_ARG_TYPE(System::Security::Principal::WindowsImpersonationContext*, "System.Security.Principal", "WindowsImpersonationContext");
