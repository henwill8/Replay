// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: System.IO
namespace System::IO {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.StreamReader/NullStreamReader
  // [] Offset: FFFFFFFF
  class StreamReader::NullStreamReader : public System::IO::StreamReader {
    public:
    // Creating value type constructor for type: NullStreamReader
    NullStreamReader() noexcept {}
    // System.Void .ctor()
    // Offset: 0x164B304
    // Implemented from: System.IO.StreamReader
    // Base method: System.Void StreamReader::.ctor()
    // Base method: System.Void TextReader::.ctor()
    // Base method: System.Void MarshalByRefObject::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StreamReader::NullStreamReader* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::NullStreamReader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StreamReader::NullStreamReader*, creationType>()));
    }
    // public override System.IO.Stream get_BaseStream()
    // Offset: 0x164B3AC
    // Implemented from: System.IO.StreamReader
    // Base method: System.IO.Stream StreamReader::get_BaseStream()
    System::IO::Stream* get_BaseStream();
    // public override System.Text.Encoding get_CurrentEncoding()
    // Offset: 0x164B414
    // Implemented from: System.IO.StreamReader
    // Base method: System.Text.Encoding StreamReader::get_CurrentEncoding()
    System::Text::Encoding* get_CurrentEncoding();
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x164B41C
    // Implemented from: System.IO.StreamReader
    // Base method: System.Void StreamReader::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
    // public override System.Int32 Peek()
    // Offset: 0x164B420
    // Implemented from: System.IO.StreamReader
    // Base method: System.Int32 StreamReader::Peek()
    int Peek();
    // public override System.Int32 Read()
    // Offset: 0x164B428
    // Implemented from: System.IO.StreamReader
    // Base method: System.Int32 StreamReader::Read()
    int Read();
    // public override System.Int32 Read(System.Char[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0x164B430
    // Implemented from: System.IO.StreamReader
    // Base method: System.Int32 StreamReader::Read(System.Char[] buffer, System.Int32 index, System.Int32 count)
    int Read(::Array<::Il2CppChar>* buffer, int index, int count);
    // public override System.String ReadLine()
    // Offset: 0x164B438
    // Implemented from: System.IO.StreamReader
    // Base method: System.String StreamReader::ReadLine()
    ::Il2CppString* ReadLine();
    // public override System.String ReadToEnd()
    // Offset: 0x164B440
    // Implemented from: System.IO.StreamReader
    // Base method: System.String StreamReader::ReadToEnd()
    ::Il2CppString* ReadToEnd();
    // override System.Int32 ReadBuffer()
    // Offset: 0x164B490
    // Implemented from: System.IO.StreamReader
    // Base method: System.Int32 StreamReader::ReadBuffer()
    int ReadBuffer();
  }; // System.IO.StreamReader/NullStreamReader
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::IO::StreamReader::NullStreamReader*, "System.IO", "StreamReader/NullStreamReader");
