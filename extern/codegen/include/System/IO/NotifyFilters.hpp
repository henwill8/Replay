// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.IO
namespace System::IO {
  // Autogenerated type: System.IO.NotifyFilters
  struct NotifyFilters : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: NotifyFilters
    constexpr NotifyFilters(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.IO.NotifyFilters Attributes
    static constexpr const int Attributes = 4;
    // Get static field: static public System.IO.NotifyFilters Attributes
    static System::IO::NotifyFilters _get_Attributes();
    // Set static field: static public System.IO.NotifyFilters Attributes
    static void _set_Attributes(System::IO::NotifyFilters value);
    // static field const value: static public System.IO.NotifyFilters CreationTime
    static constexpr const int CreationTime = 64;
    // Get static field: static public System.IO.NotifyFilters CreationTime
    static System::IO::NotifyFilters _get_CreationTime();
    // Set static field: static public System.IO.NotifyFilters CreationTime
    static void _set_CreationTime(System::IO::NotifyFilters value);
    // static field const value: static public System.IO.NotifyFilters DirectoryName
    static constexpr const int DirectoryName = 2;
    // Get static field: static public System.IO.NotifyFilters DirectoryName
    static System::IO::NotifyFilters _get_DirectoryName();
    // Set static field: static public System.IO.NotifyFilters DirectoryName
    static void _set_DirectoryName(System::IO::NotifyFilters value);
    // static field const value: static public System.IO.NotifyFilters FileName
    static constexpr const int FileName = 1;
    // Get static field: static public System.IO.NotifyFilters FileName
    static System::IO::NotifyFilters _get_FileName();
    // Set static field: static public System.IO.NotifyFilters FileName
    static void _set_FileName(System::IO::NotifyFilters value);
    // static field const value: static public System.IO.NotifyFilters LastAccess
    static constexpr const int LastAccess = 32;
    // Get static field: static public System.IO.NotifyFilters LastAccess
    static System::IO::NotifyFilters _get_LastAccess();
    // Set static field: static public System.IO.NotifyFilters LastAccess
    static void _set_LastAccess(System::IO::NotifyFilters value);
    // static field const value: static public System.IO.NotifyFilters LastWrite
    static constexpr const int LastWrite = 16;
    // Get static field: static public System.IO.NotifyFilters LastWrite
    static System::IO::NotifyFilters _get_LastWrite();
    // Set static field: static public System.IO.NotifyFilters LastWrite
    static void _set_LastWrite(System::IO::NotifyFilters value);
    // static field const value: static public System.IO.NotifyFilters Security
    static constexpr const int Security = 256;
    // Get static field: static public System.IO.NotifyFilters Security
    static System::IO::NotifyFilters _get_Security();
    // Set static field: static public System.IO.NotifyFilters Security
    static void _set_Security(System::IO::NotifyFilters value);
    // static field const value: static public System.IO.NotifyFilters Size
    static constexpr const int Size = 8;
    // Get static field: static public System.IO.NotifyFilters Size
    static System::IO::NotifyFilters _get_Size();
    // Set static field: static public System.IO.NotifyFilters Size
    static void _set_Size(System::IO::NotifyFilters value);
  }; // System.IO.NotifyFilters
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::IO::NotifyFilters, "System.IO", "NotifyFilters");
#pragma pack(pop)
