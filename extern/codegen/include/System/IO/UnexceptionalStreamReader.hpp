// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: System.IO
namespace System::IO {
  // Autogenerated type: System.IO.UnexceptionalStreamReader
  class UnexceptionalStreamReader : public System::IO::StreamReader {
    public:
    // Get static field: static private System.Boolean[] newline
    static ::Array<bool>* _get_newline();
    // Set static field: static private System.Boolean[] newline
    static void _set_newline(::Array<bool>* value);
    // Get static field: static private System.Char newlineChar
    static ::Il2CppChar _get_newlineChar();
    // Set static field: static private System.Char newlineChar
    static void _set_newlineChar(::Il2CppChar value);
    // private System.Boolean CheckEOL(System.Char current)
    // Offset: 0x10114B8
    bool CheckEOL(::Il2CppChar current);
    // static private System.Void .cctor()
    // Offset: 0x1010F9C
    // Implemented from: System.IO.StreamReader
    // Base method: System.Void StreamReader::.cctor()
    // Base method: System.Void TextReader::.cctor()
    static void _cctor();
    // public System.Void .ctor(System.IO.Stream stream, System.Text.Encoding encoding)
    // Offset: 0x101104C
    // Implemented from: System.IO.StreamReader
    // Base method: System.Void StreamReader::.ctor(System.IO.Stream stream, System.Text.Encoding encoding)
    static UnexceptionalStreamReader* New_ctor(System::IO::Stream* stream, System::Text::Encoding* encoding);
    // public override System.Int32 Peek()
    // Offset: 0x10110C8
    // Implemented from: System.IO.StreamReader
    // Base method: System.Int32 StreamReader::Peek()
    int Peek();
    // public override System.Int32 Read()
    // Offset: 0x1011184
    // Implemented from: System.IO.StreamReader
    // Base method: System.Int32 StreamReader::Read()
    int Read();
    // public override System.Int32 Read(in System.Char[] dest_buffer, System.Int32 index, System.Int32 count)
    // Offset: 0x1011240
    // Implemented from: System.IO.StreamReader
    // Base method: System.Int32 StreamReader::Read(in System.Char[] dest_buffer, System.Int32 index, System.Int32 count)
    int Read(::Array<::Il2CppChar>*& dest_buffer, int index, int count);
    // public override System.String ReadLine()
    // Offset: 0x10116A8
    // Implemented from: System.IO.StreamReader
    // Base method: System.String StreamReader::ReadLine()
    ::Il2CppString* ReadLine();
    // public override System.String ReadToEnd()
    // Offset: 0x1011764
    // Implemented from: System.IO.StreamReader
    // Base method: System.String StreamReader::ReadToEnd()
    ::Il2CppString* ReadToEnd();
  }; // System.IO.UnexceptionalStreamReader
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::IO::UnexceptionalStreamReader*, "System.IO", "UnexceptionalStreamReader");
#pragma pack(pop)
