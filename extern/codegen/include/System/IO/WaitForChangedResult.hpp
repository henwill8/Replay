// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IO.WatcherChangeTypes
#include "System/IO/WatcherChangeTypes.hpp"
// Completed includes
// Type namespace: System.IO
namespace System::IO {
  // Size: 0x19
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.IO.WaitForChangedResult
  // [] Offset: FFFFFFFF
  struct WaitForChangedResult/*, public System::ValueType*/ {
    public:
    // private System.IO.WatcherChangeTypes changeType
    // Size: 0x4
    // Offset: 0x0
    System::IO::WatcherChangeTypes changeType;
    // Field size check
    static_assert(sizeof(System::IO::WatcherChangeTypes) == 0x4);
    // Padding between fields: changeType and: name
    char __padding0[0x4] = {};
    // private System.String name
    // Size: 0x8
    // Offset: 0x8
    ::Il2CppString* name;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String oldName
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* oldName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Boolean timedOut
    // Size: 0x1
    // Offset: 0x18
    bool timedOut;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: WaitForChangedResult
    constexpr WaitForChangedResult(System::IO::WatcherChangeTypes changeType_ = {}, ::Il2CppString* name_ = {}, ::Il2CppString* oldName_ = {}, bool timedOut_ = {}) noexcept : changeType{changeType_}, name{name_}, oldName{oldName_}, timedOut{timedOut_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // public System.Void set_ChangeType(System.IO.WatcherChangeTypes value)
    // Offset: 0xE0E07C
    void set_ChangeType(System::IO::WatcherChangeTypes value);
    // public System.Void set_Name(System.String value)
    // Offset: 0xE0E084
    void set_Name(::Il2CppString* value);
    // public System.Void set_OldName(System.String value)
    // Offset: 0xE0E08C
    void set_OldName(::Il2CppString* value);
  }; // System.IO.WaitForChangedResult
  #pragma pack(pop)
  static check_size<sizeof(WaitForChangedResult), 24 + sizeof(bool)> __System_IO_WaitForChangedResultSizeCheck;
  static_assert(sizeof(WaitForChangedResult) == 0x19);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::IO::WaitForChangedResult, "System.IO", "WaitForChangedResult");
