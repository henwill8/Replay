// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Decoder
  class Decoder;
  // Forward declaring type: Encoding
  class Encoding;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Decimal
  struct Decimal;
}
// Completed forward declares
// Type namespace: System.IO
namespace System::IO {
  // Autogenerated type: System.IO.BinaryReader
  class BinaryReader : public ::Il2CppObject/*, public System::IDisposable*/ {
    public:
    // private System.IO.Stream m_stream
    // Offset: 0x10
    System::IO::Stream* m_stream;
    // private System.Byte[] m_buffer
    // Offset: 0x18
    ::Array<uint8_t>* m_buffer;
    // private System.Text.Decoder m_decoder
    // Offset: 0x20
    System::Text::Decoder* m_decoder;
    // private System.Byte[] m_charBytes
    // Offset: 0x28
    ::Array<uint8_t>* m_charBytes;
    // private System.Char[] m_singleChar
    // Offset: 0x30
    ::Array<::Il2CppChar>* m_singleChar;
    // private System.Char[] m_charBuffer
    // Offset: 0x38
    ::Array<::Il2CppChar>* m_charBuffer;
    // private System.Int32 m_maxCharsSize
    // Offset: 0x40
    int m_maxCharsSize;
    // private System.Boolean m_2BytesPerChar
    // Offset: 0x44
    bool m_2BytesPerChar;
    // private System.Boolean m_isMemoryStream
    // Offset: 0x45
    bool m_isMemoryStream;
    // private System.Boolean m_leaveOpen
    // Offset: 0x46
    bool m_leaveOpen;
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // public System.Void .ctor(System.IO.Stream input)
    // Offset: 0x142FC98
    static BinaryReader* New_ctor(System::IO::Stream* input);
    // public System.Void .ctor(System.IO.Stream input, System.Text.Encoding encoding)
    // Offset: 0x142FF8C
    static BinaryReader* New_ctor(System::IO::Stream* input, System::Text::Encoding* encoding);
    // public System.Void .ctor(System.IO.Stream input, System.Text.Encoding encoding, System.Boolean leaveOpen)
    // Offset: 0x142FD10
    static BinaryReader* New_ctor(System::IO::Stream* input, System::Text::Encoding* encoding, bool leaveOpen);
    // public System.IO.Stream get_BaseStream()
    // Offset: 0x142FF94
    System::IO::Stream* get_BaseStream();
    // public System.Void Close()
    // Offset: 0x142FF9C
    void Close();
    // protected System.Void Dispose(System.Boolean disposing)
    // Offset: 0x142FFAC
    void Dispose(bool disposing);
    // public System.Int32 Read()
    // Offset: 0x1430078
    int Read();
    // public System.Boolean ReadBoolean()
    // Offset: 0x1430350
    bool ReadBoolean();
    // public System.Byte ReadByte()
    // Offset: 0x14303AC
    uint8_t ReadByte();
    // public System.SByte ReadSByte()
    // Offset: 0x1430408
    int8_t ReadSByte();
    // public System.Char ReadChar()
    // Offset: 0x143045C
    ::Il2CppChar ReadChar();
    // public System.Int16 ReadInt16()
    // Offset: 0x1430498
    int16_t ReadInt16();
    // public System.UInt16 ReadUInt16()
    // Offset: 0x14304F4
    uint16_t ReadUInt16();
    // public System.Int32 ReadInt32()
    // Offset: 0x1430550
    int ReadInt32();
    // public System.UInt32 ReadUInt32()
    // Offset: 0x1430718
    uint ReadUInt32();
    // public System.Int64 ReadInt64()
    // Offset: 0x143079C
    int64_t ReadInt64();
    // public System.UInt64 ReadUInt64()
    // Offset: 0x1430860
    uint64_t ReadUInt64();
    // public System.Single ReadSingle()
    // Offset: 0x1430924
    float ReadSingle();
    // public System.Double ReadDouble()
    // Offset: 0x1430960
    double ReadDouble();
    // public System.Decimal ReadDecimal()
    // Offset: 0x143099C
    System::Decimal ReadDecimal();
    // public System.String ReadString()
    // Offset: 0x1430B20
    ::Il2CppString* ReadString();
    // private System.Int32 InternalReadChars(System.Char[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0x1430ED8
    int InternalReadChars(::Array<::Il2CppChar>* buffer, int index, int count);
    // private System.Int32 InternalReadOneChar()
    // Offset: 0x14300A8
    int InternalReadOneChar();
    // public System.Char[] ReadChars(System.Int32 count)
    // Offset: 0x143123C
    ::Array<::Il2CppChar>* ReadChars(int count);
    // public System.Int32 Read(System.Byte[] buffer, System.Int32 index, System.Int32 count)
    // Offset: 0x143139C
    int Read(::Array<uint8_t>* buffer, int index, int count);
    // public System.Byte[] ReadBytes(System.Int32 count)
    // Offset: 0x1431564
    ::Array<uint8_t>* ReadBytes(int count);
    // protected System.Void FillBuffer(System.Int32 numBytes)
    // Offset: 0x14316FC
    void FillBuffer(int numBytes);
    // protected internal System.Int32 Read7BitEncodedInt()
    // Offset: 0x1430DD4
    int Read7BitEncodedInt();
    // public System.Void Dispose()
    // Offset: 0x1430068
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose();
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose();
  }; // System.IO.BinaryReader
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::IO::BinaryReader*, "System.IO", "BinaryReader");
#pragma pack(pop)
