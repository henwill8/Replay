// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.ITaskCompletionAction
#include "System/Threading/Tasks/ITaskCompletionAction.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: ExecutionContext
  class ExecutionContext;
  // Forward declaring type: ContextCallback
  class ContextCallback;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Skipping declaration: Task because it is already included!
}
// Completed forward declares
// Type namespace: System.IO
namespace System::IO {
  // Autogenerated type: System.IO.Stream/ReadWriteTask
  class Stream::ReadWriteTask : public System::Threading::Tasks::Task_1<int>, public System::Threading::Tasks::ITaskCompletionAction {
    public:
    // readonly System.Boolean _isRead
    // Offset: 0x54
    bool isRead;
    // System.IO.Stream _stream
    // Offset: 0x58
    System::IO::Stream* stream;
    // System.Byte[] _buffer
    // Offset: 0x60
    ::Array<uint8_t>* buffer;
    // System.Int32 _offset
    // Offset: 0x68
    int offset;
    // System.Int32 _count
    // Offset: 0x6C
    int count;
    // private System.AsyncCallback _callback
    // Offset: 0x70
    System::AsyncCallback* callback;
    // private System.Threading.ExecutionContext _context
    // Offset: 0x78
    System::Threading::ExecutionContext* context;
    // Get static field: static private System.Threading.ContextCallback s_invokeAsyncCallback
    static System::Threading::ContextCallback* _get_s_invokeAsyncCallback();
    // Set static field: static private System.Threading.ContextCallback s_invokeAsyncCallback
    static void _set_s_invokeAsyncCallback(System::Threading::ContextCallback* value);
    // System.Void ClearBeginState()
    // Offset: 0x100AB5C
    void ClearBeginState();
    // public System.Void .ctor(System.Boolean isRead, System.Func`2<System.Object,System.Int32> function, System.Object state, System.IO.Stream stream, System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback)
    // Offset: 0x1009880
    static Stream::ReadWriteTask* New_ctor(bool isRead, System::Func_2<::Il2CppObject*, int>* function, ::Il2CppObject* state, System::IO::Stream* stream, ::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* callback);
    // static private System.Void InvokeAsyncCallback(System.Object completedTask)
    // Offset: 0x100AFB4
    static void InvokeAsyncCallback(::Il2CppObject* completedTask);
    // private System.Void System.Threading.Tasks.ITaskCompletionAction.Invoke(System.Threading.Tasks.Task completingTask)
    // Offset: 0x100B040
    // Implemented from: System.Threading.Tasks.ITaskCompletionAction
    // Base method: System.Void ITaskCompletionAction::Invoke(System.Threading.Tasks.Task completingTask)
    void System_Threading_Tasks_ITaskCompletionAction_Invoke(System::Threading::Tasks::Task* completingTask);
  }; // System.IO.Stream/ReadWriteTask
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::IO::Stream::ReadWriteTask*, "System.IO", "Stream/ReadWriteTask");
#pragma pack(pop)
