// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: RuntimeType
  class RuntimeType;
  // Forward declaring type: TypeCode
  struct TypeCode;
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
  // Forward declaring type: IConvertible
  class IConvertible;
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Decimal
  struct Decimal;
  // Forward declaring type: DateTime
  struct DateTime;
  // Forward declaring type: Base64FormattingOptions
  struct Base64FormattingOptions;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.Convert
  class Convert : public ::Il2CppObject {
    public:
    // Get static field: static readonly System.RuntimeType[] ConvertTypes
    static ::Array<System::RuntimeType*>* _get_ConvertTypes();
    // Set static field: static readonly System.RuntimeType[] ConvertTypes
    static void _set_ConvertTypes(::Array<System::RuntimeType*>* value);
    // Get static field: static private readonly System.RuntimeType EnumType
    static System::RuntimeType* _get_EnumType();
    // Set static field: static private readonly System.RuntimeType EnumType
    static void _set_EnumType(System::RuntimeType* value);
    // Get static field: static readonly System.Char[] base64Table
    static ::Array<::Il2CppChar>* _get_base64Table();
    // Set static field: static readonly System.Char[] base64Table
    static void _set_base64Table(::Array<::Il2CppChar>* value);
    // Get static field: static public readonly System.Object DBNull
    static ::Il2CppObject* _get_DBNull();
    // Set static field: static public readonly System.Object DBNull
    static void _set_DBNull(::Il2CppObject* value);
    // static public System.TypeCode GetTypeCode(System.Object value)
    // Offset: 0x10C5624
    static System::TypeCode GetTypeCode(::Il2CppObject* value);
    // static public System.Object ChangeType(System.Object value, System.TypeCode typeCode, System.IFormatProvider provider)
    // Offset: 0x10C56F8
    static ::Il2CppObject* ChangeType(::Il2CppObject* value, System::TypeCode typeCode, System::IFormatProvider* provider);
    // static System.Object DefaultToType(System.IConvertible value, System.Type targetType, System.IFormatProvider provider)
    // Offset: 0x10C5F7C
    static ::Il2CppObject* DefaultToType(System::IConvertible* value, System::Type* targetType, System::IFormatProvider* provider);
    // static public System.Object ChangeType(System.Object value, System.Type conversionType, System.IFormatProvider provider)
    // Offset: 0x10C7164
    static ::Il2CppObject* ChangeType(::Il2CppObject* value, System::Type* conversionType, System::IFormatProvider* provider);
    // static public System.Boolean ToBoolean(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10C814C
    static bool ToBoolean(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Boolean ToBoolean(System.SByte value)
    // Offset: 0x10C8260
    static bool ToBoolean(int8_t value);
    // static public System.Boolean ToBoolean(System.Byte value)
    // Offset: 0x10C826C
    static bool ToBoolean(uint8_t value);
    // static public System.Boolean ToBoolean(System.Int16 value)
    // Offset: 0x10C8278
    static bool ToBoolean(int16_t value);
    // static public System.Boolean ToBoolean(System.UInt16 value)
    // Offset: 0x10C8284
    static bool ToBoolean(uint16_t value);
    // static public System.Boolean ToBoolean(System.Int32 value)
    // Offset: 0x10C8290
    static bool ToBoolean(int value);
    // static public System.Boolean ToBoolean(System.UInt32 value)
    // Offset: 0x10C829C
    static bool ToBoolean(uint value);
    // static public System.Boolean ToBoolean(System.Int64 value)
    // Offset: 0x10C82A8
    static bool ToBoolean(int64_t value);
    // static public System.Boolean ToBoolean(System.UInt64 value)
    // Offset: 0x10C82B4
    static bool ToBoolean(uint64_t value);
    // static public System.Boolean ToBoolean(System.String value)
    // Offset: 0x10C82C0
    static bool ToBoolean(::Il2CppString* value);
    // static public System.Boolean ToBoolean(System.String value, System.IFormatProvider provider)
    // Offset: 0x10C833C
    static bool ToBoolean(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Boolean ToBoolean(System.Single value)
    // Offset: 0x10C83B8
    static bool ToBoolean(float value);
    // static public System.Boolean ToBoolean(System.Double value)
    // Offset: 0x10C83C4
    static bool ToBoolean(double value);
    // static public System.Boolean ToBoolean(System.Decimal value)
    // Offset: 0x10C83D0
    static bool ToBoolean(System::Decimal value);
    // static public System.Char ToChar(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10C8454
    static ::Il2CppChar ToChar(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Char ToChar(System.SByte value)
    // Offset: 0x10C8568
    static ::Il2CppChar ToChar(int8_t value);
    // static public System.Char ToChar(System.Byte value)
    // Offset: 0x10C8600
    static ::Il2CppChar ToChar(uint8_t value);
    // static public System.Char ToChar(System.Int16 value)
    // Offset: 0x10C8608
    static ::Il2CppChar ToChar(int16_t value);
    // static public System.Char ToChar(System.UInt16 value)
    // Offset: 0x10C86A4
    static ::Il2CppChar ToChar(uint16_t value);
    // static public System.Char ToChar(System.Int32 value)
    // Offset: 0x10C86A8
    static ::Il2CppChar ToChar(int value);
    // static public System.Char ToChar(System.UInt32 value)
    // Offset: 0x10C8744
    static ::Il2CppChar ToChar(uint value);
    // static public System.Char ToChar(System.Int64 value)
    // Offset: 0x10C87E0
    static ::Il2CppChar ToChar(int64_t value);
    // static public System.Char ToChar(System.UInt64 value)
    // Offset: 0x10C887C
    static ::Il2CppChar ToChar(uint64_t value);
    // static public System.Char ToChar(System.String value, System.IFormatProvider provider)
    // Offset: 0x10C8918
    static ::Il2CppChar ToChar(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.SByte ToSByte(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10C8A00
    static int8_t ToSByte(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.SByte ToSByte(System.Boolean value)
    // Offset: 0x10C8B14
    static int8_t ToSByte(bool value);
    // static public System.SByte ToSByte(System.Char value)
    // Offset: 0x10C8B1C
    static int8_t ToSByte(::Il2CppChar value);
    // static public System.SByte ToSByte(System.Byte value)
    // Offset: 0x10C8BBC
    static int8_t ToSByte(uint8_t value);
    // static public System.SByte ToSByte(System.Int16 value)
    // Offset: 0x10C8C58
    static int8_t ToSByte(int16_t value);
    // static public System.SByte ToSByte(System.UInt16 value)
    // Offset: 0x10C8CFC
    static int8_t ToSByte(uint16_t value);
    // static public System.SByte ToSByte(System.Int32 value)
    // Offset: 0x10C8D9C
    static int8_t ToSByte(int value);
    // static public System.SByte ToSByte(System.UInt32 value)
    // Offset: 0x10C8E3C
    static int8_t ToSByte(uint value);
    // static public System.SByte ToSByte(System.Int64 value)
    // Offset: 0x10C8ED8
    static int8_t ToSByte(int64_t value);
    // static public System.SByte ToSByte(System.UInt64 value)
    // Offset: 0x10C8F78
    static int8_t ToSByte(uint64_t value);
    // static public System.SByte ToSByte(System.Single value)
    // Offset: 0x10C9014
    static int8_t ToSByte(float value);
    // static public System.SByte ToSByte(System.Double value)
    // Offset: 0x10C9080
    static int8_t ToSByte(double value);
    // static public System.SByte ToSByte(System.Decimal value)
    // Offset: 0x10C9204
    static int8_t ToSByte(System::Decimal value);
    // static public System.SByte ToSByte(System.String value, System.IFormatProvider provider)
    // Offset: 0x10C9288
    static int8_t ToSByte(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Byte ToByte(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10C9298
    static uint8_t ToByte(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Byte ToByte(System.Boolean value)
    // Offset: 0x10C93AC
    static uint8_t ToByte(bool value);
    // static public System.Byte ToByte(System.Char value)
    // Offset: 0x10C93B4
    static uint8_t ToByte(::Il2CppChar value);
    // static public System.Byte ToByte(System.SByte value)
    // Offset: 0x10C9454
    static uint8_t ToByte(int8_t value);
    // static public System.Byte ToByte(System.Int16 value)
    // Offset: 0x10C94F0
    static uint8_t ToByte(int16_t value);
    // static public System.Byte ToByte(System.UInt16 value)
    // Offset: 0x10C9590
    static uint8_t ToByte(uint16_t value);
    // static public System.Byte ToByte(System.Int32 value)
    // Offset: 0x10C9630
    static uint8_t ToByte(int value);
    // static public System.Byte ToByte(System.UInt32 value)
    // Offset: 0x10C96CC
    static uint8_t ToByte(uint value);
    // static public System.Byte ToByte(System.Int64 value)
    // Offset: 0x10C9768
    static uint8_t ToByte(int64_t value);
    // static public System.Byte ToByte(System.UInt64 value)
    // Offset: 0x10C9804
    static uint8_t ToByte(uint64_t value);
    // static public System.Byte ToByte(System.Single value)
    // Offset: 0x10C98A0
    static uint8_t ToByte(float value);
    // static public System.Byte ToByte(System.Double value)
    // Offset: 0x10C990C
    static uint8_t ToByte(double value);
    // static public System.Byte ToByte(System.Decimal value)
    // Offset: 0x10C997C
    static uint8_t ToByte(System::Decimal value);
    // static public System.Byte ToByte(System.String value)
    // Offset: 0x10C9A00
    static uint8_t ToByte(::Il2CppString* value);
    // static public System.Byte ToByte(System.String value, System.IFormatProvider provider)
    // Offset: 0x10C9A88
    static uint8_t ToByte(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Int16 ToInt16(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10C9AA0
    static int16_t ToInt16(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Int16 ToInt16(System.Boolean value)
    // Offset: 0x10C9BB4
    static int16_t ToInt16(bool value);
    // static public System.Int16 ToInt16(System.Char value)
    // Offset: 0x10C9BBC
    static int16_t ToInt16(::Il2CppChar value);
    // static public System.Int16 ToInt16(System.SByte value)
    // Offset: 0x10C9C58
    static int16_t ToInt16(int8_t value);
    // static public System.Int16 ToInt16(System.Byte value)
    // Offset: 0x10C9C60
    static int16_t ToInt16(uint8_t value);
    // static public System.Int16 ToInt16(System.UInt16 value)
    // Offset: 0x10C9C68
    static int16_t ToInt16(uint16_t value);
    // static public System.Int16 ToInt16(System.Int32 value)
    // Offset: 0x10C9D04
    static int16_t ToInt16(int value);
    // static public System.Int16 ToInt16(System.UInt32 value)
    // Offset: 0x10C9DA4
    static int16_t ToInt16(uint value);
    // static public System.Int16 ToInt16(System.Int64 value)
    // Offset: 0x10C9E40
    static int16_t ToInt16(int64_t value);
    // static public System.Int16 ToInt16(System.UInt64 value)
    // Offset: 0x10C9EE0
    static int16_t ToInt16(uint64_t value);
    // static public System.Int16 ToInt16(System.Single value)
    // Offset: 0x10C9F7C
    static int16_t ToInt16(float value);
    // static public System.Int16 ToInt16(System.Double value)
    // Offset: 0x10C9FE8
    static int16_t ToInt16(double value);
    // static public System.Int16 ToInt16(System.Decimal value)
    // Offset: 0x10CA058
    static int16_t ToInt16(System::Decimal value);
    // static public System.Int16 ToInt16(System.String value, System.IFormatProvider provider)
    // Offset: 0x10CA0DC
    static int16_t ToInt16(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.UInt16 ToUInt16(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10CA0F4
    static uint16_t ToUInt16(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.UInt16 ToUInt16(System.Boolean value)
    // Offset: 0x10CA208
    static uint16_t ToUInt16(bool value);
    // static public System.UInt16 ToUInt16(System.Char value)
    // Offset: 0x10CA210
    static uint16_t ToUInt16(::Il2CppChar value);
    // static public System.UInt16 ToUInt16(System.SByte value)
    // Offset: 0x10CA214
    static uint16_t ToUInt16(int8_t value);
    // static public System.UInt16 ToUInt16(System.Byte value)
    // Offset: 0x10CA2AC
    static uint16_t ToUInt16(uint8_t value);
    // static public System.UInt16 ToUInt16(System.Int16 value)
    // Offset: 0x10CA2B4
    static uint16_t ToUInt16(int16_t value);
    // static public System.UInt16 ToUInt16(System.Int32 value)
    // Offset: 0x10CA350
    static uint16_t ToUInt16(int value);
    // static public System.UInt16 ToUInt16(System.UInt32 value)
    // Offset: 0x10CA3EC
    static uint16_t ToUInt16(uint value);
    // static public System.UInt16 ToUInt16(System.Int64 value)
    // Offset: 0x10CA488
    static uint16_t ToUInt16(int64_t value);
    // static public System.UInt16 ToUInt16(System.UInt64 value)
    // Offset: 0x10CA524
    static uint16_t ToUInt16(uint64_t value);
    // static public System.UInt16 ToUInt16(System.Single value)
    // Offset: 0x10CA5C0
    static uint16_t ToUInt16(float value);
    // static public System.UInt16 ToUInt16(System.Double value)
    // Offset: 0x10CA62C
    static uint16_t ToUInt16(double value);
    // static public System.UInt16 ToUInt16(System.Decimal value)
    // Offset: 0x10CA69C
    static uint16_t ToUInt16(System::Decimal value);
    // static public System.UInt16 ToUInt16(System.String value, System.IFormatProvider provider)
    // Offset: 0x10CA720
    static uint16_t ToUInt16(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Int32 ToInt32(System.Object value)
    // Offset: 0x10CA738
    static int ToInt32(::Il2CppObject* value);
    // static public System.Int32 ToInt32(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10CA848
    static int ToInt32(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Int32 ToInt32(System.Boolean value)
    // Offset: 0x10CA95C
    static int ToInt32(bool value);
    // static public System.Int32 ToInt32(System.Char value)
    // Offset: 0x10CA964
    static int ToInt32(::Il2CppChar value);
    // static public System.Int32 ToInt32(System.Byte value)
    // Offset: 0x10CA96C
    static int ToInt32(uint8_t value);
    // static public System.Int32 ToInt32(System.Int16 value)
    // Offset: 0x10CA974
    static int ToInt32(int16_t value);
    // static public System.Int32 ToInt32(System.UInt16 value)
    // Offset: 0x10CA97C
    static int ToInt32(uint16_t value);
    // static public System.Int32 ToInt32(System.UInt32 value)
    // Offset: 0x10CA984
    static int ToInt32(uint value);
    // static public System.Int32 ToInt32(System.Int64 value)
    // Offset: 0x10CAA1C
    static int ToInt32(int64_t value);
    // static public System.Int32 ToInt32(System.UInt64 value)
    // Offset: 0x10CAABC
    static int ToInt32(uint64_t value);
    // static public System.Int32 ToInt32(System.Single value)
    // Offset: 0x10CAB58
    static int ToInt32(float value);
    // static public System.Int32 ToInt32(System.Double value)
    // Offset: 0x10C90F0
    static int ToInt32(double value);
    // static public System.Int32 ToInt32(System.Decimal value)
    // Offset: 0x10CABC4
    static int ToInt32(System::Decimal value);
    // static public System.Int32 ToInt32(System.String value, System.IFormatProvider provider)
    // Offset: 0x10CAC3C
    static int ToInt32(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.UInt32 ToUInt32(System.Object value)
    // Offset: 0x10CAC54
    static uint ToUInt32(::Il2CppObject* value);
    // static public System.UInt32 ToUInt32(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10CAD64
    static uint ToUInt32(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.UInt32 ToUInt32(System.Boolean value)
    // Offset: 0x10CAE78
    static uint ToUInt32(bool value);
    // static public System.UInt32 ToUInt32(System.Char value)
    // Offset: 0x10CAE80
    static uint ToUInt32(::Il2CppChar value);
    // static public System.UInt32 ToUInt32(System.SByte value)
    // Offset: 0x10CAE88
    static uint ToUInt32(int8_t value);
    // static public System.UInt32 ToUInt32(System.Byte value)
    // Offset: 0x10CAF20
    static uint ToUInt32(uint8_t value);
    // static public System.UInt32 ToUInt32(System.Int16 value)
    // Offset: 0x10CAF28
    static uint ToUInt32(int16_t value);
    // static public System.UInt32 ToUInt32(System.UInt16 value)
    // Offset: 0x10CAFC0
    static uint ToUInt32(uint16_t value);
    // static public System.UInt32 ToUInt32(System.Int32 value)
    // Offset: 0x10CAFC8
    static uint ToUInt32(int value);
    // static public System.UInt32 ToUInt32(System.Int64 value)
    // Offset: 0x10CB060
    static uint ToUInt32(int64_t value);
    // static public System.UInt32 ToUInt32(System.UInt64 value)
    // Offset: 0x10CB0FC
    static uint ToUInt32(uint64_t value);
    // static public System.UInt32 ToUInt32(System.Single value)
    // Offset: 0x10CB198
    static uint ToUInt32(float value);
    // static public System.UInt32 ToUInt32(System.Double value)
    // Offset: 0x10CB204
    static uint ToUInt32(double value);
    // static public System.UInt32 ToUInt32(System.Decimal value)
    // Offset: 0x10CB2EC
    static uint ToUInt32(System::Decimal value);
    // static public System.UInt32 ToUInt32(System.String value, System.IFormatProvider provider)
    // Offset: 0x10CB370
    static uint ToUInt32(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Int64 ToInt64(System.Object value)
    // Offset: 0x10CB388
    static int64_t ToInt64(::Il2CppObject* value);
    // static public System.Int64 ToInt64(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10CB498
    static int64_t ToInt64(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Int64 ToInt64(System.Boolean value)
    // Offset: 0x10CB5AC
    static int64_t ToInt64(bool value);
    // static public System.Int64 ToInt64(System.Char value)
    // Offset: 0x10CB5B4
    static int64_t ToInt64(::Il2CppChar value);
    // static public System.Int64 ToInt64(System.SByte value)
    // Offset: 0x10CB5BC
    static int64_t ToInt64(int8_t value);
    // static public System.Int64 ToInt64(System.Byte value)
    // Offset: 0x10CB5C4
    static int64_t ToInt64(uint8_t value);
    // static public System.Int64 ToInt64(System.Int16 value)
    // Offset: 0x10CB5CC
    static int64_t ToInt64(int16_t value);
    // static public System.Int64 ToInt64(System.UInt16 value)
    // Offset: 0x10CB5D4
    static int64_t ToInt64(uint16_t value);
    // static public System.Int64 ToInt64(System.Int32 value)
    // Offset: 0x10CB5DC
    static int64_t ToInt64(int value);
    // static public System.Int64 ToInt64(System.UInt32 value)
    // Offset: 0x10CB5E4
    static int64_t ToInt64(uint value);
    // static public System.Int64 ToInt64(System.UInt64 value)
    // Offset: 0x10CB5EC
    static int64_t ToInt64(uint64_t value);
    // static public System.Int64 ToInt64(System.Single value)
    // Offset: 0x10CB684
    static int64_t ToInt64(float value);
    // static public System.Int64 ToInt64(System.Double value)
    // Offset: 0x10CB6F0
    static int64_t ToInt64(double value);
    // static public System.Int64 ToInt64(System.Decimal value)
    // Offset: 0x10CB7E8
    static int64_t ToInt64(System::Decimal value);
    // static public System.Int64 ToInt64(System.String value)
    // Offset: 0x10CB86C
    static int64_t ToInt64(::Il2CppString* value);
    // static public System.Int64 ToInt64(System.String value, System.IFormatProvider provider)
    // Offset: 0x10CB8F4
    static int64_t ToInt64(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.UInt64 ToUInt64(System.Object value)
    // Offset: 0x10CB90C
    static uint64_t ToUInt64(::Il2CppObject* value);
    // static public System.UInt64 ToUInt64(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10CBA1C
    static uint64_t ToUInt64(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.UInt64 ToUInt64(System.Boolean value)
    // Offset: 0x10CBB30
    static uint64_t ToUInt64(bool value);
    // static public System.UInt64 ToUInt64(System.Char value)
    // Offset: 0x10CBB38
    static uint64_t ToUInt64(::Il2CppChar value);
    // static public System.UInt64 ToUInt64(System.SByte value)
    // Offset: 0x10CBB40
    static uint64_t ToUInt64(int8_t value);
    // static public System.UInt64 ToUInt64(System.Byte value)
    // Offset: 0x10CBBDC
    static uint64_t ToUInt64(uint8_t value);
    // static public System.UInt64 ToUInt64(System.Int16 value)
    // Offset: 0x10CBBE4
    static uint64_t ToUInt64(int16_t value);
    // static public System.UInt64 ToUInt64(System.UInt16 value)
    // Offset: 0x10CBC80
    static uint64_t ToUInt64(uint16_t value);
    // static public System.UInt64 ToUInt64(System.Int32 value)
    // Offset: 0x10CBC88
    static uint64_t ToUInt64(int value);
    // static public System.UInt64 ToUInt64(System.UInt32 value)
    // Offset: 0x10CBD20
    static uint64_t ToUInt64(uint value);
    // static public System.UInt64 ToUInt64(System.Int64 value)
    // Offset: 0x10CBD28
    static uint64_t ToUInt64(int64_t value);
    // static public System.UInt64 ToUInt64(System.Single value)
    // Offset: 0x10CBDC0
    static uint64_t ToUInt64(float value);
    // static public System.UInt64 ToUInt64(System.Double value)
    // Offset: 0x10CBE2C
    static uint64_t ToUInt64(double value);
    // static public System.UInt64 ToUInt64(System.Decimal value)
    // Offset: 0x10CBF24
    static uint64_t ToUInt64(System::Decimal value);
    // static public System.UInt64 ToUInt64(System.String value, System.IFormatProvider provider)
    // Offset: 0x10CBFA8
    static uint64_t ToUInt64(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Single ToSingle(System.Object value)
    // Offset: 0x10CBFC0
    static float ToSingle(::Il2CppObject* value);
    // static public System.Single ToSingle(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10CC0D0
    static float ToSingle(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Single ToSingle(System.SByte value)
    // Offset: 0x10CC1E4
    static float ToSingle(int8_t value);
    // static public System.Single ToSingle(System.Byte value)
    // Offset: 0x10CC1F0
    static float ToSingle(uint8_t value);
    // static public System.Single ToSingle(System.Int16 value)
    // Offset: 0x10CC1FC
    static float ToSingle(int16_t value);
    // static public System.Single ToSingle(System.UInt16 value)
    // Offset: 0x10CC208
    static float ToSingle(uint16_t value);
    // static public System.Single ToSingle(System.Int32 value)
    // Offset: 0x10CC214
    static float ToSingle(int value);
    // static public System.Single ToSingle(System.UInt32 value)
    // Offset: 0x10CC21C
    static float ToSingle(uint value);
    // static public System.Single ToSingle(System.Int64 value)
    // Offset: 0x10CC228
    static float ToSingle(int64_t value);
    // static public System.Single ToSingle(System.UInt64 value)
    // Offset: 0x10CC230
    static float ToSingle(uint64_t value);
    // static public System.Single ToSingle(System.Double value)
    // Offset: 0x10CC23C
    static float ToSingle(double value);
    // static public System.Single ToSingle(System.Decimal value)
    // Offset: 0x10CC244
    static float ToSingle(System::Decimal value);
    // static public System.Single ToSingle(System.String value, System.IFormatProvider provider)
    // Offset: 0x10CC2BC
    static float ToSingle(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Single ToSingle(System.Boolean value)
    // Offset: 0x10CC2D8
    static float ToSingle(bool value);
    // static public System.Double ToDouble(System.Object value)
    // Offset: 0x10CC2EC
    static double ToDouble(::Il2CppObject* value);
    // static public System.Double ToDouble(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10CC3FC
    static double ToDouble(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Double ToDouble(System.SByte value)
    // Offset: 0x10CC510
    static double ToDouble(int8_t value);
    // static public System.Double ToDouble(System.Byte value)
    // Offset: 0x10CC51C
    static double ToDouble(uint8_t value);
    // static public System.Double ToDouble(System.Int16 value)
    // Offset: 0x10CC528
    static double ToDouble(int16_t value);
    // static public System.Double ToDouble(System.UInt16 value)
    // Offset: 0x10CC534
    static double ToDouble(uint16_t value);
    // static public System.Double ToDouble(System.Int32 value)
    // Offset: 0x10CC540
    static double ToDouble(int value);
    // static public System.Double ToDouble(System.UInt32 value)
    // Offset: 0x10CC548
    static double ToDouble(uint value);
    // static public System.Double ToDouble(System.Int64 value)
    // Offset: 0x10CC550
    static double ToDouble(int64_t value);
    // static public System.Double ToDouble(System.UInt64 value)
    // Offset: 0x10CC558
    static double ToDouble(uint64_t value);
    // static public System.Double ToDouble(System.Single value)
    // Offset: 0x10CC560
    static double ToDouble(float value);
    // static public System.Double ToDouble(System.Decimal value)
    // Offset: 0x10CC568
    static double ToDouble(System::Decimal value);
    // static public System.Double ToDouble(System.String value, System.IFormatProvider provider)
    // Offset: 0x10CC5E0
    static double ToDouble(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Double ToDouble(System.Boolean value)
    // Offset: 0x10CC674
    static double ToDouble(bool value);
    // static public System.Decimal ToDecimal(System.Object value)
    // Offset: 0x10CC688
    static System::Decimal ToDecimal(::Il2CppObject* value);
    // static public System.Decimal ToDecimal(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10CC7B8
    static System::Decimal ToDecimal(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.Decimal ToDecimal(System.SByte value)
    // Offset: 0x10CC8EC
    static System::Decimal ToDecimal(int8_t value);
    // static public System.Decimal ToDecimal(System.Byte value)
    // Offset: 0x10CC954
    static System::Decimal ToDecimal(uint8_t value);
    // static public System.Decimal ToDecimal(System.Int16 value)
    // Offset: 0x10CC9BC
    static System::Decimal ToDecimal(int16_t value);
    // static public System.Decimal ToDecimal(System.UInt16 value)
    // Offset: 0x10CCA24
    static System::Decimal ToDecimal(uint16_t value);
    // static public System.Decimal ToDecimal(System.Int32 value)
    // Offset: 0x10CCA8C
    static System::Decimal ToDecimal(int value);
    // static public System.Decimal ToDecimal(System.UInt32 value)
    // Offset: 0x10CCAF4
    static System::Decimal ToDecimal(uint value);
    // static public System.Decimal ToDecimal(System.Int64 value)
    // Offset: 0x10CCB5C
    static System::Decimal ToDecimal(int64_t value);
    // static public System.Decimal ToDecimal(System.UInt64 value)
    // Offset: 0x10CCBC4
    static System::Decimal ToDecimal(uint64_t value);
    // static public System.Decimal ToDecimal(System.Single value)
    // Offset: 0x10CCC2C
    static System::Decimal ToDecimal(float value);
    // static public System.Decimal ToDecimal(System.Double value)
    // Offset: 0x10CCC9C
    static System::Decimal ToDecimal(double value);
    // static public System.Decimal ToDecimal(System.String value, System.IFormatProvider provider)
    // Offset: 0x10CCD0C
    static System::Decimal ToDecimal(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.Decimal ToDecimal(System.Decimal value)
    // Offset: 0x10CCDB0
    static System::Decimal ToDecimal(System::Decimal value);
    // static public System.Decimal ToDecimal(System.Boolean value)
    // Offset: 0x10CCDB4
    static System::Decimal ToDecimal(bool value);
    // static public System.DateTime ToDateTime(System.String value, System.IFormatProvider provider)
    // Offset: 0x10CCE20
    static System::DateTime ToDateTime(::Il2CppString* value, System::IFormatProvider* provider);
    // static public System.String ToString(System.Object value, System.IFormatProvider provider)
    // Offset: 0x10CD040
    static ::Il2CppString* ToString(::Il2CppObject* value, System::IFormatProvider* provider);
    // static public System.String ToString(System.Char value, System.IFormatProvider provider)
    // Offset: 0x10CD1E0
    static ::Il2CppString* ToString(::Il2CppChar value, System::IFormatProvider* provider);
    // static public System.String ToString(System.Int32 value, System.IFormatProvider provider)
    // Offset: 0x10CD208
    static ::Il2CppString* ToString(int value, System::IFormatProvider* provider);
    // static public System.Int32 ToInt32(System.String value, System.Int32 fromBase)
    // Offset: 0x10CD230
    static int ToInt32(::Il2CppString* value, int fromBase);
    // static public System.String ToBase64String(System.Byte[] inArray)
    // Offset: 0x10CD300
    static ::Il2CppString* ToBase64String(::Array<uint8_t>* inArray);
    // static public System.String ToBase64String(System.Byte[] inArray, System.Int32 offset, System.Int32 length)
    // Offset: 0x10CD668
    static ::Il2CppString* ToBase64String(::Array<uint8_t>* inArray, int offset, int length);
    // static public System.String ToBase64String(System.Byte[] inArray, System.Int32 offset, System.Int32 length, System.Base64FormattingOptions options)
    // Offset: 0x10CD3B0
    static ::Il2CppString* ToBase64String(::Array<uint8_t>* inArray, int offset, int length, System::Base64FormattingOptions options);
    // static public System.Int32 ToBase64CharArray(System.Byte[] inArray, System.Int32 offsetIn, System.Int32 length, System.Char[] outArray, System.Int32 offsetOut)
    // Offset: 0x10CDA28
    static int ToBase64CharArray(::Array<uint8_t>* inArray, int offsetIn, int length, ::Array<::Il2CppChar>* outArray, int offsetOut);
    // static public System.Int32 ToBase64CharArray(System.Byte[] inArray, System.Int32 offsetIn, System.Int32 length, System.Char[] outArray, System.Int32 offsetOut, System.Base64FormattingOptions options)
    // Offset: 0x10CDAC0
    static int ToBase64CharArray(::Array<uint8_t>* inArray, int offsetIn, int length, ::Array<::Il2CppChar>* outArray, int offsetOut, System::Base64FormattingOptions options);
    // static private System.Int32 ConvertToBase64Array(System.Char* outChars, System.Byte* inData, System.Int32 offset, System.Int32 length, System.Boolean insertLineBreaks)
    // Offset: 0x10CD7D8
    static int ConvertToBase64Array(::Il2CppChar* outChars, uint8_t* inData, int offset, int length, bool insertLineBreaks);
    // static private System.Int32 ToBase64_CalculateAndValidateOutputLength(System.Int32 inputLength, System.Boolean insertLineBreaks)
    // Offset: 0x10CD6E8
    static int ToBase64_CalculateAndValidateOutputLength(int inputLength, bool insertLineBreaks);
    // static public System.Byte[] FromBase64String(System.String s)
    // Offset: 0x10CDDFC
    static ::Array<uint8_t>* FromBase64String(::Il2CppString* s);
    // static private System.Byte[] FromBase64CharPtr(System.Char* inputPtr, System.Int32 inputLength)
    // Offset: 0x10CDEB8
    static ::Array<uint8_t>* FromBase64CharPtr(::Il2CppChar* inputPtr, int inputLength);
    // static private System.Int32 FromBase64_Decode(System.Char* startInputPtr, System.Int32 inputLength, System.Byte* startDestPtr, System.Int32 destLength)
    // Offset: 0x10CE0F4
    static int FromBase64_Decode(::Il2CppChar* startInputPtr, int inputLength, uint8_t* startDestPtr, int destLength);
    // static private System.Int32 FromBase64_ComputeResultLength(System.Char* inputPtr, System.Int32 inputLength)
    // Offset: 0x10CDFF0
    static int FromBase64_ComputeResultLength(::Il2CppChar* inputPtr, int inputLength);
    // static private System.Void .cctor()
    // Offset: 0x10CE358
    static void _cctor();
  }; // System.Convert
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Convert*, "System", "Convert");
#pragma pack(pop)
