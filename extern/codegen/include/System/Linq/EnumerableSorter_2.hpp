// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.EnumerableSorter`1
#include "System/Linq/EnumerableSorter_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IComparer`1<T>
  template<typename T>
  class IComparer_1;
}
// Completed forward declares
// Type namespace: System.Linq
namespace System::Linq {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Linq.EnumerableSorter`2
  // [] Offset: FFFFFFFF
  template<typename TElement, typename TKey>
  class EnumerableSorter_2 : public System::Linq::EnumerableSorter_1<TElement> {
    public:
    // System.Func`2<TElement,TKey> keySelector
    // Size: 0x8
    // Offset: 0x0
    System::Func_2<TElement, TKey>* keySelector;
    // Field size check
    static_assert(sizeof(System::Func_2<TElement, TKey>*) == 0x8);
    // System.Collections.Generic.IComparer`1<TKey> comparer
    // Size: 0x8
    // Offset: 0x0
    System::Collections::Generic::IComparer_1<TKey>* comparer;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::IComparer_1<TKey>*) == 0x8);
    // System.Boolean descending
    // Size: 0x1
    // Offset: 0x0
    bool descending;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Linq.EnumerableSorter`1<TElement> next
    // Size: 0x8
    // Offset: 0x0
    System::Linq::EnumerableSorter_1<TElement>* next;
    // Field size check
    static_assert(sizeof(System::Linq::EnumerableSorter_1<TElement>*) == 0x8);
    // TKey[] keys
    // Size: 0x8
    // Offset: 0x0
    ::Array<TKey>* keys;
    // Field size check
    static_assert(sizeof(::Array<TKey>*) == 0x8);
    // Creating value type constructor for type: EnumerableSorter_2
    EnumerableSorter_2(System::Func_2<TElement, TKey>* keySelector_ = {}, System::Collections::Generic::IComparer_1<TKey>* comparer_ = {}, bool descending_ = {}, System::Linq::EnumerableSorter_1<TElement>* next_ = {}, ::Array<TKey>* keys_ = {}) noexcept : keySelector{keySelector_}, comparer{comparer_}, descending{descending_}, next{next_}, keys{keys_} {}
    // System.Void .ctor(System.Func`2<TElement,TKey> keySelector, System.Collections.Generic.IComparer`1<TKey> comparer, System.Boolean descending, System.Linq.EnumerableSorter`1<TElement> next)
    // Offset: 0xFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnumerableSorter_2<TElement, TKey>* New_ctor(System::Func_2<TElement, TKey>* keySelector, System::Collections::Generic::IComparer_1<TKey>* comparer, bool descending, System::Linq::EnumerableSorter_1<TElement>* next) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::EnumerableSorter_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnumerableSorter_2<TElement, TKey>*, creationType>(keySelector, comparer, descending, next)));
    }
    // override System.Void ComputeKeys(TElement[] elements, System.Int32 count)
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Linq.EnumerableSorter`1
    // Base method: System.Void EnumerableSorter_1::ComputeKeys(TElement[] elements, System.Int32 count)
    void ComputeKeys(::Array<TElement>* elements, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::EnumerableSorter_2::ComputeKeys");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeKeys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(elements, count)));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, elements, count);
    }
    // override System.Int32 CompareKeys(System.Int32 index1, System.Int32 index2)
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Linq.EnumerableSorter`1
    // Base method: System.Int32 EnumerableSorter_1::CompareKeys(System.Int32 index1, System.Int32 index2)
    int CompareKeys(int index1, int index2) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::EnumerableSorter_2::CompareKeys");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareKeys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index1, index2)));
      return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, index1, index2);
    }
  }; // System.Linq.EnumerableSorter`2
  // Could not write size check! Type: System.Linq.EnumerableSorter`2 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Linq::EnumerableSorter_2, "System.Linq", "EnumerableSorter`2");
