// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Linq
namespace System::Linq {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Linq.IGrouping`2
  // [] Offset: FFFFFFFF
  template<typename TKey, typename TElement>
  class IGrouping_2/*, public System::Collections::Generic::IEnumerable_1<TElement>*/ {
    public:
    // Creating value type constructor for type: IGrouping_2
    IGrouping_2() noexcept {}
    // Creating interface conversion operator: operator System::Collections::Generic::IEnumerable_1<TElement>
    operator System::Collections::Generic::IEnumerable_1<TElement>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IEnumerable_1<TElement>*>(this);
    }
    // public TKey get_Key()
    // Offset: 0xFFFFFFFF
    TKey get_Key() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::IGrouping_2::get_Key");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
      return ::il2cpp_utils::RunMethodThrow<TKey, false>(this, ___internal__method);
    }
  }; // System.Linq.IGrouping`2
  // Could not write size check! Type: System.Linq.IGrouping`2 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Linq::IGrouping_2, "System.Linq", "IGrouping`2");
