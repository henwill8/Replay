// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ICollection
  class ICollection;
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Collections
namespace System::Collections {
  // Autogenerated type: System.Collections.ArrayList/ReadOnlyArrayList
  class ArrayList::ReadOnlyArrayList : public System::Collections::ArrayList {
    public:
    // private System.Collections.ArrayList _list
    // Offset: 0x28
    System::Collections::ArrayList* list;
    // Creating conversion operator: operator System::Collections::ArrayList*
    constexpr operator System::Collections::ArrayList*() const noexcept {
      return list;
    }
    // System.Void .ctor(System.Collections.ArrayList l)
    // Offset: 0x1CB262C
    static ArrayList::ReadOnlyArrayList* New_ctor(System::Collections::ArrayList* l);
    // public override System.Int32 get_Count()
    // Offset: 0x1CB31D8
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Int32 ArrayList::get_Count()
    int get_Count();
    // Creating proxy method: System_Collections_ICollection_get_Count
    // Maps to method: get_Count
    int System_Collections_ICollection_get_Count();
    // public override System.Boolean get_IsReadOnly()
    // Offset: 0x1CB31FC
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Boolean ArrayList::get_IsReadOnly()
    bool get_IsReadOnly();
    // Creating proxy method: System_Collections_IList_get_IsReadOnly
    // Maps to method: get_IsReadOnly
    bool System_Collections_IList_get_IsReadOnly();
    // public override System.Object get_Item(System.Int32 index)
    // Offset: 0x1CB3204
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Object ArrayList::get_Item(System.Int32 index)
    ::Il2CppObject* get_Item(int index);
    // Creating proxy method: System_Collections_IList_get_Item
    // Maps to method: get_Item
    ::Il2CppObject* System_Collections_IList_get_Item(int index);
    // public override System.Void set_Item(System.Int32 index, System.Object value)
    // Offset: 0x1CB3228
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::set_Item(System.Int32 index, System.Object value)
    void set_Item(int index, ::Il2CppObject* value);
    // Creating proxy method: System_Collections_IList_set_Item
    // Maps to method: set_Item
    void System_Collections_IList_set_Item(int index, ::Il2CppObject* value);
    // public override System.Object get_SyncRoot()
    // Offset: 0x1CB32A8
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Object ArrayList::get_SyncRoot()
    ::Il2CppObject* get_SyncRoot();
    // public override System.Int32 Add(System.Object obj)
    // Offset: 0x1CB32CC
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Int32 ArrayList::Add(System.Object obj)
    int Add(::Il2CppObject* obj);
    // Creating proxy method: System_Collections_IList_Add
    // Maps to method: Add
    int System_Collections_IList_Add(::Il2CppObject* obj);
    // public override System.Void AddRange(System.Collections.ICollection c)
    // Offset: 0x1CB334C
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::AddRange(System.Collections.ICollection c)
    void AddRange(System::Collections::ICollection* c);
    // public override System.Void set_Capacity(System.Int32 value)
    // Offset: 0x1CB33CC
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::set_Capacity(System.Int32 value)
    void set_Capacity(int value);
    // public override System.Void Clear()
    // Offset: 0x1CB344C
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::Clear()
    void Clear();
    // Creating proxy method: System_Collections_IList_Clear
    // Maps to method: Clear
    void System_Collections_IList_Clear();
    // public override System.Object Clone()
    // Offset: 0x1CB34CC
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Object ArrayList::Clone()
    ::Il2CppObject* Clone();
    // Creating proxy method: System_ICloneable_Clone
    // Maps to method: Clone
    ::Il2CppObject* System_ICloneable_Clone();
    // public override System.Boolean Contains(System.Object obj)
    // Offset: 0x1CB35AC
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Boolean ArrayList::Contains(System.Object obj)
    bool Contains(::Il2CppObject* obj);
    // Creating proxy method: System_Collections_IList_Contains
    // Maps to method: Contains
    bool System_Collections_IList_Contains(::Il2CppObject* obj);
    // public override System.Void CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x1CB35D0
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::CopyTo(System.Array array, System.Int32 index)
    void CopyTo(System::Array* array, int index);
    // Creating proxy method: System_Collections_ICollection_CopyTo
    // Maps to method: CopyTo
    void System_Collections_ICollection_CopyTo(System::Array* array, int index);
    // public override System.Void CopyTo(System.Int32 index, System.Array array, System.Int32 arrayIndex, System.Int32 count)
    // Offset: 0x1CB35F4
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::CopyTo(System.Int32 index, System.Array array, System.Int32 arrayIndex, System.Int32 count)
    void CopyTo(int index, System::Array* array, int arrayIndex, int count);
    // public override System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x1CB3618
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Collections.IEnumerator ArrayList::GetEnumerator()
    System::Collections::IEnumerator* GetEnumerator();
    // Creating proxy method: System_Collections_IEnumerable_GetEnumerator
    // Maps to method: GetEnumerator
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public override System.Int32 IndexOf(System.Object value)
    // Offset: 0x1CB363C
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Int32 ArrayList::IndexOf(System.Object value)
    int IndexOf(::Il2CppObject* value);
    // Creating proxy method: System_Collections_IList_IndexOf
    // Maps to method: IndexOf
    int System_Collections_IList_IndexOf(::Il2CppObject* value);
    // public override System.Void Insert(System.Int32 index, System.Object obj)
    // Offset: 0x1CB3660
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::Insert(System.Int32 index, System.Object obj)
    void Insert(int index, ::Il2CppObject* obj);
    // Creating proxy method: System_Collections_IList_Insert
    // Maps to method: Insert
    void System_Collections_IList_Insert(int index, ::Il2CppObject* obj);
    // public override System.Void InsertRange(System.Int32 index, System.Collections.ICollection c)
    // Offset: 0x1CB36E0
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::InsertRange(System.Int32 index, System.Collections.ICollection c)
    void InsertRange(int index, System::Collections::ICollection* c);
    // public override System.Void Remove(System.Object value)
    // Offset: 0x1CB3760
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::Remove(System.Object value)
    void Remove(::Il2CppObject* value);
    // Creating proxy method: System_Collections_IList_Remove
    // Maps to method: Remove
    void System_Collections_IList_Remove(::Il2CppObject* value);
    // public override System.Void RemoveAt(System.Int32 index)
    // Offset: 0x1CB37E0
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::RemoveAt(System.Int32 index)
    void RemoveAt(int index);
    // Creating proxy method: System_Collections_IList_RemoveAt
    // Maps to method: RemoveAt
    void System_Collections_IList_RemoveAt(int index);
    // public override System.Void RemoveRange(System.Int32 index, System.Int32 count)
    // Offset: 0x1CB3860
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::RemoveRange(System.Int32 index, System.Int32 count)
    void RemoveRange(int index, int count);
    // public override System.Void Reverse(System.Int32 index, System.Int32 count)
    // Offset: 0x1CB38E0
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Void ArrayList::Reverse(System.Int32 index, System.Int32 count)
    void Reverse(int index, int count);
    // public override System.Object[] ToArray()
    // Offset: 0x1CB3960
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Object[] ArrayList::ToArray()
    ::Array<::Il2CppObject*>* ToArray();
    // public override System.Array ToArray(System.Type type)
    // Offset: 0x1CB3984
    // Implemented from: System.Collections.ArrayList
    // Base method: System.Array ArrayList::ToArray(System.Type type)
    System::Array* ToArray(System::Type* type);
  }; // System.Collections.ArrayList/ReadOnlyArrayList
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Collections::ArrayList::ReadOnlyArrayList*, "System.Collections", "ArrayList/ReadOnlyArrayList");
#pragma pack(pop)
