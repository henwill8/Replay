// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IComparer
  class IComparer;
  // Forward declaring type: IHashCodeProvider
  class IHashCodeProvider;
}
// Completed forward declares
// Type namespace: System.Collections
namespace System::Collections {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Collections.CompatibleComparer
  // [] Offset: FFFFFFFF
  class CompatibleComparer : public ::Il2CppObject/*, public System::Collections::IEqualityComparer*/ {
    public:
    // private System.Collections.IComparer _comparer
    // Size: 0x8
    // Offset: 0x10
    System::Collections::IComparer* comparer;
    // Field size check
    static_assert(sizeof(System::Collections::IComparer*) == 0x8);
    // private System.Collections.IHashCodeProvider _hcp
    // Size: 0x8
    // Offset: 0x18
    System::Collections::IHashCodeProvider* hcp;
    // Field size check
    static_assert(sizeof(System::Collections::IHashCodeProvider*) == 0x8);
    // Creating value type constructor for type: CompatibleComparer
    CompatibleComparer(System::Collections::IComparer* comparer_ = {}, System::Collections::IHashCodeProvider* hcp_ = {}) noexcept : comparer{comparer_}, hcp{hcp_} {}
    // Creating interface conversion operator: operator System::Collections::IEqualityComparer
    operator System::Collections::IEqualityComparer() noexcept {
      return *reinterpret_cast<System::Collections::IEqualityComparer*>(this);
    }
    // System.Void .ctor(System.Collections.IComparer comparer, System.Collections.IHashCodeProvider hashCodeProvider)
    // Offset: 0x168E63C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CompatibleComparer* New_ctor(System::Collections::IComparer* comparer, System::Collections::IHashCodeProvider* hashCodeProvider) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CompatibleComparer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CompatibleComparer*, creationType>(comparer, hashCodeProvider)));
    }
    // public System.Int32 Compare(System.Object a, System.Object b)
    // Offset: 0x168E68C
    int Compare(::Il2CppObject* a, ::Il2CppObject* b);
    // System.Collections.IComparer get_Comparer()
    // Offset: 0x168E98C
    System::Collections::IComparer* get_Comparer();
    // System.Collections.IHashCodeProvider get_HashCodeProvider()
    // Offset: 0x168E994
    System::Collections::IHashCodeProvider* get_HashCodeProvider();
    // public System.Boolean Equals(System.Object a, System.Object b)
    // Offset: 0x168E85C
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object a, System.Object b)
    // Base method: System.Boolean IEqualityComparer::Equals(System.Object a, System.Object b)
    bool Equals(::Il2CppObject* a, ::Il2CppObject* b);
    // Creating proxy method: System_Collections_IEqualityComparer_Equals
    // Maps to method: Equals
    bool System_Collections_IEqualityComparer_Equals(::Il2CppObject* a, ::Il2CppObject* b);
    // public System.Int32 GetHashCode(System.Object obj)
    // Offset: 0x168E878
    // Implemented from: System.Collections.IEqualityComparer
    // Base method: System.Int32 IEqualityComparer::GetHashCode(System.Object obj)
    int GetHashCode(::Il2CppObject* obj);
    // Creating proxy method: System_Collections_IEqualityComparer_GetHashCode
    // Maps to method: GetHashCode
    int System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj);
  }; // System.Collections.CompatibleComparer
  #pragma pack(pop)
  static check_size<sizeof(CompatibleComparer), 24 + sizeof(System::Collections::IHashCodeProvider*)> __System_Collections_CompatibleComparerSizeCheck;
  static_assert(sizeof(CompatibleComparer) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(System::Collections::CompatibleComparer*, "System.Collections", "CompatibleComparer");
