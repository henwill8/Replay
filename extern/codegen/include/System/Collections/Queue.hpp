// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Completed forward declares
// Type namespace: System.Collections
namespace System::Collections {
  // Autogenerated type: System.Collections.Queue
  class Queue : public ::Il2CppObject/*, public System::Collections::ICollection, public System::ICloneable*/ {
    public:
    // Nested type: System::Collections::Queue::QueueEnumerator
    class QueueEnumerator;
    // Nested type: System::Collections::Queue::QueueDebugView
    class QueueDebugView;
    // private System.Object[] _array
    // Offset: 0x10
    ::Array<::Il2CppObject*>* array;
    // private System.Int32 _head
    // Offset: 0x18
    int head;
    // private System.Int32 _tail
    // Offset: 0x1C
    int tail;
    // private System.Int32 _size
    // Offset: 0x20
    int size;
    // private System.Int32 _growFactor
    // Offset: 0x24
    int growFactor;
    // private System.Int32 _version
    // Offset: 0x28
    int version;
    // Creating interface conversion operator: operator System::Collections::ICollection
    operator System::Collections::ICollection() noexcept {
      return *reinterpret_cast<System::Collections::ICollection*>(this);
    }
    // Creating interface conversion operator: operator System::ICloneable
    operator System::ICloneable() noexcept {
      return *reinterpret_cast<System::ICloneable*>(this);
    }
    // public System.Void .ctor(System.Int32 capacity)
    // Offset: 0x152B9D4
    static Queue* New_ctor(int capacity);
    // public System.Void .ctor(System.Int32 capacity, System.Single growFactor)
    // Offset: 0x152B7EC
    static Queue* New_ctor(int capacity, float growFactor);
    // public System.Void .ctor(System.Collections.ICollection col)
    // Offset: 0x152B9DC
    static Queue* New_ctor(System::Collections::ICollection* col);
    // public System.Void Clear()
    // Offset: 0x152BD58
    void Clear();
    // public System.Void Enqueue(System.Object obj)
    // Offset: 0x152BFBC
    void Enqueue(::Il2CppObject* obj);
    // public System.Object Dequeue()
    // Offset: 0x152C2B4
    ::Il2CppObject* Dequeue();
    // public System.Object Peek()
    // Offset: 0x152C3D0
    ::Il2CppObject* Peek();
    // System.Object GetElement(System.Int32 i)
    // Offset: 0x152C4A4
    ::Il2CppObject* GetElement(int i);
    // public System.Object[] ToArray()
    // Offset: 0x152C4F0
    ::Array<::Il2CppObject*>* ToArray();
    // private System.Void SetCapacity(System.Int32 capacity)
    // Offset: 0x152C0CC
    void SetCapacity(int capacity);
    // public System.Void .ctor()
    // Offset: 0x152B7E0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static Queue* New_ctor();
    // public System.Int32 get_Count()
    // Offset: 0x152BC64
    // Implemented from: System.Collections.ICollection
    // Base method: System.Int32 ICollection::get_Count()
    int get_Count();
    // Creating proxy method: System_Collections_ICollection_get_Count
    // Maps to method: get_Count
    int System_Collections_ICollection_get_Count();
    // public System.Object Clone()
    // Offset: 0x152BC6C
    // Implemented from: System.ICloneable
    // Base method: System.Object ICloneable::Clone()
    ::Il2CppObject* Clone();
    // Creating proxy method: System_ICloneable_Clone
    // Maps to method: Clone
    ::Il2CppObject* System_ICloneable_Clone();
    // public System.Void CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x152BDCC
    // Implemented from: System.Collections.ICollection
    // Base method: System.Void ICollection::CopyTo(System.Array array, System.Int32 index)
    void CopyTo(System::Array* array, int index);
    // Creating proxy method: System_Collections_ICollection_CopyTo
    // Maps to method: CopyTo
    void System_Collections_ICollection_CopyTo(System::Array* array, int index);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x152C1D4
    // Implemented from: System.Collections.IEnumerable
    // Base method: System.Collections.IEnumerator IEnumerable::GetEnumerator()
    System::Collections::IEnumerator* GetEnumerator();
    // Creating proxy method: System_Collections_IEnumerable_GetEnumerator
    // Maps to method: GetEnumerator
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
  }; // System.Collections.Queue
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Collections::Queue*, "System.Collections", "Queue");
#pragma pack(pop)
