// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppString;
// Completed il2cpp-utils forward declares
// Type namespace: System.Collections.Generic
namespace System::Collections::Generic {
  // Autogenerated type: System.Collections.Generic.KeyValuePair`2
  template<typename TKey, typename TValue>
  struct KeyValuePair_2 : public System::ValueType {
    public:
    // private TKey key
    // Offset: 0x0
    TKey key;
    // private TValue value
    // Offset: 0x0
    TValue value;
    // Creating value type constructor for type: KeyValuePair_2
    constexpr KeyValuePair_2(TKey key_ = {}, TValue value_ = {}) noexcept : key{key_}, value{value_} {}
    // public System.Void .ctor(TKey key, TValue value)
    // Offset: 0xFFFFFFFF
    // ABORTED: conflicts with another method.  KeyValuePair_2(TKey key, TValue value)
    // public TKey get_Key()
    // Offset: 0xFFFFFFFF
    TKey get_Key() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<TKey>(*this, "get_Key"));
    }
    // public TValue get_Value()
    // Offset: 0xFFFFFFFF
    TValue get_Value() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<TValue>(*this, "get_Value"));
    }
    // public override System.String ToString()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::Il2CppString* ToString() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToString"));
    }
  }; // System.Collections.Generic.KeyValuePair`2
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(System::Collections::Generic::KeyValuePair_2, "System.Collections.Generic", "KeyValuePair`2");
#pragma pack(pop)
