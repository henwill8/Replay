// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System
namespace System {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Version/ParseFailureKind
  // [] Offset: FFFFFFFF
  struct Version::ParseFailureKind/*, public System::Enum*/ {
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: ParseFailureKind
    constexpr ParseFailureKind(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator System::Enum
    operator System::Enum() noexcept {
      return *reinterpret_cast<System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Version/ParseFailureKind ArgumentNullException
    static constexpr const int ArgumentNullException = 0;
    // Get static field: static public System.Version/ParseFailureKind ArgumentNullException
    static System::Version::ParseFailureKind _get_ArgumentNullException();
    // Set static field: static public System.Version/ParseFailureKind ArgumentNullException
    static void _set_ArgumentNullException(System::Version::ParseFailureKind value);
    // static field const value: static public System.Version/ParseFailureKind ArgumentException
    static constexpr const int ArgumentException = 1;
    // Get static field: static public System.Version/ParseFailureKind ArgumentException
    static System::Version::ParseFailureKind _get_ArgumentException();
    // Set static field: static public System.Version/ParseFailureKind ArgumentException
    static void _set_ArgumentException(System::Version::ParseFailureKind value);
    // static field const value: static public System.Version/ParseFailureKind ArgumentOutOfRangeException
    static constexpr const int ArgumentOutOfRangeException = 2;
    // Get static field: static public System.Version/ParseFailureKind ArgumentOutOfRangeException
    static System::Version::ParseFailureKind _get_ArgumentOutOfRangeException();
    // Set static field: static public System.Version/ParseFailureKind ArgumentOutOfRangeException
    static void _set_ArgumentOutOfRangeException(System::Version::ParseFailureKind value);
    // static field const value: static public System.Version/ParseFailureKind FormatException
    static constexpr const int FormatException = 3;
    // Get static field: static public System.Version/ParseFailureKind FormatException
    static System::Version::ParseFailureKind _get_FormatException();
    // Set static field: static public System.Version/ParseFailureKind FormatException
    static void _set_FormatException(System::Version::ParseFailureKind value);
  }; // System.Version/ParseFailureKind
  #pragma pack(pop)
  static check_size<sizeof(Version::ParseFailureKind), 0 + sizeof(int)> __System_Version_ParseFailureKindSizeCheck;
  static_assert(sizeof(Version::ParseFailureKind) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Version::ParseFailureKind, "System", "Version/ParseFailureKind");
