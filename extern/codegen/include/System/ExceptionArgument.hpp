// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System
namespace System {
  // Autogenerated type: System.ExceptionArgument
  struct ExceptionArgument : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: ExceptionArgument
    constexpr ExceptionArgument(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.ExceptionArgument obj
    static constexpr const int obj = 0;
    // Get static field: static public System.ExceptionArgument obj
    static System::ExceptionArgument _get_obj();
    // Set static field: static public System.ExceptionArgument obj
    static void _set_obj(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument dictionary
    static constexpr const int dictionary = 1;
    // Get static field: static public System.ExceptionArgument dictionary
    static System::ExceptionArgument _get_dictionary();
    // Set static field: static public System.ExceptionArgument dictionary
    static void _set_dictionary(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument dictionaryCreationThreshold
    static constexpr const int dictionaryCreationThreshold = 2;
    // Get static field: static public System.ExceptionArgument dictionaryCreationThreshold
    static System::ExceptionArgument _get_dictionaryCreationThreshold();
    // Set static field: static public System.ExceptionArgument dictionaryCreationThreshold
    static void _set_dictionaryCreationThreshold(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument array
    static constexpr const int array = 3;
    // Get static field: static public System.ExceptionArgument array
    static System::ExceptionArgument _get_array();
    // Set static field: static public System.ExceptionArgument array
    static void _set_array(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument info
    static constexpr const int info = 4;
    // Get static field: static public System.ExceptionArgument info
    static System::ExceptionArgument _get_info();
    // Set static field: static public System.ExceptionArgument info
    static void _set_info(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument key
    static constexpr const int key = 5;
    // Get static field: static public System.ExceptionArgument key
    static System::ExceptionArgument _get_key();
    // Set static field: static public System.ExceptionArgument key
    static void _set_key(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument collection
    static constexpr const int collection = 6;
    // Get static field: static public System.ExceptionArgument collection
    static System::ExceptionArgument _get_collection();
    // Set static field: static public System.ExceptionArgument collection
    static void _set_collection(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument list
    static constexpr const int list = 7;
    // Get static field: static public System.ExceptionArgument list
    static System::ExceptionArgument _get_list();
    // Set static field: static public System.ExceptionArgument list
    static void _set_list(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument match
    static constexpr const int match = 8;
    // Get static field: static public System.ExceptionArgument match
    static System::ExceptionArgument _get_match();
    // Set static field: static public System.ExceptionArgument match
    static void _set_match(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument converter
    static constexpr const int converter = 9;
    // Get static field: static public System.ExceptionArgument converter
    static System::ExceptionArgument _get_converter();
    // Set static field: static public System.ExceptionArgument converter
    static void _set_converter(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument queue
    static constexpr const int queue = 10;
    // Get static field: static public System.ExceptionArgument queue
    static System::ExceptionArgument _get_queue();
    // Set static field: static public System.ExceptionArgument queue
    static void _set_queue(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument stack
    static constexpr const int stack = 11;
    // Get static field: static public System.ExceptionArgument stack
    static System::ExceptionArgument _get_stack();
    // Set static field: static public System.ExceptionArgument stack
    static void _set_stack(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument capacity
    static constexpr const int capacity = 12;
    // Get static field: static public System.ExceptionArgument capacity
    static System::ExceptionArgument _get_capacity();
    // Set static field: static public System.ExceptionArgument capacity
    static void _set_capacity(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument index
    static constexpr const int index = 13;
    // Get static field: static public System.ExceptionArgument index
    static System::ExceptionArgument _get_index();
    // Set static field: static public System.ExceptionArgument index
    static void _set_index(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument startIndex
    static constexpr const int startIndex = 14;
    // Get static field: static public System.ExceptionArgument startIndex
    static System::ExceptionArgument _get_startIndex();
    // Set static field: static public System.ExceptionArgument startIndex
    static void _set_startIndex(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument value
    static constexpr const int Value = 15;
    // Get static field: static public System.ExceptionArgument value
    static System::ExceptionArgument _get_value();
    // Set static field: static public System.ExceptionArgument value
    static void _set_value(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument count
    static constexpr const int count = 16;
    // Get static field: static public System.ExceptionArgument count
    static System::ExceptionArgument _get_count();
    // Set static field: static public System.ExceptionArgument count
    static void _set_count(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument arrayIndex
    static constexpr const int arrayIndex = 17;
    // Get static field: static public System.ExceptionArgument arrayIndex
    static System::ExceptionArgument _get_arrayIndex();
    // Set static field: static public System.ExceptionArgument arrayIndex
    static void _set_arrayIndex(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument name
    static constexpr const int name = 18;
    // Get static field: static public System.ExceptionArgument name
    static System::ExceptionArgument _get_name();
    // Set static field: static public System.ExceptionArgument name
    static void _set_name(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument mode
    static constexpr const int mode = 19;
    // Get static field: static public System.ExceptionArgument mode
    static System::ExceptionArgument _get_mode();
    // Set static field: static public System.ExceptionArgument mode
    static void _set_mode(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument item
    static constexpr const int item = 20;
    // Get static field: static public System.ExceptionArgument item
    static System::ExceptionArgument _get_item();
    // Set static field: static public System.ExceptionArgument item
    static void _set_item(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument options
    static constexpr const int options = 21;
    // Get static field: static public System.ExceptionArgument options
    static System::ExceptionArgument _get_options();
    // Set static field: static public System.ExceptionArgument options
    static void _set_options(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument view
    static constexpr const int view = 22;
    // Get static field: static public System.ExceptionArgument view
    static System::ExceptionArgument _get_view();
    // Set static field: static public System.ExceptionArgument view
    static void _set_view(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument sourceBytesToCopy
    static constexpr const int sourceBytesToCopy = 23;
    // Get static field: static public System.ExceptionArgument sourceBytesToCopy
    static System::ExceptionArgument _get_sourceBytesToCopy();
    // Set static field: static public System.ExceptionArgument sourceBytesToCopy
    static void _set_sourceBytesToCopy(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument start
    static constexpr const int start = 24;
    // Get static field: static public System.ExceptionArgument start
    static System::ExceptionArgument _get_start();
    // Set static field: static public System.ExceptionArgument start
    static void _set_start(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument pointer
    static constexpr const int pointer = 25;
    // Get static field: static public System.ExceptionArgument pointer
    static System::ExceptionArgument _get_pointer();
    // Set static field: static public System.ExceptionArgument pointer
    static void _set_pointer(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument ownedMemory
    static constexpr const int ownedMemory = 26;
    // Get static field: static public System.ExceptionArgument ownedMemory
    static System::ExceptionArgument _get_ownedMemory();
    // Set static field: static public System.ExceptionArgument ownedMemory
    static void _set_ownedMemory(System::ExceptionArgument value);
    // static field const value: static public System.ExceptionArgument text
    static constexpr const int text = 27;
    // Get static field: static public System.ExceptionArgument text
    static System::ExceptionArgument _get_text();
    // Set static field: static public System.ExceptionArgument text
    static void _set_text(System::ExceptionArgument value);
  }; // System.ExceptionArgument
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::ExceptionArgument, "System", "ExceptionArgument");
#pragma pack(pop)
