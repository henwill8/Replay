// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.Func`2
  template<typename T, typename TResult>
  class Func_2 : public System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0xFFFFFFFF
    static Func_2<T, TResult>* New_ctor(::Il2CppObject* object, System::IntPtr method) {
      return THROW_UNLESS((il2cpp_utils::New<Func_2<T, TResult>*>(object, method)));
    }
    // public TResult Invoke(T arg)
    // Offset: 0xFFFFFFFF
    TResult Invoke(T arg) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<TResult>(this, "Invoke", arg));
    }
    // public System.IAsyncResult BeginInvoke(T arg, System.AsyncCallback callback, System.Object object)
    // Offset: 0xFFFFFFFF
    System::IAsyncResult* BeginInvoke(T arg, System::AsyncCallback* callback, ::Il2CppObject* object) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", arg, callback, object));
    }
    // public TResult EndInvoke(System.IAsyncResult result)
    // Offset: 0xFFFFFFFF
    TResult EndInvoke(System::IAsyncResult* result) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<TResult>(this, "EndInvoke", result));
    }
  }; // System.Func`2
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Func_2, "System", "Func`2");
#pragma pack(pop)
