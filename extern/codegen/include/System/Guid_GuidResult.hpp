// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Guid/GuidParseThrowStyle
#include "System/Guid_GuidParseThrowStyle.hpp"
// Including type: System.Guid/ParseFailureKind
#include "System/Guid_ParseFailureKind.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x38
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Guid/GuidResult
  // [] Offset: FFFFFFFF
  struct Guid::GuidResult/*, public System::ValueType*/ {
    public:
    // System.Guid parsedGuid
    // Size: 0x10
    // Offset: 0x0
    System::Guid parsedGuid;
    // Field size check
    static_assert(sizeof(System::Guid) == 0x10);
    // System.Guid/GuidParseThrowStyle throwStyle
    // Size: 0x4
    // Offset: 0x10
    System::Guid::GuidParseThrowStyle throwStyle;
    // Field size check
    static_assert(sizeof(System::Guid::GuidParseThrowStyle) == 0x4);
    // System.Guid/ParseFailureKind m_failure
    // Size: 0x4
    // Offset: 0x14
    System::Guid::ParseFailureKind m_failure;
    // Field size check
    static_assert(sizeof(System::Guid::ParseFailureKind) == 0x4);
    // System.String m_failureMessageID
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* m_failureMessageID;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // System.Object m_failureMessageFormatArgument
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppObject* m_failureMessageFormatArgument;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // System.String m_failureArgumentName
    // Size: 0x8
    // Offset: 0x28
    ::Il2CppString* m_failureArgumentName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // System.Exception m_innerException
    // Size: 0x8
    // Offset: 0x30
    System::Exception* m_innerException;
    // Field size check
    static_assert(sizeof(System::Exception*) == 0x8);
    // Creating value type constructor for type: GuidResult
    constexpr GuidResult(System::Guid parsedGuid_ = {}, System::Guid::GuidParseThrowStyle throwStyle_ = {}, System::Guid::ParseFailureKind m_failure_ = {}, ::Il2CppString* m_failureMessageID_ = {}, ::Il2CppObject* m_failureMessageFormatArgument_ = {}, ::Il2CppString* m_failureArgumentName_ = {}, System::Exception* m_innerException_ = {}) noexcept : parsedGuid{parsedGuid_}, throwStyle{throwStyle_}, m_failure{m_failure_}, m_failureMessageID{m_failureMessageID_}, m_failureMessageFormatArgument{m_failureMessageFormatArgument_}, m_failureArgumentName{m_failureArgumentName_}, m_innerException{m_innerException_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // System.Void Init(System.Guid/GuidParseThrowStyle canThrow)
    // Offset: 0xE0D89C
    void Init(System::Guid::GuidParseThrowStyle canThrow);
    // System.Void SetFailure(System.Exception nativeException)
    // Offset: 0xE0D8A4
    void SetFailure(System::Exception* nativeException);
    // System.Void SetFailure(System.Guid/ParseFailureKind failure, System.String failureMessageID)
    // Offset: 0xE0D8B4
    void SetFailure(System::Guid::ParseFailureKind failure, ::Il2CppString* failureMessageID);
    // System.Void SetFailure(System.Guid/ParseFailureKind failure, System.String failureMessageID, System.Object failureMessageFormatArgument)
    // Offset: 0xE0D8C8
    void SetFailure(System::Guid::ParseFailureKind failure, ::Il2CppString* failureMessageID, ::Il2CppObject* failureMessageFormatArgument);
    // System.Void SetFailure(System.Guid/ParseFailureKind failure, System.String failureMessageID, System.Object failureMessageFormatArgument, System.String failureArgumentName, System.Exception innerException)
    // Offset: 0xE0D8D8
    void SetFailure(System::Guid::ParseFailureKind failure, ::Il2CppString* failureMessageID, ::Il2CppObject* failureMessageFormatArgument, ::Il2CppString* failureArgumentName, System::Exception* innerException);
    // System.Exception GetGuidParseException()
    // Offset: 0xE0D8E0
    System::Exception* GetGuidParseException();
  }; // System.Guid/GuidResult
  #pragma pack(pop)
  static check_size<sizeof(Guid::GuidResult), 48 + sizeof(System::Exception*)> __System_Guid_GuidResultSizeCheck;
  static_assert(sizeof(Guid::GuidResult) == 0x38);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Guid::GuidResult, "System", "Guid/GuidResult");
