// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo
#include "System/TimeZoneInfo.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.Runtime.Serialization.ISerializable
#include "System/Runtime/Serialization/ISerializable.hpp"
// Including type: System.Runtime.Serialization.IDeserializationCallback
#include "System/Runtime/Serialization/IDeserializationCallback.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.TimeZoneInfo/TransitionTime
#include "System/TimeZoneInfo_TransitionTime.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
  // Forward declaring type: StreamingContext
  struct StreamingContext;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.TimeZoneInfo/AdjustmentRule
  class TimeZoneInfo::AdjustmentRule : public ::Il2CppObject, public System::IEquatable_1<System::TimeZoneInfo::AdjustmentRule*>, public System::Runtime::Serialization::ISerializable, public System::Runtime::Serialization::IDeserializationCallback {
    public:
    // private System.DateTime m_dateStart
    // Offset: 0x10
    System::DateTime m_dateStart;
    // private System.DateTime m_dateEnd
    // Offset: 0x18
    System::DateTime m_dateEnd;
    // private System.TimeSpan m_daylightDelta
    // Offset: 0x20
    System::TimeSpan m_daylightDelta;
    // private System.TimeZoneInfo/TransitionTime m_daylightTransitionStart
    // Offset: 0x28
    System::TimeZoneInfo::TransitionTime m_daylightTransitionStart;
    // private System.TimeZoneInfo/TransitionTime m_daylightTransitionEnd
    // Offset: 0x40
    System::TimeZoneInfo::TransitionTime m_daylightTransitionEnd;
    // private System.TimeSpan m_baseUtcOffsetDelta
    // Offset: 0x58
    System::TimeSpan m_baseUtcOffsetDelta;
    // public System.DateTime get_DateStart()
    // Offset: 0x179456C
    System::DateTime get_DateStart();
    // public System.DateTime get_DateEnd()
    // Offset: 0x1794574
    System::DateTime get_DateEnd();
    // public System.TimeSpan get_DaylightDelta()
    // Offset: 0x179457C
    System::TimeSpan get_DaylightDelta();
    // public System.TimeZoneInfo/TransitionTime get_DaylightTransitionStart()
    // Offset: 0x1794584
    System::TimeZoneInfo::TransitionTime get_DaylightTransitionStart();
    // public System.TimeZoneInfo/TransitionTime get_DaylightTransitionEnd()
    // Offset: 0x1794598
    System::TimeZoneInfo::TransitionTime get_DaylightTransitionEnd();
    // static public System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(System.DateTime dateStart, System.DateTime dateEnd, System.TimeSpan daylightDelta, System.TimeZoneInfo/TransitionTime daylightTransitionStart, System.TimeZoneInfo/TransitionTime daylightTransitionEnd)
    // Offset: 0x179483C
    static System::TimeZoneInfo::AdjustmentRule* CreateAdjustmentRule(System::DateTime dateStart, System::DateTime dateEnd, System::TimeSpan daylightDelta, System::TimeZoneInfo::TransitionTime daylightTransitionStart, System::TimeZoneInfo::TransitionTime daylightTransitionEnd);
    // static System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(System.DateTime dateStart, System.DateTime dateEnd, System.TimeSpan daylightDelta, System.TimeZoneInfo/TransitionTime daylightTransitionStart, System.TimeZoneInfo/TransitionTime daylightTransitionEnd, System.TimeSpan baseUtcOffsetDelta)
    // Offset: 0x1794CB4
    static System::TimeZoneInfo::AdjustmentRule* CreateAdjustmentRule(System::DateTime dateStart, System::DateTime dateEnd, System::TimeSpan daylightDelta, System::TimeZoneInfo::TransitionTime daylightTransitionStart, System::TimeZoneInfo::TransitionTime daylightTransitionEnd, System::TimeSpan baseUtcOffsetDelta);
    // static private System.Void ValidateAdjustmentRule(System.DateTime dateStart, System.DateTime dateEnd, System.TimeSpan daylightDelta, System.TimeZoneInfo/TransitionTime daylightTransitionStart, System.TimeZoneInfo/TransitionTime daylightTransitionEnd)
    // Offset: 0x179495C
    static void ValidateAdjustmentRule(System::DateTime dateStart, System::DateTime dateEnd, System::TimeSpan daylightDelta, System::TimeZoneInfo::TransitionTime daylightTransitionStart, System::TimeZoneInfo::TransitionTime daylightTransitionEnd);
    // private System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1795000
    static TimeZoneInfo::AdjustmentRule* New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // public System.Boolean Equals(System.TimeZoneInfo/AdjustmentRule other)
    // Offset: 0x17945AC
    // Implemented from: System.IEquatable`1
    // Base method: System.Boolean IEquatable`1::Equals(System.TimeZoneInfo/AdjustmentRule other)
    bool Equals(System::TimeZoneInfo::AdjustmentRule* other);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1794828
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // private System.Void .ctor()
    // Offset: 0x1794834
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static TimeZoneInfo::AdjustmentRule* New_ctor();
    // private System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)
    // Offset: 0x1794D10
    // Implemented from: System.Runtime.Serialization.IDeserializationCallback
    // Base method: System.Void IDeserializationCallback::OnDeserialization(System.Object sender)
    void System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender);
    // private System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1794E54
    // Implemented from: System.Runtime.Serialization.ISerializable
    // Base method: System.Void ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    void System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
  }; // System.TimeZoneInfo/AdjustmentRule
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::TimeZoneInfo::AdjustmentRule*, "System", "TimeZoneInfo/AdjustmentRule");
#pragma pack(pop)
