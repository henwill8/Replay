// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MemberAccessException
#include "System/MemberAccessException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: System.MissingMemberException
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CA7FD4
  class MissingMemberException : public System::MemberAccessException {
    public:
    // protected System.String ClassName
    // Size: 0x8
    // Offset: 0x88
    ::Il2CppString* ClassName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // protected System.String MemberName
    // Size: 0x8
    // Offset: 0x90
    ::Il2CppString* MemberName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // protected System.Byte[] Signature
    // Size: 0x8
    // Offset: 0x98
    ::Array<uint8_t>* Signature;
    // Field size check
    static_assert(sizeof(::Array<uint8_t>*) == 0x8);
    // Creating value type constructor for type: MissingMemberException
    MissingMemberException(::Il2CppString* ClassName_ = {}, ::Il2CppString* MemberName_ = {}, ::Array<uint8_t>* Signature_ = {}) noexcept : ClassName{ClassName_}, MemberName{MemberName_}, Signature{Signature_} {}
    // static System.String FormatSignature(System.Byte[] signature)
    // Offset: 0x1656E20
    static ::Il2CppString* FormatSignature(::Array<uint8_t>* signature);
    // public System.Void .ctor()
    // Offset: 0x1656E70
    // Implemented from: System.MemberAccessException
    // Base method: System.Void MemberAccessException::.ctor()
    // Base method: System.Void SystemException::.ctor()
    // Base method: System.Void Exception::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MissingMemberException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMemberException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MissingMemberException*, creationType>()));
    }
    // public System.Void .ctor(System.String message)
    // Offset: 0x16569B0
    // Implemented from: System.MemberAccessException
    // Base method: System.Void MemberAccessException::.ctor(System.String message)
    // Base method: System.Void SystemException::.ctor(System.String message)
    // Base method: System.Void Exception::.ctor(System.String message)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MissingMemberException* New_ctor(::Il2CppString* message) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMemberException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MissingMemberException*, creationType>(message)));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1656A30
    // Implemented from: System.MemberAccessException
    // Base method: System.Void MemberAccessException::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Base method: System.Void SystemException::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Base method: System.Void Exception::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MissingMemberException* New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMemberException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MissingMemberException*, creationType>(info, context)));
    }
    // public override System.String get_Message()
    // Offset: 0x1656CC4
    // Implemented from: System.Exception
    // Base method: System.String Exception::get_Message()
    ::Il2CppString* get_Message();
    // public override System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1656EFC
    // Implemented from: System.Exception
    // Base method: System.Void Exception::GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    void GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // Creating proxy method: System_Runtime_Serialization_ISerializable_GetObjectData
    // Maps to method: GetObjectData
    void System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
  }; // System.MissingMemberException
  #pragma pack(pop)
  static check_size<sizeof(MissingMemberException), 152 + sizeof(::Array<uint8_t>*)> __System_MissingMemberExceptionSizeCheck;
  static_assert(sizeof(MissingMemberException) == 0xA0);
}
DEFINE_IL2CPP_ARG_TYPE(System::MissingMemberException*, "System", "MissingMemberException");
