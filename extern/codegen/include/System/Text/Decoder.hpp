// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: DecoderFallback
  class DecoderFallback;
  // Forward declaring type: DecoderFallbackBuffer
  class DecoderFallbackBuffer;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Text
namespace System::Text {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Text.Decoder
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CA8AC8
  class Decoder : public ::Il2CppObject {
    public:
    // System.Text.DecoderFallback m_fallback
    // Size: 0x8
    // Offset: 0x10
    System::Text::DecoderFallback* m_fallback;
    // Field size check
    static_assert(sizeof(System::Text::DecoderFallback*) == 0x8);
    // System.Text.DecoderFallbackBuffer m_fallbackBuffer
    // Size: 0x8
    // Offset: 0x18
    System::Text::DecoderFallbackBuffer* m_fallbackBuffer;
    // Field size check
    static_assert(sizeof(System::Text::DecoderFallbackBuffer*) == 0x8);
    // Creating value type constructor for type: Decoder
    Decoder(System::Text::DecoderFallback* m_fallback_ = {}, System::Text::DecoderFallbackBuffer* m_fallbackBuffer_ = {}) noexcept : m_fallback{m_fallback_}, m_fallbackBuffer{m_fallbackBuffer_} {}
    // System.Void SerializeDecoder(System.Runtime.Serialization.SerializationInfo info)
    // Offset: 0x191A3C8
    void SerializeDecoder(System::Runtime::Serialization::SerializationInfo* info);
    // public System.Text.DecoderFallback get_Fallback()
    // Offset: 0x191A43C
    System::Text::DecoderFallback* get_Fallback();
    // public System.Text.DecoderFallbackBuffer get_FallbackBuffer()
    // Offset: 0x1919C84
    System::Text::DecoderFallbackBuffer* get_FallbackBuffer();
    // System.Boolean get_InternalHasFallbackBuffer()
    // Offset: 0x191A444
    bool get_InternalHasFallbackBuffer();
    // public System.Void Reset()
    // Offset: 0x191A454
    void Reset();
    // public System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    // Offset: 0xFFFFFFFF
    int GetCharCount(::Array<uint8_t>* bytes, int index, int count);
    // public System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count, System.Boolean flush)
    // Offset: 0x191A528
    int GetCharCount(::Array<uint8_t>* bytes, int index, int count, bool flush);
    // public System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Boolean flush)
    // Offset: 0x191A534
    int GetCharCount(uint8_t* bytes, int count, bool flush);
    // public System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)
    // Offset: 0xFFFFFFFF
    int GetChars(::Array<uint8_t>* bytes, int byteIndex, int byteCount, ::Array<::Il2CppChar>* chars, int charIndex);
    // public System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex, System.Boolean flush)
    // Offset: 0x191A6A4
    int GetChars(::Array<uint8_t>* bytes, int byteIndex, int byteCount, ::Array<::Il2CppChar>* chars, int charIndex, bool flush);
    // public System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Boolean flush)
    // Offset: 0x191A6B0
    int GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, bool flush);
    // protected System.Void .ctor()
    // Offset: 0x191A434
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Decoder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Text::Decoder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Decoder*, creationType>()));
    }
  }; // System.Text.Decoder
  #pragma pack(pop)
  static check_size<sizeof(Decoder), 24 + sizeof(System::Text::DecoderFallbackBuffer*)> __System_Text_DecoderSizeCheck;
  static_assert(sizeof(Decoder) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(System::Text::Decoder*, "System.Text", "Decoder");
