// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Text.RegularExpressions
namespace System::Text::RegularExpressions {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Text.RegularExpressions.Capture
  // [] Offset: FFFFFFFF
  class Capture : public ::Il2CppObject {
    public:
    // System.String _text
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* text;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // System.Int32 _index
    // Size: 0x4
    // Offset: 0x18
    int index;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 _length
    // Size: 0x4
    // Offset: 0x1C
    int length;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: Capture
    Capture(::Il2CppString* text_ = {}, int index_ = {}, int length_ = {}) noexcept : text{text_}, index{index_}, length{length_} {}
    // System.Void .ctor(System.String text, System.Int32 i, System.Int32 l)
    // Offset: 0x1781618
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Capture* New_ctor(::Il2CppString* text, int i, int l) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Capture::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Capture*, creationType>(text, i, l)));
    }
    // public System.Int32 get_Index()
    // Offset: 0x1781664
    int get_Index();
    // public System.Int32 get_Length()
    // Offset: 0x178166C
    int get_Length();
    // public System.String get_Value()
    // Offset: 0x1781674
    ::Il2CppString* get_Value();
    // public override System.String ToString()
    // Offset: 0x1781698
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
    // System.Void .ctor()
    // Offset: 0x178169C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Capture* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Capture::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Capture*, creationType>()));
    }
  }; // System.Text.RegularExpressions.Capture
  #pragma pack(pop)
  static check_size<sizeof(Capture), 28 + sizeof(int)> __System_Text_RegularExpressions_CaptureSizeCheck;
  static_assert(sizeof(Capture) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(System::Text::RegularExpressions::Capture*, "System.Text.RegularExpressions", "Capture");
