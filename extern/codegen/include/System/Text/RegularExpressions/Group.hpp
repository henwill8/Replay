// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.Capture
#include "System/Text/RegularExpressions/Capture.hpp"
// Completed includes
// Type namespace: System.Text.RegularExpressions
namespace System::Text::RegularExpressions {
  // Autogenerated type: System.Text.RegularExpressions.Group
  class Group : public System::Text::RegularExpressions::Capture {
    public:
    // System.Int32[] _caps
    // Offset: 0x20
    ::Array<int>* caps;
    // System.Int32 _capcount
    // Offset: 0x28
    int capcount;
    // System.String _name
    // Offset: 0x30
    ::Il2CppString* name;
    // Get static field: static System.Text.RegularExpressions.Group _emptygroup
    static System::Text::RegularExpressions::Group* _get__emptygroup();
    // Set static field: static System.Text.RegularExpressions.Group _emptygroup
    static void _set__emptygroup(System::Text::RegularExpressions::Group* value);
    // System.Void .ctor(System.String text, System.Int32[] caps, System.Int32 capcount, System.String name)
    // Offset: 0x121FCC4
    static Group* New_ctor(::Il2CppString* text, ::Array<int>* caps, int capcount, ::Il2CppString* name);
    // public System.Boolean get_Success()
    // Offset: 0x121FD94
    bool get_Success();
    // static private System.Void .cctor()
    // Offset: 0x121FDA4
    static void _cctor();
    // System.Void .ctor()
    // Offset: 0x121FE64
    // Implemented from: System.Text.RegularExpressions.Capture
    // Base method: System.Void Capture::.ctor()
    // Base method: System.Void Object::.ctor()
    static Group* New_ctor();
  }; // System.Text.RegularExpressions.Group
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Text::RegularExpressions::Group*, "System.Text.RegularExpressions", "Group");
#pragma pack(pop)
