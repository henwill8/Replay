// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text::RegularExpressions
namespace System::Text::RegularExpressions {
  // Forward declaring type: GroupCollection
  class GroupCollection;
  // Forward declaring type: Regex
  class Regex;
}
// Completed forward declares
// Type namespace: System.Text.RegularExpressions
namespace System::Text::RegularExpressions {
  // Autogenerated type: System.Text.RegularExpressions.Match
  class Match : public System::Text::RegularExpressions::Group {
    public:
    // System.Text.RegularExpressions.GroupCollection _groupcoll
    // Offset: 0x38
    System::Text::RegularExpressions::GroupCollection* groupcoll;
    // System.Text.RegularExpressions.Regex _regex
    // Offset: 0x40
    System::Text::RegularExpressions::Regex* regex;
    // System.Int32 _textbeg
    // Offset: 0x48
    int textbeg;
    // System.Int32 _textpos
    // Offset: 0x4C
    int textpos;
    // System.Int32 _textend
    // Offset: 0x50
    int textend;
    // System.Int32 _textstart
    // Offset: 0x54
    int textstart;
    // System.Int32[][] _matches
    // Offset: 0x58
    ::Array<::Array<int>*>* matches;
    // System.Int32[] _matchcount
    // Offset: 0x60
    ::Array<int>* matchcount;
    // System.Boolean _balancing
    // Offset: 0x68
    bool balancing;
    // Get static field: static System.Text.RegularExpressions.Match _empty
    static System::Text::RegularExpressions::Match* _get__empty();
    // Set static field: static System.Text.RegularExpressions.Match _empty
    static void _set__empty(System::Text::RegularExpressions::Match* value);
    // static public System.Text.RegularExpressions.Match get_Empty()
    // Offset: 0x12206B0
    static System::Text::RegularExpressions::Match* get_Empty();
    // System.Void .ctor(System.Text.RegularExpressions.Regex regex, System.Int32 capcount, System.String text, System.Int32 begpos, System.Int32 len, System.Int32 startpos)
    // Offset: 0x1220718
    static Match* New_ctor(System::Text::RegularExpressions::Regex* regex, int capcount, ::Il2CppString* text, int begpos, int len, int startpos);
    // System.Void Reset(System.Text.RegularExpressions.Regex regex, System.String text, System.Int32 textbeg, System.Int32 textend, System.Int32 textstart)
    // Offset: 0x12208A8
    void Reset(System::Text::RegularExpressions::Regex* regex, ::Il2CppString* text, int textbeg, int textend, int textstart);
    // public System.Text.RegularExpressions.GroupCollection get_Groups()
    // Offset: 0x1220950
    System::Text::RegularExpressions::GroupCollection* get_Groups();
    // public System.Text.RegularExpressions.Match NextMatch()
    // Offset: 0x12209D8
    System::Text::RegularExpressions::Match* NextMatch();
    // System.Void AddMatch(System.Int32 cap, System.Int32 start, System.Int32 len)
    // Offset: 0x1220CBC
    void AddMatch(int cap, int start, int len);
    // System.Void BalanceMatch(System.Int32 cap)
    // Offset: 0x1220F30
    void BalanceMatch(int cap);
    // System.Void RemoveMatch(System.Int32 cap)
    // Offset: 0x1221014
    void RemoveMatch(int cap);
    // System.Boolean IsMatched(System.Int32 cap)
    // Offset: 0x1221058
    bool IsMatched(int cap);
    // System.Int32 MatchIndex(System.Int32 cap)
    // Offset: 0x12210F4
    int MatchIndex(int cap);
    // System.Int32 MatchLength(System.Int32 cap)
    // Offset: 0x122118C
    int MatchLength(int cap);
    // System.Void Tidy(System.Int32 textpos)
    // Offset: 0x1221224
    void Tidy(int textpos);
    // static private System.Void .cctor()
    // Offset: 0x12213B8
    // Implemented from: System.Text.RegularExpressions.Group
    // Base method: System.Void Group::.cctor()
    static void _cctor();
    // System.Void .ctor()
    // Offset: 0x1221450
    // Implemented from: System.Text.RegularExpressions.Group
    // Base method: System.Void Group::.ctor()
    // Base method: System.Void Capture::.ctor()
    // Base method: System.Void Object::.ctor()
    static Match* New_ctor();
  }; // System.Text.RegularExpressions.Match
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Text::RegularExpressions::Match*, "System.Text.RegularExpressions", "Match");
#pragma pack(pop)
