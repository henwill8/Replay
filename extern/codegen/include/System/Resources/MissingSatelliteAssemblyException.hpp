// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.SystemException
#include "System/SystemException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Resources
namespace System::Resources {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: System.Resources.MissingSatelliteAssemblyException
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CA8BF4
  class MissingSatelliteAssemblyException : public System::SystemException {
    public:
    // private System.String _cultureName
    // Size: 0x8
    // Offset: 0x88
    ::Il2CppString* cultureName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: MissingSatelliteAssemblyException
    MissingSatelliteAssemblyException(::Il2CppString* cultureName_ = {}) noexcept : cultureName{cultureName_} {}
    // Creating conversion operator: operator ::Il2CppString*
    constexpr operator ::Il2CppString*() const noexcept {
      return cultureName;
    }
    // public System.Void .ctor(System.String message, System.String cultureName)
    // Offset: 0x19556D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MissingSatelliteAssemblyException* New_ctor(::Il2CppString* message, ::Il2CppString* cultureName) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::MissingSatelliteAssemblyException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MissingSatelliteAssemblyException*, creationType>(message, cultureName)));
    }
    // public System.Void .ctor()
    // Offset: 0x19557B8
    // Implemented from: System.SystemException
    // Base method: System.Void SystemException::.ctor()
    // Base method: System.Void Exception::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MissingSatelliteAssemblyException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::MissingSatelliteAssemblyException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MissingSatelliteAssemblyException*, creationType>()));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x195582C
    // Implemented from: System.SystemException
    // Base method: System.Void SystemException::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Base method: System.Void Exception::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MissingSatelliteAssemblyException* New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Resources::MissingSatelliteAssemblyException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MissingSatelliteAssemblyException*, creationType>(info, context)));
    }
  }; // System.Resources.MissingSatelliteAssemblyException
  #pragma pack(pop)
  static check_size<sizeof(MissingSatelliteAssemblyException), 136 + sizeof(::Il2CppString*)> __System_Resources_MissingSatelliteAssemblyExceptionSizeCheck;
  static_assert(sizeof(MissingSatelliteAssemblyException) == 0x90);
}
DEFINE_IL2CPP_ARG_TYPE(System::Resources::MissingSatelliteAssemblyException*, "System.Resources", "MissingSatelliteAssemblyException");
