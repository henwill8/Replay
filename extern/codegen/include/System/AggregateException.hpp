// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::ObjectModel
namespace System::Collections::ObjectModel {
  // Forward declaring type: ReadOnlyCollection`1<T>
  template<typename T>
  class ReadOnlyCollection_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: System::Runtime::ExceptionServices
namespace System::Runtime::ExceptionServices {
  // Forward declaring type: ExceptionDispatchInfo
  class ExceptionDispatchInfo;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: System.AggregateException
  // [] Offset: FFFFFFFF
  // [DebuggerDisplayAttribute] Offset: CA752C
  class AggregateException : public System::Exception {
    public:
    // private System.Collections.ObjectModel.ReadOnlyCollection`1<System.Exception> m_innerExceptions
    // Size: 0x8
    // Offset: 0x88
    System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>* m_innerExceptions;
    // Field size check
    static_assert(sizeof(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*) == 0x8);
    // Creating value type constructor for type: AggregateException
    AggregateException(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>* m_innerExceptions_ = {}) noexcept : m_innerExceptions{m_innerExceptions_} {}
    // Creating conversion operator: operator System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*
    constexpr operator System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*() const noexcept {
      return m_innerExceptions;
    }
    // public System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Exception> innerExceptions)
    // Offset: 0x167819C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(System::Collections::Generic::IEnumerable_1<System::Exception*>* innerExceptions) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(innerExceptions)));
    }
    // public System.Void .ctor(params System.Exception[] innerExceptions)
    // Offset: 0x16782BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Array<System::Exception*>* innerExceptions) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(innerExceptions)));
    }
    // Creating initializer_list -> params proxy for: System.Void .ctor(params System.Exception[] innerExceptions)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(std::initializer_list<System::Exception*> innerExceptions) {
      return New_ctor<creationType>(::Array<System::Exception*>::New(innerExceptions));
    }
    // Creating TArgs -> initializer_list proxy for: System.Void .ctor(params System.Exception[] innerExceptions)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary, class ...TParams>
    static AggregateException* New_ctor(TParams&&... innerExceptions) {
      return New_ctor<creationType>({innerExceptions...});
    }
    // public System.Void .ctor(System.String message, System.Collections.Generic.IEnumerable`1<System.Exception> innerExceptions)
    // Offset: 0x1678208
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, System::Collections::Generic::IEnumerable_1<System::Exception*>* innerExceptions) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(message, innerExceptions)));
    }
    // public System.Void .ctor(System.String message, params System.Exception[] innerExceptions)
    // Offset: 0x1678328
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, ::Array<System::Exception*>* innerExceptions) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(message, innerExceptions)));
    }
    // Creating initializer_list -> params proxy for: System.Void .ctor(System.String message, params System.Exception[] innerExceptions)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, std::initializer_list<System::Exception*> innerExceptions) {
      return New_ctor<creationType>(message, ::Array<System::Exception*>::New(innerExceptions));
    }
    // Creating TArgs -> initializer_list proxy for: System.Void .ctor(System.String message, params System.Exception[] innerExceptions)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary, class ...TParams>
    static AggregateException* New_ctor(::Il2CppString* message, TParams&&... innerExceptions) {
      return New_ctor<creationType>(message, {innerExceptions...});
    }
    // private System.Void .ctor(System.String message, System.Collections.Generic.IList`1<System.Exception> innerExceptions)
    // Offset: 0x167832C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, System::Collections::Generic::IList_1<System::Exception*>* innerExceptions) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(message, innerExceptions)));
    }
    // System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> innerExceptionInfos)
    // Offset: 0x16787B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(System::Collections::Generic::IEnumerable_1<System::Runtime::ExceptionServices::ExceptionDispatchInfo*>* innerExceptionInfos) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(innerExceptionInfos)));
    }
    // System.Void .ctor(System.String message, System.Collections.Generic.IEnumerable`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> innerExceptionInfos)
    // Offset: 0x1678820
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, System::Collections::Generic::IEnumerable_1<System::Runtime::ExceptionServices::ExceptionDispatchInfo*>* innerExceptionInfos) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(message, innerExceptionInfos)));
    }
    // private System.Void .ctor(System.String message, System.Collections.Generic.IList`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> innerExceptionInfos)
    // Offset: 0x16788D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(::Il2CppString* message, System::Collections::Generic::IList_1<System::Runtime::ExceptionServices::ExceptionDispatchInfo*>* innerExceptionInfos) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(message, innerExceptionInfos)));
    }
    // public System.Collections.ObjectModel.ReadOnlyCollection`1<System.Exception> get_InnerExceptions()
    // Offset: 0x1679030
    System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>* get_InnerExceptions();
    // public System.AggregateException Flatten()
    // Offset: 0x1679038
    System::AggregateException* Flatten();
    // public System.Void .ctor()
    // Offset: 0x16780B8
    // Implemented from: System.Exception
    // Base method: System.Void Exception::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>()));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1678D10
    // Implemented from: System.Exception
    // Base method: System.Void Exception::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AggregateException* New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::AggregateException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AggregateException*, creationType>(info, context)));
    }
    // public override System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1678ED0
    // Implemented from: System.Exception
    // Base method: System.Void Exception::GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    void GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // Creating proxy method: System_Runtime_Serialization_ISerializable_GetObjectData
    // Maps to method: GetObjectData
    void System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // public override System.String ToString()
    // Offset: 0x16792D8
    // Implemented from: System.Exception
    // Base method: System.String Exception::ToString()
    ::Il2CppString* ToString();
  }; // System.AggregateException
  #pragma pack(pop)
  static check_size<sizeof(AggregateException), 136 + sizeof(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Exception*>*)> __System_AggregateExceptionSizeCheck;
  static_assert(sizeof(AggregateException) == 0x90);
}
DEFINE_IL2CPP_ARG_TYPE(System::AggregateException*, "System", "AggregateException");
