// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: OperatingSystem
  class OperatingSystem;
  // Forward declaring type: PlatformID
  struct PlatformID;
  // Forward declaring type: Version
  class Version;
  // Forward declaring type: IntPtr
  struct IntPtr;
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Environment
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CA87B4
  class Environment : public ::Il2CppObject {
    public:
    // Nested type: System::Environment::SpecialFolder
    struct SpecialFolder;
    // Nested type: System::Environment::SpecialFolderOption
    struct SpecialFolderOption;
    // Creating value type constructor for type: Environment
    Environment() noexcept {}
    // static field const value: static private System.Int32 mono_corlib_version
    static constexpr const int mono_corlib_version = 1051100001;
    // Get static field: static private System.Int32 mono_corlib_version
    static int _get_mono_corlib_version();
    // Set static field: static private System.Int32 mono_corlib_version
    static void _set_mono_corlib_version(int value);
    // Get static field: static private System.String nl
    static ::Il2CppString* _get_nl();
    // Set static field: static private System.String nl
    static void _set_nl(::Il2CppString* value);
    // Get static field: static private System.OperatingSystem os
    static System::OperatingSystem* _get_os();
    // Set static field: static private System.OperatingSystem os
    static void _set_os(System::OperatingSystem* value);
    // static System.String GetResourceString(System.String key)
    // Offset: 0x129FCD8
    static ::Il2CppString* GetResourceString(::Il2CppString* key);
    // static System.String GetResourceString(System.String key, params System.Object[] values)
    // Offset: 0x12A1940
    static ::Il2CppString* GetResourceString(::Il2CppString* key, ::Array<::Il2CppObject*>* values);
    // Creating initializer_list -> params proxy for: System.String GetResourceString(System.String key, params System.Object[] values)
    static ::Il2CppString* GetResourceString(::Il2CppString* key, std::initializer_list<::Il2CppObject*> values);
    // Creating TArgs -> initializer_list proxy for: System.String GetResourceString(System.String key, params System.Object[] values)
    template<class ...TParams>
    static ::Il2CppString* GetResourceString(::Il2CppString* key, TParams&&... values) {
      return GetResourceString(key, {values...});
    }
    // static System.String GetResourceStringEncodingName(System.Int32 codePage)
    // Offset: 0x12AFADC
    static ::Il2CppString* GetResourceStringEncodingName(int codePage);
    // static public System.String get_CurrentDirectory()
    // Offset: 0x12AFC1C
    static ::Il2CppString* get_CurrentDirectory();
    // static public System.Int32 get_CurrentManagedThreadId()
    // Offset: 0x12AFC24
    static int get_CurrentManagedThreadId();
    // static public System.Boolean get_HasShutdownStarted()
    // Offset: 0x12AFC48
    static bool get_HasShutdownStarted();
    // static public System.String get_MachineName()
    // Offset: 0x12AFC4C
    static ::Il2CppString* get_MachineName();
    // static private System.String GetNewLine()
    // Offset: 0x12AFC50
    static ::Il2CppString* GetNewLine();
    // static public System.String get_NewLine()
    // Offset: 0x12AFC54
    static ::Il2CppString* get_NewLine();
    // static private System.PlatformID get_Platform()
    // Offset: 0x12AFCD0
    static System::PlatformID get_Platform();
    // static System.String GetOSVersionString()
    // Offset: 0x12AFCD4
    static ::Il2CppString* GetOSVersionString();
    // static public System.OperatingSystem get_OSVersion()
    // Offset: 0x12AFCD8
    static System::OperatingSystem* get_OSVersion();
    // static System.Version CreateVersionFromString(System.String info)
    // Offset: 0x12AFD98
    static System::Version* CreateVersionFromString(::Il2CppString* info);
    // static public System.String get_StackTrace()
    // Offset: 0x12AFFAC
    static ::Il2CppString* get_StackTrace();
    // static public System.Int32 get_TickCount()
    // Offset: 0x12B0020
    static int get_TickCount();
    // static public System.String get_UserDomainName()
    // Offset: 0x12B0024
    static ::Il2CppString* get_UserDomainName();
    // static public System.String get_UserName()
    // Offset: 0x12B0028
    static ::Il2CppString* get_UserName();
    // static public System.Void Exit(System.Int32 exitCode)
    // Offset: 0x12B002C
    static void Exit(int exitCode);
    // static public System.String ExpandEnvironmentVariables(System.String name)
    // Offset: 0x12B0030
    static ::Il2CppString* ExpandEnvironmentVariables(::Il2CppString* name);
    // static public System.String[] GetCommandLineArgs()
    // Offset: 0x12B040C
    static ::Array<::Il2CppString*>* GetCommandLineArgs();
    // static System.String internalGetEnvironmentVariable_native(System.IntPtr variable)
    // Offset: 0x12B0410
    static ::Il2CppString* internalGetEnvironmentVariable_native(System::IntPtr variable);
    // static System.String internalGetEnvironmentVariable(System.String variable)
    // Offset: 0x12B0414
    static ::Il2CppString* internalGetEnvironmentVariable(::Il2CppString* variable);
    // static public System.String GetEnvironmentVariable(System.String variable)
    // Offset: 0x12B02E4
    static ::Il2CppString* GetEnvironmentVariable(::Il2CppString* variable);
    // static private System.Collections.Hashtable GetEnvironmentVariablesNoCase()
    // Offset: 0x12B0304
    static System::Collections::Hashtable* GetEnvironmentVariablesNoCase();
    // static public System.String GetFolderPath(System.Environment/SpecialFolder folder)
    // Offset: 0x12B04B4
    static ::Il2CppString* GetFolderPath(System::Environment::SpecialFolder folder);
    // static private System.String GetWindowsFolderPath(System.Int32 folder)
    // Offset: 0x12B0500
    static ::Il2CppString* GetWindowsFolderPath(int folder);
    // static public System.String GetFolderPath(System.Environment/SpecialFolder folder, System.Environment/SpecialFolderOption option)
    // Offset: 0x12B04BC
    static ::Il2CppString* GetFolderPath(System::Environment::SpecialFolder folder, System::Environment::SpecialFolderOption option);
    // static private System.String ReadXdgUserDir(System.String config_dir, System.String home_dir, System.String key, System.String fallback)
    // Offset: 0x12B0910
    static ::Il2CppString* ReadXdgUserDir(::Il2CppString* config_dir, ::Il2CppString* home_dir, ::Il2CppString* key, ::Il2CppString* fallback);
    // static System.String UnixGetFolderPath(System.Environment/SpecialFolder folder, System.Environment/SpecialFolderOption option)
    // Offset: 0x12B0504
    static ::Il2CppString* UnixGetFolderPath(System::Environment::SpecialFolder folder, System::Environment::SpecialFolderOption option);
    // static public System.String[] GetLogicalDrives()
    // Offset: 0x12B0D64
    static ::Array<::Il2CppString*>* GetLogicalDrives();
    // static public System.Void FailFast(System.String message)
    // Offset: 0x12B0D6C
    static void FailFast(::Il2CppString* message);
    // static public System.Void FailFast(System.String message, System.Exception exception)
    // Offset: 0x12B0DCC
    static void FailFast(::Il2CppString* message, System::Exception* exception);
    // static public System.Boolean get_Is64BitProcess()
    // Offset: 0x12B0E6C
    static bool get_Is64BitProcess();
    // static public System.Int32 get_ProcessorCount()
    // Offset: 0x12B0E8C
    static int get_ProcessorCount();
    // static System.Boolean get_IsRunningOnWindows()
    // Offset: 0x12B02E8
    static bool get_IsRunningOnWindows();
    // static private System.String[] GetLogicalDrivesInternal()
    // Offset: 0x12B0D68
    static ::Array<::Il2CppString*>* GetLogicalDrivesInternal();
    // static private System.String[] GetEnvironmentVariableNames()
    // Offset: 0x12B04B0
    static ::Array<::Il2CppString*>* GetEnvironmentVariableNames();
    // static System.String GetMachineConfigPath()
    // Offset: 0x12B0E90
    static ::Il2CppString* GetMachineConfigPath();
    // static System.String internalGetHome()
    // Offset: 0x12B0D60
    static ::Il2CppString* internalGetHome();
    // static System.Int32 GetPageSize()
    // Offset: 0x12B0E94
    static int GetPageSize();
    // static System.Boolean get_IsUnix()
    // Offset: 0x12B0E98
    static bool get_IsUnix();
    // static System.String GetStackTrace(System.Exception e, System.Boolean needFileInfo)
    // Offset: 0x12B0ED4
    static ::Il2CppString* GetStackTrace(System::Exception* e, bool needFileInfo);
  }; // System.Environment
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Environment*, "System", "Environment");
