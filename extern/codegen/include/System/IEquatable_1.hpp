// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System
namespace System {
  // WARNING Size may be invalid!
  // Autogenerated type: System.IEquatable`1
  // [] Offset: FFFFFFFF
  template<typename T>
  class IEquatable_1 {
    public:
    // Creating value type constructor for type: IEquatable_1
    IEquatable_1() noexcept {}
    // public System.Boolean Equals(T other)
    // Offset: 0xFFFFFFFF
    bool Equals(T other) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::IEquatable_1::Equals");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
      return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
    }
  }; // System.IEquatable`1
  // Could not write size check! Type: System.IEquatable`1 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::IEquatable_1, "System", "IEquatable`1");
