// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: HeaderInfo
  class HeaderInfo;
  // Forward declaring type: HeaderParser
  class HeaderParser;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.HeaderInfoTable
  // [] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: CB73C8
  class HeaderInfoTable : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: HeaderInfoTable
    HeaderInfoTable() noexcept {}
    // Get static field: static private System.Collections.Hashtable HeaderHashTable
    static System::Collections::Hashtable* _get_HeaderHashTable();
    // Set static field: static private System.Collections.Hashtable HeaderHashTable
    static void _set_HeaderHashTable(System::Collections::Hashtable* value);
    // Get static field: static private System.Net.HeaderInfo UnknownHeaderInfo
    static System::Net::HeaderInfo* _get_UnknownHeaderInfo();
    // Set static field: static private System.Net.HeaderInfo UnknownHeaderInfo
    static void _set_UnknownHeaderInfo(System::Net::HeaderInfo* value);
    // Get static field: static private System.Net.HeaderParser SingleParser
    static System::Net::HeaderParser* _get_SingleParser();
    // Set static field: static private System.Net.HeaderParser SingleParser
    static void _set_SingleParser(System::Net::HeaderParser* value);
    // Get static field: static private System.Net.HeaderParser MultiParser
    static System::Net::HeaderParser* _get_MultiParser();
    // Set static field: static private System.Net.HeaderParser MultiParser
    static void _set_MultiParser(System::Net::HeaderParser* value);
    // static private System.String[] ParseSingleValue(System.String value)
    // Offset: 0x14F668C
    static ::Array<::Il2CppString*>* ParseSingleValue(::Il2CppString* value);
    // static private System.String[] ParseMultiValue(System.String value)
    // Offset: 0x14F6738
    static ::Array<::Il2CppString*>* ParseMultiValue(::Il2CppString* value);
    // static private System.Void .cctor()
    // Offset: 0x14F6934
    static void _cctor();
    // System.Net.HeaderInfo get_Item(System.String name)
    // Offset: 0x14F8178
    System::Net::HeaderInfo* get_Item(::Il2CppString* name);
    // public System.Void .ctor()
    // Offset: 0x14F8260
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HeaderInfoTable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HeaderInfoTable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HeaderInfoTable*, creationType>()));
    }
  }; // System.Net.HeaderInfoTable
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::Net::HeaderInfoTable*, "System.Net", "HeaderInfoTable");
