// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Win32Exception
#include "System/ComponentModel/Win32Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x8C
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.HttpListenerException
  // [] Offset: FFFFFFFF
  class HttpListenerException : public System::ComponentModel::Win32Exception {
    public:
    // Creating value type constructor for type: HttpListenerException
    HttpListenerException() noexcept {}
    // public System.Void .ctor()
    // Offset: 0x14FF20C
    // Implemented from: System.ComponentModel.Win32Exception
    // Base method: System.Void Win32Exception::.ctor()
    // Base method: System.Void ExternalException::.ctor()
    // Base method: System.Void SystemException::.ctor()
    // Base method: System.Void Exception::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HttpListenerException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HttpListenerException*, creationType>()));
    }
    // public System.Void .ctor(System.Int32 errorCode, System.String message)
    // Offset: 0x14FF2A8
    // Implemented from: System.ComponentModel.Win32Exception
    // Base method: System.Void Win32Exception::.ctor(System.Int32 errorCode, System.String message)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HttpListenerException* New_ctor(int errorCode, ::Il2CppString* message) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HttpListenerException*, creationType>(errorCode, message)));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Offset: 0x14FF328
    // Implemented from: System.ComponentModel.Win32Exception
    // Base method: System.Void Win32Exception::.ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Base method: System.Void ExternalException::.ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Base method: System.Void SystemException::.ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Base method: System.Void Exception::.ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HttpListenerException* New_ctor(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HttpListenerException*, creationType>(serializationInfo, streamingContext)));
    }
  }; // System.Net.HttpListenerException
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(System::Net::HttpListenerException*, "System.Net", "HttpListenerException");
