// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: FtpWebResponse
  class FtpWebResponse;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: ManualResetEvent
  class ManualResetEvent;
  // Forward declaring type: WaitHandle
  class WaitHandle;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Autogenerated type: System.Net.FtpAsyncResult
  class FtpAsyncResult : public ::Il2CppObject/*, public System::IAsyncResult*/ {
    public:
    // private System.Net.FtpWebResponse response
    // Offset: 0x10
    System::Net::FtpWebResponse* response;
    // private System.Threading.ManualResetEvent waitHandle
    // Offset: 0x18
    System::Threading::ManualResetEvent* waitHandle;
    // private System.Exception exception
    // Offset: 0x20
    System::Exception* exception;
    // private System.AsyncCallback callback
    // Offset: 0x28
    System::AsyncCallback* callback;
    // private System.IO.Stream stream
    // Offset: 0x30
    System::IO::Stream* stream;
    // private System.Object state
    // Offset: 0x38
    ::Il2CppObject* state;
    // private System.Boolean completed
    // Offset: 0x40
    bool completed;
    // private System.Boolean synch
    // Offset: 0x41
    bool synch;
    // private System.Object locker
    // Offset: 0x48
    ::Il2CppObject* locker;
    // Creating interface conversion operator: operator System::IAsyncResult
    operator System::IAsyncResult() noexcept {
      return *reinterpret_cast<System::IAsyncResult*>(this);
    }
    // public System.Void .ctor(System.AsyncCallback callback, System.Object state)
    // Offset: 0x131EA40
    static FtpAsyncResult* New_ctor(System::AsyncCallback* callback, ::Il2CppObject* state);
    // System.Boolean get_GotException()
    // Offset: 0x131ECA0
    bool get_GotException();
    // System.Exception get_Exception()
    // Offset: 0x131ECB0
    System::Exception* get_Exception();
    // System.Net.FtpWebResponse get_Response()
    // Offset: 0x131ECB8
    System::Net::FtpWebResponse* get_Response();
    // System.IO.Stream get_Stream()
    // Offset: 0x131ECC0
    System::IO::Stream* get_Stream();
    // System.Void set_Stream(System.IO.Stream value)
    // Offset: 0x131ECC8
    void set_Stream(System::IO::Stream* value);
    // System.Boolean WaitUntilComplete(System.Int32 timeout, System.Boolean exitContext)
    // Offset: 0x131ECD0
    bool WaitUntilComplete(int timeout, bool exitContext);
    // System.Void SetCompleted(System.Boolean synch, System.Exception exc, System.Net.FtpWebResponse response)
    // Offset: 0x131ED38
    void SetCompleted(bool synch, System::Exception* exc, System::Net::FtpWebResponse* response);
    // System.Void SetCompleted(System.Boolean synch, System.Net.FtpWebResponse response)
    // Offset: 0x131EEE8
    void SetCompleted(bool synch, System::Net::FtpWebResponse* response);
    // System.Void SetCompleted(System.Boolean synch, System.Exception exc)
    // Offset: 0x131EEF8
    void SetCompleted(bool synch, System::Exception* exc);
    // System.Void DoCallback()
    // Offset: 0x131EE20
    void DoCallback();
    // public System.Object get_AsyncState()
    // Offset: 0x131EAE4
    // Implemented from: System.IAsyncResult
    // Base method: System.Object IAsyncResult::get_AsyncState()
    ::Il2CppObject* get_AsyncState();
    // Creating proxy method: System_IAsyncResult_get_AsyncState
    // Maps to method: get_AsyncState
    ::Il2CppObject* System_IAsyncResult_get_AsyncState();
    // public System.Threading.WaitHandle get_AsyncWaitHandle()
    // Offset: 0x131EAEC
    // Implemented from: System.IAsyncResult
    // Base method: System.Threading.WaitHandle IAsyncResult::get_AsyncWaitHandle()
    System::Threading::WaitHandle* get_AsyncWaitHandle();
    // Creating proxy method: System_IAsyncResult_get_AsyncWaitHandle
    // Maps to method: get_AsyncWaitHandle
    System::Threading::WaitHandle* System_IAsyncResult_get_AsyncWaitHandle();
    // public System.Boolean get_CompletedSynchronously()
    // Offset: 0x131EBEC
    // Implemented from: System.IAsyncResult
    // Base method: System.Boolean IAsyncResult::get_CompletedSynchronously()
    bool get_CompletedSynchronously();
    // Creating proxy method: System_IAsyncResult_get_CompletedSynchronously
    // Maps to method: get_CompletedSynchronously
    bool System_IAsyncResult_get_CompletedSynchronously();
    // public System.Boolean get_IsCompleted()
    // Offset: 0x131EBF4
    // Implemented from: System.IAsyncResult
    // Base method: System.Boolean IAsyncResult::get_IsCompleted()
    bool get_IsCompleted();
    // Creating proxy method: System_IAsyncResult_get_IsCompleted
    // Maps to method: get_IsCompleted
    bool System_IAsyncResult_get_IsCompleted();
  }; // System.Net.FtpAsyncResult
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::FtpAsyncResult*, "System.Net", "FtpAsyncResult");
#pragma pack(pop)
