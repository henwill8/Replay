// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: Cookie
  class Cookie;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Autogenerated type: System.Net.CookieCollection
  class CookieCollection : public ::Il2CppObject/*, public System::Collections::ICollection*/ {
    public:
    // Nested type: System::Net::CookieCollection::Stamp
    struct Stamp;
    // Nested type: System::Net::CookieCollection::CookieCollectionEnumerator
    class CookieCollectionEnumerator;
    // System.Int32 m_version
    // Offset: 0x10
    int m_version;
    // private System.Collections.ArrayList m_list
    // Offset: 0x18
    System::Collections::ArrayList* m_list;
    // private System.DateTime m_TimeStamp
    // Offset: 0x20
    System::DateTime m_TimeStamp;
    // private System.Boolean m_has_other_versions
    // Offset: 0x28
    bool m_has_other_versions;
    // private System.Boolean m_IsReadOnly
    // Offset: 0x29
    bool m_IsReadOnly;
    // Creating interface conversion operator: operator System::Collections::ICollection
    operator System::Collections::ICollection() noexcept {
      return *reinterpret_cast<System::Collections::ICollection*>(this);
    }
    // public System.Net.Cookie get_Item(System.Int32 index)
    // Offset: 0x130F670
    System::Net::Cookie* get_Item(int index);
    // public System.Void Add(System.Net.Cookie cookie)
    // Offset: 0x130F75C
    void Add(System::Net::Cookie* cookie);
    // public System.Void Add(System.Net.CookieCollection cookies)
    // Offset: 0x130FBE0
    void Add(System::Net::CookieCollection* cookies);
    // System.DateTime TimeStamp(System.Net.CookieCollection/Stamp how)
    // Offset: 0x130FEFC
    System::DateTime TimeStamp(System::Net::CookieCollection::Stamp how);
    // System.Boolean get_IsOtherVersionSeen()
    // Offset: 0x130FFF4
    bool get_IsOtherVersionSeen();
    // System.Int32 InternalAdd(System.Net.Cookie cookie, System.Boolean isStrict)
    // Offset: 0x130FFFC
    int InternalAdd(System::Net::Cookie* cookie, bool isStrict);
    // System.Int32 IndexOf(System.Net.Cookie cookie)
    // Offset: 0x130F84C
    int IndexOf(System::Net::Cookie* cookie);
    // System.Void RemoveAt(System.Int32 idx)
    // Offset: 0x1310460
    void RemoveAt(int idx);
    // public System.Void .ctor()
    // Offset: 0x130F5C0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static CookieCollection* New_ctor();
    // public System.Int32 get_Count()
    // Offset: 0x130FEB4
    // Implemented from: System.Collections.ICollection
    // Base method: System.Int32 ICollection::get_Count()
    int get_Count();
    // Creating proxy method: System_Collections_ICollection_get_Count
    // Maps to method: get_Count
    int System_Collections_ICollection_get_Count();
    // public System.Void CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x130FED8
    // Implemented from: System.Collections.ICollection
    // Base method: System.Void ICollection::CopyTo(System.Array array, System.Int32 index)
    void CopyTo(System::Array* array, int index);
    // Creating proxy method: System_Collections_ICollection_CopyTo
    // Maps to method: CopyTo
    void System_Collections_ICollection_CopyTo(System::Array* array, int index);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x130FE54
    // Implemented from: System.Collections.IEnumerable
    // Base method: System.Collections.IEnumerator IEnumerable::GetEnumerator()
    System::Collections::IEnumerator* GetEnumerator();
    // Creating proxy method: System_Collections_IEnumerable_GetEnumerator
    // Maps to method: GetEnumerator
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
  }; // System.Net.CookieCollection
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::CookieCollection*, "System.Net", "CookieCollection");
#pragma pack(pop)
