// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread
#include "System/Net/TimerThread.hpp"
// Including type: System.Net.TimerThread/Timer
#include "System/Net/TimerThread_Timer.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Net
namespace System::Net {
  // Autogenerated type: System.Net.TimerThread/TimerNode
  class TimerThread::TimerNode : public System::Net::TimerThread::Timer {
    public:
    // Nested type: System::Net::TimerThread::TimerNode::TimerState
    struct TimerState;
    // Autogenerated type: System.Net.TimerThread/TimerNode/TimerState
    struct TimerState : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: TimerState
      constexpr TimerState(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public System.Net.TimerThread/TimerNode/TimerState Ready
      static constexpr const int Ready = 0;
      // Get static field: static public System.Net.TimerThread/TimerNode/TimerState Ready
      static System::Net::TimerThread::TimerNode::TimerState _get_Ready();
      // Set static field: static public System.Net.TimerThread/TimerNode/TimerState Ready
      static void _set_Ready(System::Net::TimerThread::TimerNode::TimerState value);
      // static field const value: static public System.Net.TimerThread/TimerNode/TimerState Fired
      static constexpr const int Fired = 1;
      // Get static field: static public System.Net.TimerThread/TimerNode/TimerState Fired
      static System::Net::TimerThread::TimerNode::TimerState _get_Fired();
      // Set static field: static public System.Net.TimerThread/TimerNode/TimerState Fired
      static void _set_Fired(System::Net::TimerThread::TimerNode::TimerState value);
      // static field const value: static public System.Net.TimerThread/TimerNode/TimerState Cancelled
      static constexpr const int Cancelled = 2;
      // Get static field: static public System.Net.TimerThread/TimerNode/TimerState Cancelled
      static System::Net::TimerThread::TimerNode::TimerState _get_Cancelled();
      // Set static field: static public System.Net.TimerThread/TimerNode/TimerState Cancelled
      static void _set_Cancelled(System::Net::TimerThread::TimerNode::TimerState value);
      // static field const value: static public System.Net.TimerThread/TimerNode/TimerState Sentinel
      static constexpr const int Sentinel = 3;
      // Get static field: static public System.Net.TimerThread/TimerNode/TimerState Sentinel
      static System::Net::TimerThread::TimerNode::TimerState _get_Sentinel();
      // Set static field: static public System.Net.TimerThread/TimerNode/TimerState Sentinel
      static void _set_Sentinel(System::Net::TimerThread::TimerNode::TimerState value);
    }; // System.Net.TimerThread/TimerNode/TimerState
    // private System.Net.TimerThread/TimerNode/TimerState m_TimerState
    // Offset: 0x18
    System::Net::TimerThread::TimerNode::TimerState m_TimerState;
    // private System.Net.TimerThread/Callback m_Callback
    // Offset: 0x20
    System::Net::TimerThread::Callback* m_Callback;
    // private System.Object m_Context
    // Offset: 0x28
    ::Il2CppObject* m_Context;
    // private System.Object m_QueueLock
    // Offset: 0x30
    ::Il2CppObject* m_QueueLock;
    // private System.Net.TimerThread/TimerNode next
    // Offset: 0x38
    System::Net::TimerThread::TimerNode* next;
    // private System.Net.TimerThread/TimerNode prev
    // Offset: 0x40
    System::Net::TimerThread::TimerNode* prev;
    // System.Net.TimerThread/TimerNode get_Next()
    // Offset: 0x1216ACC
    System::Net::TimerThread::TimerNode* get_Next();
    // System.Void set_Next(System.Net.TimerThread/TimerNode value)
    // Offset: 0x1216AD4
    void set_Next(System::Net::TimerThread::TimerNode* value);
    // System.Net.TimerThread/TimerNode get_Prev()
    // Offset: 0x1216ADC
    System::Net::TimerThread::TimerNode* get_Prev();
    // System.Void set_Prev(System.Net.TimerThread/TimerNode value)
    // Offset: 0x1216AE4
    void set_Prev(System::Net::TimerThread::TimerNode* value);
    // System.Void .ctor()
    // Offset: 0x1216A90
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static TimerThread::TimerNode* New_ctor();
    // override System.Boolean Cancel()
    // Offset: 0x1216AEC
    // Implemented from: System.Net.TimerThread/Timer
    // Base method: System.Boolean Timer::Cancel()
    bool Cancel();
  }; // System.Net.TimerThread/TimerNode
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::TimerThread::TimerNode*, "System.Net", "TimerThread/TimerNode");
DEFINE_IL2CPP_ARG_TYPE(System::Net::TimerThread::TimerNode::TimerState, "System.Net", "TimerThread/TimerNode/TimerState");
#pragma pack(pop)
