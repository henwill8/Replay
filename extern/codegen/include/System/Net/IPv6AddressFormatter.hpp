// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include <stdint.h>
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
template<class T>
struct Array;
struct Il2CppString;
// Completed il2cpp-utils forward declares
// Type namespace: System.Net
namespace System::Net {
  // Autogenerated type: System.Net.IPv6AddressFormatter
  struct IPv6AddressFormatter : public System::ValueType {
    public:
    // private System.UInt16[] address
    // Offset: 0x0
    ::Array<uint16_t>* address;
    // private System.Int64 scopeId
    // Offset: 0x8
    int64_t scopeId;
    // Creating value type constructor for type: IPv6AddressFormatter
    constexpr IPv6AddressFormatter(::Array<uint16_t>* address_ = {}, int64_t scopeId_ = {}) noexcept : address{address_}, scopeId{scopeId_} {}
    // public System.Void .ctor(System.UInt16[] addr, System.Int64 scopeId)
    // Offset: 0xC9B540
    // ABORTED: conflicts with another method.  IPv6AddressFormatter(::Array<uint16_t>* addr, int64_t scopeId);
    // static private System.UInt16 SwapUShort(System.UInt16 number)
    // Offset: 0x12BD398
    static uint16_t SwapUShort(uint16_t number);
    // private System.UInt32 AsIPv4Int()
    // Offset: 0xC9B570
    uint AsIPv4Int();
    // private System.Boolean IsIPv4Compatible()
    // Offset: 0xC9B578
    bool IsIPv4Compatible();
    // private System.Boolean IsIPv4Mapped()
    // Offset: 0xC9B580
    bool IsIPv4Mapped();
    // public override System.String ToString()
    // Offset: 0xC9B588
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::Il2CppString* ToString();
  }; // System.Net.IPv6AddressFormatter
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::IPv6AddressFormatter, "System.Net", "IPv6AddressFormatter");
#pragma pack(pop)
