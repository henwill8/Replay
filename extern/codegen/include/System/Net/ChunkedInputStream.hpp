// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.RequestStream
#include "System/Net/RequestStream.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: MonoChunkStream
  class MonoChunkStream;
  // Forward declaring type: HttpListenerContext
  class HttpListenerContext;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Skipping declaration: Stream because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Autogenerated type: System.Net.ChunkedInputStream
  class ChunkedInputStream : public System::Net::RequestStream {
    public:
    // Nested type: System::Net::ChunkedInputStream::ReadBufferState
    class ReadBufferState;
    // private System.Boolean disposed
    // Offset: 0x50
    bool disposed;
    // private System.Net.MonoChunkStream decoder
    // Offset: 0x58
    System::Net::MonoChunkStream* decoder;
    // private System.Net.HttpListenerContext context
    // Offset: 0x60
    System::Net::HttpListenerContext* context;
    // private System.Boolean no_more_data
    // Offset: 0x68
    bool no_more_data;
    // public System.Void .ctor(System.Net.HttpListenerContext context, System.IO.Stream stream, System.Byte[] buffer, System.Int32 offset, System.Int32 length)
    // Offset: 0x130BCF8
    static ChunkedInputStream* New_ctor(System::Net::HttpListenerContext* context, System::IO::Stream* stream, ::Array<uint8_t>* buffer, int offset, int length);
    // private System.Void OnRead(System.IAsyncResult base_ares)
    // Offset: 0x130C1A8
    void OnRead(System::IAsyncResult* base_ares);
    // public override System.Int32 Read(in System.Byte[] buffer, System.Int32 offset, System.Int32 count)
    // Offset: 0x130BE10
    // Implemented from: System.Net.RequestStream
    // Base method: System.Int32 RequestStream::Read(in System.Byte[] buffer, System.Int32 offset, System.Int32 count)
    int Read(::Array<uint8_t>*& buffer, int offset, int count);
    // public override System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback cback, System.Object state)
    // Offset: 0x130BE58
    // Implemented from: System.Net.RequestStream
    // Base method: System.IAsyncResult RequestStream::BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback cback, System.Object state)
    System::IAsyncResult* BeginRead(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* cback, ::Il2CppObject* state);
    // public override System.Int32 EndRead(System.IAsyncResult ares)
    // Offset: 0x130C53C
    // Implemented from: System.Net.RequestStream
    // Base method: System.Int32 RequestStream::EndRead(System.IAsyncResult ares)
    int EndRead(System::IAsyncResult* ares);
    // public override System.Void Close()
    // Offset: 0x130C7CC
    // Implemented from: System.Net.RequestStream
    // Base method: System.Void RequestStream::Close()
    void Close();
  }; // System.Net.ChunkedInputStream
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::ChunkedInputStream*, "System.Net", "ChunkedInputStream");
#pragma pack(pop)
