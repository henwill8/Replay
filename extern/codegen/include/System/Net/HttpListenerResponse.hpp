// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: CookieCollection
  class CookieCollection;
  // Forward declaring type: WebHeaderCollection
  class WebHeaderCollection;
  // Forward declaring type: ResponseStream
  class ResponseStream;
  // Forward declaring type: HttpListenerContext
  class HttpListenerContext;
  // Forward declaring type: Cookie
  class Cookie;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Version
  class Version;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
  // Forward declaring type: MemoryStream
  class MemoryStream;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Autogenerated type: System.Net.HttpListenerResponse
  class HttpListenerResponse : public ::Il2CppObject/*, public System::IDisposable*/ {
    public:
    // private System.Boolean disposed
    // Offset: 0x10
    bool disposed;
    // private System.Text.Encoding content_encoding
    // Offset: 0x18
    System::Text::Encoding* content_encoding;
    // private System.Int64 content_length
    // Offset: 0x20
    int64_t content_length;
    // private System.Boolean cl_set
    // Offset: 0x28
    bool cl_set;
    // private System.String content_type
    // Offset: 0x30
    ::Il2CppString* content_type;
    // private System.Net.CookieCollection cookies
    // Offset: 0x38
    System::Net::CookieCollection* cookies;
    // private System.Net.WebHeaderCollection headers
    // Offset: 0x40
    System::Net::WebHeaderCollection* headers;
    // private System.Boolean keep_alive
    // Offset: 0x48
    bool keep_alive;
    // private System.Net.ResponseStream output_stream
    // Offset: 0x50
    System::Net::ResponseStream* output_stream;
    // private System.Version version
    // Offset: 0x58
    System::Version* version;
    // private System.String location
    // Offset: 0x60
    ::Il2CppString* location;
    // private System.Int32 status_code
    // Offset: 0x68
    int status_code;
    // private System.String status_description
    // Offset: 0x70
    ::Il2CppString* status_description;
    // private System.Boolean chunked
    // Offset: 0x78
    bool chunked;
    // private System.Net.HttpListenerContext context
    // Offset: 0x80
    System::Net::HttpListenerContext* context;
    // System.Boolean HeadersSent
    // Offset: 0x88
    bool HeadersSent;
    // System.Object headers_lock
    // Offset: 0x90
    ::Il2CppObject* headers_lock;
    // private System.Boolean force_close_chunked
    // Offset: 0x98
    bool force_close_chunked;
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // Get static field: static private System.String tspecials
    static ::Il2CppString* _get_tspecials();
    // Set static field: static private System.String tspecials
    static void _set_tspecials(::Il2CppString* value);
    // System.Void .ctor(System.Net.HttpListenerContext context)
    // Offset: 0x12B00F8
    static HttpListenerResponse* New_ctor(System::Net::HttpListenerContext* context);
    // System.Boolean get_ForceCloseChunked()
    // Offset: 0x12B34F8
    bool get_ForceCloseChunked();
    // public System.Text.Encoding get_ContentEncoding()
    // Offset: 0x12ACE30
    System::Text::Encoding* get_ContentEncoding();
    // public System.Void set_ContentLength64(System.Int64 value)
    // Offset: 0x12B3500
    void set_ContentLength64(int64_t value);
    // public System.Void set_ContentType(System.String value)
    // Offset: 0x12ACA08
    void set_ContentType(::Il2CppString* value);
    // public System.Net.WebHeaderCollection get_Headers()
    // Offset: 0x12B3640
    System::Net::WebHeaderCollection* get_Headers();
    // public System.IO.Stream get_OutputStream()
    // Offset: 0x12B3648
    System::IO::Stream* get_OutputStream();
    // public System.Boolean get_SendChunked()
    // Offset: 0x12B369C
    bool get_SendChunked();
    // public System.Void set_SendChunked(System.Boolean value)
    // Offset: 0x12AA42C
    void set_SendChunked(bool value);
    // public System.Void set_StatusCode(System.Int32 value)
    // Offset: 0x12AC8C0
    void set_StatusCode(int value);
    // private System.Void Close(System.Boolean force)
    // Offset: 0x12B36AC
    void Close(bool force);
    // public System.Void Close()
    // Offset: 0x12B36DC
    void Close();
    // public System.Void Close(System.Byte[] responseEntity, System.Boolean willBlock)
    // Offset: 0x12ACE6C
    void Close(::Array<uint8_t>* responseEntity, bool willBlock);
    // System.Void SendHeaders(System.Boolean closing, System.IO.MemoryStream ms)
    // Offset: 0x12B36F0
    void SendHeaders(bool closing, System::IO::MemoryStream* ms);
    // static private System.String FormatHeaders(System.Net.WebHeaderCollection headers)
    // Offset: 0x12B4210
    static ::Il2CppString* FormatHeaders(System::Net::WebHeaderCollection* headers);
    // static private System.String CookieToClientString(System.Net.Cookie cookie)
    // Offset: 0x12B3FB0
    static ::Il2CppString* CookieToClientString(System::Net::Cookie* cookie);
    // static private System.String QuotedString(System.Net.Cookie cookie, System.String value)
    // Offset: 0x12B4460
    static ::Il2CppString* QuotedString(System::Net::Cookie* cookie, ::Il2CppString* value);
    // static private System.Boolean IsToken(System.String value)
    // Offset: 0x12B4534
    static bool IsToken(::Il2CppString* value);
    // static private System.Void .cctor()
    // Offset: 0x12B461C
    static void _cctor();
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x12B36A4
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void System_IDisposable_Dispose();
  }; // System.Net.HttpListenerResponse
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::HttpListenerResponse*, "System.Net", "HttpListenerResponse");
#pragma pack(pop)
