// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.NetworkInformation.LinuxArpHardware
  // [] Offset: FFFFFFFF
  struct LinuxArpHardware/*, public System::Enum*/ {
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: LinuxArpHardware
    constexpr LinuxArpHardware(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator System::Enum
    operator System::Enum() noexcept {
      return *reinterpret_cast<System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware ETHER
    static constexpr const int ETHER = 1;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware ETHER
    static System::Net::NetworkInformation::LinuxArpHardware _get_ETHER();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware ETHER
    static void _set_ETHER(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware EETHER
    static constexpr const int EETHER = 2;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware EETHER
    static System::Net::NetworkInformation::LinuxArpHardware _get_EETHER();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware EETHER
    static void _set_EETHER(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware PRONET
    static constexpr const int PRONET = 4;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware PRONET
    static System::Net::NetworkInformation::LinuxArpHardware _get_PRONET();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware PRONET
    static void _set_PRONET(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware ATM
    static constexpr const int ATM = 19;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware ATM
    static System::Net::NetworkInformation::LinuxArpHardware _get_ATM();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware ATM
    static void _set_ATM(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware SLIP
    static constexpr const int SLIP = 256;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP
    static System::Net::NetworkInformation::LinuxArpHardware _get_SLIP();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP
    static void _set_SLIP(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP
    static constexpr const int CSLIP = 257;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP
    static System::Net::NetworkInformation::LinuxArpHardware _get_CSLIP();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP
    static void _set_CSLIP(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware SLIP6
    static constexpr const int SLIP6 = 258;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP6
    static System::Net::NetworkInformation::LinuxArpHardware _get_SLIP6();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP6
    static void _set_SLIP6(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP6
    static constexpr const int CSLIP6 = 259;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP6
    static System::Net::NetworkInformation::LinuxArpHardware _get_CSLIP6();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP6
    static void _set_CSLIP6(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware PPP
    static constexpr const int PPP = 512;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware PPP
    static System::Net::NetworkInformation::LinuxArpHardware _get_PPP();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware PPP
    static void _set_PPP(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware LOOPBACK
    static constexpr const int LOOPBACK = 772;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware LOOPBACK
    static System::Net::NetworkInformation::LinuxArpHardware _get_LOOPBACK();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware LOOPBACK
    static void _set_LOOPBACK(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware FDDI
    static constexpr const int FDDI = 774;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware FDDI
    static System::Net::NetworkInformation::LinuxArpHardware _get_FDDI();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware FDDI
    static void _set_FDDI(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL
    static constexpr const int TUNNEL = 768;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL
    static System::Net::NetworkInformation::LinuxArpHardware _get_TUNNEL();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL
    static void _set_TUNNEL(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL6
    static constexpr const int TUNNEL6 = 769;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL6
    static System::Net::NetworkInformation::LinuxArpHardware _get_TUNNEL6();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL6
    static void _set_TUNNEL6(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware SIT
    static constexpr const int SIT = 776;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware SIT
    static System::Net::NetworkInformation::LinuxArpHardware _get_SIT();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware SIT
    static void _set_SIT(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware IPDDP
    static constexpr const int IPDDP = 777;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware IPDDP
    static System::Net::NetworkInformation::LinuxArpHardware _get_IPDDP();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware IPDDP
    static void _set_IPDDP(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware IPGRE
    static constexpr const int IPGRE = 778;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware IPGRE
    static System::Net::NetworkInformation::LinuxArpHardware _get_IPGRE();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware IPGRE
    static void _set_IPGRE(System::Net::NetworkInformation::LinuxArpHardware value);
    // static field const value: static public System.Net.NetworkInformation.LinuxArpHardware IP6GRE
    static constexpr const int IP6GRE = 823;
    // Get static field: static public System.Net.NetworkInformation.LinuxArpHardware IP6GRE
    static System::Net::NetworkInformation::LinuxArpHardware _get_IP6GRE();
    // Set static field: static public System.Net.NetworkInformation.LinuxArpHardware IP6GRE
    static void _set_IP6GRE(System::Net::NetworkInformation::LinuxArpHardware value);
  }; // System.Net.NetworkInformation.LinuxArpHardware
  #pragma pack(pop)
  static check_size<sizeof(LinuxArpHardware), 0 + sizeof(int)> __System_Net_NetworkInformation_LinuxArpHardwareSizeCheck;
  static_assert(sizeof(LinuxArpHardware) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::NetworkInformation::LinuxArpHardware, "System.Net.NetworkInformation", "LinuxArpHardware");
