// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Net.NetworkInformation.Win32LengthFlagsUnion
  // [] Offset: FFFFFFFF
  struct Win32LengthFlagsUnion/*, public System::ValueType*/ {
    public:
    // public System.UInt32 Length
    // Size: 0x4
    // Offset: 0x0
    uint Length;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.UInt32 Flags
    // Size: 0x4
    // Offset: 0x4
    uint Flags;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // Creating value type constructor for type: Win32LengthFlagsUnion
    constexpr Win32LengthFlagsUnion(uint Length_ = {}, uint Flags_ = {}) noexcept : Length{Length_}, Flags{Flags_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // System.Net.NetworkInformation.Win32LengthFlagsUnion
  #pragma pack(pop)
  static check_size<sizeof(Win32LengthFlagsUnion), 4 + sizeof(uint)> __System_Net_NetworkInformation_Win32LengthFlagsUnionSizeCheck;
  static_assert(sizeof(Win32LengthFlagsUnion) == 0x8);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::NetworkInformation::Win32LengthFlagsUnion, "System.Net.NetworkInformation", "Win32LengthFlagsUnion");
