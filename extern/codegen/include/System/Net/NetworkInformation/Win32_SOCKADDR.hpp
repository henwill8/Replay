// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
template<class T>
struct Array;
// Completed il2cpp-utils forward declares
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Net.NetworkInformation.Win32_SOCKADDR
  // [] Offset: FFFFFFFF
  struct Win32_SOCKADDR/*, public System::ValueType*/ {
    public:
    // public System.UInt16 AddressFamily
    // Size: 0x2
    // Offset: 0x0
    uint16_t AddressFamily;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // Padding between fields: AddressFamily and: AddressData
    char __padding0[0x6] = {};
    // public System.Byte[] AddressData
    // Size: 0x8
    // Offset: 0x8
    ::Array<uint8_t>* AddressData;
    // Field size check
    static_assert(sizeof(::Array<uint8_t>*) == 0x8);
    // Creating value type constructor for type: Win32_SOCKADDR
    constexpr Win32_SOCKADDR(uint16_t AddressFamily_ = {}, ::Array<uint8_t>* AddressData_ = {}) noexcept : AddressFamily{AddressFamily_}, AddressData{AddressData_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // System.Net.NetworkInformation.Win32_SOCKADDR
  #pragma pack(pop)
  static check_size<sizeof(Win32_SOCKADDR), 8 + sizeof(::Array<uint8_t>*)> __System_Net_NetworkInformation_Win32_SOCKADDRSizeCheck;
  static_assert(sizeof(Win32_SOCKADDR) == 0x10);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::NetworkInformation::Win32_SOCKADDR, "System.Net.NetworkInformation", "Win32_SOCKADDR");
