// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: HttpListener
  class HttpListener;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.HttpListenerPrefixCollection
  // [] Offset: FFFFFFFF
  class HttpListenerPrefixCollection : public ::Il2CppObject/*, public System::Collections::Generic::ICollection_1<::Il2CppString*>*/ {
    public:
    // private System.Collections.Generic.List`1<System.String> prefixes
    // Size: 0x8
    // Offset: 0x10
    System::Collections::Generic::List_1<::Il2CppString*>* prefixes;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<::Il2CppString*>*) == 0x8);
    // private System.Net.HttpListener listener
    // Size: 0x8
    // Offset: 0x18
    System::Net::HttpListener* listener;
    // Field size check
    static_assert(sizeof(System::Net::HttpListener*) == 0x8);
    // Creating value type constructor for type: HttpListenerPrefixCollection
    HttpListenerPrefixCollection(System::Collections::Generic::List_1<::Il2CppString*>* prefixes_ = {}, System::Net::HttpListener* listener_ = {}) noexcept : prefixes{prefixes_}, listener{listener_} {}
    // Creating interface conversion operator: operator System::Collections::Generic::ICollection_1<::Il2CppString*>
    operator System::Collections::Generic::ICollection_1<::Il2CppString*>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::ICollection_1<::Il2CppString*>*>(this);
    }
    // System.Void .ctor(System.Net.HttpListener listener)
    // Offset: 0x14FCB28
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HttpListenerPrefixCollection* New_ctor(System::Net::HttpListener* listener) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Net::HttpListenerPrefixCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HttpListenerPrefixCollection*, creationType>(listener)));
    }
    // public System.Void CopyTo(System.String[] array, System.Int32 offset)
    // Offset: 0x14FF8C0
    void CopyTo(::Array<::Il2CppString*>* array, int offset);
    // public System.Collections.Generic.IEnumerator`1<System.String> GetEnumerator()
    // Offset: 0x14FF93C
    System::Collections::Generic::IEnumerator_1<::Il2CppString*>* GetEnumerator();
    // public System.Int32 get_Count()
    // Offset: 0x14FEA58
    // Implemented from: System.Collections.Generic.ICollection`1
    // Base method: System.Int32 ICollection_1::get_Count()
    int get_Count();
    // Creating proxy method: System_Collections_Generic_ICollection_1_get_Count
    // Maps to method: get_Count
    int System_Collections_Generic_ICollection_1_get_Count();
    // public System.Boolean get_IsReadOnly()
    // Offset: 0x14FF3B8
    // Implemented from: System.Collections.Generic.ICollection`1
    // Base method: System.Boolean ICollection_1::get_IsReadOnly()
    bool get_IsReadOnly();
    // Creating proxy method: System_Collections_Generic_ICollection_1_get_IsReadOnly
    // Maps to method: get_IsReadOnly
    bool System_Collections_Generic_ICollection_1_get_IsReadOnly();
    // public System.Void Add(System.String uriPrefix)
    // Offset: 0x14FF3C0
    // Implemented from: System.Collections.Generic.ICollection`1
    // Base method: System.Void ICollection_1::Add(System.String uriPrefix)
    void Add(::Il2CppString* uriPrefix);
    // Creating proxy method: System_Collections_Generic_ICollection_1_Add
    // Maps to method: Add
    void System_Collections_Generic_ICollection_1_Add(::Il2CppString* uriPrefix);
    // public System.Void Clear()
    // Offset: 0x14FF7A0
    // Implemented from: System.Collections.Generic.ICollection`1
    // Base method: System.Void ICollection_1::Clear()
    void Clear();
    // Creating proxy method: System_Collections_Generic_ICollection_1_Clear
    // Maps to method: Clear
    void System_Collections_Generic_ICollection_1_Clear();
    // public System.Boolean Contains(System.String uriPrefix)
    // Offset: 0x14FF84C
    // Implemented from: System.Collections.Generic.ICollection`1
    // Base method: System.Boolean ICollection_1::Contains(System.String uriPrefix)
    bool Contains(::Il2CppString* uriPrefix);
    // Creating proxy method: System_Collections_Generic_ICollection_1_Contains
    // Maps to method: Contains
    bool System_Collections_Generic_ICollection_1_Contains(::Il2CppString* uriPrefix);
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x14FF9C8
    // Implemented from: System.Collections.IEnumerable
    // Base method: System.Collections.IEnumerator IEnumerable::GetEnumerator()
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public System.Boolean Remove(System.String uriPrefix)
    // Offset: 0x14FFA54
    // Implemented from: System.Collections.Generic.ICollection`1
    // Base method: System.Boolean ICollection_1::Remove(System.String uriPrefix)
    bool Remove(::Il2CppString* uriPrefix);
    // Creating proxy method: System_Collections_Generic_ICollection_1_Remove
    // Maps to method: Remove
    bool System_Collections_Generic_ICollection_1_Remove(::Il2CppString* uriPrefix);
  }; // System.Net.HttpListenerPrefixCollection
  #pragma pack(pop)
  static check_size<sizeof(HttpListenerPrefixCollection), 24 + sizeof(System::Net::HttpListener*)> __System_Net_HttpListenerPrefixCollectionSizeCheck;
  static_assert(sizeof(HttpListenerPrefixCollection) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(System::Net::HttpListenerPrefixCollection*, "System.Net", "HttpListenerPrefixCollection");
