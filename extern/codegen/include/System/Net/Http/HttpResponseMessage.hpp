// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Net.HttpStatusCode
#include "System/Net/HttpStatusCode.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::Http::Headers
namespace System::Net::Http::Headers {
  // Forward declaring type: HttpResponseHeaders
  class HttpResponseHeaders;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Version
  class Version;
}
// Forward declaring namespace: System::Net::Http
namespace System::Net::Http {
  // Forward declaring type: HttpContent
  class HttpContent;
  // Forward declaring type: HttpRequestMessage
  class HttpRequestMessage;
}
// Completed forward declares
// Type namespace: System.Net.Http
namespace System::Net::Http {
  // Autogenerated type: System.Net.Http.HttpResponseMessage
  class HttpResponseMessage : public ::Il2CppObject/*, public System::IDisposable*/ {
    public:
    // private System.Net.Http.Headers.HttpResponseHeaders headers
    // Offset: 0x10
    System::Net::Http::Headers::HttpResponseHeaders* headers;
    // private System.String reasonPhrase
    // Offset: 0x18
    ::Il2CppString* reasonPhrase;
    // private System.Net.HttpStatusCode statusCode
    // Offset: 0x20
    System::Net::HttpStatusCode statusCode;
    // private System.Version version
    // Offset: 0x28
    System::Version* version;
    // private System.Boolean disposed
    // Offset: 0x30
    bool disposed;
    // private System.Net.Http.HttpContent <Content>k__BackingField
    // Offset: 0x38
    System::Net::Http::HttpContent* Content;
    // private System.Net.Http.HttpRequestMessage <RequestMessage>k__BackingField
    // Offset: 0x40
    System::Net::Http::HttpRequestMessage* RequestMessage;
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // public System.Void .ctor(System.Net.HttpStatusCode statusCode)
    // Offset: 0x120DBCC
    static HttpResponseMessage* New_ctor(System::Net::HttpStatusCode statusCode);
    // public System.Net.Http.HttpContent get_Content()
    // Offset: 0x1210A78
    System::Net::Http::HttpContent* get_Content();
    // public System.Void set_Content(System.Net.Http.HttpContent value)
    // Offset: 0x1210A80
    void set_Content(System::Net::Http::HttpContent* value);
    // public System.Net.Http.Headers.HttpResponseHeaders get_Headers()
    // Offset: 0x120DCB4
    System::Net::Http::Headers::HttpResponseHeaders* get_Headers();
    // public System.Boolean get_IsSuccessStatusCode()
    // Offset: 0x1210A88
    bool get_IsSuccessStatusCode();
    // public System.String get_ReasonPhrase()
    // Offset: 0x1210A9C
    ::Il2CppString* get_ReasonPhrase();
    // public System.Void set_ReasonPhrase(System.String value)
    // Offset: 0x1210AB8
    void set_ReasonPhrase(::Il2CppString* value);
    // public System.Void set_RequestMessage(System.Net.Http.HttpRequestMessage value)
    // Offset: 0x1210AC0
    void set_RequestMessage(System::Net::Http::HttpRequestMessage* value);
    // public System.Net.HttpStatusCode get_StatusCode()
    // Offset: 0x1210AC8
    System::Net::HttpStatusCode get_StatusCode();
    // public System.Void set_StatusCode(System.Net.HttpStatusCode value)
    // Offset: 0x12109F4
    void set_StatusCode(System::Net::HttpStatusCode value);
    // public System.Version get_Version()
    // Offset: 0x1210AD0
    System::Version* get_Version();
    // protected System.Void Dispose(System.Boolean disposing)
    // Offset: 0x1210B54
    void Dispose(bool disposing);
    // public System.Net.Http.HttpResponseMessage EnsureSuccessStatusCode()
    // Offset: 0x120C84C
    System::Net::Http::HttpResponseMessage* EnsureSuccessStatusCode();
    // public System.Void Dispose()
    // Offset: 0x1210B44
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose();
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose();
    // public override System.String ToString()
    // Offset: 0x1210B88
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // System.Net.Http.HttpResponseMessage
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::Http::HttpResponseMessage*, "System.Net.Http", "HttpResponseMessage");
#pragma pack(pop)
