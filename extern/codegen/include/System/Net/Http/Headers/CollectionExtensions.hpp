// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System.Net.Http.Headers
namespace System::Net::Http::Headers {
  // Autogenerated type: System.Net.Http.Headers.CollectionExtensions
  class CollectionExtensions : public ::Il2CppObject {
    public:
    // static public System.Boolean SequenceEqual(System.Collections.Generic.List`1<TSource> first, System.Collections.Generic.List`1<TSource> second)
    // Offset: 0xFFFFFFFF
    template<class TSource>
    static bool SequenceEqual(System::Collections::Generic::List_1<TSource>* first, System::Collections::Generic::List_1<TSource>* second) {
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<bool>("System.Net.Http.Headers", "CollectionExtensions", "SequenceEqual", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TSource>::get()}, first, second)));
    }
    // static public System.String ToString(System.Collections.Generic.List`1<T> list)
    // Offset: 0xFFFFFFFF
    template<class T>
    static ::Il2CppString* ToString(System::Collections::Generic::List_1<T>* list) {
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<::Il2CppString*>("System.Net.Http.Headers", "CollectionExtensions", "ToString", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, list)));
    }
    // static public System.Void ToStringBuilder(System.Collections.Generic.List`1<T> list, System.Text.StringBuilder sb)
    // Offset: 0xFFFFFFFF
    template<class T>
    static void ToStringBuilder(System::Collections::Generic::List_1<T>* list, System::Text::StringBuilder* sb) {
      THROW_UNLESS(il2cpp_utils::RunGenericMethod("System.Net.Http.Headers", "CollectionExtensions", "ToStringBuilder", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, list, sb));
    }
  }; // System.Net.Http.Headers.CollectionExtensions
}
DEFINE_IL2CPP_ARG_TYPE(System::Net::Http::Headers::CollectionExtensions*, "System.Net.Http.Headers", "CollectionExtensions");
#pragma pack(pop)
