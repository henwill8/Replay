// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaderKind
#include "System/Net/Http/Headers/HttpHeaderKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::Http::Headers
namespace System::Net::Http::Headers {
  // Forward declaring type: TryParseDelegate`1<T>
  template<typename T>
  class TryParseDelegate_1;
  // Forward declaring type: TryParseListDelegate`1<T>
  template<typename T>
  class TryParseListDelegate_1;
  // Forward declaring type: HttpHeaders
  class HttpHeaders;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: System.Net.Http.Headers
namespace System::Net::Http::Headers {
  // Autogenerated type: System.Net.Http.Headers.HeaderInfo
  class HeaderInfo : public ::Il2CppObject {
    public:
    // Nested type: System::Net::Http::Headers::HeaderInfo::HeaderTypeInfo_2<T, U>
    template<typename T, typename U>
    class HeaderTypeInfo_2;
    // Nested type: System::Net::Http::Headers::HeaderInfo::CollectionHeaderTypeInfo_2<T, U>
    template<typename T, typename U>
    class CollectionHeaderTypeInfo_2;
    // public System.Boolean AllowsMany
    // Offset: 0x10
    bool AllowsMany;
    // public readonly System.Net.Http.Headers.HttpHeaderKind HeaderKind
    // Offset: 0x14
    System::Net::Http::Headers::HttpHeaderKind HeaderKind;
    // public readonly System.String Name
    // Offset: 0x18
    ::Il2CppString* Name;
    // private System.Func`2<System.Object,System.String> <CustomToString>k__BackingField
    // Offset: 0x20
    System::Func_2<::Il2CppObject*, ::Il2CppString*>* CustomToString;
    // protected System.Void .ctor(System.String name, System.Net.Http.Headers.HttpHeaderKind headerKind)
    // Offset: 0x12003F0
    static HeaderInfo* New_ctor(::Il2CppString* name, System::Net::Http::Headers::HttpHeaderKind headerKind);
    // static public System.Net.Http.Headers.HeaderInfo CreateSingle(System.String name, System.Net.Http.Headers.TryParseDelegate`1<T> parser, System.Net.Http.Headers.HttpHeaderKind headerKind, System.Func`2<System.Object,System.String> toString)
    // Offset: 0xFFFFFFFF
    template<class T>
    static System::Net::Http::Headers::HeaderInfo* CreateSingle(::Il2CppString* name, System::Net::Http::Headers::TryParseDelegate_1<T>* parser, System::Net::Http::Headers::HttpHeaderKind headerKind, System::Func_2<::Il2CppObject*, ::Il2CppString*>* toString) {
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<System::Net::Http::Headers::HeaderInfo*>("System.Net.Http.Headers", "HeaderInfo", "CreateSingle", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, name, parser, headerKind, toString)));
    }
    // static public System.Net.Http.Headers.HeaderInfo CreateMulti(System.String name, System.Net.Http.Headers.TryParseListDelegate`1<T> elementParser, System.Net.Http.Headers.HttpHeaderKind headerKind, System.Int32 minimalCount, System.String separator)
    // Offset: 0xFFFFFFFF
    template<class T>
    static System::Net::Http::Headers::HeaderInfo* CreateMulti(::Il2CppString* name, System::Net::Http::Headers::TryParseListDelegate_1<T>* elementParser, System::Net::Http::Headers::HttpHeaderKind headerKind, int minimalCount, ::Il2CppString* separator) {
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<System::Net::Http::Headers::HeaderInfo*>("System.Net.Http.Headers", "HeaderInfo", "CreateMulti", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, name, elementParser, headerKind, minimalCount, separator)));
    }
    // public System.Object CreateCollection(System.Net.Http.Headers.HttpHeaders headers)
    // Offset: 0x1200438
    ::Il2CppObject* CreateCollection(System::Net::Http::Headers::HttpHeaders* headers);
    // public System.Func`2<System.Object,System.String> get_CustomToString()
    // Offset: 0x1200448
    System::Func_2<::Il2CppObject*, ::Il2CppString*>* get_CustomToString();
    // private System.Void set_CustomToString(System.Func`2<System.Object,System.String> value)
    // Offset: 0x1200450
    void set_CustomToString(System::Func_2<::Il2CppObject*, ::Il2CppString*>* value);
    // public System.String get_Separator()
    // Offset: 0x1200458
    ::Il2CppString* get_Separator();
    // public System.Void AddToCollection(System.Object collection, System.Object value)
    // Offset: 0xFFFFFFFF
    void AddToCollection(::Il2CppObject* collection, ::Il2CppObject* value);
    // protected System.Object CreateCollection(System.Net.Http.Headers.HttpHeaders headers, System.Net.Http.Headers.HeaderInfo headerInfo)
    // Offset: 0xFFFFFFFF
    ::Il2CppObject* CreateCollection(System::Net::Http::Headers::HttpHeaders* headers, System::Net::Http::Headers::HeaderInfo* headerInfo);
    // public System.Collections.Generic.List`1<System.String> ToStringCollection(System.Object collection)
    // Offset: 0xFFFFFFFF
    System::Collections::Generic::List_1<::Il2CppString*>* ToStringCollection(::Il2CppObject* collection);
    // public System.Boolean TryParse(System.String value, out System.Object result)
    // Offset: 0xFFFFFFFF
    bool TryParse(::Il2CppString* value, ::Il2CppObject*& result);
  }; // System.Net.Http.Headers.HeaderInfo
}
DEFINE_IL2CPP_ARG_TYPE(System::Net::Http::Headers::HeaderInfo*, "System.Net.Http.Headers", "HeaderInfo");
#pragma pack(pop)
