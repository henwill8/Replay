// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Net.Http
namespace System::Net::Http {
  // Autogenerated type: System.Net.Http.HttpCompletionOption
  struct HttpCompletionOption : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: HttpCompletionOption
    constexpr HttpCompletionOption(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Net.Http.HttpCompletionOption ResponseContentRead
    static constexpr const int ResponseContentRead = 0;
    // Get static field: static public System.Net.Http.HttpCompletionOption ResponseContentRead
    static System::Net::Http::HttpCompletionOption _get_ResponseContentRead();
    // Set static field: static public System.Net.Http.HttpCompletionOption ResponseContentRead
    static void _set_ResponseContentRead(System::Net::Http::HttpCompletionOption value);
    // static field const value: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
    static constexpr const int ResponseHeadersRead = 1;
    // Get static field: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
    static System::Net::Http::HttpCompletionOption _get_ResponseHeadersRead();
    // Set static field: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
    static void _set_ResponseHeadersRead(System::Net::Http::HttpCompletionOption value);
  }; // System.Net.Http.HttpCompletionOption
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Net::Http::HttpCompletionOption, "System.Net.Http", "HttpCompletionOption");
#pragma pack(pop)
