// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Tuple`2<T1, T2>
  template<typename T1, typename T2>
  class Tuple_2;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.TupleExtensions
  class TupleExtensions : public ::Il2CppObject {
    public:
    // static public System.Void Deconstruct(System.Tuple`2<T1,T2> value, out T1 item1, out T2 item2)
    // Offset: 0xFFFFFFFF
    template<class T1, class T2>
    static void Deconstruct(System::Tuple_2<T1, T2>* value, T1& item1, T2& item2) {
      THROW_UNLESS((il2cpp_utils::RunGenericMethod("System", "TupleExtensions", "Deconstruct", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get()}, value, item1, item2)));
    }
  }; // System.TupleExtensions
}
DEFINE_IL2CPP_ARG_TYPE(System::TupleExtensions*, "System", "TupleExtensions");
#pragma pack(pop)
