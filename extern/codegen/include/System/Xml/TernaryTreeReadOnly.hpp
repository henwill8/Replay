// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.TernaryTreeReadOnly
  // [] Offset: FFFFFFFF
  class TernaryTreeReadOnly : public ::Il2CppObject {
    public:
    // private System.Byte[] nodeBuffer
    // Size: 0x8
    // Offset: 0x10
    ::Array<uint8_t>* nodeBuffer;
    // Field size check
    static_assert(sizeof(::Array<uint8_t>*) == 0x8);
    // Creating value type constructor for type: TernaryTreeReadOnly
    TernaryTreeReadOnly(::Array<uint8_t>* nodeBuffer_ = {}) noexcept : nodeBuffer{nodeBuffer_} {}
    // Creating conversion operator: operator ::Array<uint8_t>*
    constexpr operator ::Array<uint8_t>*() const noexcept {
      return nodeBuffer;
    }
    // public System.Void .ctor(System.Byte[] nodeBuffer)
    // Offset: 0x1866188
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TernaryTreeReadOnly* New_ctor(::Array<uint8_t>* nodeBuffer) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::TernaryTreeReadOnly::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TernaryTreeReadOnly*, creationType>(nodeBuffer)));
    }
    // public System.Byte FindCaseInsensitiveString(System.String stringToFind)
    // Offset: 0x1864848
    uint8_t FindCaseInsensitiveString(::Il2CppString* stringToFind);
  }; // System.Xml.TernaryTreeReadOnly
  #pragma pack(pop)
  static check_size<sizeof(TernaryTreeReadOnly), 16 + sizeof(::Array<uint8_t>*)> __System_Xml_TernaryTreeReadOnlySizeCheck;
  static_assert(sizeof(TernaryTreeReadOnly) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(System::Xml::TernaryTreeReadOnly*, "System.Xml", "TernaryTreeReadOnly");
