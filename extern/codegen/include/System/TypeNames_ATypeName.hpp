// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TypeNames
#include "System/TypeNames.hpp"
// Including type: System.TypeName
#include "System/TypeName.hpp"
// Completed includes
// Type namespace: System
namespace System {
  // Autogenerated type: System.TypeNames/ATypeName
  class TypeNames::ATypeName : public ::Il2CppObject/*, public System::TypeName*/ {
    public:
    // Creating interface conversion operator: operator System::TypeName
    operator System::TypeName() noexcept {
      return *reinterpret_cast<System::TypeName*>(this);
    }
    // public System.String get_DisplayName()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.TypeName
    // Base method: System.String TypeName::get_DisplayName()
    ::Il2CppString* get_DisplayName();
    // public System.Boolean Equals(System.TypeName other)
    // Offset: 0x165AE3C
    // Implemented from: System.IEquatable`1
    // Base method: System.Boolean IEquatable_1::Equals(System.TypeName other)
    bool Equals(System::TypeName* other);
    // public override System.Int32 GetHashCode()
    // Offset: 0x165AF28
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object other)
    // Offset: 0x165AF54
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object other)
    bool Equals(::Il2CppObject* other);
    // protected System.Void .ctor()
    // Offset: 0x1659B40
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static TypeNames::ATypeName* New_ctor();
  }; // System.TypeNames/ATypeName
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::TypeNames::ATypeName*, "System", "TypeNames/ATypeName");
#pragma pack(pop)
