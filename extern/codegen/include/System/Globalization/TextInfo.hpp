// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Including type: System.Runtime.Serialization.IDeserializationCallback
#include "System/Runtime/Serialization/IDeserializationCallback.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureData
  class CultureData;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: StreamingContext
  struct StreamingContext;
}
// Completed forward declares
// Type namespace: System.Globalization
namespace System::Globalization {
  // Autogenerated type: System.Globalization.TextInfo
  class TextInfo : public ::Il2CppObject, public System::ICloneable, public System::Runtime::Serialization::IDeserializationCallback {
    public:
    // private System.String m_listSeparator
    // Offset: 0x10
    ::Il2CppString* m_listSeparator;
    // private System.Boolean m_isReadOnly
    // Offset: 0x18
    bool m_isReadOnly;
    // private System.String m_cultureName
    // Offset: 0x20
    ::Il2CppString* m_cultureName;
    // private System.Globalization.CultureData m_cultureData
    // Offset: 0x28
    System::Globalization::CultureData* m_cultureData;
    // private System.String m_textInfoName
    // Offset: 0x30
    ::Il2CppString* m_textInfoName;
    // private System.Nullable`1<System.Boolean> m_IsAsciiCasingSameAsInvariant
    // Offset: 0x38
    System::Nullable_1<bool> m_IsAsciiCasingSameAsInvariant;
    // private System.String customCultureName
    // Offset: 0x40
    ::Il2CppString* customCultureName;
    // System.Int32 m_nDataItem
    // Offset: 0x48
    int m_nDataItem;
    // System.Boolean m_useUserOverride
    // Offset: 0x4C
    bool m_useUserOverride;
    // System.Int32 m_win32LangID
    // Offset: 0x50
    int m_win32LangID;
    // Get static field: static System.Globalization.TextInfo s_Invariant
    static System::Globalization::TextInfo* _get_s_Invariant();
    // Set static field: static System.Globalization.TextInfo s_Invariant
    static void _set_s_Invariant(System::Globalization::TextInfo* value);
    // static field const value: static private System.Int32 wordSeparatorMask
    static constexpr const int wordSeparatorMask = 536672256;
    // Get static field: static private System.Int32 wordSeparatorMask
    static int _get_wordSeparatorMask();
    // Set static field: static private System.Int32 wordSeparatorMask
    static void _set_wordSeparatorMask(int value);
    // static System.Globalization.TextInfo get_Invariant()
    // Offset: 0x1125A3C
    static System::Globalization::TextInfo* get_Invariant();
    // System.Void .ctor(System.Globalization.CultureData cultureData)
    // Offset: 0x1125AEC
    static TextInfo* New_ctor(System::Globalization::CultureData* cultureData);
    // private System.Void OnDeserializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1125B64
    void OnDeserializing(System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnDeserialized()
    // Offset: 0x1125B98
    void OnDeserialized();
    // private System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1125CCC
    void OnDeserialized(System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnSerializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1125CD0
    void OnSerializing(System::Runtime::Serialization::StreamingContext ctx);
    // static System.Int32 GetHashCodeOrdinalIgnoreCase(System.String s)
    // Offset: 0x1125D6C
    static int GetHashCodeOrdinalIgnoreCase(::Il2CppString* s);
    // static System.Int32 GetHashCodeOrdinalIgnoreCase(System.String s, System.Boolean forceRandomizedHashing, System.Int64 additionalEntropy)
    // Offset: 0x1125D78
    static int GetHashCodeOrdinalIgnoreCase(::Il2CppString* s, bool forceRandomizedHashing, int64_t additionalEntropy);
    // static System.Int32 CompareOrdinalIgnoreCase(System.String str1, System.String str2)
    // Offset: 0x1125EA4
    static int CompareOrdinalIgnoreCase(::Il2CppString* str1, ::Il2CppString* str2);
    // static System.Int32 CompareOrdinalIgnoreCaseEx(System.String strA, System.Int32 indexA, System.String strB, System.Int32 indexB, System.Int32 lengthA, System.Int32 lengthB)
    // Offset: 0x1126098
    static int CompareOrdinalIgnoreCaseEx(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int lengthA, int lengthB);
    // static System.Int32 IndexOfStringOrdinalIgnoreCase(System.String source, System.String value, System.Int32 startIndex, System.Int32 count)
    // Offset: 0x112609C
    static int IndexOfStringOrdinalIgnoreCase(::Il2CppString* source, ::Il2CppString* value, int startIndex, int count);
    // static System.Int32 LastIndexOfStringOrdinalIgnoreCase(System.String source, System.String value, System.Int32 startIndex, System.Int32 count)
    // Offset: 0x1126144
    static int LastIndexOfStringOrdinalIgnoreCase(::Il2CppString* source, ::Il2CppString* value, int startIndex, int count);
    // public System.String get_CultureName()
    // Offset: 0x11261D8
    ::Il2CppString* get_CultureName();
    // System.Void SetReadOnlyState(System.Boolean readOnly)
    // Offset: 0x1126270
    void SetReadOnlyState(bool readOnly);
    // public System.Char ToLower(System.Char c)
    // Offset: 0x112627C
    ::Il2CppChar ToLower(::Il2CppChar c);
    // public System.String ToLower(System.String str)
    // Offset: 0x11268D8
    ::Il2CppString* ToLower(::Il2CppString* str);
    // static private System.Char ToLowerAsciiInvariant(System.Char c)
    // Offset: 0x11263D8
    static ::Il2CppChar ToLowerAsciiInvariant(::Il2CppChar c);
    // public System.Char ToUpper(System.Char c)
    // Offset: 0x1126A58
    ::Il2CppChar ToUpper(::Il2CppChar c);
    // public System.String ToUpper(System.String str)
    // Offset: 0x1126FCC
    ::Il2CppString* ToUpper(::Il2CppString* str);
    // static private System.Char ToUpperAsciiInvariant(System.Char c)
    // Offset: 0x1126AC0
    static ::Il2CppChar ToUpperAsciiInvariant(::Il2CppChar c);
    // static private System.Boolean IsAscii(System.Char c)
    // Offset: 0x11262E4
    static bool IsAscii(::Il2CppChar c);
    // private System.Boolean get_IsAsciiCasingSameAsInvariant()
    // Offset: 0x11262F4
    bool get_IsAsciiCasingSameAsInvariant();
    // System.Int32 GetCaseInsensitiveHashCode(System.String str)
    // Offset: 0x1127284
    int GetCaseInsensitiveHashCode(::Il2CppString* str);
    // System.Int32 GetCaseInsensitiveHashCode(System.String str, System.Boolean forceRandomizedHashing, System.Int64 additionalEntropy)
    // Offset: 0x1125DA8
    int GetCaseInsensitiveHashCode(::Il2CppString* str, bool forceRandomizedHashing, int64_t additionalEntropy);
    // private System.Int32 GetInvariantCaseInsensitiveHashCode(System.String str)
    // Offset: 0x112728C
    int GetInvariantCaseInsensitiveHashCode(::Il2CppString* str);
    // private System.String ToUpperInternal(System.String str)
    // Offset: 0x1127060
    ::Il2CppString* ToUpperInternal(::Il2CppString* str);
    // private System.String ToLowerInternal(System.String str)
    // Offset: 0x112696C
    ::Il2CppString* ToLowerInternal(::Il2CppString* str);
    // private System.Char ToUpperInternal(System.Char c)
    // Offset: 0x1126ADC
    ::Il2CppChar ToUpperInternal(::Il2CppChar c);
    // private System.Char ToLowerInternal(System.Char c)
    // Offset: 0x11263F4
    ::Il2CppChar ToLowerInternal(::Il2CppChar c);
    // static private System.Int32 InternalCompareStringOrdinalIgnoreCase(System.String strA, System.Int32 indexA, System.String strB, System.Int32 indexB, System.Int32 lenA, System.Int32 lenB)
    // Offset: 0x1125ED4
    static int InternalCompareStringOrdinalIgnoreCase(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int lenA, int lenB);
    // public System.Object Clone()
    // Offset: 0x11261E0
    // Implemented from: System.ICloneable
    // Base method: System.Object ICloneable::Clone()
    ::Il2CppObject* Clone();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x112714C
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1127200
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x1127220
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
    // private System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)
    // Offset: 0x1127280
    // Implemented from: System.Runtime.Serialization.IDeserializationCallback
    // Base method: System.Void IDeserializationCallback::OnDeserialization(System.Object sender)
    void System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender);
    // System.Void .ctor()
    // Offset: 0x11273D4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static TextInfo* New_ctor();
  }; // System.Globalization.TextInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Globalization::TextInfo*, "System.Globalization", "TextInfo");
#pragma pack(pop)
