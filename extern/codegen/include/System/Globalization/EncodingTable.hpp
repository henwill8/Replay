// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: InternalEncodingDataItem
  struct InternalEncodingDataItem;
  // Forward declaring type: InternalCodePageDataItem
  struct InternalCodePageDataItem;
  // Forward declaring type: CodePageDataItem
  class CodePageDataItem;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Completed forward declares
// Type namespace: System.Globalization
namespace System::Globalization {
  // Autogenerated type: System.Globalization.EncodingTable
  class EncodingTable : public ::Il2CppObject {
    public:
    // Get static field: static System.Globalization.InternalEncodingDataItem[] encodingDataPtr
    static ::Array<System::Globalization::InternalEncodingDataItem>* _get_encodingDataPtr();
    // Set static field: static System.Globalization.InternalEncodingDataItem[] encodingDataPtr
    static void _set_encodingDataPtr(::Array<System::Globalization::InternalEncodingDataItem>* value);
    // Get static field: static System.Globalization.InternalCodePageDataItem[] codePageDataPtr
    static ::Array<System::Globalization::InternalCodePageDataItem>* _get_codePageDataPtr();
    // Set static field: static System.Globalization.InternalCodePageDataItem[] codePageDataPtr
    static void _set_codePageDataPtr(::Array<System::Globalization::InternalCodePageDataItem>* value);
    // Get static field: static private System.Int32 lastEncodingItem
    static int _get_lastEncodingItem();
    // Set static field: static private System.Int32 lastEncodingItem
    static void _set_lastEncodingItem(int value);
    // Get static field: static private System.Collections.Hashtable hashByName
    static System::Collections::Hashtable* _get_hashByName();
    // Set static field: static private System.Collections.Hashtable hashByName
    static void _set_hashByName(System::Collections::Hashtable* value);
    // Get static field: static private System.Collections.Hashtable hashByCodePage
    static System::Collections::Hashtable* _get_hashByCodePage();
    // Set static field: static private System.Collections.Hashtable hashByCodePage
    static void _set_hashByCodePage(System::Collections::Hashtable* value);
    // static private System.Int32 GetNumEncodingItems()
    // Offset: 0x12C3018
    static int GetNumEncodingItems();
    // static private System.Globalization.InternalEncodingDataItem ENC(System.String name, System.UInt16 cp)
    // Offset: 0x12C308C
    static System::Globalization::InternalEncodingDataItem ENC(::Il2CppString* name, uint16_t cp);
    // static private System.Globalization.InternalCodePageDataItem MapCodePageDataItem(System.UInt16 cp, System.UInt16 fcp, System.String names, System.UInt32 flags)
    // Offset: 0x12C30C8
    static System::Globalization::InternalCodePageDataItem MapCodePageDataItem(uint16_t cp, uint16_t fcp, ::Il2CppString* names, uint flags);
    // static private System.Void .cctor()
    // Offset: 0x12C3104
    static void _cctor();
    // static private System.Int32 internalGetCodePageFromName(System.String name)
    // Offset: 0x12CBBAC
    static int internalGetCodePageFromName(::Il2CppString* name);
    // static System.Int32 GetCodePageFromName(System.String name)
    // Offset: 0x12CBE44
    static int GetCodePageFromName(::Il2CppString* name);
    // static System.Globalization.CodePageDataItem GetCodePageDataItem(System.Int32 codepage)
    // Offset: 0x12CBFB8
    static System::Globalization::CodePageDataItem* GetCodePageDataItem(int codepage);
  }; // System.Globalization.EncodingTable
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Globalization::EncodingTable*, "System.Globalization", "EncodingTable");
#pragma pack(pop)
