// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: StreamingContext
  struct StreamingContext;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureData
  class CultureData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Globalization
namespace System::Globalization {
  // Autogenerated type: System.Globalization.NumberFormatInfo
  class NumberFormatInfo : public ::Il2CppObject/*, public System::ICloneable, public System::IFormatProvider*/ {
    public:
    // System.Int32[] numberGroupSizes
    // Offset: 0x10
    ::Array<int>* numberGroupSizes;
    // System.Int32[] currencyGroupSizes
    // Offset: 0x18
    ::Array<int>* currencyGroupSizes;
    // System.Int32[] percentGroupSizes
    // Offset: 0x20
    ::Array<int>* percentGroupSizes;
    // System.String positiveSign
    // Offset: 0x28
    ::Il2CppString* positiveSign;
    // System.String negativeSign
    // Offset: 0x30
    ::Il2CppString* negativeSign;
    // System.String numberDecimalSeparator
    // Offset: 0x38
    ::Il2CppString* numberDecimalSeparator;
    // System.String numberGroupSeparator
    // Offset: 0x40
    ::Il2CppString* numberGroupSeparator;
    // System.String currencyGroupSeparator
    // Offset: 0x48
    ::Il2CppString* currencyGroupSeparator;
    // System.String currencyDecimalSeparator
    // Offset: 0x50
    ::Il2CppString* currencyDecimalSeparator;
    // System.String currencySymbol
    // Offset: 0x58
    ::Il2CppString* currencySymbol;
    // System.String ansiCurrencySymbol
    // Offset: 0x60
    ::Il2CppString* ansiCurrencySymbol;
    // System.String nanSymbol
    // Offset: 0x68
    ::Il2CppString* nanSymbol;
    // System.String positiveInfinitySymbol
    // Offset: 0x70
    ::Il2CppString* positiveInfinitySymbol;
    // System.String negativeInfinitySymbol
    // Offset: 0x78
    ::Il2CppString* negativeInfinitySymbol;
    // System.String percentDecimalSeparator
    // Offset: 0x80
    ::Il2CppString* percentDecimalSeparator;
    // System.String percentGroupSeparator
    // Offset: 0x88
    ::Il2CppString* percentGroupSeparator;
    // System.String percentSymbol
    // Offset: 0x90
    ::Il2CppString* percentSymbol;
    // System.String perMilleSymbol
    // Offset: 0x98
    ::Il2CppString* perMilleSymbol;
    // System.String[] nativeDigits
    // Offset: 0xA0
    ::Array<::Il2CppString*>* nativeDigits;
    // System.Int32 m_dataItem
    // Offset: 0xA8
    int m_dataItem;
    // System.Int32 numberDecimalDigits
    // Offset: 0xAC
    int numberDecimalDigits;
    // System.Int32 currencyDecimalDigits
    // Offset: 0xB0
    int currencyDecimalDigits;
    // System.Int32 currencyPositivePattern
    // Offset: 0xB4
    int currencyPositivePattern;
    // System.Int32 currencyNegativePattern
    // Offset: 0xB8
    int currencyNegativePattern;
    // System.Int32 numberNegativePattern
    // Offset: 0xBC
    int numberNegativePattern;
    // System.Int32 percentPositivePattern
    // Offset: 0xC0
    int percentPositivePattern;
    // System.Int32 percentNegativePattern
    // Offset: 0xC4
    int percentNegativePattern;
    // System.Int32 percentDecimalDigits
    // Offset: 0xC8
    int percentDecimalDigits;
    // System.Int32 digitSubstitution
    // Offset: 0xCC
    int digitSubstitution;
    // System.Boolean isReadOnly
    // Offset: 0xD0
    bool isReadOnly;
    // System.Boolean m_useUserOverride
    // Offset: 0xD1
    bool m_useUserOverride;
    // System.Boolean m_isInvariant
    // Offset: 0xD2
    bool m_isInvariant;
    // System.Boolean validForParseAsNumber
    // Offset: 0xD3
    bool validForParseAsNumber;
    // System.Boolean validForParseAsCurrency
    // Offset: 0xD4
    bool validForParseAsCurrency;
    // Creating interface conversion operator: operator System::ICloneable
    operator System::ICloneable() noexcept {
      return *reinterpret_cast<System::ICloneable*>(this);
    }
    // Creating interface conversion operator: operator System::IFormatProvider
    operator System::IFormatProvider() noexcept {
      return *reinterpret_cast<System::IFormatProvider*>(this);
    }
    // Get static field: static private System.Globalization.NumberFormatInfo invariantInfo
    static System::Globalization::NumberFormatInfo* _get_invariantInfo();
    // Set static field: static private System.Globalization.NumberFormatInfo invariantInfo
    static void _set_invariantInfo(System::Globalization::NumberFormatInfo* value);
    // static field const value: static private System.Globalization.NumberStyles InvalidNumberStyles
    static constexpr const int InvalidNumberStyles = -1024;
    // Get static field: static private System.Globalization.NumberStyles InvalidNumberStyles
    static System::Globalization::NumberStyles _get_InvalidNumberStyles();
    // Set static field: static private System.Globalization.NumberStyles InvalidNumberStyles
    static void _set_InvalidNumberStyles(System::Globalization::NumberStyles value);
    // private System.Void OnSerializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1631C54
    void OnSerializing(System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnDeserializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1631CE4
    void OnDeserializing(System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1631CE8
    void OnDeserialized(System::Runtime::Serialization::StreamingContext ctx);
    // static private System.Void VerifyGroupSeparator(System.String groupSep, System.String propertyName)
    // Offset: 0x1631CEC
    static void VerifyGroupSeparator(::Il2CppString* groupSep, ::Il2CppString* propertyName);
    // System.Void .ctor(System.Globalization.CultureData cultureData)
    // Offset: 0x16179C4
    static NumberFormatInfo* New_ctor(System::Globalization::CultureData* cultureData);
    // private System.Void VerifyWritable()
    // Offset: 0x1631D90
    void VerifyWritable();
    // static public System.Globalization.NumberFormatInfo get_InvariantInfo()
    // Offset: 0x161852C
    static System::Globalization::NumberFormatInfo* get_InvariantInfo();
    // static public System.Globalization.NumberFormatInfo GetInstance(System.IFormatProvider formatProvider)
    // Offset: 0x1631EF4
    static System::Globalization::NumberFormatInfo* GetInstance(System::IFormatProvider* formatProvider);
    // public System.Int32 get_CurrencyDecimalDigits()
    // Offset: 0x1632184
    int get_CurrencyDecimalDigits();
    // public System.String get_CurrencyDecimalSeparator()
    // Offset: 0x163218C
    ::Il2CppString* get_CurrencyDecimalSeparator();
    // public System.Boolean get_IsReadOnly()
    // Offset: 0x1632194
    bool get_IsReadOnly();
    // public System.Int32[] get_CurrencyGroupSizes()
    // Offset: 0x163219C
    ::Array<int>* get_CurrencyGroupSizes();
    // public System.Int32[] get_NumberGroupSizes()
    // Offset: 0x163221C
    ::Array<int>* get_NumberGroupSizes();
    // public System.Int32[] get_PercentGroupSizes()
    // Offset: 0x163229C
    ::Array<int>* get_PercentGroupSizes();
    // public System.String get_CurrencyGroupSeparator()
    // Offset: 0x163231C
    ::Il2CppString* get_CurrencyGroupSeparator();
    // public System.Void set_CurrencyGroupSeparator(System.String value)
    // Offset: 0x1632324
    void set_CurrencyGroupSeparator(::Il2CppString* value);
    // public System.String get_CurrencySymbol()
    // Offset: 0x1632398
    ::Il2CppString* get_CurrencySymbol();
    // static public System.Globalization.NumberFormatInfo get_CurrentInfo()
    // Offset: 0x1632098
    static System::Globalization::NumberFormatInfo* get_CurrentInfo();
    // public System.String get_NaNSymbol()
    // Offset: 0x16323A0
    ::Il2CppString* get_NaNSymbol();
    // public System.Int32 get_CurrencyNegativePattern()
    // Offset: 0x16323A8
    int get_CurrencyNegativePattern();
    // public System.Int32 get_NumberNegativePattern()
    // Offset: 0x16323B0
    int get_NumberNegativePattern();
    // public System.Int32 get_PercentPositivePattern()
    // Offset: 0x16323B8
    int get_PercentPositivePattern();
    // public System.Int32 get_PercentNegativePattern()
    // Offset: 0x16323C0
    int get_PercentNegativePattern();
    // public System.String get_NegativeInfinitySymbol()
    // Offset: 0x16323C8
    ::Il2CppString* get_NegativeInfinitySymbol();
    // public System.String get_NegativeSign()
    // Offset: 0x16323D0
    ::Il2CppString* get_NegativeSign();
    // public System.Int32 get_NumberDecimalDigits()
    // Offset: 0x16323D8
    int get_NumberDecimalDigits();
    // public System.String get_NumberDecimalSeparator()
    // Offset: 0x16323E0
    ::Il2CppString* get_NumberDecimalSeparator();
    // public System.String get_NumberGroupSeparator()
    // Offset: 0x16323E8
    ::Il2CppString* get_NumberGroupSeparator();
    // public System.Void set_NumberGroupSeparator(System.String value)
    // Offset: 0x16323F0
    void set_NumberGroupSeparator(::Il2CppString* value);
    // public System.Int32 get_CurrencyPositivePattern()
    // Offset: 0x1632464
    int get_CurrencyPositivePattern();
    // public System.String get_PositiveInfinitySymbol()
    // Offset: 0x163246C
    ::Il2CppString* get_PositiveInfinitySymbol();
    // public System.String get_PositiveSign()
    // Offset: 0x1632474
    ::Il2CppString* get_PositiveSign();
    // public System.Int32 get_PercentDecimalDigits()
    // Offset: 0x163247C
    int get_PercentDecimalDigits();
    // public System.String get_PercentDecimalSeparator()
    // Offset: 0x1632484
    ::Il2CppString* get_PercentDecimalSeparator();
    // public System.String get_PercentGroupSeparator()
    // Offset: 0x163248C
    ::Il2CppString* get_PercentGroupSeparator();
    // public System.Void set_PercentGroupSeparator(System.String value)
    // Offset: 0x1632494
    void set_PercentGroupSeparator(::Il2CppString* value);
    // public System.String get_PercentSymbol()
    // Offset: 0x1632508
    ::Il2CppString* get_PercentSymbol();
    // public System.String get_PerMilleSymbol()
    // Offset: 0x1632510
    ::Il2CppString* get_PerMilleSymbol();
    // static public System.Globalization.NumberFormatInfo ReadOnly(System.Globalization.NumberFormatInfo nfi)
    // Offset: 0x1631E28
    static System::Globalization::NumberFormatInfo* ReadOnly(System::Globalization::NumberFormatInfo* nfi);
    // static System.Void ValidateParseStyleInteger(System.Globalization.NumberStyles style)
    // Offset: 0x16325B4
    static void ValidateParseStyleInteger(System::Globalization::NumberStyles style);
    // static System.Void ValidateParseStyleFloatingPoint(System.Globalization.NumberStyles style)
    // Offset: 0x16326A8
    static void ValidateParseStyleFloatingPoint(System::Globalization::NumberStyles style);
    // public System.Void .ctor()
    // Offset: 0x1631C4C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static NumberFormatInfo* New_ctor();
    // public System.Object Clone()
    // Offset: 0x161721C
    // Implemented from: System.ICloneable
    // Base method: System.Object ICloneable::Clone()
    ::Il2CppObject* Clone();
    // Creating proxy method: System_ICloneable_Clone
    // Maps to method: Clone
    ::Il2CppObject* System_ICloneable_Clone();
    // public System.Object GetFormat(System.Type formatType)
    // Offset: 0x1632518
    // Implemented from: System.IFormatProvider
    // Base method: System.Object IFormatProvider::GetFormat(System.Type formatType)
    ::Il2CppObject* GetFormat(System::Type* formatType);
  }; // System.Globalization.NumberFormatInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Globalization::NumberFormatInfo*, "System.Globalization", "NumberFormatInfo");
#pragma pack(pop)
