// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Globalization
namespace System::Globalization {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Globalization.CultureNotFoundException
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CAA20C
  class CultureNotFoundException : public System::ArgumentException {
    public:
    // private System.String m_invalidCultureName
    // Size: 0x8
    // Offset: 0x90
    ::Il2CppString* m_invalidCultureName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Nullable`1<System.Int32> m_invalidCultureId
    // Size: 0xFFFFFFFF
    // Offset: 0x98
    System::Nullable_1<int> m_invalidCultureId;
    // Creating value type constructor for type: CultureNotFoundException
    CultureNotFoundException(::Il2CppString* m_invalidCultureName_ = {}, System::Nullable_1<int> m_invalidCultureId_ = {}) noexcept : m_invalidCultureName{m_invalidCultureName_}, m_invalidCultureId{m_invalidCultureId_} {}
    // Deleting conversion operator: operator ::Il2CppString*
    constexpr operator ::Il2CppString*() const noexcept = delete;
    // public System.Void .ctor(System.String paramName, System.String invalidCultureName, System.String message)
    // Offset: 0x199B5EC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CultureNotFoundException* New_ctor(::Il2CppString* paramName, ::Il2CppString* invalidCultureName, ::Il2CppString* message) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CultureNotFoundException*, creationType>(paramName, invalidCultureName, message)));
    }
    // public System.Nullable`1<System.Int32> get_InvalidCultureId()
    // Offset: 0x199B90C
    System::Nullable_1<int> get_InvalidCultureId();
    // public System.String get_InvalidCultureName()
    // Offset: 0x199B914
    ::Il2CppString* get_InvalidCultureName();
    // static private System.String get_DefaultMessage()
    // Offset: 0x199B5A0
    static ::Il2CppString* get_DefaultMessage();
    // private System.String get_FormatedInvalidCultureId()
    // Offset: 0x199B91C
    ::Il2CppString* get_FormatedInvalidCultureId();
    // public System.Void .ctor()
    // Offset: 0x199B574
    // Implemented from: System.ArgumentException
    // Base method: System.Void ArgumentException::.ctor()
    // Base method: System.Void SystemException::.ctor()
    // Base method: System.Void Exception::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CultureNotFoundException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CultureNotFoundException*, creationType>()));
    }
    // public System.Void .ctor(System.String paramName, System.String message)
    // Offset: 0x19983F8
    // Implemented from: System.ArgumentException
    // Base method: System.Void ArgumentException::.ctor(System.String paramName, System.String message)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CultureNotFoundException* New_ctor(::Il2CppString* paramName, ::Il2CppString* message) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CultureNotFoundException*, creationType>(paramName, message)));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x199B628
    // Implemented from: System.ArgumentException
    // Base method: System.Void ArgumentException::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Base method: System.Void SystemException::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Base method: System.Void Exception::.ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CultureNotFoundException* New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CultureNotFoundException*, creationType>(info, context)));
    }
    // public override System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x199B7A4
    // Implemented from: System.ArgumentException
    // Base method: System.Void ArgumentException::GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    void GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // Creating proxy method: System_Runtime_Serialization_ISerializable_GetObjectData
    // Maps to method: GetObjectData
    void System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context);
    // public override System.String get_Message()
    // Offset: 0x199BA24
    // Implemented from: System.ArgumentException
    // Base method: System.String ArgumentException::get_Message()
    ::Il2CppString* get_Message();
  }; // System.Globalization.CultureNotFoundException
  // WARNING Not writing size check since size may be invalid!
}
DEFINE_IL2CPP_ARG_TYPE(System::Globalization::CultureNotFoundException*, "System.Globalization", "CultureNotFoundException");
