// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Buffer
  // [] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: CA7A34
  class Buffer : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Buffer
    Buffer() noexcept {}
    // static System.Boolean InternalBlockCopy(System.Array src, System.Int32 srcOffsetBytes, System.Array dst, System.Int32 dstOffsetBytes, System.Int32 byteCount)
    // Offset: 0x16864E0
    static bool InternalBlockCopy(System::Array* src, int srcOffsetBytes, System::Array* dst, int dstOffsetBytes, int byteCount);
    // static System.Int32 IndexOfByte(System.Byte* src, System.Byte value, System.Int32 index, System.Int32 count)
    // Offset: 0x16864E4
    static int IndexOfByte(uint8_t* src, uint8_t value, int index, int count);
    // static private System.Int32 _ByteLength(System.Array array)
    // Offset: 0x1686600
    static int _ByteLength(System::Array* array);
    // static System.Void ZeroMemory(System.Byte* src, System.Int64 len)
    // Offset: 0x1686604
    static void ZeroMemory(uint8_t* src, int64_t len);
    // static System.Void Memcpy(System.Byte[] dest, System.Int32 destIndex, System.Byte* src, System.Int32 srcIndex, System.Int32 len)
    // Offset: 0x1686628
    static void Memcpy(::Array<uint8_t>* dest, int destIndex, uint8_t* src, int srcIndex, int len);
    // static System.Void Memcpy(System.Byte* pDest, System.Int32 destIndex, System.Byte[] src, System.Int32 srcIndex, System.Int32 len)
    // Offset: 0x16866B4
    static void Memcpy(uint8_t* pDest, int destIndex, ::Array<uint8_t>* src, int srcIndex, int len);
    // static public System.Int32 ByteLength(System.Array array)
    // Offset: 0x16866E4
    static int ByteLength(System::Array* array);
    // static public System.Void BlockCopy(System.Array src, System.Int32 srcOffset, System.Array dst, System.Int32 dstOffset, System.Int32 count)
    // Offset: 0x16867B8
    static void BlockCopy(System::Array* src, int srcOffset, System::Array* dst, int dstOffset, int count);
    // static System.Void memcpy4(System.Byte* dest, System.Byte* src, System.Int32 size)
    // Offset: 0x16869C8
    static void memcpy4(uint8_t* dest, uint8_t* src, int size);
    // static System.Void memcpy2(System.Byte* dest, System.Byte* src, System.Int32 size)
    // Offset: 0x1686A54
    static void memcpy2(uint8_t* dest, uint8_t* src, int size);
    // static private System.Void memcpy1(System.Byte* dest, System.Byte* src, System.Int32 size)
    // Offset: 0x1686AD0
    static void memcpy1(uint8_t* dest, uint8_t* src, int size);
    // static System.Void Memcpy(System.Byte* dest, System.Byte* src, System.Int32 size)
    // Offset: 0x1686658
    static void Memcpy(uint8_t* dest, uint8_t* src, int size);
  }; // System.Buffer
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(System::Buffer*, "System", "Buffer");
