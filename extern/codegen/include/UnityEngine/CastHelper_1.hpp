// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.CastHelper`1
  // [] Offset: FFFFFFFF
  template<typename T>
  struct CastHelper_1/*, public System::ValueType*/ {
    public:
    // public T t
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    T t;
    // public System.IntPtr onePointerFurtherThanT
    // Size: 0x8
    // Offset: 0x0
    System::IntPtr onePointerFurtherThanT;
    // Field size check
    static_assert(sizeof(System::IntPtr) == 0x8);
    // Creating value type constructor for type: CastHelper_1
    constexpr CastHelper_1(T t_ = {}, System::IntPtr onePointerFurtherThanT_ = {}) noexcept : t{t_}, onePointerFurtherThanT{onePointerFurtherThanT_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // UnityEngine.CastHelper`1
  // Could not write size check! Type: UnityEngine.CastHelper`1 is generic, or has no fields that are valid for size checks!
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(UnityEngine::CastHelper_1, "UnityEngine", "CastHelper`1");
