// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Autogenerated type: UnityEngine.Rendering.IndexFormat
  struct IndexFormat : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: IndexFormat
    constexpr IndexFormat(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.Rendering.IndexFormat UInt16
    static constexpr const int UInt16 = 0;
    // Get static field: static public UnityEngine.Rendering.IndexFormat UInt16
    static UnityEngine::Rendering::IndexFormat _get_UInt16();
    // Set static field: static public UnityEngine.Rendering.IndexFormat UInt16
    static void _set_UInt16(UnityEngine::Rendering::IndexFormat value);
    // static field const value: static public UnityEngine.Rendering.IndexFormat UInt32
    static constexpr const int UInt32 = 1;
    // Get static field: static public UnityEngine.Rendering.IndexFormat UInt32
    static UnityEngine::Rendering::IndexFormat _get_UInt32();
    // Set static field: static public UnityEngine.Rendering.IndexFormat UInt32
    static void _set_UInt32(UnityEngine::Rendering::IndexFormat value);
  }; // UnityEngine.Rendering.IndexFormat
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Rendering::IndexFormat, "UnityEngine.Rendering", "IndexFormat");
#pragma pack(pop)
