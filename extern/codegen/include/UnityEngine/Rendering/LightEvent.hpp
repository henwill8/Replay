// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.LightEvent
  // [] Offset: FFFFFFFF
  struct LightEvent/*, public System::Enum*/ {
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: LightEvent
    constexpr LightEvent(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator System::Enum
    operator System::Enum() noexcept {
      return *reinterpret_cast<System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.Rendering.LightEvent BeforeShadowMap
    static constexpr const int BeforeShadowMap = 0;
    // Get static field: static public UnityEngine.Rendering.LightEvent BeforeShadowMap
    static UnityEngine::Rendering::LightEvent _get_BeforeShadowMap();
    // Set static field: static public UnityEngine.Rendering.LightEvent BeforeShadowMap
    static void _set_BeforeShadowMap(UnityEngine::Rendering::LightEvent value);
    // static field const value: static public UnityEngine.Rendering.LightEvent AfterShadowMap
    static constexpr const int AfterShadowMap = 1;
    // Get static field: static public UnityEngine.Rendering.LightEvent AfterShadowMap
    static UnityEngine::Rendering::LightEvent _get_AfterShadowMap();
    // Set static field: static public UnityEngine.Rendering.LightEvent AfterShadowMap
    static void _set_AfterShadowMap(UnityEngine::Rendering::LightEvent value);
    // static field const value: static public UnityEngine.Rendering.LightEvent BeforeScreenspaceMask
    static constexpr const int BeforeScreenspaceMask = 2;
    // Get static field: static public UnityEngine.Rendering.LightEvent BeforeScreenspaceMask
    static UnityEngine::Rendering::LightEvent _get_BeforeScreenspaceMask();
    // Set static field: static public UnityEngine.Rendering.LightEvent BeforeScreenspaceMask
    static void _set_BeforeScreenspaceMask(UnityEngine::Rendering::LightEvent value);
    // static field const value: static public UnityEngine.Rendering.LightEvent AfterScreenspaceMask
    static constexpr const int AfterScreenspaceMask = 3;
    // Get static field: static public UnityEngine.Rendering.LightEvent AfterScreenspaceMask
    static UnityEngine::Rendering::LightEvent _get_AfterScreenspaceMask();
    // Set static field: static public UnityEngine.Rendering.LightEvent AfterScreenspaceMask
    static void _set_AfterScreenspaceMask(UnityEngine::Rendering::LightEvent value);
    // static field const value: static public UnityEngine.Rendering.LightEvent BeforeShadowMapPass
    static constexpr const int BeforeShadowMapPass = 4;
    // Get static field: static public UnityEngine.Rendering.LightEvent BeforeShadowMapPass
    static UnityEngine::Rendering::LightEvent _get_BeforeShadowMapPass();
    // Set static field: static public UnityEngine.Rendering.LightEvent BeforeShadowMapPass
    static void _set_BeforeShadowMapPass(UnityEngine::Rendering::LightEvent value);
    // static field const value: static public UnityEngine.Rendering.LightEvent AfterShadowMapPass
    static constexpr const int AfterShadowMapPass = 5;
    // Get static field: static public UnityEngine.Rendering.LightEvent AfterShadowMapPass
    static UnityEngine::Rendering::LightEvent _get_AfterShadowMapPass();
    // Set static field: static public UnityEngine.Rendering.LightEvent AfterShadowMapPass
    static void _set_AfterShadowMapPass(UnityEngine::Rendering::LightEvent value);
  }; // UnityEngine.Rendering.LightEvent
  #pragma pack(pop)
  static check_size<sizeof(LightEvent), 0 + sizeof(int)> __UnityEngine_Rendering_LightEventSizeCheck;
  static_assert(sizeof(LightEvent) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Rendering::LightEvent, "UnityEngine.Rendering", "LightEvent");
