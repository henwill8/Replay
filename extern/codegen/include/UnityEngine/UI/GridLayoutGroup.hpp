// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.LayoutGroup
#include "UnityEngine/UI/LayoutGroup.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Skipping declaration: Corner because it is already included!
  // Skipping declaration: Axis because it is already included!
  // Skipping declaration: Constraint because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Autogenerated type: UnityEngine.UI.GridLayoutGroup
  class GridLayoutGroup : public UnityEngine::UI::LayoutGroup {
    public:
    // Nested type: UnityEngine::UI::GridLayoutGroup::Corner
    struct Corner;
    // Nested type: UnityEngine::UI::GridLayoutGroup::Axis
    struct Axis;
    // Nested type: UnityEngine::UI::GridLayoutGroup::Constraint
    struct Constraint;
    // Autogenerated type: UnityEngine.UI.GridLayoutGroup/Corner
    struct Corner : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: Corner
      constexpr Corner(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.GridLayoutGroup/Corner UpperLeft
      static constexpr const int UpperLeft = 0;
      // Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperLeft
      static UnityEngine::UI::GridLayoutGroup::Corner _get_UpperLeft();
      // Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperLeft
      static void _set_UpperLeft(UnityEngine::UI::GridLayoutGroup::Corner value);
      // static field const value: static public UnityEngine.UI.GridLayoutGroup/Corner UpperRight
      static constexpr const int UpperRight = 1;
      // Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperRight
      static UnityEngine::UI::GridLayoutGroup::Corner _get_UpperRight();
      // Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperRight
      static void _set_UpperRight(UnityEngine::UI::GridLayoutGroup::Corner value);
      // static field const value: static public UnityEngine.UI.GridLayoutGroup/Corner LowerLeft
      static constexpr const int LowerLeft = 2;
      // Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerLeft
      static UnityEngine::UI::GridLayoutGroup::Corner _get_LowerLeft();
      // Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerLeft
      static void _set_LowerLeft(UnityEngine::UI::GridLayoutGroup::Corner value);
      // static field const value: static public UnityEngine.UI.GridLayoutGroup/Corner LowerRight
      static constexpr const int LowerRight = 3;
      // Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerRight
      static UnityEngine::UI::GridLayoutGroup::Corner _get_LowerRight();
      // Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerRight
      static void _set_LowerRight(UnityEngine::UI::GridLayoutGroup::Corner value);
    }; // UnityEngine.UI.GridLayoutGroup/Corner
    // Autogenerated type: UnityEngine.UI.GridLayoutGroup/Axis
    struct Axis : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: Axis
      constexpr Axis(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.GridLayoutGroup/Axis Horizontal
      static constexpr const int Horizontal = 0;
      // Get static field: static public UnityEngine.UI.GridLayoutGroup/Axis Horizontal
      static UnityEngine::UI::GridLayoutGroup::Axis _get_Horizontal();
      // Set static field: static public UnityEngine.UI.GridLayoutGroup/Axis Horizontal
      static void _set_Horizontal(UnityEngine::UI::GridLayoutGroup::Axis value);
      // static field const value: static public UnityEngine.UI.GridLayoutGroup/Axis Vertical
      static constexpr const int Vertical = 1;
      // Get static field: static public UnityEngine.UI.GridLayoutGroup/Axis Vertical
      static UnityEngine::UI::GridLayoutGroup::Axis _get_Vertical();
      // Set static field: static public UnityEngine.UI.GridLayoutGroup/Axis Vertical
      static void _set_Vertical(UnityEngine::UI::GridLayoutGroup::Axis value);
    }; // UnityEngine.UI.GridLayoutGroup/Axis
    // Autogenerated type: UnityEngine.UI.GridLayoutGroup/Constraint
    struct Constraint : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: Constraint
      constexpr Constraint(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.GridLayoutGroup/Constraint Flexible
      static constexpr const int Flexible = 0;
      // Get static field: static public UnityEngine.UI.GridLayoutGroup/Constraint Flexible
      static UnityEngine::UI::GridLayoutGroup::Constraint _get_Flexible();
      // Set static field: static public UnityEngine.UI.GridLayoutGroup/Constraint Flexible
      static void _set_Flexible(UnityEngine::UI::GridLayoutGroup::Constraint value);
      // static field const value: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedColumnCount
      static constexpr const int FixedColumnCount = 1;
      // Get static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedColumnCount
      static UnityEngine::UI::GridLayoutGroup::Constraint _get_FixedColumnCount();
      // Set static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedColumnCount
      static void _set_FixedColumnCount(UnityEngine::UI::GridLayoutGroup::Constraint value);
      // static field const value: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedRowCount
      static constexpr const int FixedRowCount = 2;
      // Get static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedRowCount
      static UnityEngine::UI::GridLayoutGroup::Constraint _get_FixedRowCount();
      // Set static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedRowCount
      static void _set_FixedRowCount(UnityEngine::UI::GridLayoutGroup::Constraint value);
    }; // UnityEngine.UI.GridLayoutGroup/Constraint
    // protected UnityEngine.UI.GridLayoutGroup/Corner m_StartCorner
    // Offset: 0x58
    UnityEngine::UI::GridLayoutGroup::Corner m_StartCorner;
    // protected UnityEngine.UI.GridLayoutGroup/Axis m_StartAxis
    // Offset: 0x5C
    UnityEngine::UI::GridLayoutGroup::Axis m_StartAxis;
    // protected UnityEngine.Vector2 m_CellSize
    // Offset: 0x60
    UnityEngine::Vector2 m_CellSize;
    // protected UnityEngine.Vector2 m_Spacing
    // Offset: 0x68
    UnityEngine::Vector2 m_Spacing;
    // protected UnityEngine.UI.GridLayoutGroup/Constraint m_Constraint
    // Offset: 0x70
    UnityEngine::UI::GridLayoutGroup::Constraint m_Constraint;
    // protected System.Int32 m_ConstraintCount
    // Offset: 0x74
    int m_ConstraintCount;
    // public UnityEngine.UI.GridLayoutGroup/Corner get_startCorner()
    // Offset: 0x116EF60
    UnityEngine::UI::GridLayoutGroup::Corner get_startCorner();
    // public System.Void set_startCorner(UnityEngine.UI.GridLayoutGroup/Corner value)
    // Offset: 0x116EF68
    void set_startCorner(UnityEngine::UI::GridLayoutGroup::Corner value);
    // public UnityEngine.UI.GridLayoutGroup/Axis get_startAxis()
    // Offset: 0x116EFCC
    UnityEngine::UI::GridLayoutGroup::Axis get_startAxis();
    // public System.Void set_startAxis(UnityEngine.UI.GridLayoutGroup/Axis value)
    // Offset: 0x116EFD4
    void set_startAxis(UnityEngine::UI::GridLayoutGroup::Axis value);
    // public UnityEngine.Vector2 get_cellSize()
    // Offset: 0x116F038
    UnityEngine::Vector2 get_cellSize();
    // public System.Void set_cellSize(UnityEngine.Vector2 value)
    // Offset: 0x116F040
    void set_cellSize(UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_spacing()
    // Offset: 0x116F0AC
    UnityEngine::Vector2 get_spacing();
    // public System.Void set_spacing(UnityEngine.Vector2 value)
    // Offset: 0x116F0B4
    void set_spacing(UnityEngine::Vector2 value);
    // public UnityEngine.UI.GridLayoutGroup/Constraint get_constraint()
    // Offset: 0x116F120
    UnityEngine::UI::GridLayoutGroup::Constraint get_constraint();
    // public System.Void set_constraint(UnityEngine.UI.GridLayoutGroup/Constraint value)
    // Offset: 0x116F128
    void set_constraint(UnityEngine::UI::GridLayoutGroup::Constraint value);
    // public System.Int32 get_constraintCount()
    // Offset: 0x116F18C
    int get_constraintCount();
    // public System.Void set_constraintCount(System.Int32 value)
    // Offset: 0x116F194
    void set_constraintCount(int value);
    // private System.Void SetCellsAlongAxis(System.Int32 axis)
    // Offset: 0x116F660
    void SetCellsAlongAxis(int axis);
    // protected System.Void .ctor()
    // Offset: 0x116F22C
    // Implemented from: UnityEngine.UI.LayoutGroup
    // Base method: System.Void LayoutGroup::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static GridLayoutGroup* New_ctor();
    // public override System.Void CalculateLayoutInputHorizontal()
    // Offset: 0x116F2D8
    // Implemented from: UnityEngine.UI.LayoutGroup
    // Base method: System.Void LayoutGroup::CalculateLayoutInputHorizontal()
    void CalculateLayoutInputHorizontal();
    // public override System.Void CalculateLayoutInputVertical()
    // Offset: 0x116F474
    // Implemented from: UnityEngine.UI.LayoutGroup
    // Base method: System.Void LayoutGroup::CalculateLayoutInputVertical()
    void CalculateLayoutInputVertical();
    // public override System.Void SetLayoutHorizontal()
    // Offset: 0x116F658
    // Implemented from: UnityEngine.UI.LayoutGroup
    // Base method: System.Void LayoutGroup::SetLayoutHorizontal()
    void SetLayoutHorizontal();
    // public override System.Void SetLayoutVertical()
    // Offset: 0x116FCF0
    // Implemented from: UnityEngine.UI.LayoutGroup
    // Base method: System.Void LayoutGroup::SetLayoutVertical()
    void SetLayoutVertical();
  }; // UnityEngine.UI.GridLayoutGroup
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::GridLayoutGroup*, "UnityEngine.UI", "GridLayoutGroup");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::GridLayoutGroup::Corner, "UnityEngine.UI", "GridLayoutGroup/Corner");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::GridLayoutGroup::Axis, "UnityEngine.UI", "GridLayoutGroup/Axis");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::GridLayoutGroup::Constraint, "UnityEngine.UI", "GridLayoutGroup/Constraint");
#pragma pack(pop)
