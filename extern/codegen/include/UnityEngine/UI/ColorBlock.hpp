// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Autogenerated type: UnityEngine.UI.ColorBlock
  struct ColorBlock : public System::ValueType, public System::IEquatable_1<UnityEngine::UI::ColorBlock> {
    public:
    // private UnityEngine.Color m_NormalColor
    // Offset: 0x0
    UnityEngine::Color m_NormalColor;
    // private UnityEngine.Color m_HighlightedColor
    // Offset: 0x10
    UnityEngine::Color m_HighlightedColor;
    // private UnityEngine.Color m_PressedColor
    // Offset: 0x20
    UnityEngine::Color m_PressedColor;
    // private UnityEngine.Color m_SelectedColor
    // Offset: 0x30
    UnityEngine::Color m_SelectedColor;
    // private UnityEngine.Color m_DisabledColor
    // Offset: 0x40
    UnityEngine::Color m_DisabledColor;
    // private System.Single m_ColorMultiplier
    // Offset: 0x50
    float m_ColorMultiplier;
    // private System.Single m_FadeDuration
    // Offset: 0x54
    float m_FadeDuration;
    // Creating value type constructor for type: ColorBlock
    constexpr ColorBlock(UnityEngine::Color m_NormalColor_ = {}, UnityEngine::Color m_HighlightedColor_ = {}, UnityEngine::Color m_PressedColor_ = {}, UnityEngine::Color m_SelectedColor_ = {}, UnityEngine::Color m_DisabledColor_ = {}, float m_ColorMultiplier_ = {}, float m_FadeDuration_ = {}) noexcept : m_NormalColor{m_NormalColor_}, m_HighlightedColor{m_HighlightedColor_}, m_PressedColor{m_PressedColor_}, m_SelectedColor{m_SelectedColor_}, m_DisabledColor{m_DisabledColor_}, m_ColorMultiplier{m_ColorMultiplier_}, m_FadeDuration{m_FadeDuration_} {}
    // public UnityEngine.Color get_normalColor()
    // Offset: 0xA32B70
    UnityEngine::Color get_normalColor();
    // public System.Void set_normalColor(UnityEngine.Color value)
    // Offset: 0xA32B7C
    void set_normalColor(UnityEngine::Color value);
    // public UnityEngine.Color get_highlightedColor()
    // Offset: 0xA32B88
    UnityEngine::Color get_highlightedColor();
    // public System.Void set_highlightedColor(UnityEngine.Color value)
    // Offset: 0xA32B94
    void set_highlightedColor(UnityEngine::Color value);
    // public UnityEngine.Color get_pressedColor()
    // Offset: 0xA32BA0
    UnityEngine::Color get_pressedColor();
    // public System.Void set_pressedColor(UnityEngine.Color value)
    // Offset: 0xA32BAC
    void set_pressedColor(UnityEngine::Color value);
    // public UnityEngine.Color get_selectedColor()
    // Offset: 0xA32BB8
    UnityEngine::Color get_selectedColor();
    // public System.Void set_selectedColor(UnityEngine.Color value)
    // Offset: 0xA32BC4
    void set_selectedColor(UnityEngine::Color value);
    // public UnityEngine.Color get_disabledColor()
    // Offset: 0xA32BD0
    UnityEngine::Color get_disabledColor();
    // public System.Void set_disabledColor(UnityEngine.Color value)
    // Offset: 0xA32BDC
    void set_disabledColor(UnityEngine::Color value);
    // public System.Single get_colorMultiplier()
    // Offset: 0xA32BE8
    float get_colorMultiplier();
    // public System.Void set_colorMultiplier(System.Single value)
    // Offset: 0xA32BF0
    void set_colorMultiplier(float value);
    // public System.Single get_fadeDuration()
    // Offset: 0xA32BF8
    float get_fadeDuration();
    // public System.Void set_fadeDuration(System.Single value)
    // Offset: 0xA32C00
    void set_fadeDuration(float value);
    // static public UnityEngine.UI.ColorBlock get_defaultColorBlock()
    // Offset: 0xE094BC
    static UnityEngine::UI::ColorBlock get_defaultColorBlock();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xA32C08
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public System.Boolean Equals(UnityEngine.UI.ColorBlock other)
    // Offset: 0xA32C10
    // Implemented from: System.IEquatable`1
    // Base method: System.Boolean IEquatable`1::Equals(UnityEngine.UI.ColorBlock other)
    bool Equals(UnityEngine::UI::ColorBlock other);
    // public override System.Int32 GetHashCode()
    // Offset: 0xA32C50
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.UI.ColorBlock
  // static public System.Boolean op_Equality(UnityEngine.UI.ColorBlock point1, UnityEngine.UI.ColorBlock point2)
  // Offset: 0xE097E8
  bool operator ==(const UnityEngine::UI::ColorBlock& point1, const UnityEngine::UI::ColorBlock& point2);
  // static public System.Boolean op_Inequality(UnityEngine.UI.ColorBlock point1, UnityEngine.UI.ColorBlock point2)
  // Offset: 0xE09828
  bool operator !=(const UnityEngine::UI::ColorBlock& point1, const UnityEngine::UI::ColorBlock& point2);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::ColorBlock, "UnityEngine.UI", "ColorBlock");
#pragma pack(pop)
