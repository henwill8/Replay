// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
// Including type: UnityEngine.UI.ILayoutSelfController
#include "UnityEngine/UI/ILayoutSelfController.hpp"
// Including type: UnityEngine.DrivenRectTransformTracker
#include "UnityEngine/DrivenRectTransformTracker.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: Vector2
  struct Vector2;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Skipping declaration: AspectMode because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Autogenerated type: UnityEngine.UI.AspectRatioFitter
  class AspectRatioFitter : public UnityEngine::EventSystems::UIBehaviour, public UnityEngine::UI::ILayoutSelfController {
    public:
    // Nested type: UnityEngine::UI::AspectRatioFitter::AspectMode
    struct AspectMode;
    // Autogenerated type: UnityEngine.UI.AspectRatioFitter/AspectMode
    struct AspectMode : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: AspectMode
      constexpr AspectMode(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.AspectRatioFitter/AspectMode None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode None
      static UnityEngine::UI::AspectRatioFitter::AspectMode _get_None();
      // Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode None
      static void _set_None(UnityEngine::UI::AspectRatioFitter::AspectMode value);
      // static field const value: static public UnityEngine.UI.AspectRatioFitter/AspectMode WidthControlsHeight
      static constexpr const int WidthControlsHeight = 1;
      // Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode WidthControlsHeight
      static UnityEngine::UI::AspectRatioFitter::AspectMode _get_WidthControlsHeight();
      // Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode WidthControlsHeight
      static void _set_WidthControlsHeight(UnityEngine::UI::AspectRatioFitter::AspectMode value);
      // static field const value: static public UnityEngine.UI.AspectRatioFitter/AspectMode HeightControlsWidth
      static constexpr const int HeightControlsWidth = 2;
      // Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode HeightControlsWidth
      static UnityEngine::UI::AspectRatioFitter::AspectMode _get_HeightControlsWidth();
      // Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode HeightControlsWidth
      static void _set_HeightControlsWidth(UnityEngine::UI::AspectRatioFitter::AspectMode value);
      // static field const value: static public UnityEngine.UI.AspectRatioFitter/AspectMode FitInParent
      static constexpr const int FitInParent = 3;
      // Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode FitInParent
      static UnityEngine::UI::AspectRatioFitter::AspectMode _get_FitInParent();
      // Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode FitInParent
      static void _set_FitInParent(UnityEngine::UI::AspectRatioFitter::AspectMode value);
      // static field const value: static public UnityEngine.UI.AspectRatioFitter/AspectMode EnvelopeParent
      static constexpr const int EnvelopeParent = 4;
      // Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode EnvelopeParent
      static UnityEngine::UI::AspectRatioFitter::AspectMode _get_EnvelopeParent();
      // Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode EnvelopeParent
      static void _set_EnvelopeParent(UnityEngine::UI::AspectRatioFitter::AspectMode value);
    }; // UnityEngine.UI.AspectRatioFitter/AspectMode
    // private UnityEngine.UI.AspectRatioFitter/AspectMode m_AspectMode
    // Offset: 0x18
    UnityEngine::UI::AspectRatioFitter::AspectMode m_AspectMode;
    // private System.Single m_AspectRatio
    // Offset: 0x1C
    float m_AspectRatio;
    // private UnityEngine.RectTransform m_Rect
    // Offset: 0x20
    UnityEngine::RectTransform* m_Rect;
    // private System.Boolean m_DelayedSetDirty
    // Offset: 0x28
    bool m_DelayedSetDirty;
    // private UnityEngine.DrivenRectTransformTracker m_Tracker
    // Offset: 0x29
    UnityEngine::DrivenRectTransformTracker m_Tracker;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public UnityEngine.UI.AspectRatioFitter/AspectMode get_aspectMode()
    // Offset: 0xE05F3C
    UnityEngine::UI::AspectRatioFitter::AspectMode get_aspectMode();
    // public System.Void set_aspectMode(UnityEngine.UI.AspectRatioFitter/AspectMode value)
    // Offset: 0xE05F44
    void set_aspectMode(UnityEngine::UI::AspectRatioFitter::AspectMode value);
    // public System.Single get_aspectRatio()
    // Offset: 0xE05FC4
    float get_aspectRatio();
    // public System.Void set_aspectRatio(System.Single value)
    // Offset: 0xE05FCC
    void set_aspectRatio(float value);
    // private UnityEngine.RectTransform get_rectTransform()
    // Offset: 0xE06048
    UnityEngine::RectTransform* get_rectTransform();
    // protected System.Void Update()
    // Offset: 0xE0618C
    void Update();
    // private System.Void UpdateRect()
    // Offset: 0xE061A4
    void UpdateRect();
    // private System.Single GetSizeDeltaToProduceSize(System.Single size, System.Int32 axis)
    // Offset: 0xE0655C
    float GetSizeDeltaToProduceSize(float size, int axis);
    // private UnityEngine.Vector2 GetParentSize()
    // Offset: 0xE06454
    UnityEngine::Vector2 GetParentSize();
    // protected System.Void SetDirty()
    // Offset: 0xE05FC0
    void SetDirty();
    // protected System.Void .ctor()
    // Offset: 0xE060F4
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static AspectRatioFitter* New_ctor();
    // protected override System.Void OnEnable()
    // Offset: 0xE06104
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0xE06108
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDisable()
    void OnDisable();
    // protected override System.Void OnRectTransformDimensionsChange()
    // Offset: 0xE061A0
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnRectTransformDimensionsChange()
    void OnRectTransformDimensionsChange();
    // public System.Void SetLayoutHorizontal()
    // Offset: 0xE06610
    // Implemented from: UnityEngine.UI.ILayoutController
    // Base method: System.Void ILayoutController::SetLayoutHorizontal()
    void SetLayoutHorizontal();
    // public System.Void SetLayoutVertical()
    // Offset: 0xE06614
    // Implemented from: UnityEngine.UI.ILayoutController
    // Base method: System.Void ILayoutController::SetLayoutVertical()
    void SetLayoutVertical();
  }; // UnityEngine.UI.AspectRatioFitter
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::AspectRatioFitter*, "UnityEngine.UI", "AspectRatioFitter");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::UI::AspectRatioFitter::AspectMode, "UnityEngine.UI", "AspectRatioFitter/AspectMode");
#pragma pack(pop)
