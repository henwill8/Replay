// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.WWWTranscoder
  // [] Offset: FFFFFFFF
  // [VisibleToOtherModulesAttribute] Offset: D022F8
  class WWWTranscoder : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: WWWTranscoder
    WWWTranscoder() noexcept {}
    // Get static field: static private System.Byte[] ucHexChars
    static ::Array<uint8_t>* _get_ucHexChars();
    // Set static field: static private System.Byte[] ucHexChars
    static void _set_ucHexChars(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] lcHexChars
    static ::Array<uint8_t>* _get_lcHexChars();
    // Set static field: static private System.Byte[] lcHexChars
    static void _set_lcHexChars(::Array<uint8_t>* value);
    // Get static field: static private System.Byte urlEscapeChar
    static uint8_t _get_urlEscapeChar();
    // Set static field: static private System.Byte urlEscapeChar
    static void _set_urlEscapeChar(uint8_t value);
    // Get static field: static private System.Byte[] urlSpace
    static ::Array<uint8_t>* _get_urlSpace();
    // Set static field: static private System.Byte[] urlSpace
    static void _set_urlSpace(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] dataSpace
    static ::Array<uint8_t>* _get_dataSpace();
    // Set static field: static private System.Byte[] dataSpace
    static void _set_dataSpace(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] urlForbidden
    static ::Array<uint8_t>* _get_urlForbidden();
    // Set static field: static private System.Byte[] urlForbidden
    static void _set_urlForbidden(::Array<uint8_t>* value);
    // Get static field: static private System.Byte qpEscapeChar
    static uint8_t _get_qpEscapeChar();
    // Set static field: static private System.Byte qpEscapeChar
    static void _set_qpEscapeChar(uint8_t value);
    // Get static field: static private System.Byte[] qpSpace
    static ::Array<uint8_t>* _get_qpSpace();
    // Set static field: static private System.Byte[] qpSpace
    static void _set_qpSpace(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] qpForbidden
    static ::Array<uint8_t>* _get_qpForbidden();
    // Set static field: static private System.Byte[] qpForbidden
    static void _set_qpForbidden(::Array<uint8_t>* value);
    // static private System.Byte Hex2Byte(System.Byte[] b, System.Int32 offset)
    // Offset: 0x22AD878
    static uint8_t Hex2Byte(::Array<uint8_t>* b, int offset);
    // static private System.Byte[] Byte2Hex(System.Byte b, System.Byte[] hexChars)
    // Offset: 0x22AD938
    static ::Array<uint8_t>* Byte2Hex(uint8_t b, ::Array<uint8_t>* hexChars);
    // static public System.Byte[] URLEncode(System.Byte[] toEncode)
    // Offset: 0x22AD614
    static ::Array<uint8_t>* URLEncode(::Array<uint8_t>* toEncode);
    // static public System.Byte[] Encode(System.Byte[] input, System.Byte escapeChar, System.Byte[] space, System.Byte[] forbidden, System.Boolean uppercase)
    // Offset: 0x22AD9FC
    static ::Array<uint8_t>* Encode(::Array<uint8_t>* input, uint8_t escapeChar, ::Array<uint8_t>* space, ::Array<uint8_t>* forbidden, bool uppercase);
    // static private System.Boolean ByteArrayContains(System.Byte[] array, System.Byte b)
    // Offset: 0x22ADD60
    static bool ByteArrayContains(::Array<uint8_t>* array, uint8_t b);
    // static public System.Byte[] URLDecode(System.Byte[] toEncode)
    // Offset: 0x22ADDAC
    static ::Array<uint8_t>* URLDecode(::Array<uint8_t>* toEncode);
    // static private System.Boolean ByteSubArrayEquals(System.Byte[] array, System.Int32 index, System.Byte[] comperand)
    // Offset: 0x22AE0D8
    static bool ByteSubArrayEquals(::Array<uint8_t>* array, int index, ::Array<uint8_t>* comperand);
    // static public System.Byte[] Decode(System.Byte[] input, System.Byte escapeChar, System.Byte[] space)
    // Offset: 0x22ADE20
    static ::Array<uint8_t>* Decode(::Array<uint8_t>* input, uint8_t escapeChar, ::Array<uint8_t>* space);
    // static private System.Void .cctor()
    // Offset: 0x22AE160
    static void _cctor();
  }; // UnityEngine.WWWTranscoder
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::WWWTranscoder*, "UnityEngine", "WWWTranscoder");
