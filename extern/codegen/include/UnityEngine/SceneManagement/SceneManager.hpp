// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityAction`2<T0, T1>
  template<typename T0, typename T1>
  class UnityAction_2;
  // Forward declaring type: UnityAction`1<T0>
  template<typename T0>
  class UnityAction_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: UnityEngine::SceneManagement
namespace UnityEngine::SceneManagement {
  // Forward declaring type: UnloadSceneOptions
  struct UnloadSceneOptions;
  // Forward declaring type: LoadSceneParameters
  struct LoadSceneParameters;
}
// Completed forward declares
// Type namespace: UnityEngine.SceneManagement
namespace UnityEngine::SceneManagement {
  // Autogenerated type: UnityEngine.SceneManagement.SceneManager
  class SceneManager : public ::Il2CppObject {
    public:
    // Get static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> sceneLoaded
    static UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>* _get_sceneLoaded();
    // Set static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> sceneLoaded
    static void _set_sceneLoaded(UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>* value);
    // Get static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.SceneManagement.Scene> sceneUnloaded
    static UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>* _get_sceneUnloaded();
    // Set static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.SceneManagement.Scene> sceneUnloaded
    static void _set_sceneUnloaded(UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>* value);
    // Get static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> activeSceneChanged
    static UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::Scene>* _get_activeSceneChanged();
    // Set static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> activeSceneChanged
    static void _set_activeSceneChanged(UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::Scene>* value);
    // static public System.Int32 get_sceneCount()
    // Offset: 0x16BF4EC
    static int get_sceneCount();
    // static public System.Int32 get_sceneCountInBuildSettings()
    // Offset: 0x16BF520
    static int get_sceneCountInBuildSettings();
    // static public UnityEngine.SceneManagement.Scene GetActiveScene()
    // Offset: 0x16BF554
    static UnityEngine::SceneManagement::Scene GetActiveScene();
    // static public System.Boolean SetActiveScene(UnityEngine.SceneManagement.Scene scene)
    // Offset: 0x16BF5DC
    static bool SetActiveScene(UnityEngine::SceneManagement::Scene scene);
    // static public UnityEngine.SceneManagement.Scene GetSceneByName(System.String name)
    // Offset: 0x16BF664
    static UnityEngine::SceneManagement::Scene GetSceneByName(::Il2CppString* name);
    // static public UnityEngine.SceneManagement.Scene GetSceneAt(System.Int32 index)
    // Offset: 0x16BF70C
    static UnityEngine::SceneManagement::Scene GetSceneAt(int index);
    // static private UnityEngine.AsyncOperation UnloadSceneAsyncInternal(UnityEngine.SceneManagement.Scene scene, UnityEngine.SceneManagement.UnloadSceneOptions options)
    // Offset: 0x16BF7B4
    static UnityEngine::AsyncOperation* UnloadSceneAsyncInternal(UnityEngine::SceneManagement::Scene scene, UnityEngine::SceneManagement::UnloadSceneOptions options);
    // static private UnityEngine.AsyncOperation LoadSceneAsyncNameIndexInternal(System.String sceneName, System.Int32 sceneBuildIndex, UnityEngine.SceneManagement.LoadSceneParameters parameters, System.Boolean mustCompleteNextFrame)
    // Offset: 0x16BF858
    static UnityEngine::AsyncOperation* LoadSceneAsyncNameIndexInternal(::Il2CppString* sceneName, int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneParameters parameters, bool mustCompleteNextFrame);
    // static private UnityEngine.AsyncOperation UnloadSceneNameIndexInternal(System.String sceneName, System.Int32 sceneBuildIndex, System.Boolean immediately, UnityEngine.SceneManagement.UnloadSceneOptions options, out System.Boolean outSuccess)
    // Offset: 0x16BF92C
    static UnityEngine::AsyncOperation* UnloadSceneNameIndexInternal(::Il2CppString* sceneName, int sceneBuildIndex, bool immediately, UnityEngine::SceneManagement::UnloadSceneOptions options, bool& outSuccess);
    // static public System.Void MoveGameObjectToScene(UnityEngine.GameObject go, UnityEngine.SceneManagement.Scene scene)
    // Offset: 0x16BF99C
    static void MoveGameObjectToScene(UnityEngine::GameObject* go, UnityEngine::SceneManagement::Scene scene);
    // static public System.Void add_sceneLoaded(UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> value)
    // Offset: 0x16BFA40
    static void add_sceneLoaded(UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>* value);
    // static public System.Void remove_sceneLoaded(UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> value)
    // Offset: 0x16BFAF4
    static void remove_sceneLoaded(UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>* value);
    // static public System.Void LoadScene(System.String sceneName, UnityEngine.SceneManagement.LoadSceneMode mode)
    // Offset: 0x16BFBA8
    static void LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode mode);
    // static public System.Void LoadScene(System.String sceneName)
    // Offset: 0x16BFC68
    static void LoadScene(::Il2CppString* sceneName);
    // static public UnityEngine.SceneManagement.Scene LoadScene(System.String sceneName, UnityEngine.SceneManagement.LoadSceneParameters parameters)
    // Offset: 0x16BFBB0
    static UnityEngine::SceneManagement::Scene LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneParameters parameters);
    // static public System.Void LoadScene(System.Int32 sceneBuildIndex, UnityEngine.SceneManagement.LoadSceneMode mode)
    // Offset: 0x16BFC70
    static void LoadScene(int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneMode mode);
    // static public UnityEngine.SceneManagement.Scene LoadScene(System.Int32 sceneBuildIndex, UnityEngine.SceneManagement.LoadSceneParameters parameters)
    // Offset: 0x16BFC78
    static UnityEngine::SceneManagement::Scene LoadScene(int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneParameters parameters);
    // static public UnityEngine.AsyncOperation LoadSceneAsync(System.Int32 sceneBuildIndex, UnityEngine.SceneManagement.LoadSceneMode mode)
    // Offset: 0x16BFD30
    static UnityEngine::AsyncOperation* LoadSceneAsync(int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneMode mode);
    // static public UnityEngine.AsyncOperation LoadSceneAsync(System.Int32 sceneBuildIndex, UnityEngine.SceneManagement.LoadSceneParameters parameters)
    // Offset: 0x16BFD90
    static UnityEngine::AsyncOperation* LoadSceneAsync(int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneParameters parameters);
    // static public UnityEngine.AsyncOperation LoadSceneAsync(System.String sceneName, UnityEngine.SceneManagement.LoadSceneMode mode)
    // Offset: 0x16BFDEC
    static UnityEngine::AsyncOperation* LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode mode);
    // static public UnityEngine.AsyncOperation LoadSceneAsync(System.String sceneName)
    // Offset: 0x16BFEA8
    static UnityEngine::AsyncOperation* LoadSceneAsync(::Il2CppString* sceneName);
    // static public UnityEngine.AsyncOperation LoadSceneAsync(System.String sceneName, UnityEngine.SceneManagement.LoadSceneParameters parameters)
    // Offset: 0x16BFE4C
    static UnityEngine::AsyncOperation* LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneParameters parameters);
    // static public UnityEngine.AsyncOperation UnloadSceneAsync(System.String sceneName)
    // Offset: 0x16BFF04
    static UnityEngine::AsyncOperation* UnloadSceneAsync(::Il2CppString* sceneName);
    // static public UnityEngine.AsyncOperation UnloadSceneAsync(UnityEngine.SceneManagement.Scene scene)
    // Offset: 0x16BFF64
    static UnityEngine::AsyncOperation* UnloadSceneAsync(UnityEngine::SceneManagement::Scene scene);
    // static private System.Void Internal_SceneLoaded(UnityEngine.SceneManagement.Scene scene, UnityEngine.SceneManagement.LoadSceneMode mode)
    // Offset: 0x16BFFAC
    static void Internal_SceneLoaded(UnityEngine::SceneManagement::Scene scene, UnityEngine::SceneManagement::LoadSceneMode mode);
    // static private System.Void Internal_SceneUnloaded(UnityEngine.SceneManagement.Scene scene)
    // Offset: 0x16C0034
    static void Internal_SceneUnloaded(UnityEngine::SceneManagement::Scene scene);
    // static private System.Void Internal_ActiveSceneChanged(UnityEngine.SceneManagement.Scene previousActiveScene, UnityEngine.SceneManagement.Scene newActiveScene)
    // Offset: 0x16C00A8
    static void Internal_ActiveSceneChanged(UnityEngine::SceneManagement::Scene previousActiveScene, UnityEngine::SceneManagement::Scene newActiveScene);
    // static private System.Void GetActiveScene_Injected(out UnityEngine.SceneManagement.Scene ret)
    // Offset: 0x16BF59C
    static void GetActiveScene_Injected(UnityEngine::SceneManagement::Scene& ret);
    // static private System.Boolean SetActiveScene_Injected(ref UnityEngine.SceneManagement.Scene scene)
    // Offset: 0x16BF624
    static bool SetActiveScene_Injected(UnityEngine::SceneManagement::Scene& scene);
    // static private System.Void GetSceneByName_Injected(System.String name, out UnityEngine.SceneManagement.Scene ret)
    // Offset: 0x16BF6BC
    static void GetSceneByName_Injected(::Il2CppString* name, UnityEngine::SceneManagement::Scene& ret);
    // static private System.Void GetSceneAt_Injected(System.Int32 index, out UnityEngine.SceneManagement.Scene ret)
    // Offset: 0x16BF764
    static void GetSceneAt_Injected(int index, UnityEngine::SceneManagement::Scene& ret);
    // static private UnityEngine.AsyncOperation UnloadSceneAsyncInternal_Injected(ref UnityEngine.SceneManagement.Scene scene, UnityEngine.SceneManagement.UnloadSceneOptions options)
    // Offset: 0x16BF808
    static UnityEngine::AsyncOperation* UnloadSceneAsyncInternal_Injected(UnityEngine::SceneManagement::Scene& scene, UnityEngine::SceneManagement::UnloadSceneOptions options);
    // static private UnityEngine.AsyncOperation LoadSceneAsyncNameIndexInternal_Injected(System.String sceneName, System.Int32 sceneBuildIndex, ref UnityEngine.SceneManagement.LoadSceneParameters parameters, System.Boolean mustCompleteNextFrame)
    // Offset: 0x16BF8C4
    static UnityEngine::AsyncOperation* LoadSceneAsyncNameIndexInternal_Injected(::Il2CppString* sceneName, int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneParameters& parameters, bool mustCompleteNextFrame);
    // static private System.Void MoveGameObjectToScene_Injected(UnityEngine.GameObject go, ref UnityEngine.SceneManagement.Scene scene)
    // Offset: 0x16BF9F0
    static void MoveGameObjectToScene_Injected(UnityEngine::GameObject* go, UnityEngine::SceneManagement::Scene& scene);
  }; // UnityEngine.SceneManagement.SceneManager
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::SceneManagement::SceneManager*, "UnityEngine.SceneManagement", "SceneManager");
#pragma pack(pop)
