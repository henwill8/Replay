// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Autogenerated type: UnityEngine.AnimatorStateInfo
  struct AnimatorStateInfo : public System::ValueType {
    public:
    // private System.Int32 m_Name
    // Offset: 0x0
    int m_Name;
    // private System.Int32 m_Path
    // Offset: 0x4
    int m_Path;
    // private System.Int32 m_FullPath
    // Offset: 0x8
    int m_FullPath;
    // private System.Single m_NormalizedTime
    // Offset: 0xC
    float m_NormalizedTime;
    // private System.Single m_Length
    // Offset: 0x10
    float m_Length;
    // private System.Single m_Speed
    // Offset: 0x14
    float m_Speed;
    // private System.Single m_SpeedMultiplier
    // Offset: 0x18
    float m_SpeedMultiplier;
    // private System.Int32 m_Tag
    // Offset: 0x1C
    int m_Tag;
    // private System.Int32 m_Loop
    // Offset: 0x20
    int m_Loop;
    // Creating value type constructor for type: AnimatorStateInfo
    constexpr AnimatorStateInfo(int m_Name_ = {}, int m_Path_ = {}, int m_FullPath_ = {}, float m_NormalizedTime_ = {}, float m_Length_ = {}, float m_Speed_ = {}, float m_SpeedMultiplier_ = {}, int m_Tag_ = {}, int m_Loop_ = {}) noexcept : m_Name{m_Name_}, m_Path{m_Path_}, m_FullPath{m_FullPath_}, m_NormalizedTime{m_NormalizedTime_}, m_Length{m_Length_}, m_Speed{m_Speed_}, m_SpeedMultiplier{m_SpeedMultiplier_}, m_Tag{m_Tag_}, m_Loop{m_Loop_} {}
  }; // UnityEngine.AnimatorStateInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::AnimatorStateInfo, "UnityEngine", "AnimatorStateInfo");
#pragma pack(pop)
