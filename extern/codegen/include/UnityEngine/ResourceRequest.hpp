// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x30
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.ResourceRequest
  // [] Offset: FFFFFFFF
  // [RequiredByNativeCodeAttribute] Offset: CBED3C
  class ResourceRequest : public UnityEngine::AsyncOperation {
    public:
    // System.String m_Path
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppString* m_Path;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // System.Type m_Type
    // Size: 0x8
    // Offset: 0x28
    System::Type* m_Type;
    // Field size check
    static_assert(sizeof(System::Type*) == 0x8);
    // Creating value type constructor for type: ResourceRequest
    ResourceRequest(::Il2CppString* m_Path_ = {}, System::Type* m_Type_ = {}) noexcept : m_Path{m_Path_}, m_Type{m_Type_} {}
  }; // UnityEngine.ResourceRequest
  #pragma pack(pop)
  static check_size<sizeof(ResourceRequest), 40 + sizeof(System::Type*)> __UnityEngine_ResourceRequestSizeCheck;
  static_assert(sizeof(ResourceRequest) == 0x30);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ResourceRequest*, "UnityEngine", "ResourceRequest");
