// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Coroutine
  // [] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: CBF120
  // [RequiredByNativeCodeAttribute] Offset: CBF120
  class Coroutine : public UnityEngine::YieldInstruction {
    public:
    // System.IntPtr m_Ptr
    // Size: 0x8
    // Offset: 0x10
    System::IntPtr m_Ptr;
    // Field size check
    static_assert(sizeof(System::IntPtr) == 0x8);
    // Creating value type constructor for type: Coroutine
    Coroutine(System::IntPtr m_Ptr_ = {}) noexcept : m_Ptr{m_Ptr_} {}
    // Creating conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept {
      return m_Ptr;
    }
    // static private System.Void ReleaseCoroutine(System.IntPtr ptr)
    // Offset: 0x1A1A9FC
    static void ReleaseCoroutine(System::IntPtr ptr);
    // private System.Void .ctor()
    // Offset: 0x1A1A958
    // Implemented from: UnityEngine.YieldInstruction
    // Base method: System.Void YieldInstruction::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Coroutine* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Coroutine::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Coroutine*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x1A1A960
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.Coroutine
  #pragma pack(pop)
  static check_size<sizeof(Coroutine), 16 + sizeof(System::IntPtr)> __UnityEngine_CoroutineSizeCheck;
  static_assert(sizeof(Coroutine) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Coroutine*, "UnityEngine", "Coroutine");
