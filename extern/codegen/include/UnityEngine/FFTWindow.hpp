// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.FFTWindow
  // [] Offset: FFFFFFFF
  struct FFTWindow/*, public System::Enum*/ {
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: FFTWindow
    constexpr FFTWindow(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator System::Enum
    operator System::Enum() noexcept {
      return *reinterpret_cast<System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.FFTWindow Rectangular
    static constexpr const int Rectangular = 0;
    // Get static field: static public UnityEngine.FFTWindow Rectangular
    static UnityEngine::FFTWindow _get_Rectangular();
    // Set static field: static public UnityEngine.FFTWindow Rectangular
    static void _set_Rectangular(UnityEngine::FFTWindow value);
    // static field const value: static public UnityEngine.FFTWindow Triangle
    static constexpr const int Triangle = 1;
    // Get static field: static public UnityEngine.FFTWindow Triangle
    static UnityEngine::FFTWindow _get_Triangle();
    // Set static field: static public UnityEngine.FFTWindow Triangle
    static void _set_Triangle(UnityEngine::FFTWindow value);
    // static field const value: static public UnityEngine.FFTWindow Hamming
    static constexpr const int Hamming = 2;
    // Get static field: static public UnityEngine.FFTWindow Hamming
    static UnityEngine::FFTWindow _get_Hamming();
    // Set static field: static public UnityEngine.FFTWindow Hamming
    static void _set_Hamming(UnityEngine::FFTWindow value);
    // static field const value: static public UnityEngine.FFTWindow Hanning
    static constexpr const int Hanning = 3;
    // Get static field: static public UnityEngine.FFTWindow Hanning
    static UnityEngine::FFTWindow _get_Hanning();
    // Set static field: static public UnityEngine.FFTWindow Hanning
    static void _set_Hanning(UnityEngine::FFTWindow value);
    // static field const value: static public UnityEngine.FFTWindow Blackman
    static constexpr const int Blackman = 4;
    // Get static field: static public UnityEngine.FFTWindow Blackman
    static UnityEngine::FFTWindow _get_Blackman();
    // Set static field: static public UnityEngine.FFTWindow Blackman
    static void _set_Blackman(UnityEngine::FFTWindow value);
    // static field const value: static public UnityEngine.FFTWindow BlackmanHarris
    static constexpr const int BlackmanHarris = 5;
    // Get static field: static public UnityEngine.FFTWindow BlackmanHarris
    static UnityEngine::FFTWindow _get_BlackmanHarris();
    // Set static field: static public UnityEngine.FFTWindow BlackmanHarris
    static void _set_BlackmanHarris(UnityEngine::FFTWindow value);
  }; // UnityEngine.FFTWindow
  #pragma pack(pop)
  static check_size<sizeof(FFTWindow), 0 + sizeof(int)> __UnityEngine_FFTWindowSizeCheck;
  static_assert(sizeof(FFTWindow) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::FFTWindow, "UnityEngine", "FFTWindow");
