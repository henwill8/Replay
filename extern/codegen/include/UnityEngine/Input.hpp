// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: KeyCode
  struct KeyCode;
  // Forward declaring type: Touch
  struct Touch;
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: IMECompositionMode
  struct IMECompositionMode;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Input
  // [] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: CDB240
  class Input : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Input
    Input() noexcept {}
    // static private System.Boolean GetKeyInt(UnityEngine.KeyCode key)
    // Offset: 0x22D8BBC
    static bool GetKeyInt(UnityEngine::KeyCode key);
    // static private System.Boolean GetKeyUpInt(UnityEngine.KeyCode key)
    // Offset: 0x22D8BFC
    static bool GetKeyUpInt(UnityEngine::KeyCode key);
    // static private System.Boolean GetKeyDownInt(UnityEngine.KeyCode key)
    // Offset: 0x22D8C3C
    static bool GetKeyDownInt(UnityEngine::KeyCode key);
    // static private System.Boolean GetKeyDownString(System.String name)
    // Offset: 0x22D8C7C
    static bool GetKeyDownString(::Il2CppString* name);
    // static public System.Single GetAxis(System.String axisName)
    // Offset: 0x22D8CBC
    static float GetAxis(::Il2CppString* axisName);
    // static public System.Single GetAxisRaw(System.String axisName)
    // Offset: 0x22D8CFC
    static float GetAxisRaw(::Il2CppString* axisName);
    // static public System.Boolean GetButton(System.String buttonName)
    // Offset: 0x22D8D3C
    static bool GetButton(::Il2CppString* buttonName);
    // static public System.Boolean GetButtonDown(System.String buttonName)
    // Offset: 0x22D8D7C
    static bool GetButtonDown(::Il2CppString* buttonName);
    // static public System.Boolean GetMouseButton(System.Int32 button)
    // Offset: 0x22D8DBC
    static bool GetMouseButton(int button);
    // static public System.Boolean GetMouseButtonDown(System.Int32 button)
    // Offset: 0x22D8DFC
    static bool GetMouseButtonDown(int button);
    // static public System.Boolean GetMouseButtonUp(System.Int32 button)
    // Offset: 0x22D8E3C
    static bool GetMouseButtonUp(int button);
    // static public UnityEngine.Touch GetTouch(System.Int32 index)
    // Offset: 0x22D8E7C
    static UnityEngine::Touch GetTouch(int index);
    // static public System.Boolean GetKey(UnityEngine.KeyCode key)
    // Offset: 0x22D8F48
    static bool GetKey(UnityEngine::KeyCode key);
    // static public System.Boolean GetKeyUp(UnityEngine.KeyCode key)
    // Offset: 0x22D8F88
    static bool GetKeyUp(UnityEngine::KeyCode key);
    // static public System.Boolean GetKeyDown(UnityEngine.KeyCode key)
    // Offset: 0x22D8FC8
    static bool GetKeyDown(UnityEngine::KeyCode key);
    // static public System.Boolean GetKeyDown(System.String name)
    // Offset: 0x22D9008
    static bool GetKeyDown(::Il2CppString* name);
    // static public System.Boolean get_anyKeyDown()
    // Offset: 0x22D9048
    static bool get_anyKeyDown();
    // static public UnityEngine.Vector3 get_mousePosition()
    // Offset: 0x22D907C
    static UnityEngine::Vector3 get_mousePosition();
    // static public UnityEngine.Vector2 get_mouseScrollDelta()
    // Offset: 0x22D9114
    static UnityEngine::Vector2 get_mouseScrollDelta();
    // static public UnityEngine.IMECompositionMode get_imeCompositionMode()
    // Offset: 0x22D919C
    static UnityEngine::IMECompositionMode get_imeCompositionMode();
    // static public System.Void set_imeCompositionMode(UnityEngine.IMECompositionMode value)
    // Offset: 0x22D91D0
    static void set_imeCompositionMode(UnityEngine::IMECompositionMode value);
    // static public System.String get_compositionString()
    // Offset: 0x22D9210
    static ::Il2CppString* get_compositionString();
    // static public UnityEngine.Vector2 get_compositionCursorPos()
    // Offset: 0x22D9244
    static UnityEngine::Vector2 get_compositionCursorPos();
    // static public System.Void set_compositionCursorPos(UnityEngine.Vector2 value)
    // Offset: 0x22D92CC
    static void set_compositionCursorPos(UnityEngine::Vector2 value);
    // static public System.Boolean get_mousePresent()
    // Offset: 0x22D9350
    static bool get_mousePresent();
    // static public System.Int32 get_touchCount()
    // Offset: 0x22D9384
    static int get_touchCount();
    // static public System.Boolean get_touchSupported()
    // Offset: 0x22D93B8
    static bool get_touchSupported();
    // static private System.Void GetTouch_Injected(System.Int32 index, out UnityEngine.Touch ret)
    // Offset: 0x22D8EF8
    static void GetTouch_Injected(int index, UnityEngine::Touch& ret);
    // static private System.Void get_mousePosition_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x22D90D4
    static void get_mousePosition_Injected(UnityEngine::Vector3& ret);
    // static private System.Void get_mouseScrollDelta_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x22D915C
    static void get_mouseScrollDelta_Injected(UnityEngine::Vector2& ret);
    // static private System.Void get_compositionCursorPos_Injected(out UnityEngine.Vector2 ret)
    // Offset: 0x22D928C
    static void get_compositionCursorPos_Injected(UnityEngine::Vector2& ret);
    // static private System.Void set_compositionCursorPos_Injected(ref UnityEngine.Vector2 value)
    // Offset: 0x22D9310
    static void set_compositionCursorPos_Injected(UnityEngine::Vector2& value);
  }; // UnityEngine.Input
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Input*, "UnityEngine", "Input");
