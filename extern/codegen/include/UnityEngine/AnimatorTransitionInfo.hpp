// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Autogenerated type: UnityEngine.AnimatorTransitionInfo
  struct AnimatorTransitionInfo : public System::ValueType {
    public:
    // private System.Int32 m_FullPath
    // Offset: 0x0
    int m_FullPath;
    // private System.Int32 m_UserName
    // Offset: 0x4
    int m_UserName;
    // private System.Int32 m_Name
    // Offset: 0x8
    int m_Name;
    // private System.Boolean m_HasFixedDuration
    // Offset: 0xC
    bool m_HasFixedDuration;
    // private System.Single m_Duration
    // Offset: 0x10
    float m_Duration;
    // private System.Single m_NormalizedTime
    // Offset: 0x14
    float m_NormalizedTime;
    // private System.Boolean m_AnyState
    // Offset: 0x18
    bool m_AnyState;
    // private System.Int32 m_TransitionType
    // Offset: 0x1C
    int m_TransitionType;
    // Creating value type constructor for type: AnimatorTransitionInfo
    constexpr AnimatorTransitionInfo(int m_FullPath_ = {}, int m_UserName_ = {}, int m_Name_ = {}, bool m_HasFixedDuration_ = {}, float m_Duration_ = {}, float m_NormalizedTime_ = {}, bool m_AnyState_ = {}, int m_TransitionType_ = {}) noexcept : m_FullPath{m_FullPath_}, m_UserName{m_UserName_}, m_Name{m_Name_}, m_HasFixedDuration{m_HasFixedDuration_}, m_Duration{m_Duration_}, m_NormalizedTime{m_NormalizedTime_}, m_AnyState{m_AnyState_}, m_TransitionType{m_TransitionType_} {}
  }; // UnityEngine.AnimatorTransitionInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::AnimatorTransitionInfo, "UnityEngine", "AnimatorTransitionInfo");
#pragma pack(pop)
