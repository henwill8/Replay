// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Playables.INotificationReceiver
#include "UnityEngine/Playables/INotificationReceiver.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Timeline
namespace UnityEngine::Timeline {
  // Forward declaring type: SignalAsset
  class SignalAsset;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: UnityEngine::Playables
namespace UnityEngine::Playables {
  // Forward declaring type: Playable
  struct Playable;
  // Forward declaring type: INotification
  class INotification;
}
// Completed forward declares
// Type namespace: UnityEngine.Timeline
namespace UnityEngine::Timeline {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Timeline.SignalReceiver
  // [] Offset: FFFFFFFF
  class SignalReceiver : public UnityEngine::MonoBehaviour/*, public UnityEngine::Playables::INotificationReceiver*/ {
    public:
    // Nested type: UnityEngine::Timeline::SignalReceiver::EventKeyValue
    class EventKeyValue;
    // private UnityEngine.Timeline.SignalReceiver/EventKeyValue m_Events
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::Timeline::SignalReceiver::EventKeyValue* m_Events;
    // Field size check
    static_assert(sizeof(UnityEngine::Timeline::SignalReceiver::EventKeyValue*) == 0x8);
    // Creating value type constructor for type: SignalReceiver
    SignalReceiver(UnityEngine::Timeline::SignalReceiver::EventKeyValue* m_Events_ = {}) noexcept : m_Events{m_Events_} {}
    // Creating interface conversion operator: operator UnityEngine::Playables::INotificationReceiver
    operator UnityEngine::Playables::INotificationReceiver() noexcept {
      return *reinterpret_cast<UnityEngine::Playables::INotificationReceiver*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void AddReaction(UnityEngine.Timeline.SignalAsset asset, UnityEngine.Events.UnityEvent reaction)
    // Offset: 0x173647C
    void AddReaction(UnityEngine::Timeline::SignalAsset* asset, UnityEngine::Events::UnityEvent* reaction);
    // public System.Int32 AddEmptyReaction(UnityEngine.Events.UnityEvent reaction)
    // Offset: 0x173662C
    int AddEmptyReaction(UnityEngine::Events::UnityEvent* reaction);
    // public System.Void Remove(UnityEngine.Timeline.SignalAsset asset)
    // Offset: 0x17366A8
    void Remove(UnityEngine::Timeline::SignalAsset* asset);
    // public System.Collections.Generic.IEnumerable`1<UnityEngine.Timeline.SignalAsset> GetRegisteredSignals()
    // Offset: 0x1736824
    System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::SignalAsset*>* GetRegisteredSignals();
    // public UnityEngine.Events.UnityEvent GetReaction(UnityEngine.Timeline.SignalAsset key)
    // Offset: 0x1736840
    UnityEngine::Events::UnityEvent* GetReaction(UnityEngine::Timeline::SignalAsset* key);
    // public System.Int32 Count()
    // Offset: 0x173687C
    int Count();
    // public System.Void ChangeSignalAtIndex(System.Int32 idx, UnityEngine.Timeline.SignalAsset newKey)
    // Offset: 0x17368D4
    void ChangeSignalAtIndex(int idx, UnityEngine::Timeline::SignalAsset* newKey);
    // public System.Void RemoveAtIndex(System.Int32 idx)
    // Offset: 0x1736B24
    void RemoveAtIndex(int idx);
    // public System.Void ChangeReactionAtIndex(System.Int32 idx, UnityEngine.Events.UnityEvent reaction)
    // Offset: 0x1736C68
    void ChangeReactionAtIndex(int idx, UnityEngine::Events::UnityEvent* reaction);
    // public UnityEngine.Events.UnityEvent GetReactionAtIndex(System.Int32 idx)
    // Offset: 0x1736D24
    UnityEngine::Events::UnityEvent* GetReactionAtIndex(int idx);
    // public UnityEngine.Timeline.SignalAsset GetSignalAssetAtIndex(System.Int32 idx)
    // Offset: 0x1736DE4
    UnityEngine::Timeline::SignalAsset* GetSignalAssetAtIndex(int idx);
    // private System.Void OnEnable()
    // Offset: 0x1736EA4
    void OnEnable();
    // public System.Void OnNotify(UnityEngine.Playables.Playable origin, UnityEngine.Playables.INotification notification, System.Object context)
    // Offset: 0x173628C
    // Implemented from: UnityEngine.Playables.INotificationReceiver
    // Base method: System.Void INotificationReceiver::OnNotify(UnityEngine.Playables.Playable origin, UnityEngine.Playables.INotification notification, System.Object context)
    void OnNotify(UnityEngine::Playables::Playable origin, UnityEngine::Playables::INotification* notification, ::Il2CppObject* context);
    // public System.Void .ctor()
    // Offset: 0x1736EA8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SignalReceiver* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SignalReceiver*, creationType>()));
    }
  }; // UnityEngine.Timeline.SignalReceiver
  #pragma pack(pop)
  static check_size<sizeof(SignalReceiver), 24 + sizeof(UnityEngine::Timeline::SignalReceiver::EventKeyValue*)> __UnityEngine_Timeline_SignalReceiverSizeCheck;
  static_assert(sizeof(SignalReceiver) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Timeline::SignalReceiver*, "UnityEngine.Timeline", "SignalReceiver");
