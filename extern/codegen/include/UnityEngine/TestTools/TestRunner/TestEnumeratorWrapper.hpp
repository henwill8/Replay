// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: NUnit::Framework::Internal
namespace NUnit::Framework::Internal {
  // Forward declaring type: TestMethod
  class TestMethod;
  // Forward declaring type: ITestExecutionContext
  class ITestExecutionContext;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: UnityEngine.TestTools.TestRunner
namespace UnityEngine::TestTools::TestRunner {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TestTools.TestRunner.TestEnumeratorWrapper
  // [] Offset: FFFFFFFF
  class TestEnumeratorWrapper : public ::Il2CppObject {
    public:
    // private readonly NUnit.Framework.Internal.TestMethod m_TestMethod
    // Size: 0x8
    // Offset: 0x10
    NUnit::Framework::Internal::TestMethod* m_TestMethod;
    // Field size check
    static_assert(sizeof(NUnit::Framework::Internal::TestMethod*) == 0x8);
    // Creating value type constructor for type: TestEnumeratorWrapper
    TestEnumeratorWrapper(NUnit::Framework::Internal::TestMethod* m_TestMethod_ = {}) noexcept : m_TestMethod{m_TestMethod_} {}
    // Creating conversion operator: operator NUnit::Framework::Internal::TestMethod*
    constexpr operator NUnit::Framework::Internal::TestMethod*() const noexcept {
      return m_TestMethod;
    }
    // public System.Void .ctor(NUnit.Framework.Internal.TestMethod testMethod)
    // Offset: 0x1337214
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TestEnumeratorWrapper* New_ctor(NUnit::Framework::Internal::TestMethod* testMethod) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::TestEnumeratorWrapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TestEnumeratorWrapper*, creationType>(testMethod)));
    }
    // public System.Collections.IEnumerator GetEnumerator(NUnit.Framework.Internal.ITestExecutionContext context)
    // Offset: 0x1337248
    System::Collections::IEnumerator* GetEnumerator(NUnit::Framework::Internal::ITestExecutionContext* context);
    // private System.Collections.IEnumerator HandleEnumerableTest(NUnit.Framework.Internal.ITestExecutionContext context)
    // Offset: 0x133F508
    System::Collections::IEnumerator* HandleEnumerableTest(NUnit::Framework::Internal::ITestExecutionContext* context);
  }; // UnityEngine.TestTools.TestRunner.TestEnumeratorWrapper
  #pragma pack(pop)
  static check_size<sizeof(TestEnumeratorWrapper), 16 + sizeof(NUnit::Framework::Internal::TestMethod*)> __UnityEngine_TestTools_TestRunner_TestEnumeratorWrapperSizeCheck;
  static_assert(sizeof(TestEnumeratorWrapper) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::TestTools::TestRunner::TestEnumeratorWrapper*, "UnityEngine.TestTools.TestRunner", "TestEnumeratorWrapper");
