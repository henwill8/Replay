// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::TestTools::TestRunner
namespace UnityEngine::TestTools::TestRunner {
  // Forward declaring type: TestStartedEvent
  class TestStartedEvent;
  // Forward declaring type: TestFinishedEvent
  class TestFinishedEvent;
  // Forward declaring type: RunStartedEvent
  class RunStartedEvent;
  // Forward declaring type: RunFinishedEvent
  class RunFinishedEvent;
  // Forward declaring type: PlaymodeTestsControllerSettings
  class PlaymodeTestsControllerSettings;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::TestRunner::NUnitExtensions::Runner
namespace UnityEngine::TestRunner::NUnitExtensions::Runner {
  // Forward declaring type: UnityTestAssemblyRunner
  class UnityTestAssemblyRunner;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: UnityEngine.TestTools.TestRunner
namespace UnityEngine::TestTools::TestRunner {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TestTools.TestRunner.PlaymodeTestsController
  // [] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: D58CBC
  class PlaymodeTestsController : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12
    class $Start$d__12;
    // Nested type: UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15
    class $TestRunnerCoroutine$d__15;
    // Nested type: UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c
    class $$c;
    // Nested type: UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16
    class $Run$d__16;
    // private System.Collections.IEnumerator m_TestSteps
    // Size: 0x8
    // Offset: 0x18
    System::Collections::IEnumerator* m_TestSteps;
    // Field size check
    static_assert(sizeof(System::Collections::IEnumerator*) == 0x8);
    // private System.Collections.Generic.List`1<System.String> m_AssembliesWithTests
    // Size: 0x8
    // Offset: 0x20
    System::Collections::Generic::List_1<::Il2CppString*>* m_AssembliesWithTests;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<::Il2CppString*>*) == 0x8);
    // UnityEngine.TestTools.TestRunner.TestStartedEvent testStartedEvent
    // Size: 0x8
    // Offset: 0x28
    UnityEngine::TestTools::TestRunner::TestStartedEvent* testStartedEvent;
    // Field size check
    static_assert(sizeof(UnityEngine::TestTools::TestRunner::TestStartedEvent*) == 0x8);
    // UnityEngine.TestTools.TestRunner.TestFinishedEvent testFinishedEvent
    // Size: 0x8
    // Offset: 0x30
    UnityEngine::TestTools::TestRunner::TestFinishedEvent* testFinishedEvent;
    // Field size check
    static_assert(sizeof(UnityEngine::TestTools::TestRunner::TestFinishedEvent*) == 0x8);
    // UnityEngine.TestTools.TestRunner.RunStartedEvent runStartedEvent
    // Size: 0x8
    // Offset: 0x38
    UnityEngine::TestTools::TestRunner::RunStartedEvent* runStartedEvent;
    // Field size check
    static_assert(sizeof(UnityEngine::TestTools::TestRunner::RunStartedEvent*) == 0x8);
    // UnityEngine.TestTools.TestRunner.RunFinishedEvent runFinishedEvent
    // Size: 0x8
    // Offset: 0x40
    UnityEngine::TestTools::TestRunner::RunFinishedEvent* runFinishedEvent;
    // Field size check
    static_assert(sizeof(UnityEngine::TestTools::TestRunner::RunFinishedEvent*) == 0x8);
    // public UnityEngine.TestTools.TestRunner.PlaymodeTestsControllerSettings settings
    // Size: 0x8
    // Offset: 0x48
    UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings* settings;
    // Field size check
    static_assert(sizeof(UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings*) == 0x8);
    // UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner m_Runner
    // Size: 0x8
    // Offset: 0x50
    UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner* m_Runner;
    // Field size check
    static_assert(sizeof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner*) == 0x8);
    // Creating value type constructor for type: PlaymodeTestsController
    PlaymodeTestsController(System::Collections::IEnumerator* m_TestSteps_ = {}, System::Collections::Generic::List_1<::Il2CppString*>* m_AssembliesWithTests_ = {}, UnityEngine::TestTools::TestRunner::TestStartedEvent* testStartedEvent_ = {}, UnityEngine::TestTools::TestRunner::TestFinishedEvent* testFinishedEvent_ = {}, UnityEngine::TestTools::TestRunner::RunStartedEvent* runStartedEvent_ = {}, UnityEngine::TestTools::TestRunner::RunFinishedEvent* runFinishedEvent_ = {}, UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings* settings_ = {}, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner* m_Runner_ = {}) noexcept : m_TestSteps{m_TestSteps_}, m_AssembliesWithTests{m_AssembliesWithTests_}, testStartedEvent{testStartedEvent_}, testFinishedEvent{testFinishedEvent_}, runStartedEvent{runStartedEvent_}, runFinishedEvent{runFinishedEvent_}, settings{settings_}, m_Runner{m_Runner_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // static field const value: static System.String kPlaymodeTestControllerName
    static constexpr const char* kPlaymodeTestControllerName = "Code-based tests runner";
    // Get static field: static System.String kPlaymodeTestControllerName
    static ::Il2CppString* _get_kPlaymodeTestControllerName();
    // Set static field: static System.String kPlaymodeTestControllerName
    static void _set_kPlaymodeTestControllerName(::Il2CppString* value);
    // public System.Collections.Generic.List`1<System.String> get_AssembliesWithTests()
    // Offset: 0x133E318
    System::Collections::Generic::List_1<::Il2CppString*>* get_AssembliesWithTests();
    // public System.Void set_AssembliesWithTests(System.Collections.Generic.List`1<System.String> value)
    // Offset: 0x133E320
    void set_AssembliesWithTests(System::Collections::Generic::List_1<::Il2CppString*>* value);
    // public System.Collections.IEnumerator Start()
    // Offset: 0x133E328
    System::Collections::IEnumerator* Start();
    // static System.Boolean IsControllerOnScene()
    // Offset: 0x133E3D0
    static bool IsControllerOnScene();
    // static UnityEngine.TestTools.TestRunner.PlaymodeTestsController GetController()
    // Offset: 0x133E454
    static UnityEngine::TestTools::TestRunner::PlaymodeTestsController* GetController();
    // public System.Collections.IEnumerator TestRunnerCoroutine()
    // Offset: 0x133E4B8
    System::Collections::IEnumerator* TestRunnerCoroutine();
    // public System.Collections.IEnumerator Run()
    // Offset: 0x133E560
    System::Collections::IEnumerator* Run();
    // public System.Void Cleanup()
    // Offset: 0x133E608
    void Cleanup();
    // static public System.Void TryCleanup()
    // Offset: 0x133E6DC
    static void TryCleanup();
    // public System.Void .ctor()
    // Offset: 0x133E770
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlaymodeTestsController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlaymodeTestsController*, creationType>()));
    }
  }; // UnityEngine.TestTools.TestRunner.PlaymodeTestsController
  #pragma pack(pop)
  static check_size<sizeof(PlaymodeTestsController), 80 + sizeof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestAssemblyRunner*)> __UnityEngine_TestTools_TestRunner_PlaymodeTestsControllerSizeCheck;
  static_assert(sizeof(PlaymodeTestsController) == 0x58);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::TestTools::TestRunner::PlaymodeTestsController*, "UnityEngine.TestTools.TestRunner", "PlaymodeTestsController");
