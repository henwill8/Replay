// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: DblClickSnapping because it is already included!
  // Forward declaring type: TouchScreenKeyboard
  class TouchScreenKeyboard;
  // Forward declaring type: GUIStyle
  class GUIStyle;
  // Forward declaring type: GUIContent
  class GUIContent;
  // Forward declaring type: Event
  class Event;
  // Skipping declaration: TextEditOp because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextEditor
  // [] Offset: FFFFFFFF
  class TextEditor : public ::Il2CppObject {
    public:
    // Nested type: UnityEngine::TextEditor::DblClickSnapping
    struct DblClickSnapping;
    // Nested type: UnityEngine::TextEditor::CharacterType
    struct CharacterType;
    // Nested type: UnityEngine::TextEditor::Direction
    struct Direction;
    // Nested type: UnityEngine::TextEditor::TextEditOp
    struct TextEditOp;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.TextEditor/DblClickSnapping
    // [] Offset: FFFFFFFF
    struct DblClickSnapping/*, public System::Enum*/ {
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      // Creating value type constructor for type: DblClickSnapping
      constexpr DblClickSnapping(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.TextEditor/DblClickSnapping WORDS
      static constexpr const uint8_t WORDS = 0u;
      // Get static field: static public UnityEngine.TextEditor/DblClickSnapping WORDS
      static UnityEngine::TextEditor::DblClickSnapping _get_WORDS();
      // Set static field: static public UnityEngine.TextEditor/DblClickSnapping WORDS
      static void _set_WORDS(UnityEngine::TextEditor::DblClickSnapping value);
      // static field const value: static public UnityEngine.TextEditor/DblClickSnapping PARAGRAPHS
      static constexpr const uint8_t PARAGRAPHS = 1u;
      // Get static field: static public UnityEngine.TextEditor/DblClickSnapping PARAGRAPHS
      static UnityEngine::TextEditor::DblClickSnapping _get_PARAGRAPHS();
      // Set static field: static public UnityEngine.TextEditor/DblClickSnapping PARAGRAPHS
      static void _set_PARAGRAPHS(UnityEngine::TextEditor::DblClickSnapping value);
    }; // UnityEngine.TextEditor/DblClickSnapping
    #pragma pack(pop)
    static check_size<sizeof(TextEditor::DblClickSnapping), 0 + sizeof(uint8_t)> __UnityEngine_TextEditor_DblClickSnappingSizeCheck;
    static_assert(sizeof(TextEditor::DblClickSnapping) == 0x1);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.TextEditor/TextEditOp
    // [] Offset: FFFFFFFF
    struct TextEditOp/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: TextEditOp
      constexpr TextEditOp(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveLeft
      static constexpr const int MoveLeft = 0;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveLeft
      static UnityEngine::TextEditor::TextEditOp _get_MoveLeft();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveLeft
      static void _set_MoveLeft(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveRight
      static constexpr const int MoveRight = 1;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveRight
      static UnityEngine::TextEditor::TextEditOp _get_MoveRight();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveRight
      static void _set_MoveRight(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveUp
      static constexpr const int MoveUp = 2;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveUp
      static UnityEngine::TextEditor::TextEditOp _get_MoveUp();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveUp
      static void _set_MoveUp(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveDown
      static constexpr const int MoveDown = 3;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveDown
      static UnityEngine::TextEditor::TextEditOp _get_MoveDown();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveDown
      static void _set_MoveDown(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveLineStart
      static constexpr const int MoveLineStart = 4;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveLineStart
      static UnityEngine::TextEditor::TextEditOp _get_MoveLineStart();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveLineStart
      static void _set_MoveLineStart(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveLineEnd
      static constexpr const int MoveLineEnd = 5;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveLineEnd
      static UnityEngine::TextEditor::TextEditOp _get_MoveLineEnd();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveLineEnd
      static void _set_MoveLineEnd(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveTextStart
      static constexpr const int MoveTextStart = 6;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveTextStart
      static UnityEngine::TextEditor::TextEditOp _get_MoveTextStart();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveTextStart
      static void _set_MoveTextStart(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveTextEnd
      static constexpr const int MoveTextEnd = 7;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveTextEnd
      static UnityEngine::TextEditor::TextEditOp _get_MoveTextEnd();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveTextEnd
      static void _set_MoveTextEnd(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MovePageUp
      static constexpr const int MovePageUp = 8;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MovePageUp
      static UnityEngine::TextEditor::TextEditOp _get_MovePageUp();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MovePageUp
      static void _set_MovePageUp(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MovePageDown
      static constexpr const int MovePageDown = 9;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MovePageDown
      static UnityEngine::TextEditor::TextEditOp _get_MovePageDown();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MovePageDown
      static void _set_MovePageDown(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveGraphicalLineStart
      static constexpr const int MoveGraphicalLineStart = 10;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveGraphicalLineStart
      static UnityEngine::TextEditor::TextEditOp _get_MoveGraphicalLineStart();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveGraphicalLineStart
      static void _set_MoveGraphicalLineStart(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveGraphicalLineEnd
      static constexpr const int MoveGraphicalLineEnd = 11;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveGraphicalLineEnd
      static UnityEngine::TextEditor::TextEditOp _get_MoveGraphicalLineEnd();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveGraphicalLineEnd
      static void _set_MoveGraphicalLineEnd(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveWordLeft
      static constexpr const int MoveWordLeft = 12;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveWordLeft
      static UnityEngine::TextEditor::TextEditOp _get_MoveWordLeft();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveWordLeft
      static void _set_MoveWordLeft(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveWordRight
      static constexpr const int MoveWordRight = 13;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveWordRight
      static UnityEngine::TextEditor::TextEditOp _get_MoveWordRight();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveWordRight
      static void _set_MoveWordRight(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveParagraphForward
      static constexpr const int MoveParagraphForward = 14;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveParagraphForward
      static UnityEngine::TextEditor::TextEditOp _get_MoveParagraphForward();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveParagraphForward
      static void _set_MoveParagraphForward(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveParagraphBackward
      static constexpr const int MoveParagraphBackward = 15;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveParagraphBackward
      static UnityEngine::TextEditor::TextEditOp _get_MoveParagraphBackward();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveParagraphBackward
      static void _set_MoveParagraphBackward(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveToStartOfNextWord
      static constexpr const int MoveToStartOfNextWord = 16;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveToStartOfNextWord
      static UnityEngine::TextEditor::TextEditOp _get_MoveToStartOfNextWord();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveToStartOfNextWord
      static void _set_MoveToStartOfNextWord(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp MoveToEndOfPreviousWord
      static constexpr const int MoveToEndOfPreviousWord = 17;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp MoveToEndOfPreviousWord
      static UnityEngine::TextEditor::TextEditOp _get_MoveToEndOfPreviousWord();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp MoveToEndOfPreviousWord
      static void _set_MoveToEndOfPreviousWord(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectLeft
      static constexpr const int SelectLeft = 18;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectLeft
      static UnityEngine::TextEditor::TextEditOp _get_SelectLeft();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectLeft
      static void _set_SelectLeft(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectRight
      static constexpr const int SelectRight = 19;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectRight
      static UnityEngine::TextEditor::TextEditOp _get_SelectRight();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectRight
      static void _set_SelectRight(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectUp
      static constexpr const int SelectUp = 20;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectUp
      static UnityEngine::TextEditor::TextEditOp _get_SelectUp();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectUp
      static void _set_SelectUp(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectDown
      static constexpr const int SelectDown = 21;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectDown
      static UnityEngine::TextEditor::TextEditOp _get_SelectDown();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectDown
      static void _set_SelectDown(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectTextStart
      static constexpr const int SelectTextStart = 22;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectTextStart
      static UnityEngine::TextEditor::TextEditOp _get_SelectTextStart();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectTextStart
      static void _set_SelectTextStart(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectTextEnd
      static constexpr const int SelectTextEnd = 23;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectTextEnd
      static UnityEngine::TextEditor::TextEditOp _get_SelectTextEnd();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectTextEnd
      static void _set_SelectTextEnd(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectPageUp
      static constexpr const int SelectPageUp = 24;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectPageUp
      static UnityEngine::TextEditor::TextEditOp _get_SelectPageUp();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectPageUp
      static void _set_SelectPageUp(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectPageDown
      static constexpr const int SelectPageDown = 25;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectPageDown
      static UnityEngine::TextEditor::TextEditOp _get_SelectPageDown();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectPageDown
      static void _set_SelectPageDown(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp ExpandSelectGraphicalLineStart
      static constexpr const int ExpandSelectGraphicalLineStart = 26;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp ExpandSelectGraphicalLineStart
      static UnityEngine::TextEditor::TextEditOp _get_ExpandSelectGraphicalLineStart();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp ExpandSelectGraphicalLineStart
      static void _set_ExpandSelectGraphicalLineStart(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp ExpandSelectGraphicalLineEnd
      static constexpr const int ExpandSelectGraphicalLineEnd = 27;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp ExpandSelectGraphicalLineEnd
      static UnityEngine::TextEditor::TextEditOp _get_ExpandSelectGraphicalLineEnd();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp ExpandSelectGraphicalLineEnd
      static void _set_ExpandSelectGraphicalLineEnd(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectGraphicalLineStart
      static constexpr const int SelectGraphicalLineStart = 28;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectGraphicalLineStart
      static UnityEngine::TextEditor::TextEditOp _get_SelectGraphicalLineStart();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectGraphicalLineStart
      static void _set_SelectGraphicalLineStart(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectGraphicalLineEnd
      static constexpr const int SelectGraphicalLineEnd = 29;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectGraphicalLineEnd
      static UnityEngine::TextEditor::TextEditOp _get_SelectGraphicalLineEnd();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectGraphicalLineEnd
      static void _set_SelectGraphicalLineEnd(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectWordLeft
      static constexpr const int SelectWordLeft = 30;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectWordLeft
      static UnityEngine::TextEditor::TextEditOp _get_SelectWordLeft();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectWordLeft
      static void _set_SelectWordLeft(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectWordRight
      static constexpr const int SelectWordRight = 31;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectWordRight
      static UnityEngine::TextEditor::TextEditOp _get_SelectWordRight();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectWordRight
      static void _set_SelectWordRight(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectToEndOfPreviousWord
      static constexpr const int SelectToEndOfPreviousWord = 32;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectToEndOfPreviousWord
      static UnityEngine::TextEditor::TextEditOp _get_SelectToEndOfPreviousWord();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectToEndOfPreviousWord
      static void _set_SelectToEndOfPreviousWord(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectToStartOfNextWord
      static constexpr const int SelectToStartOfNextWord = 33;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectToStartOfNextWord
      static UnityEngine::TextEditor::TextEditOp _get_SelectToStartOfNextWord();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectToStartOfNextWord
      static void _set_SelectToStartOfNextWord(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectParagraphBackward
      static constexpr const int SelectParagraphBackward = 34;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectParagraphBackward
      static UnityEngine::TextEditor::TextEditOp _get_SelectParagraphBackward();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectParagraphBackward
      static void _set_SelectParagraphBackward(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectParagraphForward
      static constexpr const int SelectParagraphForward = 35;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectParagraphForward
      static UnityEngine::TextEditor::TextEditOp _get_SelectParagraphForward();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectParagraphForward
      static void _set_SelectParagraphForward(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp Delete
      static constexpr const int Delete = 36;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp Delete
      static UnityEngine::TextEditor::TextEditOp _get_Delete();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp Delete
      static void _set_Delete(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp Backspace
      static constexpr const int Backspace = 37;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp Backspace
      static UnityEngine::TextEditor::TextEditOp _get_Backspace();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp Backspace
      static void _set_Backspace(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp DeleteWordBack
      static constexpr const int DeleteWordBack = 38;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp DeleteWordBack
      static UnityEngine::TextEditor::TextEditOp _get_DeleteWordBack();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp DeleteWordBack
      static void _set_DeleteWordBack(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp DeleteWordForward
      static constexpr const int DeleteWordForward = 39;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp DeleteWordForward
      static UnityEngine::TextEditor::TextEditOp _get_DeleteWordForward();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp DeleteWordForward
      static void _set_DeleteWordForward(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp DeleteLineBack
      static constexpr const int DeleteLineBack = 40;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp DeleteLineBack
      static UnityEngine::TextEditor::TextEditOp _get_DeleteLineBack();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp DeleteLineBack
      static void _set_DeleteLineBack(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp Cut
      static constexpr const int Cut = 41;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp Cut
      static UnityEngine::TextEditor::TextEditOp _get_Cut();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp Cut
      static void _set_Cut(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp Copy
      static constexpr const int Copy = 42;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp Copy
      static UnityEngine::TextEditor::TextEditOp _get_Copy();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp Copy
      static void _set_Copy(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp Paste
      static constexpr const int Paste = 43;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp Paste
      static UnityEngine::TextEditor::TextEditOp _get_Paste();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp Paste
      static void _set_Paste(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectAll
      static constexpr const int SelectAll = 44;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectAll
      static UnityEngine::TextEditor::TextEditOp _get_SelectAll();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectAll
      static void _set_SelectAll(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp SelectNone
      static constexpr const int SelectNone = 45;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp SelectNone
      static UnityEngine::TextEditor::TextEditOp _get_SelectNone();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp SelectNone
      static void _set_SelectNone(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp ScrollStart
      static constexpr const int ScrollStart = 46;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp ScrollStart
      static UnityEngine::TextEditor::TextEditOp _get_ScrollStart();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp ScrollStart
      static void _set_ScrollStart(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp ScrollEnd
      static constexpr const int ScrollEnd = 47;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp ScrollEnd
      static UnityEngine::TextEditor::TextEditOp _get_ScrollEnd();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp ScrollEnd
      static void _set_ScrollEnd(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp ScrollPageUp
      static constexpr const int ScrollPageUp = 48;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp ScrollPageUp
      static UnityEngine::TextEditor::TextEditOp _get_ScrollPageUp();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp ScrollPageUp
      static void _set_ScrollPageUp(UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/TextEditOp ScrollPageDown
      static constexpr const int ScrollPageDown = 49;
      // Get static field: static public UnityEngine.TextEditor/TextEditOp ScrollPageDown
      static UnityEngine::TextEditor::TextEditOp _get_ScrollPageDown();
      // Set static field: static public UnityEngine.TextEditor/TextEditOp ScrollPageDown
      static void _set_ScrollPageDown(UnityEngine::TextEditor::TextEditOp value);
    }; // UnityEngine.TextEditor/TextEditOp
    #pragma pack(pop)
    static check_size<sizeof(TextEditor::TextEditOp), 0 + sizeof(int)> __UnityEngine_TextEditor_TextEditOpSizeCheck;
    static_assert(sizeof(TextEditor::TextEditOp) == 0x4);
    // public UnityEngine.TouchScreenKeyboard keyboardOnScreen
    // Size: 0x8
    // Offset: 0x10
    UnityEngine::TouchScreenKeyboard* keyboardOnScreen;
    // Field size check
    static_assert(sizeof(UnityEngine::TouchScreenKeyboard*) == 0x8);
    // public System.Int32 controlID
    // Size: 0x4
    // Offset: 0x18
    int controlID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: controlID and: style
    char __padding1[0x4] = {};
    // public UnityEngine.GUIStyle style
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::GUIStyle* style;
    // Field size check
    static_assert(sizeof(UnityEngine::GUIStyle*) == 0x8);
    // public System.Boolean multiline
    // Size: 0x1
    // Offset: 0x28
    bool multiline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean hasHorizontalCursorPos
    // Size: 0x1
    // Offset: 0x29
    bool hasHorizontalCursorPos;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean isPasswordField
    // Size: 0x1
    // Offset: 0x2A
    bool isPasswordField;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [VisibleToOtherModulesAttribute] Offset: 0xCD840C
    // System.Boolean m_HasFocus
    // Size: 0x1
    // Offset: 0x2B
    bool m_HasFocus;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public UnityEngine.Vector2 scrollOffset
    // Size: 0x8
    // Offset: 0x2C
    UnityEngine::Vector2 scrollOffset;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector2) == 0x8);
    // Padding between fields: scrollOffset and: m_Content
    char __padding7[0x4] = {};
    // private UnityEngine.GUIContent m_Content
    // Size: 0x8
    // Offset: 0x38
    UnityEngine::GUIContent* m_Content;
    // Field size check
    static_assert(sizeof(UnityEngine::GUIContent*) == 0x8);
    // private UnityEngine.Rect m_Position
    // Size: 0x10
    // Offset: 0x40
    UnityEngine::Rect m_Position;
    // Field size check
    static_assert(sizeof(UnityEngine::Rect) == 0x10);
    // private System.Int32 m_CursorIndex
    // Size: 0x4
    // Offset: 0x50
    int m_CursorIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_SelectIndex
    // Size: 0x4
    // Offset: 0x54
    int m_SelectIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean m_RevealCursor
    // Size: 0x1
    // Offset: 0x58
    bool m_RevealCursor;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_RevealCursor and: graphicalCursorPos
    char __padding12[0x3] = {};
    // public UnityEngine.Vector2 graphicalCursorPos
    // Size: 0x8
    // Offset: 0x5C
    UnityEngine::Vector2 graphicalCursorPos;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector2) == 0x8);
    // public UnityEngine.Vector2 graphicalSelectCursorPos
    // Size: 0x8
    // Offset: 0x64
    UnityEngine::Vector2 graphicalSelectCursorPos;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector2) == 0x8);
    // private System.Boolean m_MouseDragSelectsWholeWords
    // Size: 0x1
    // Offset: 0x6C
    bool m_MouseDragSelectsWholeWords;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_MouseDragSelectsWholeWords and: m_DblClickInitPos
    char __padding15[0x3] = {};
    // private System.Int32 m_DblClickInitPos
    // Size: 0x4
    // Offset: 0x70
    int m_DblClickInitPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.TextEditor/DblClickSnapping m_DblClickSnap
    // Size: 0x1
    // Offset: 0x74
    UnityEngine::TextEditor::DblClickSnapping m_DblClickSnap;
    // Field size check
    static_assert(sizeof(UnityEngine::TextEditor::DblClickSnapping) == 0x1);
    // private System.Boolean m_bJustSelected
    // Size: 0x1
    // Offset: 0x75
    bool m_bJustSelected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_bJustSelected and: m_iAltCursorPos
    char __padding18[0x2] = {};
    // private System.Int32 m_iAltCursorPos
    // Size: 0x4
    // Offset: 0x78
    int m_iAltCursorPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_iAltCursorPos and: oldText
    char __padding19[0x4] = {};
    // private System.String oldText
    // Size: 0x8
    // Offset: 0x80
    ::Il2CppString* oldText;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Int32 oldPos
    // Size: 0x4
    // Offset: 0x88
    int oldPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 oldSelectPos
    // Size: 0x4
    // Offset: 0x8C
    int oldSelectPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: TextEditor
    TextEditor(UnityEngine::TouchScreenKeyboard* keyboardOnScreen_ = {}, int controlID_ = {}, UnityEngine::GUIStyle* style_ = {}, bool multiline_ = {}, bool hasHorizontalCursorPos_ = {}, bool isPasswordField_ = {}, bool m_HasFocus_ = {}, UnityEngine::Vector2 scrollOffset_ = {}, UnityEngine::GUIContent* m_Content_ = {}, UnityEngine::Rect m_Position_ = {}, int m_CursorIndex_ = {}, int m_SelectIndex_ = {}, bool m_RevealCursor_ = {}, UnityEngine::Vector2 graphicalCursorPos_ = {}, UnityEngine::Vector2 graphicalSelectCursorPos_ = {}, bool m_MouseDragSelectsWholeWords_ = {}, int m_DblClickInitPos_ = {}, UnityEngine::TextEditor::DblClickSnapping m_DblClickSnap_ = {}, bool m_bJustSelected_ = {}, int m_iAltCursorPos_ = {}, ::Il2CppString* oldText_ = {}, int oldPos_ = {}, int oldSelectPos_ = {}) noexcept : keyboardOnScreen{keyboardOnScreen_}, controlID{controlID_}, style{style_}, multiline{multiline_}, hasHorizontalCursorPos{hasHorizontalCursorPos_}, isPasswordField{isPasswordField_}, m_HasFocus{m_HasFocus_}, scrollOffset{scrollOffset_}, m_Content{m_Content_}, m_Position{m_Position_}, m_CursorIndex{m_CursorIndex_}, m_SelectIndex{m_SelectIndex_}, m_RevealCursor{m_RevealCursor_}, graphicalCursorPos{graphicalCursorPos_}, graphicalSelectCursorPos{graphicalSelectCursorPos_}, m_MouseDragSelectsWholeWords{m_MouseDragSelectsWholeWords_}, m_DblClickInitPos{m_DblClickInitPos_}, m_DblClickSnap{m_DblClickSnap_}, m_bJustSelected{m_bJustSelected_}, m_iAltCursorPos{m_iAltCursorPos_}, oldText{oldText_}, oldPos{oldPos_}, oldSelectPos{oldSelectPos_} {}
    // Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Event,UnityEngine.TextEditor/TextEditOp> s_Keyactions
    static System::Collections::Generic::Dictionary_2<UnityEngine::Event*, UnityEngine::TextEditor::TextEditOp>* _get_s_Keyactions();
    // Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Event,UnityEngine.TextEditor/TextEditOp> s_Keyactions
    static void _set_s_Keyactions(System::Collections::Generic::Dictionary_2<UnityEngine::Event*, UnityEngine::TextEditor::TextEditOp>* value);
    // public System.String get_text()
    // Offset: 0x197E788
    ::Il2CppString* get_text();
    // public System.Void set_text(System.String value)
    // Offset: 0x197D1F8
    void set_text(::Il2CppString* value);
    // public UnityEngine.Rect get_position()
    // Offset: 0x1991B34
    UnityEngine::Rect get_position();
    // public System.Void set_position(UnityEngine.Rect value)
    // Offset: 0x197D2C8
    void set_position(UnityEngine::Rect value);
    // UnityEngine.Rect get_localPosition()
    // Offset: 0x1991F18
    UnityEngine::Rect get_localPosition();
    // public System.Int32 get_cursorIndex()
    // Offset: 0x1991F24
    int get_cursorIndex();
    // public System.Void set_cursorIndex(System.Int32 value)
    // Offset: 0x1991F2C
    void set_cursorIndex(int value);
    // public System.Int32 get_selectIndex()
    // Offset: 0x1991F94
    int get_selectIndex();
    // public System.Void set_selectIndex(System.Int32 value)
    // Offset: 0x1991F9C
    void set_selectIndex(int value);
    // private System.Void ClearCursorPos()
    // Offset: 0x1991FFC
    void ClearCursorPos();
    // public System.Void OnFocus()
    // Offset: 0x199211C
    void OnFocus();
    // public System.Void OnLostFocus()
    // Offset: 0x19921BC
    void OnLostFocus();
    // private System.Void GrabGraphicalCursorPos()
    // Offset: 0x199222C
    void GrabGraphicalCursorPos();
    // public System.Boolean HandleKeyEvent(UnityEngine.Event e)
    // Offset: 0x197E780
    bool HandleKeyEvent(UnityEngine::Event* e);
    // System.Boolean HandleKeyEvent(UnityEngine.Event e, System.Boolean textIsReadOnly)
    // Offset: 0x19922AC
    bool HandleKeyEvent(UnityEngine::Event* e, bool textIsReadOnly);
    // public System.Boolean DeleteLineBack()
    // Offset: 0x1992E78
    bool DeleteLineBack();
    // public System.Boolean DeleteWordBack()
    // Offset: 0x1993088
    bool DeleteWordBack();
    // public System.Boolean DeleteWordForward()
    // Offset: 0x1993204
    bool DeleteWordForward();
    // public System.Boolean Delete()
    // Offset: 0x1993444
    bool Delete();
    // public System.Boolean Backspace()
    // Offset: 0x19935B4
    bool Backspace();
    // public System.Void SelectAll()
    // Offset: 0x199216C
    void SelectAll();
    // public System.Void SelectNone()
    // Offset: 0x199373C
    void SelectNone();
    // public System.Boolean get_hasSelection()
    // Offset: 0x1992F48
    bool get_hasSelection();
    // public System.Boolean DeleteSelection()
    // Offset: 0x1992F58
    bool DeleteSelection();
    // public System.Void ReplaceSelection(System.String replace)
    // Offset: 0x197E858
    void ReplaceSelection(::Il2CppString* replace);
    // public System.Void Insert(System.Char c)
    // Offset: 0x197E7EC
    void Insert(::Il2CppChar c);
    // public System.Void MoveRight()
    // Offset: 0x199376C
    void MoveRight();
    // public System.Void MoveLeft()
    // Offset: 0x19937E8
    void MoveLeft();
    // public System.Void MoveUp()
    // Offset: 0x199384C
    void MoveUp();
    // public System.Void MoveDown()
    // Offset: 0x19938FC
    void MoveDown();
    // public System.Void MoveLineStart()
    // Offset: 0x19939D8
    void MoveLineStart();
    // public System.Void MoveLineEnd()
    // Offset: 0x1993A68
    void MoveLineEnd();
    // public System.Void MoveGraphicalLineStart()
    // Offset: 0x1993B18
    void MoveGraphicalLineStart();
    // public System.Void MoveGraphicalLineEnd()
    // Offset: 0x1993C58
    void MoveGraphicalLineEnd();
    // public System.Void MoveTextStart()
    // Offset: 0x1993D6C
    void MoveTextStart();
    // public System.Void MoveTextEnd()
    // Offset: 0x1993D98
    void MoveTextEnd();
    // private System.Int32 IndexOfEndOfLine(System.Int32 startIndex)
    // Offset: 0x1993DDC
    int IndexOfEndOfLine(int startIndex);
    // public System.Void MoveParagraphForward()
    // Offset: 0x1993E38
    void MoveParagraphForward();
    // public System.Void MoveParagraphBackward()
    // Offset: 0x1993EBC
    void MoveParagraphBackward();
    // public System.Void MoveCursorToPosition(UnityEngine.Vector2 cursorPosition)
    // Offset: 0x197E1E8
    void MoveCursorToPosition(UnityEngine::Vector2 cursorPosition);
    // protected internal System.Void MoveCursorToPosition_Internal(UnityEngine.Vector2 cursorPosition, System.Boolean shift)
    // Offset: 0x1993F48
    void MoveCursorToPosition_Internal(UnityEngine::Vector2 cursorPosition, bool shift);
    // public System.Void SelectToPosition(UnityEngine.Vector2 cursorPosition)
    // Offset: 0x197E404
    void SelectToPosition(UnityEngine::Vector2 cursorPosition);
    // public System.Void SelectLeft()
    // Offset: 0x199418C
    void SelectLeft();
    // public System.Void SelectRight()
    // Offset: 0x19941E8
    void SelectRight();
    // public System.Void SelectUp()
    // Offset: 0x1994244
    void SelectUp();
    // public System.Void SelectDown()
    // Offset: 0x19942A8
    void SelectDown();
    // public System.Void SelectTextEnd()
    // Offset: 0x1994324
    void SelectTextEnd();
    // public System.Void SelectTextStart()
    // Offset: 0x199434C
    void SelectTextStart();
    // public System.Void MouseDragSelectsWholeWords(System.Boolean on)
    // Offset: 0x197E34C
    void MouseDragSelectsWholeWords(bool on);
    // public System.Void DblClickSnap(UnityEngine.TextEditor/DblClickSnapping snapping)
    // Offset: 0x197E344
    void DblClickSnap(UnityEngine::TextEditor::DblClickSnapping snapping);
    // private System.Int32 GetGraphicalLineStart(System.Int32 p)
    // Offset: 0x1993B64
    int GetGraphicalLineStart(int p);
    // private System.Int32 GetGraphicalLineEnd(System.Int32 p)
    // Offset: 0x1993CA4
    int GetGraphicalLineEnd(int p);
    // private System.Int32 FindNextSeperator(System.Int32 startPos)
    // Offset: 0x1994354
    int FindNextSeperator(int startPos);
    // private System.Int32 FindPrevSeperator(System.Int32 startPos)
    // Offset: 0x19944F8
    int FindPrevSeperator(int startPos);
    // public System.Void MoveWordRight()
    // Offset: 0x1994598
    void MoveWordRight();
    // public System.Void MoveToStartOfNextWord()
    // Offset: 0x1994600
    void MoveToStartOfNextWord();
    // public System.Void MoveToEndOfPreviousWord()
    // Offset: 0x1994664
    void MoveToEndOfPreviousWord();
    // public System.Void SelectToStartOfNextWord()
    // Offset: 0x19946C8
    void SelectToStartOfNextWord();
    // public System.Void SelectToEndOfPreviousWord()
    // Offset: 0x1994700
    void SelectToEndOfPreviousWord();
    // private UnityEngine.TextEditor/CharacterType ClassifyChar(System.Int32 index)
    // Offset: 0x19943F8
    UnityEngine::TextEditor::CharacterType ClassifyChar(int index);
    // public System.Int32 FindStartOfNextWord(System.Int32 p)
    // Offset: 0x1993290
    int FindStartOfNextWord(int p);
    // private System.Int32 FindEndOfPreviousWord(System.Int32 p)
    // Offset: 0x1993130
    int FindEndOfPreviousWord(int p);
    // public System.Void MoveWordLeft()
    // Offset: 0x1994738
    void MoveWordLeft();
    // public System.Void SelectWordRight()
    // Offset: 0x199478C
    void SelectWordRight();
    // public System.Void SelectWordLeft()
    // Offset: 0x1994804
    void SelectWordLeft();
    // public System.Void ExpandSelectGraphicalLineStart()
    // Offset: 0x199487C
    void ExpandSelectGraphicalLineStart();
    // public System.Void ExpandSelectGraphicalLineEnd()
    // Offset: 0x19948E4
    void ExpandSelectGraphicalLineEnd();
    // public System.Void SelectGraphicalLineStart()
    // Offset: 0x199494C
    void SelectGraphicalLineStart();
    // public System.Void SelectGraphicalLineEnd()
    // Offset: 0x1994984
    void SelectGraphicalLineEnd();
    // public System.Void SelectParagraphForward()
    // Offset: 0x19949BC
    void SelectParagraphForward();
    // public System.Void SelectParagraphBackward()
    // Offset: 0x1994A54
    void SelectParagraphBackward();
    // public System.Void SelectCurrentWord()
    // Offset: 0x197E2A4
    void SelectCurrentWord();
    // private System.Int32 FindEndOfClassification(System.Int32 p, UnityEngine.TextEditor/Direction dir)
    // Offset: 0x1994074
    int FindEndOfClassification(int p, UnityEngine::TextEditor::Direction dir);
    // public System.Void SelectCurrentParagraph()
    // Offset: 0x197E368
    void SelectCurrentParagraph();
    // public System.Void UpdateScrollOffsetIfNeeded(UnityEngine.Event evt)
    // Offset: 0x197E0C0
    void UpdateScrollOffsetIfNeeded(UnityEngine::Event* evt);
    // System.Void UpdateScrollOffset()
    // Offset: 0x1991B40
    void UpdateScrollOffset();
    // public System.Void DrawCursor(System.String newText)
    // Offset: 0x197E8EC
    void DrawCursor(::Il2CppString* newText);
    // private System.Boolean PerformOperation(UnityEngine.TextEditor/TextEditOp operation, System.Boolean textIsReadOnly)
    // Offset: 0x1992AB8
    bool PerformOperation(UnityEngine::TextEditor::TextEditOp operation, bool textIsReadOnly);
    // public System.Void SaveBackup()
    // Offset: 0x197D288
    void SaveBackup();
    // public System.Boolean Cut()
    // Offset: 0x1994B0C
    bool Cut();
    // public System.Void Copy()
    // Offset: 0x1994B40
    void Copy();
    // static private System.String ReplaceNewlinesWithSpaces(System.String value)
    // Offset: 0x1994C7C
    static ::Il2CppString* ReplaceNewlinesWithSpaces(::Il2CppString* value);
    // public System.Boolean Paste()
    // Offset: 0x1994BD0
    bool Paste();
    // static private System.Void MapKey(System.String key, UnityEngine.TextEditor/TextEditOp action)
    // Offset: 0x1994D0C
    static void MapKey(::Il2CppString* key, UnityEngine::TextEditor::TextEditOp action);
    // private System.Void InitKeyActions()
    // Offset: 0x1992450
    void InitKeyActions();
    // public System.Void DetectFocusChange()
    // Offset: 0x197D3B0
    void DetectFocusChange();
    // System.Void OnDetectFocusChange()
    // Offset: 0x1994D94
    void OnDetectFocusChange();
    // System.Void OnCursorIndexChange()
    // Offset: 0x1994E44
    void OnCursorIndexChange();
    // System.Void OnSelectIndexChange()
    // Offset: 0x1994E48
    void OnSelectIndexChange();
    // private System.Void ClampTextIndex(ref System.Int32 index)
    // Offset: 0x1994E4C
    void ClampTextIndex(int& index);
    // private System.Void EnsureValidCodePointIndex(ref System.Int32 index)
    // Offset: 0x1991AF0
    void EnsureValidCodePointIndex(int& index);
    // private System.Boolean IsValidCodePointIndex(System.Int32 index)
    // Offset: 0x1994EEC
    bool IsValidCodePointIndex(int index);
    // private System.Int32 PreviousCodePointIndex(System.Int32 index)
    // Offset: 0x199366C
    int PreviousCodePointIndex(int index);
    // private System.Int32 NextCodePointIndex(System.Int32 index)
    // Offset: 0x19934E0
    int NextCodePointIndex(int index);
    // public System.Void .ctor()
    // Offset: 0x199200C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextEditor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextEditor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextEditor*, creationType>()));
    }
  }; // UnityEngine.TextEditor
  #pragma pack(pop)
  static check_size<sizeof(TextEditor), 140 + sizeof(int)> __UnityEngine_TextEditorSizeCheck;
  static_assert(sizeof(TextEditor) == 0x90);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::TextEditor*, "UnityEngine", "TextEditor");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::TextEditor::DblClickSnapping, "UnityEngine", "TextEditor/DblClickSnapping");
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::TextEditor::TextEditOp, "UnityEngine", "TextEditor/TextEditOp");
