// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.Poly2Tri.TriangulationMode
#include "UnityEngine/ProBuilder/Poly2Tri/TriangulationMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ProBuilder::Poly2Tri
namespace UnityEngine::ProBuilder::Poly2Tri {
  // Forward declaring type: TriangulationDebugContext
  class TriangulationDebugContext;
  // Forward declaring type: DelaunayTriangle
  class DelaunayTriangle;
  // Forward declaring type: TriangulationPoint
  class TriangulationPoint;
  // Forward declaring type: Triangulatable
  class Triangulatable;
  // Forward declaring type: TriangulationConstraint
  class TriangulationConstraint;
  // Forward declaring type: DTSweepDebugContext
  class DTSweepDebugContext;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.ProBuilder.Poly2Tri
namespace UnityEngine::ProBuilder::Poly2Tri {
  // Size: 0x3D
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ProBuilder.Poly2Tri.TriangulationContext
  // [] Offset: FFFFFFFF
  class TriangulationContext : public ::Il2CppObject {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xD23B3C
    // private UnityEngine.ProBuilder.Poly2Tri.TriangulationDebugContext <DebugContext>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    UnityEngine::ProBuilder::Poly2Tri::TriangulationDebugContext* DebugContext;
    // Field size check
    static_assert(sizeof(UnityEngine::ProBuilder::Poly2Tri::TriangulationDebugContext*) == 0x8);
    // public readonly System.Collections.Generic.List`1<UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle> Triangles
    // Size: 0x8
    // Offset: 0x18
    System::Collections::Generic::List_1<UnityEngine::ProBuilder::Poly2Tri::DelaunayTriangle*>* Triangles;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::ProBuilder::Poly2Tri::DelaunayTriangle*>*) == 0x8);
    // public readonly System.Collections.Generic.List`1<UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint> Points
    // Size: 0x8
    // Offset: 0x20
    System::Collections::Generic::List_1<UnityEngine::ProBuilder::Poly2Tri::TriangulationPoint*>* Points;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::ProBuilder::Poly2Tri::TriangulationPoint*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD23B4C
    // private UnityEngine.ProBuilder.Poly2Tri.TriangulationMode <TriangulationMode>k__BackingField
    // Size: 0x4
    // Offset: 0x28
    UnityEngine::ProBuilder::Poly2Tri::TriangulationMode TriangulationMode;
    // Field size check
    static_assert(sizeof(UnityEngine::ProBuilder::Poly2Tri::TriangulationMode) == 0x4);
    // Padding between fields: TriangulationMode and: Triangulatable
    char __padding3[0x4] = {};
    // [CompilerGeneratedAttribute] Offset: 0xD23B5C
    // private UnityEngine.ProBuilder.Poly2Tri.Triangulatable <Triangulatable>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    UnityEngine::ProBuilder::Poly2Tri::Triangulatable* Triangulatable;
    // Field size check
    static_assert(sizeof(UnityEngine::ProBuilder::Poly2Tri::Triangulatable*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD23B6C
    // private System.Int32 <StepCount>k__BackingField
    // Size: 0x4
    // Offset: 0x38
    int StepCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xD23B7C
    // private System.Boolean <IsDebugEnabled>k__BackingField
    // Size: 0x1
    // Offset: 0x3C
    bool IsDebugEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: TriangulationContext
    TriangulationContext(UnityEngine::ProBuilder::Poly2Tri::TriangulationDebugContext* DebugContext_ = {}, System::Collections::Generic::List_1<UnityEngine::ProBuilder::Poly2Tri::DelaunayTriangle*>* Triangles_ = {}, System::Collections::Generic::List_1<UnityEngine::ProBuilder::Poly2Tri::TriangulationPoint*>* Points_ = {}, UnityEngine::ProBuilder::Poly2Tri::TriangulationMode TriangulationMode_ = {}, UnityEngine::ProBuilder::Poly2Tri::Triangulatable* Triangulatable_ = {}, int StepCount_ = {}, bool IsDebugEnabled_ = {}) noexcept : DebugContext{DebugContext_}, Triangles{Triangles_}, Points{Points_}, TriangulationMode{TriangulationMode_}, Triangulatable{Triangulatable_}, StepCount{StepCount_}, IsDebugEnabled{IsDebugEnabled_} {}
    // public UnityEngine.ProBuilder.Poly2Tri.TriangulationDebugContext get_DebugContext()
    // Offset: 0x227A5C0
    UnityEngine::ProBuilder::Poly2Tri::TriangulationDebugContext* get_DebugContext();
    // public UnityEngine.ProBuilder.Poly2Tri.TriangulationMode get_TriangulationMode()
    // Offset: 0x227A5C8
    UnityEngine::ProBuilder::Poly2Tri::TriangulationMode get_TriangulationMode();
    // protected System.Void set_TriangulationMode(UnityEngine.ProBuilder.Poly2Tri.TriangulationMode value)
    // Offset: 0x227A5D0
    void set_TriangulationMode(UnityEngine::ProBuilder::Poly2Tri::TriangulationMode value);
    // public UnityEngine.ProBuilder.Poly2Tri.Triangulatable get_Triangulatable()
    // Offset: 0x227A5D8
    UnityEngine::ProBuilder::Poly2Tri::Triangulatable* get_Triangulatable();
    // private System.Void set_Triangulatable(UnityEngine.ProBuilder.Poly2Tri.Triangulatable value)
    // Offset: 0x227A5E0
    void set_Triangulatable(UnityEngine::ProBuilder::Poly2Tri::Triangulatable* value);
    // public System.Int32 get_StepCount()
    // Offset: 0x227A5E8
    int get_StepCount();
    // private System.Void set_StepCount(System.Int32 value)
    // Offset: 0x227A5F0
    void set_StepCount(int value);
    // public System.Void Done()
    // Offset: 0x2274798
    void Done();
    // public System.Void PrepareTriangulation(UnityEngine.ProBuilder.Poly2Tri.Triangulatable t)
    // Offset: 0x2278BA8
    void PrepareTriangulation(UnityEngine::ProBuilder::Poly2Tri::Triangulatable* t);
    // public UnityEngine.ProBuilder.Poly2Tri.TriangulationConstraint NewConstraint(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint a, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint b)
    // Offset: 0xFFFFFFFF
    UnityEngine::ProBuilder::Poly2Tri::TriangulationConstraint* NewConstraint(UnityEngine::ProBuilder::Poly2Tri::TriangulationPoint* a, UnityEngine::ProBuilder::Poly2Tri::TriangulationPoint* b);
    // public System.Void Update(System.String message)
    // Offset: 0x2274B98
    void Update(::Il2CppString* message);
    // public System.Void Clear()
    // Offset: 0x22788F4
    void Clear();
    // public System.Boolean get_IsDebugEnabled()
    // Offset: 0x227A5F8
    bool get_IsDebugEnabled();
    // public UnityEngine.ProBuilder.Poly2Tri.DTSweepDebugContext get_DTDebugContext()
    // Offset: 0x22748DC
    UnityEngine::ProBuilder::Poly2Tri::DTSweepDebugContext* get_DTDebugContext();
    // protected System.Void .ctor()
    // Offset: 0x22786AC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TriangulationContext* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ProBuilder::Poly2Tri::TriangulationContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TriangulationContext*, creationType>()));
    }
  }; // UnityEngine.ProBuilder.Poly2Tri.TriangulationContext
  #pragma pack(pop)
  static check_size<sizeof(TriangulationContext), 60 + sizeof(bool)> __UnityEngine_ProBuilder_Poly2Tri_TriangulationContextSizeCheck;
  static_assert(sizeof(TriangulationContext) == 0x3D);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ProBuilder::Poly2Tri::TriangulationContext*, "UnityEngine.ProBuilder.Poly2Tri", "TriangulationContext");
