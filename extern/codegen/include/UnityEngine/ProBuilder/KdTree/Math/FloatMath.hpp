// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.KdTree.Math.TypeMath`1
#include "UnityEngine/ProBuilder/KdTree/Math/TypeMath_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.ProBuilder.KdTree.Math
namespace UnityEngine::ProBuilder::KdTree::Math {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.ProBuilder.KdTree.Math.FloatMath
  // [] Offset: FFFFFFFF
  class FloatMath : public UnityEngine::ProBuilder::KdTree::Math::TypeMath_1<float> {
    public:
    // Creating value type constructor for type: FloatMath
    FloatMath() noexcept {}
    // public System.Int32 Compare(System.Single a, System.Single b)
    // Offset: 0x22DFDCC
    int Compare(float a, float b);
    // public System.Boolean AreEqual(System.Single a, System.Single b)
    // Offset: 0x22DFDF8
    bool AreEqual(float a, float b);
    // public System.Single get_MinValue()
    // Offset: 0x22DFE04
    float get_MinValue();
    // public System.Single get_Zero()
    // Offset: 0x22DFE10
    float get_Zero();
    // public System.Single get_NegativeInfinity()
    // Offset: 0x22DFE18
    float get_NegativeInfinity();
    // public System.Single get_PositiveInfinity()
    // Offset: 0x22DFE24
    float get_PositiveInfinity();
    // public System.Single Add(System.Single a, System.Single b)
    // Offset: 0x22DFE30
    float Add(float a, float b);
    // public System.Single Subtract(System.Single a, System.Single b)
    // Offset: 0x22DFE38
    float Subtract(float a, float b);
    // public System.Single Multiply(System.Single a, System.Single b)
    // Offset: 0x22DFE40
    float Multiply(float a, float b);
    // public System.Single DistanceSquaredBetweenPoints(System.Single[] a, System.Single[] b)
    // Offset: 0x22DFE48
    float DistanceSquaredBetweenPoints(::Array<float>* a, ::Array<float>* b);
    // public System.Void .ctor()
    // Offset: 0x22DFF5C
    // Implemented from: UnityEngine.ProBuilder.KdTree.Math.TypeMath`1
    // Base method: System.Void TypeMath_1::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FloatMath* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ProBuilder::KdTree::Math::FloatMath::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FloatMath*, creationType>()));
    }
  }; // UnityEngine.ProBuilder.KdTree.Math.FloatMath
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ProBuilder::KdTree::Math::FloatMath*, "UnityEngine.ProBuilder.KdTree.Math", "FloatMath");
