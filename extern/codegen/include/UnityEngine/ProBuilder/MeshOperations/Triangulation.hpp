// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ProBuilder::MeshOperations
namespace UnityEngine::ProBuilder::MeshOperations {
}
// Forward declaring namespace: UnityEngine::ProBuilder::Poly2Tri
namespace UnityEngine::ProBuilder::Poly2Tri {
  // Forward declaring type: TriangulationContext
  class TriangulationContext;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: Vertex
  class Vertex;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: UnityEngine.ProBuilder.MeshOperations
namespace UnityEngine::ProBuilder::MeshOperations {
  // Autogenerated type: UnityEngine.ProBuilder.MeshOperations.Triangulation
  class Triangulation : public ::Il2CppObject {
    public:
    // Nested type: UnityEngine::ProBuilder::MeshOperations::Triangulation::$$c__DisplayClass7_0
    class $$c__DisplayClass7_0;
    // Nested type: UnityEngine::ProBuilder::MeshOperations::Triangulation::$$c__DisplayClass8_0
    class $$c__DisplayClass8_0;
    // Get static field: static private UnityEngine.ProBuilder.Poly2Tri.TriangulationContext s_TriangulationContext
    static UnityEngine::ProBuilder::Poly2Tri::TriangulationContext* _get_s_TriangulationContext();
    // Set static field: static private UnityEngine.ProBuilder.Poly2Tri.TriangulationContext s_TriangulationContext
    static void _set_s_TriangulationContext(UnityEngine::ProBuilder::Poly2Tri::TriangulationContext* value);
    // static private UnityEngine.ProBuilder.Poly2Tri.TriangulationContext get_triangulationContext()
    // Offset: 0x1025148
    static UnityEngine::ProBuilder::Poly2Tri::TriangulationContext* get_triangulationContext();
    // static public System.Boolean SortAndTriangulate(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, out System.Collections.Generic.List`1<System.Int32> indexes, System.Boolean convex)
    // Offset: 0x10251D8
    static bool SortAndTriangulate(System::Collections::Generic::IList_1<UnityEngine::Vector2>* points, System::Collections::Generic::List_1<int>*& indexes, bool convex);
    // static public System.Boolean TriangulateVertices(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, out System.Collections.Generic.List`1<System.Int32> triangles, System.Boolean unordered, System.Boolean convex)
    // Offset: 0x1025E68
    static bool TriangulateVertices(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Vertex*>* vertices, System::Collections::Generic::List_1<int>*& triangles, bool unordered, bool convex);
    // static public System.Boolean TriangulateVertices(UnityEngine.Vector3[] vertices, out System.Collections.Generic.List`1<System.Int32> triangles, UnityEngine.Vector3[][] holes)
    // Offset: 0x10261D4
    static bool TriangulateVertices(::Array<UnityEngine::Vector3>* vertices, System::Collections::Generic::List_1<int>*& triangles, ::Array<::Array<UnityEngine::Vector3>*>* holes);
    // static public System.Boolean TriangulateVertices(UnityEngine.Vector3[] vertices, out System.Collections.Generic.List`1<System.Int32> triangles, System.Boolean unordered, System.Boolean convex)
    // Offset: 0x102608C
    static bool TriangulateVertices(::Array<UnityEngine::Vector3>* vertices, System::Collections::Generic::List_1<int>*& triangles, bool unordered, bool convex);
    // static public System.Boolean Triangulate(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, out System.Collections.Generic.List`1<System.Int32> indexes, System.Boolean convex)
    // Offset: 0x10254A4
    static bool Triangulate(System::Collections::Generic::IList_1<UnityEngine::Vector2>* points, System::Collections::Generic::List_1<int>*& indexes, bool convex);
    // static public System.Boolean Triangulate(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Collections.Generic.IList`1<UnityEngine.Vector2>> holes, out System.Collections.Generic.List`1<System.Int32> indexes)
    // Offset: 0x10263B8
    static bool Triangulate(System::Collections::Generic::IList_1<UnityEngine::Vector2>* points, System::Collections::Generic::IList_1<System::Collections::Generic::IList_1<UnityEngine::Vector2>*>* holes, System::Collections::Generic::List_1<int>*& indexes);
  }; // UnityEngine.ProBuilder.MeshOperations.Triangulation
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ProBuilder::MeshOperations::Triangulation*, "UnityEngine.ProBuilder.MeshOperations", "Triangulation");
#pragma pack(pop)
