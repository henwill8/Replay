// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: EventSystem
  class EventSystem;
}
// Completed forward declares
// Type namespace: UnityEngine.EventSystems
namespace UnityEngine::EventSystems {
  // Size: 0x150
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.EventSystems.OVRPointerEventData
  // [] Offset: FFFFFFFF
  class OVRPointerEventData : public UnityEngine::EventSystems::PointerEventData {
    public:
    // public UnityEngine.Ray worldSpaceRay
    // Size: 0x18
    // Offset: 0x130
    UnityEngine::Ray worldSpaceRay;
    // Field size check
    static_assert(sizeof(UnityEngine::Ray) == 0x18);
    // public UnityEngine.Vector2 swipeStart
    // Size: 0x8
    // Offset: 0x148
    UnityEngine::Vector2 swipeStart;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector2) == 0x8);
    // Creating value type constructor for type: OVRPointerEventData
    OVRPointerEventData(UnityEngine::Ray worldSpaceRay_ = {}, UnityEngine::Vector2 swipeStart_ = {}) noexcept : worldSpaceRay{worldSpaceRay_}, swipeStart{swipeStart_} {}
    // public System.Void .ctor(UnityEngine.EventSystems.EventSystem eventSystem)
    // Offset: 0x22407A4
    // Implemented from: UnityEngine.EventSystems.PointerEventData
    // Base method: System.Void PointerEventData::.ctor(UnityEngine.EventSystems.EventSystem eventSystem)
    // Base method: System.Void BaseEventData::.ctor(UnityEngine.EventSystems.EventSystem eventSystem)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OVRPointerEventData* New_ctor(UnityEngine::EventSystems::EventSystem* eventSystem) {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::OVRPointerEventData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OVRPointerEventData*, creationType>(eventSystem)));
    }
    // public override System.String ToString()
    // Offset: 0x22428D0
    // Implemented from: UnityEngine.EventSystems.PointerEventData
    // Base method: System.String PointerEventData::ToString()
    ::Il2CppString* ToString();
  }; // UnityEngine.EventSystems.OVRPointerEventData
  #pragma pack(pop)
  static check_size<sizeof(OVRPointerEventData), 328 + sizeof(UnityEngine::Vector2)> __UnityEngine_EventSystems_OVRPointerEventDataSizeCheck;
  static_assert(sizeof(OVRPointerEventData) == 0x150);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::EventSystems::OVRPointerEventData*, "UnityEngine.EventSystems", "OVRPointerEventData");
