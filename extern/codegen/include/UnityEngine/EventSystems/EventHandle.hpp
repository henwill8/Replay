// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.EventSystems
namespace UnityEngine::EventSystems {
  // Autogenerated type: UnityEngine.EventSystems.EventHandle
  struct EventHandle : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: EventHandle
    constexpr EventHandle(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.EventSystems.EventHandle Unused
    static constexpr const int Unused = 0;
    // Get static field: static public UnityEngine.EventSystems.EventHandle Unused
    static UnityEngine::EventSystems::EventHandle _get_Unused();
    // Set static field: static public UnityEngine.EventSystems.EventHandle Unused
    static void _set_Unused(UnityEngine::EventSystems::EventHandle value);
    // static field const value: static public UnityEngine.EventSystems.EventHandle Used
    static constexpr const int Used = 1;
    // Get static field: static public UnityEngine.EventSystems.EventHandle Used
    static UnityEngine::EventSystems::EventHandle _get_Used();
    // Set static field: static public UnityEngine.EventSystems.EventHandle Used
    static void _set_Used(UnityEngine::EventSystems::EventHandle value);
  }; // UnityEngine.EventSystems.EventHandle
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::EventSystems::EventHandle, "UnityEngine.EventSystems", "EventHandle");
#pragma pack(pop)
