// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.LightMode
#include "UnityEngine/Experimental/GlobalIllumination/LightMode.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.LinearColor
#include "UnityEngine/Experimental/GlobalIllumination/LinearColor.hpp"
// Completed includes
// Type namespace: UnityEngine.Experimental.GlobalIllumination
namespace UnityEngine::Experimental::GlobalIllumination {
  // Autogenerated type: UnityEngine.Experimental.GlobalIllumination.DirectionalLight
  struct DirectionalLight : public System::ValueType {
    public:
    // public System.Int32 instanceID
    // Offset: 0x0
    int instanceID;
    // public System.Boolean shadow
    // Offset: 0x4
    bool shadow;
    // public UnityEngine.Experimental.GlobalIllumination.LightMode mode
    // Offset: 0x5
    UnityEngine::Experimental::GlobalIllumination::LightMode mode;
    // public UnityEngine.Vector3 direction
    // Offset: 0x8
    UnityEngine::Vector3 direction;
    // public UnityEngine.Experimental.GlobalIllumination.LinearColor color
    // Offset: 0x14
    UnityEngine::Experimental::GlobalIllumination::LinearColor color;
    // public UnityEngine.Experimental.GlobalIllumination.LinearColor indirectColor
    // Offset: 0x24
    UnityEngine::Experimental::GlobalIllumination::LinearColor indirectColor;
    // public System.Single penumbraWidthRadian
    // Offset: 0x34
    float penumbraWidthRadian;
    // Creating value type constructor for type: DirectionalLight
    constexpr DirectionalLight(int instanceID_ = {}, bool shadow_ = {}, UnityEngine::Experimental::GlobalIllumination::LightMode mode_ = {}, UnityEngine::Vector3 direction_ = {}, UnityEngine::Experimental::GlobalIllumination::LinearColor color_ = {}, UnityEngine::Experimental::GlobalIllumination::LinearColor indirectColor_ = {}, float penumbraWidthRadian_ = {}) noexcept : instanceID{instanceID_}, shadow{shadow_}, mode{mode_}, direction{direction_}, color{color_}, indirectColor{indirectColor_}, penumbraWidthRadian{penumbraWidthRadian_} {}
  }; // UnityEngine.Experimental.GlobalIllumination.DirectionalLight
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Experimental::GlobalIllumination::DirectionalLight, "UnityEngine.Experimental.GlobalIllumination", "DirectionalLight");
#pragma pack(pop)
