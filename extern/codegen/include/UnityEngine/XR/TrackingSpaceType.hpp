// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.XR
namespace UnityEngine::XR {
  // Autogenerated type: UnityEngine.XR.TrackingSpaceType
  struct TrackingSpaceType : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: TrackingSpaceType
    constexpr TrackingSpaceType(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.XR.TrackingSpaceType Stationary
    static constexpr const int Stationary = 0;
    // Get static field: static public UnityEngine.XR.TrackingSpaceType Stationary
    static UnityEngine::XR::TrackingSpaceType _get_Stationary();
    // Set static field: static public UnityEngine.XR.TrackingSpaceType Stationary
    static void _set_Stationary(UnityEngine::XR::TrackingSpaceType value);
    // static field const value: static public UnityEngine.XR.TrackingSpaceType RoomScale
    static constexpr const int RoomScale = 1;
    // Get static field: static public UnityEngine.XR.TrackingSpaceType RoomScale
    static UnityEngine::XR::TrackingSpaceType _get_RoomScale();
    // Set static field: static public UnityEngine.XR.TrackingSpaceType RoomScale
    static void _set_RoomScale(UnityEngine::XR::TrackingSpaceType value);
  }; // UnityEngine.XR.TrackingSpaceType
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::XR::TrackingSpaceType, "UnityEngine.XR", "TrackingSpaceType");
#pragma pack(pop)
