// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.IntegratedSubsystem`1
#include "UnityEngine/IntegratedSubsystem_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR
namespace UnityEngine::XR {
  // Forward declaring type: XRInputSubsystemDescriptor
  class XRInputSubsystemDescriptor;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Skipping declaration: IntPtr because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.XR
namespace UnityEngine::XR {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.XR.XRInputSubsystem
  // [] Offset: FFFFFFFF
  // [UsedByNativeCodeAttribute] Offset: CE07E8
  // [NativeConditionalAttribute] Offset: CE07E8
  // [NativeTypeAttribute] Offset: CE07E8
  class XRInputSubsystem : public UnityEngine::IntegratedSubsystem_1<UnityEngine::XR::XRInputSubsystemDescriptor*> {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xCE0D6C
    // [DebuggerBrowsableAttribute] Offset: 0xCE0D6C
    // private System.Action`1<UnityEngine.XR.XRInputSubsystem> trackingOriginUpdated
    // Size: 0x8
    // Offset: 0x20
    System::Action_1<UnityEngine::XR::XRInputSubsystem*>* trackingOriginUpdated;
    // Field size check
    static_assert(sizeof(System::Action_1<UnityEngine::XR::XRInputSubsystem*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xCE0DA8
    // [DebuggerBrowsableAttribute] Offset: 0xCE0DA8
    // private System.Action`1<UnityEngine.XR.XRInputSubsystem> boundaryChanged
    // Size: 0x8
    // Offset: 0x28
    System::Action_1<UnityEngine::XR::XRInputSubsystem*>* boundaryChanged;
    // Field size check
    static_assert(sizeof(System::Action_1<UnityEngine::XR::XRInputSubsystem*>*) == 0x8);
    // Creating value type constructor for type: XRInputSubsystem
    XRInputSubsystem(System::Action_1<UnityEngine::XR::XRInputSubsystem*>* trackingOriginUpdated_ = {}, System::Action_1<UnityEngine::XR::XRInputSubsystem*>* boundaryChanged_ = {}) noexcept : trackingOriginUpdated{trackingOriginUpdated_}, boundaryChanged{boundaryChanged_} {}
    // static private System.Void InvokeTrackingOriginUpdatedEvent(System.IntPtr internalPtr)
    // Offset: 0x22C4114
    static void InvokeTrackingOriginUpdatedEvent(System::IntPtr internalPtr);
    // static private System.Void InvokeBoundaryChangedEvent(System.IntPtr internalPtr)
    // Offset: 0x22C41DC
    static void InvokeBoundaryChangedEvent(System::IntPtr internalPtr);
    // public System.Void .ctor()
    // Offset: 0x22C42A4
    // Implemented from: UnityEngine.IntegratedSubsystem`1
    // Base method: System.Void IntegratedSubsystem_1::.ctor()
    // Base method: System.Void IntegratedSubsystem::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRInputSubsystem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::XR::XRInputSubsystem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRInputSubsystem*, creationType>()));
    }
  }; // UnityEngine.XR.XRInputSubsystem
  // WARNING Not writing size check since size may be invalid!
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::XR::XRInputSubsystem*, "UnityEngine.XR", "XRInputSubsystem");
