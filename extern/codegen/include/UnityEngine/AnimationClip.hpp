// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Motion
#include "UnityEngine/Motion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: WrapMode
  struct WrapMode;
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.AnimationClip
  // [] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: CD3B7C
  // [NativeTypeAttribute] Offset: CD3B7C
  class AnimationClip : public UnityEngine::Motion {
    public:
    // Creating value type constructor for type: AnimationClip
    AnimationClip() noexcept {}
    // static private System.Void Internal_CreateAnimationClip(UnityEngine.AnimationClip self)
    // Offset: 0x2296ACC
    static void Internal_CreateAnimationClip(UnityEngine::AnimationClip* self);
    // public System.Void SampleAnimation(UnityEngine.GameObject go, System.Single time)
    // Offset: 0x2296B0C
    void SampleAnimation(UnityEngine::GameObject* go, float time);
    // static System.Void SampleAnimation(UnityEngine.GameObject go, UnityEngine.AnimationClip clip, System.Single inTime, UnityEngine.WrapMode wrapMode)
    // Offset: 0x2296BDC
    static void SampleAnimation(UnityEngine::GameObject* go, UnityEngine::AnimationClip* clip, float inTime, UnityEngine::WrapMode wrapMode);
    // public System.Single get_length()
    // Offset: 0x2296C44
    float get_length();
    // public System.Single get_frameRate()
    // Offset: 0x2296C84
    float get_frameRate();
    // public System.Void set_frameRate(System.Single value)
    // Offset: 0x2296CC4
    void set_frameRate(float value);
    // public System.Void SetCurve(System.String relativePath, System.Type type, System.String propertyName, UnityEngine.AnimationCurve curve)
    // Offset: 0x2296D14
    void SetCurve(::Il2CppString* relativePath, System::Type* type, ::Il2CppString* propertyName, UnityEngine::AnimationCurve* curve);
    // public System.Void EnsureQuaternionContinuity()
    // Offset: 0x2296D84
    void EnsureQuaternionContinuity();
    // public UnityEngine.WrapMode get_wrapMode()
    // Offset: 0x2296B9C
    UnityEngine::WrapMode get_wrapMode();
    // public System.Boolean get_legacy()
    // Offset: 0x2296DC4
    bool get_legacy();
    // public System.Void set_legacy(System.Boolean value)
    // Offset: 0x2296E04
    void set_legacy(bool value);
    // public System.Boolean get_empty()
    // Offset: 0x2296E54
    bool get_empty();
    // public System.Boolean get_hasGenericRootTransform()
    // Offset: 0x2296E94
    bool get_hasGenericRootTransform();
    // public System.Boolean get_hasMotionCurves()
    // Offset: 0x2296ED4
    bool get_hasMotionCurves();
    // public System.Boolean get_hasRootCurves()
    // Offset: 0x2296F14
    bool get_hasRootCurves();
    // System.Boolean get_hasRootMotion()
    // Offset: 0x2296F54
    bool get_hasRootMotion();
    // public System.Void .ctor()
    // Offset: 0x2296A20
    // Implemented from: UnityEngine.Motion
    // Base method: System.Void Motion::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AnimationClip* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AnimationClip*, creationType>()));
    }
  }; // UnityEngine.AnimationClip
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::AnimationClip*, "UnityEngine", "AnimationClip");
