// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x4
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.SortingLayer
  // [] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: CBCD40
  struct SortingLayer/*, public System::ValueType*/ {
    public:
    // private System.Int32 m_Id
    // Size: 0x4
    // Offset: 0x0
    int m_Id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: SortingLayer
    constexpr SortingLayer(int m_Id_ = {}) noexcept : m_Id{m_Id_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return m_Id;
    }
    // static public System.Int32 GetLayerValueFromID(System.Int32 id)
    // Offset: 0x1AB2FD4
    static int GetLayerValueFromID(int id);
  }; // UnityEngine.SortingLayer
  #pragma pack(pop)
  static check_size<sizeof(SortingLayer), 0 + sizeof(int)> __UnityEngine_SortingLayerSizeCheck;
  static_assert(sizeof(SortingLayer) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::SortingLayer, "UnityEngine", "SortingLayer");
