// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
// Including type: UnityEngine.ILogHandler
#include "UnityEngine/ILogHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: LogOption
  struct LogOption;
  // Forward declaring type: Object
  class Object;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.DebugLogHandler
  // [] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: CBD2B0
  class DebugLogHandler : public ::Il2CppObject/*, public UnityEngine::ILogHandler*/ {
    public:
    // Creating value type constructor for type: DebugLogHandler
    DebugLogHandler() noexcept {}
    // Creating interface conversion operator: operator UnityEngine::ILogHandler
    operator UnityEngine::ILogHandler() noexcept {
      return *reinterpret_cast<UnityEngine::ILogHandler*>(this);
    }
    // static System.Void Internal_Log(UnityEngine.LogType level, UnityEngine.LogOption options, System.String msg, UnityEngine.Object obj)
    // Offset: 0x1A1CD90
    static void Internal_Log(UnityEngine::LogType level, UnityEngine::LogOption options, ::Il2CppString* msg, UnityEngine::Object* obj);
    // static System.Void Internal_LogException(System.Exception exception, UnityEngine.Object obj)
    // Offset: 0x1A1CDF8
    static void Internal_LogException(System::Exception* exception, UnityEngine::Object* obj);
    // public System.Void LogFormat(UnityEngine.LogType logType, UnityEngine.Object context, System.String format, params System.Object[] args)
    // Offset: 0x1A1CE48
    // Implemented from: UnityEngine.ILogHandler
    // Base method: System.Void ILogHandler::LogFormat(UnityEngine.LogType logType, UnityEngine.Object context, System.String format, params System.Object[] args)
    void LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, ::Array<::Il2CppObject*>* args);
    // Creating initializer_list -> params proxy for: System.Void LogFormat(UnityEngine.LogType logType, UnityEngine.Object context, System.String format, params System.Object[] args)
    void LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args);
    // Creating TArgs -> initializer_list proxy for: System.Void LogFormat(UnityEngine.LogType logType, UnityEngine.Object context, System.String format, params System.Object[] args)
    template<class ...TParams>
    void LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, TParams&&... args) {
      LogFormat(logType, context, format, {args...});
    }
    // public System.Void LogException(System.Exception exception, UnityEngine.Object context)
    // Offset: 0x1A1CEB4
    // Implemented from: UnityEngine.ILogHandler
    // Base method: System.Void ILogHandler::LogException(System.Exception exception, UnityEngine.Object context)
    void LogException(System::Exception* exception, UnityEngine::Object* context);
    // public System.Void .ctor()
    // Offset: 0x1A1CD40
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugLogHandler* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DebugLogHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugLogHandler*, creationType>()));
    }
  }; // UnityEngine.DebugLogHandler
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::DebugLogHandler*, "UnityEngine", "DebugLogHandler");
