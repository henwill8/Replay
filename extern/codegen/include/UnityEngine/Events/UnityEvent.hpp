// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.UnityEventBase
#include "UnityEngine/Events/UnityEventBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityAction
  class UnityAction;
  // Forward declaring type: BaseInvokableCall
  class BaseInvokableCall;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Completed forward declares
// Type namespace: UnityEngine.Events
namespace UnityEngine::Events {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Events.UnityEvent
  // [] Offset: FFFFFFFF
  class UnityEvent : public UnityEngine::Events::UnityEventBase {
    public:
    // Writing base type padding for base size: 0x21 to desired offset: 0x28
    char ___base_padding[0x7] = {};
    // private System.Object[] m_InvokeArray
    // Size: 0x8
    // Offset: 0x28
    ::Array<::Il2CppObject*>* m_InvokeArray;
    // Field size check
    static_assert(sizeof(::Array<::Il2CppObject*>*) == 0x8);
    // Creating value type constructor for type: UnityEvent
    UnityEvent(::Array<::Il2CppObject*>* m_InvokeArray_ = {}) noexcept : m_InvokeArray{m_InvokeArray_} {}
    // Creating conversion operator: operator ::Array<::Il2CppObject*>*
    constexpr operator ::Array<::Il2CppObject*>*() const noexcept {
      return m_InvokeArray;
    }
    // public System.Void AddListener(UnityEngine.Events.UnityAction call)
    // Offset: 0x1A1F208
    void AddListener(UnityEngine::Events::UnityAction* call);
    // public System.Void RemoveListener(UnityEngine.Events.UnityAction call)
    // Offset: 0x1A1F2C4
    void RemoveListener(UnityEngine::Events::UnityAction* call);
    // static private UnityEngine.Events.BaseInvokableCall GetDelegate(UnityEngine.Events.UnityAction action)
    // Offset: 0x1A1F240
    static UnityEngine::Events::BaseInvokableCall* GetDelegate(UnityEngine::Events::UnityAction* action);
    // public System.Void Invoke()
    // Offset: 0x1A1F5C4
    void Invoke();
    // public System.Void .ctor()
    // Offset: 0x1A1F13C
    // Implemented from: UnityEngine.Events.UnityEventBase
    // Base method: System.Void UnityEventBase::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnityEvent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEvent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnityEvent*, creationType>()));
    }
    // protected override System.Reflection.MethodInfo FindMethod_Impl(System.String name, System.Object targetObj)
    // Offset: 0x1A1F324
    // Implemented from: UnityEngine.Events.UnityEventBase
    // Base method: System.Reflection.MethodInfo UnityEventBase::FindMethod_Impl(System.String name, System.Object targetObj)
    System::Reflection::MethodInfo* FindMethod_Impl(::Il2CppString* name, ::Il2CppObject* targetObj);
    // override UnityEngine.Events.BaseInvokableCall GetDelegate(System.Object target, System.Reflection.MethodInfo theFunction)
    // Offset: 0x1A1F554
    // Implemented from: UnityEngine.Events.UnityEventBase
    // Base method: UnityEngine.Events.BaseInvokableCall UnityEventBase::GetDelegate(System.Object target, System.Reflection.MethodInfo theFunction)
    UnityEngine::Events::BaseInvokableCall* GetDelegate(::Il2CppObject* target, System::Reflection::MethodInfo* theFunction);
  }; // UnityEngine.Events.UnityEvent
  #pragma pack(pop)
  static check_size<sizeof(UnityEvent), 40 + sizeof(::Array<::Il2CppObject*>*)> __UnityEngine_Events_UnityEventSizeCheck;
  static_assert(sizeof(UnityEvent) == 0x30);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Events::UnityEvent*, "UnityEngine.Events", "UnityEvent");
