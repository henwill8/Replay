// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: UnityEngine.Events
namespace UnityEngine::Events {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Events.ArgumentCache
  // [] Offset: FFFFFFFF
  class ArgumentCache : public ::Il2CppObject/*, public UnityEngine::ISerializationCallbackReceiver*/ {
    public:
    // [FormerlySerializedAsAttribute] Offset: 0xCC2DC0
    // private UnityEngine.Object m_ObjectArgument
    // Size: 0x8
    // Offset: 0x10
    UnityEngine::Object* m_ObjectArgument;
    // Field size check
    static_assert(sizeof(UnityEngine::Object*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xCC2E0C
    // private System.String m_ObjectArgumentAssemblyTypeName
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* m_ObjectArgumentAssemblyTypeName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xCC2E58
    // private System.Int32 m_IntArgument
    // Size: 0x4
    // Offset: 0x20
    int m_IntArgument;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0xCC2EA4
    // private System.Single m_FloatArgument
    // Size: 0x4
    // Offset: 0x24
    float m_FloatArgument;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0xCC2EF0
    // private System.String m_StringArgument
    // Size: 0x8
    // Offset: 0x28
    ::Il2CppString* m_StringArgument;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Boolean m_BoolArgument
    // Size: 0x1
    // Offset: 0x30
    bool m_BoolArgument;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: ArgumentCache
    ArgumentCache(UnityEngine::Object* m_ObjectArgument_ = {}, ::Il2CppString* m_ObjectArgumentAssemblyTypeName_ = {}, int m_IntArgument_ = {}, float m_FloatArgument_ = {}, ::Il2CppString* m_StringArgument_ = {}, bool m_BoolArgument_ = {}) noexcept : m_ObjectArgument{m_ObjectArgument_}, m_ObjectArgumentAssemblyTypeName{m_ObjectArgumentAssemblyTypeName_}, m_IntArgument{m_IntArgument_}, m_FloatArgument{m_FloatArgument_}, m_StringArgument{m_StringArgument_}, m_BoolArgument{m_BoolArgument_} {}
    // Creating interface conversion operator: operator UnityEngine::ISerializationCallbackReceiver
    operator UnityEngine::ISerializationCallbackReceiver() noexcept {
      return *reinterpret_cast<UnityEngine::ISerializationCallbackReceiver*>(this);
    }
    // public UnityEngine.Object get_unityObjectArgument()
    // Offset: 0x1A1DAEC
    UnityEngine::Object* get_unityObjectArgument();
    // public System.String get_unityObjectArgumentAssemblyTypeName()
    // Offset: 0x1A1DAF4
    ::Il2CppString* get_unityObjectArgumentAssemblyTypeName();
    // public System.Int32 get_intArgument()
    // Offset: 0x1A1DAFC
    int get_intArgument();
    // public System.Single get_floatArgument()
    // Offset: 0x1A1DB04
    float get_floatArgument();
    // public System.String get_stringArgument()
    // Offset: 0x1A1DB0C
    ::Il2CppString* get_stringArgument();
    // public System.Boolean get_boolArgument()
    // Offset: 0x1A1DB14
    bool get_boolArgument();
    // private System.Void TidyAssemblyTypeName()
    // Offset: 0x1A1DB1C
    void TidyAssemblyTypeName();
    // public System.Void OnBeforeSerialize()
    // Offset: 0x1A1DD58
    // Implemented from: UnityEngine.ISerializationCallbackReceiver
    // Base method: System.Void ISerializationCallbackReceiver::OnBeforeSerialize()
    void OnBeforeSerialize();
    // Creating proxy method: UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize
    // Maps to method: OnBeforeSerialize
    void UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize();
    // public System.Void OnAfterDeserialize()
    // Offset: 0x1A1DD5C
    // Implemented from: UnityEngine.ISerializationCallbackReceiver
    // Base method: System.Void ISerializationCallbackReceiver::OnAfterDeserialize()
    void OnAfterDeserialize();
    // Creating proxy method: UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize
    // Maps to method: OnAfterDeserialize
    void UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize();
    // public System.Void .ctor()
    // Offset: 0x1A1DD60
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ArgumentCache* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::ArgumentCache::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ArgumentCache*, creationType>()));
    }
  }; // UnityEngine.Events.ArgumentCache
  #pragma pack(pop)
  static check_size<sizeof(ArgumentCache), 48 + sizeof(bool)> __UnityEngine_Events_ArgumentCacheSizeCheck;
  static_assert(sizeof(ArgumentCache) == 0x31);
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Events::ArgumentCache*, "UnityEngine.Events", "ArgumentCache");
