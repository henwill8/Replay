// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Type namespace: UnityEngine.Animations
namespace UnityEngine::Animations {
  // Autogenerated type: UnityEngine.Animations.AnimationStream
  struct AnimationStream : public System::ValueType {
    public:
    // private System.UInt32 m_AnimatorBindingsVersion
    // Offset: 0x0
    uint m_AnimatorBindingsVersion;
    // private System.IntPtr constant
    // Offset: 0x8
    System::IntPtr constant;
    // private System.IntPtr input
    // Offset: 0x10
    System::IntPtr input;
    // private System.IntPtr output
    // Offset: 0x18
    System::IntPtr output;
    // private System.IntPtr workspace
    // Offset: 0x20
    System::IntPtr workspace;
    // private System.IntPtr inputStreamAccessor
    // Offset: 0x28
    System::IntPtr inputStreamAccessor;
    // private System.IntPtr animationHandleBinder
    // Offset: 0x30
    System::IntPtr animationHandleBinder;
    // Creating value type constructor for type: AnimationStream
    constexpr AnimationStream(uint m_AnimatorBindingsVersion_ = {}, System::IntPtr constant_ = {}, System::IntPtr input_ = {}, System::IntPtr output_ = {}, System::IntPtr workspace_ = {}, System::IntPtr inputStreamAccessor_ = {}, System::IntPtr animationHandleBinder_ = {}) noexcept : m_AnimatorBindingsVersion{m_AnimatorBindingsVersion_}, constant{constant_}, input{input_}, output{output_}, workspace{workspace_}, inputStreamAccessor{inputStreamAccessor_}, animationHandleBinder{animationHandleBinder_} {}
  }; // UnityEngine.Animations.AnimationStream
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Animations::AnimationStream, "UnityEngine.Animations", "AnimationStream");
#pragma pack(pop)
