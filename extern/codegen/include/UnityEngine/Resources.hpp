// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Autogenerated type: UnityEngine.Resources
  class Resources : public ::Il2CppObject {
    public:
    // static T[] ConvertObjects(UnityEngine.Object[] rawObjects)
    // Offset: 0xFFFFFFFF
    template<class T>
    static ::Array<T>* ConvertObjects(::Array<UnityEngine::Object*>* rawObjects) {
      static_assert(std::is_convertible_v<T, UnityEngine::Object*>);
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<::Array<T>*>("UnityEngine", "Resources", "ConvertObjects", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, rawObjects)));
    }
    // static public UnityEngine.Object[] FindObjectsOfTypeAll(System.Type type)
    // Offset: 0x1390080
    static ::Array<UnityEngine::Object*>* FindObjectsOfTypeAll(System::Type* type);
    // static public T[] FindObjectsOfTypeAll()
    // Offset: 0xFFFFFFFF
    template<class T>
    static ::Array<T>* FindObjectsOfTypeAll() {
      static_assert(std::is_convertible_v<T, UnityEngine::Object*>);
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<::Array<T>*>("UnityEngine", "Resources", "FindObjectsOfTypeAll", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
    }
    // static public UnityEngine.Object Load(System.String path)
    // Offset: 0x13900C0
    static UnityEngine::Object* Load(::Il2CppString* path);
    // static public T Load(System.String path)
    // Offset: 0xFFFFFFFF
    template<class T>
    static T Load(::Il2CppString* path) {
      static_assert(std::is_convertible_v<T, UnityEngine::Object*>);
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<T>("UnityEngine", "Resources", "Load", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, path)));
    }
    // static public UnityEngine.Object Load(System.String path, System.Type systemTypeInstance)
    // Offset: 0x139016C
    static UnityEngine::Object* Load(::Il2CppString* path, System::Type* systemTypeInstance);
    // static public UnityEngine.Object[] LoadAll(System.String path, System.Type systemTypeInstance)
    // Offset: 0x13901BC
    static ::Array<UnityEngine::Object*>* LoadAll(::Il2CppString* path, System::Type* systemTypeInstance);
    // static public UnityEngine.Object[] LoadAll(System.String path)
    // Offset: 0x139020C
    static ::Array<UnityEngine::Object*>* LoadAll(::Il2CppString* path);
    // static public UnityEngine.Object GetBuiltinResource(System.Type type, System.String path)
    // Offset: 0x13902B8
    static UnityEngine::Object* GetBuiltinResource(System::Type* type, ::Il2CppString* path);
    // static public T GetBuiltinResource(System.String path)
    // Offset: 0xFFFFFFFF
    template<class T>
    static T GetBuiltinResource(::Il2CppString* path) {
      static_assert(std::is_convertible_v<T, UnityEngine::Object*>);
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<T>("UnityEngine", "Resources", "GetBuiltinResource", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, path)));
    }
    // static public UnityEngine.AsyncOperation UnloadUnusedAssets()
    // Offset: 0x1390308
    static UnityEngine::AsyncOperation* UnloadUnusedAssets();
  }; // UnityEngine.Resources
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Resources*, "UnityEngine", "Resources");
#pragma pack(pop)
