// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.HumanLimit
#include "UnityEngine/HumanLimit.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x3C
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.HumanBone
  // [] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: CD3F54
  // [RequiredByNativeCodeAttribute] Offset: CD3F54
  // [NativeTypeAttribute] Offset: CD3F54
  struct HumanBone/*, public System::ValueType*/ {
    public:
    // private System.String m_BoneName
    // Size: 0x8
    // Offset: 0x0
    ::Il2CppString* m_BoneName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String m_HumanName
    // Size: 0x8
    // Offset: 0x8
    ::Il2CppString* m_HumanName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [NativeNameAttribute] Offset: 0xCD5008
    // public UnityEngine.HumanLimit limit
    // Size: 0x2C
    // Offset: 0x10
    UnityEngine::HumanLimit limit;
    // Field size check
    static_assert(sizeof(UnityEngine::HumanLimit) == 0x2C);
    // Creating value type constructor for type: HumanBone
    constexpr HumanBone(::Il2CppString* m_BoneName_ = {}, ::Il2CppString* m_HumanName_ = {}, UnityEngine::HumanLimit limit_ = {}) noexcept : m_BoneName{m_BoneName_}, m_HumanName{m_HumanName_}, limit{limit_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // UnityEngine.HumanBone
  #pragma pack(pop)
  static check_size<sizeof(HumanBone), 16 + sizeof(UnityEngine::HumanLimit)> __UnityEngine_HumanBoneSizeCheck;
  static_assert(sizeof(HumanBone) == 0x3C);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::HumanBone, "UnityEngine", "HumanBone");
