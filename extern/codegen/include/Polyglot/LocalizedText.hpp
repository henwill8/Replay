// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizedTextComponent`1
#include "Polyglot/LocalizedTextComponent_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: Polyglot
namespace Polyglot {
  // Skipping declaration: LanguageDirection because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TextAnchor
  struct TextAnchor;
}
// Completed forward declares
// Type namespace: Polyglot
namespace Polyglot {
  // WARNING Size may be invalid!
  // Autogenerated type: Polyglot.LocalizedText
  // [] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: D223E0
  // [RequireComponent] Offset: D223E0
  class LocalizedText : public Polyglot::LocalizedTextComponent_1<UnityEngine::UI::Text*> {
    public:
    // Creating value type constructor for type: LocalizedText
    LocalizedText() noexcept {}
    // protected System.Void SetText(UnityEngine.UI.Text text, System.String value)
    // Offset: 0x224CA80
    void SetText(UnityEngine::UI::Text* text, ::Il2CppString* value);
    // protected System.Void UpdateAlignment(UnityEngine.UI.Text text, Polyglot.LanguageDirection direction)
    // Offset: 0x224CB9C
    void UpdateAlignment(UnityEngine::UI::Text* text, Polyglot::LanguageDirection direction);
    // private System.Boolean IsOppositeDirection(UnityEngine.TextAnchor alignment, Polyglot.LanguageDirection direction)
    // Offset: 0x224CC80
    bool IsOppositeDirection(UnityEngine::TextAnchor alignment, Polyglot::LanguageDirection direction);
    // private System.Boolean IsAlignmentRight(UnityEngine.TextAnchor alignment)
    // Offset: 0x224CCD8
    bool IsAlignmentRight(UnityEngine::TextAnchor alignment);
    // private System.Boolean IsAlignmentLeft(UnityEngine.TextAnchor alignment)
    // Offset: 0x224CD00
    bool IsAlignmentLeft(UnityEngine::TextAnchor alignment);
    // public System.Void .ctor()
    // Offset: 0x224CD28
    // Implemented from: Polyglot.LocalizedTextComponent`1
    // Base method: System.Void LocalizedTextComponent_1::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocalizedText* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Polyglot::LocalizedText::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocalizedText*, creationType>()));
    }
  }; // Polyglot.LocalizedText
}
DEFINE_IL2CPP_ARG_TYPE(Polyglot::LocalizedText*, "Polyglot", "LocalizedText");
