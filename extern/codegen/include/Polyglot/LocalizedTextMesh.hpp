// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Polyglot.ILocalize
#include "Polyglot/ILocalize.hpp"
// Including type: Polyglot.ILocalizeKey
#include "Polyglot/ILocalizeKey.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TextMesh
  class TextMesh;
  // Forward declaring type: TextAlignment
  struct TextAlignment;
}
// Forward declaring namespace: Polyglot
namespace Polyglot {
  // Forward declaring type: LanguageDirection
  struct LanguageDirection;
}
// Completed forward declares
// Type namespace: Polyglot
namespace Polyglot {
  // Autogenerated type: Polyglot.LocalizedTextMesh
  class LocalizedTextMesh : public UnityEngine::MonoBehaviour, public Polyglot::ILocalize, public Polyglot::ILocalizeKey {
    public:
    // private UnityEngine.TextMesh text
    // Offset: 0x18
    UnityEngine::TextMesh* text;
    // private System.String key
    // Offset: 0x20
    ::Il2CppString* key;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void Reset()
    // Offset: 0x191A888
    void Reset();
    // public System.Void Start()
    // Offset: 0x191A8E8
    void Start();
    // private System.Boolean IsOppositeDirection(UnityEngine.TextAlignment alignment, Polyglot.LanguageDirection direction)
    // Offset: 0x191AA18
    bool IsOppositeDirection(UnityEngine::TextAlignment alignment, Polyglot::LanguageDirection direction);
    // private System.Boolean IsAlignmentRight(UnityEngine.TextAlignment alignment)
    // Offset: 0x191AA44
    bool IsAlignmentRight(UnityEngine::TextAlignment alignment);
    // private System.Boolean IsAlignmentLeft(UnityEngine.TextAlignment alignment)
    // Offset: 0x191AA50
    bool IsAlignmentLeft(UnityEngine::TextAlignment alignment);
    // public System.String get_Key()
    // Offset: 0x191A880
    // Implemented from: Polyglot.ILocalizeKey
    // Base method: System.String ILocalizeKey::get_Key()
    ::Il2CppString* get_Key();
    // public System.Void OnLocalize()
    // Offset: 0x191A914
    // Implemented from: Polyglot.ILocalize
    // Base method: System.Void ILocalize::OnLocalize()
    void OnLocalize();
    // public System.Void .ctor()
    // Offset: 0x191AA5C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static LocalizedTextMesh* New_ctor();
  }; // Polyglot.LocalizedTextMesh
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Polyglot::LocalizedTextMesh*, "Polyglot", "LocalizedTextMesh");
#pragma pack(pop)
