// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.PointerEventData/InputButton
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VRUIControls
namespace VRUIControls {
  // Forward declaring type: MouseButtonEventData
  class MouseButtonEventData;
}
// Completed forward declares
// Type namespace: VRUIControls
namespace VRUIControls {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: VRUIControls.ButtonState
  // [] Offset: FFFFFFFF
  class ButtonState : public ::Il2CppObject {
    public:
    // private UnityEngine.EventSystems.PointerEventData/InputButton _button
    // Size: 0x4
    // Offset: 0x10
    UnityEngine::EventSystems::PointerEventData::InputButton button;
    // Field size check
    static_assert(sizeof(UnityEngine::EventSystems::PointerEventData::InputButton) == 0x4);
    // Padding between fields: button and: eventData
    char __padding0[0x4] = {};
    // private VRUIControls.MouseButtonEventData _eventData
    // Size: 0x8
    // Offset: 0x18
    VRUIControls::MouseButtonEventData* eventData;
    // Field size check
    static_assert(sizeof(VRUIControls::MouseButtonEventData*) == 0x8);
    // private System.Single _pressedValue
    // Size: 0x4
    // Offset: 0x20
    float pressedValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: ButtonState
    ButtonState(UnityEngine::EventSystems::PointerEventData::InputButton button_ = {}, VRUIControls::MouseButtonEventData* eventData_ = {}, float pressedValue_ = {}) noexcept : button{button_}, eventData{eventData_}, pressedValue{pressedValue_} {}
    // public VRUIControls.MouseButtonEventData get_eventData()
    // Offset: 0x2254D0C
    VRUIControls::MouseButtonEventData* get_eventData();
    // public System.Void set_eventData(VRUIControls.MouseButtonEventData value)
    // Offset: 0x2254D14
    void set_eventData(VRUIControls::MouseButtonEventData* value);
    // public UnityEngine.EventSystems.PointerEventData/InputButton get_button()
    // Offset: 0x2254D1C
    UnityEngine::EventSystems::PointerEventData::InputButton get_button();
    // public System.Void set_button(UnityEngine.EventSystems.PointerEventData/InputButton value)
    // Offset: 0x2254D24
    void set_button(UnityEngine::EventSystems::PointerEventData::InputButton value);
    // public System.Single get_pressedValue()
    // Offset: 0x2254D2C
    float get_pressedValue();
    // public System.Void set_pressedValue(System.Single value)
    // Offset: 0x2254D34
    void set_pressedValue(float value);
    // public System.Void .ctor()
    // Offset: 0x2254D3C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ButtonState* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("VRUIControls::ButtonState::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ButtonState*, creationType>()));
    }
  }; // VRUIControls.ButtonState
  #pragma pack(pop)
  static check_size<sizeof(ButtonState), 32 + sizeof(float)> __VRUIControls_ButtonStateSizeCheck;
  static_assert(sizeof(ButtonState) == 0x24);
}
DEFINE_IL2CPP_ARG_TYPE(VRUIControls::ButtonState*, "VRUIControls", "ButtonState");
