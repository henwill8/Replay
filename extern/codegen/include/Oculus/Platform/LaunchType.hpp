// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Autogenerated type: Oculus.Platform.LaunchType
  struct LaunchType : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: LaunchType
    constexpr LaunchType(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Oculus.Platform.LaunchType Unknown
    static constexpr const int Unknown = 0;
    // Get static field: static public Oculus.Platform.LaunchType Unknown
    static Oculus::Platform::LaunchType _get_Unknown();
    // Set static field: static public Oculus.Platform.LaunchType Unknown
    static void _set_Unknown(Oculus::Platform::LaunchType value);
    // static field const value: static public Oculus.Platform.LaunchType Normal
    static constexpr const int Normal = 1;
    // Get static field: static public Oculus.Platform.LaunchType Normal
    static Oculus::Platform::LaunchType _get_Normal();
    // Set static field: static public Oculus.Platform.LaunchType Normal
    static void _set_Normal(Oculus::Platform::LaunchType value);
    // static field const value: static public Oculus.Platform.LaunchType Invite
    static constexpr const int Invite = 2;
    // Get static field: static public Oculus.Platform.LaunchType Invite
    static Oculus::Platform::LaunchType _get_Invite();
    // Set static field: static public Oculus.Platform.LaunchType Invite
    static void _set_Invite(Oculus::Platform::LaunchType value);
    // static field const value: static public Oculus.Platform.LaunchType Coordinated
    static constexpr const int Coordinated = 3;
    // Get static field: static public Oculus.Platform.LaunchType Coordinated
    static Oculus::Platform::LaunchType _get_Coordinated();
    // Set static field: static public Oculus.Platform.LaunchType Coordinated
    static void _set_Coordinated(Oculus::Platform::LaunchType value);
    // static field const value: static public Oculus.Platform.LaunchType Deeplink
    static constexpr const int Deeplink = 4;
    // Get static field: static public Oculus.Platform.LaunchType Deeplink
    static Oculus::Platform::LaunchType _get_Deeplink();
    // Set static field: static public Oculus.Platform.LaunchType Deeplink
    static void _set_Deeplink(Oculus::Platform::LaunchType value);
  }; // Oculus.Platform.LaunchType
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::LaunchType, "Oculus.Platform", "LaunchType");
#pragma pack(pop)
