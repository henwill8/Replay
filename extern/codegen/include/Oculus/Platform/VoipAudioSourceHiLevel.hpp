// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: IVoipPCMSource
  class IVoipPCMSource;
  // Forward declaring type: VoipSampleRate
  struct VoipSampleRate;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioSource
  class AudioSource;
}
// Completed forward declares
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Autogenerated type: Oculus.Platform.VoipAudioSourceHiLevel
  class VoipAudioSourceHiLevel : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate
    class FilterReadDelegate;
    // private System.Int32 initialPlaybackDelayMS
    // Offset: 0x18
    int initialPlaybackDelayMS;
    // public UnityEngine.AudioSource audioSource
    // Offset: 0x20
    UnityEngine::AudioSource* audioSource;
    // public System.Single peakAmplitude
    // Offset: 0x28
    float peakAmplitude;
    // protected Oculus.Platform.IVoipPCMSource pcmSource
    // Offset: 0x30
    Oculus::Platform::IVoipPCMSource* pcmSource;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get static field: static private System.Int32 audioSystemPlaybackFrequency
    static int _get_audioSystemPlaybackFrequency();
    // Set static field: static private System.Int32 audioSystemPlaybackFrequency
    static void _set_audioSystemPlaybackFrequency(int value);
    // Get static field: static private System.Boolean verboseLogging
    static bool _get_verboseLogging();
    // Set static field: static private System.Boolean verboseLogging
    static void _set_verboseLogging(bool value);
    // public System.Void set_senderID(System.UInt64 value)
    // Offset: 0x196C3B4
    void set_senderID(uint64_t value);
    // protected System.Void Stop()
    // Offset: 0x196C478
    void Stop();
    // private Oculus.Platform.VoipSampleRate SampleRateToEnum(System.Int32 rate)
    // Offset: 0x196C47C
    Oculus::Platform::VoipSampleRate SampleRateToEnum(int rate);
    // protected System.Void Awake()
    // Offset: 0x196C4B8
    void Awake();
    // private System.Void Start()
    // Offset: 0x196C77C
    void Start();
    // protected System.Void CreatePCMSource()
    // Offset: 0x196C798
    void CreatePCMSource();
    // static protected System.Int32 MSToElements(System.Int32 ms)
    // Offset: 0x196C808
    static int MSToElements(int ms);
    // private System.Void Update()
    // Offset: 0x196C890
    void Update();
    // public System.Void .ctor()
    // Offset: 0x196CB74
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static VoipAudioSourceHiLevel* New_ctor();
    // static private System.Void .cctor()
    // Offset: 0x196CB7C
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // Oculus.Platform.VoipAudioSourceHiLevel
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::VoipAudioSourceHiLevel*, "Oculus.Platform", "VoipAudioSourceHiLevel");
#pragma pack(pop)
