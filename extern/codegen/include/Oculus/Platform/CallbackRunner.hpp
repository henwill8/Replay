// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.CallbackRunner
  // [] Offset: FFFFFFFF
  class CallbackRunner : public UnityEngine::MonoBehaviour {
    public:
    // public System.Boolean IsPersistantBetweenSceneLoads
    // Size: 0x1
    // Offset: 0x18
    bool IsPersistantBetweenSceneLoads;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: CallbackRunner
    CallbackRunner(bool IsPersistantBetweenSceneLoads_ = {}) noexcept : IsPersistantBetweenSceneLoads{IsPersistantBetweenSceneLoads_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // static private System.Void ovr_UnityResetTestPlatform()
    // Offset: 0x13DF9A0
    static void ovr_UnityResetTestPlatform();
    // private System.Void Awake()
    // Offset: 0x13DFA10
    void Awake();
    // private System.Void Update()
    // Offset: 0x13DFB0C
    void Update();
    // private System.Void OnDestroy()
    // Offset: 0x13DFB98
    void OnDestroy();
    // private System.Void OnApplicationQuit()
    // Offset: 0x13DFB9C
    void OnApplicationQuit();
    // public System.Void .ctor()
    // Offset: 0x13DFBF8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CallbackRunner* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CallbackRunner::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CallbackRunner*, creationType>()));
    }
  }; // Oculus.Platform.CallbackRunner
  #pragma pack(pop)
  static check_size<sizeof(CallbackRunner), 24 + sizeof(bool)> __Oculus_Platform_CallbackRunnerSizeCheck;
  static_assert(sizeof(CallbackRunner) == 0x19);
}
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::CallbackRunner*, "Oculus.Platform", "CallbackRunner");
