// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Skipping declaration: Message because it is already included!
}
// Completed forward declares
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Autogenerated type: Oculus.Platform.Request`1
  template<typename T>
  class Request_1 : public Oculus::Platform::Request {
    public:
    // private Oculus.Platform.Message`1/Callback<T> callback_
    // Offset: 0x0
    typename Oculus::Platform::Message_1<T>::Callback* callback;
    // Creating conversion operator: operator typename Oculus::Platform::Message_1<T>::Callback*
    constexpr operator typename Oculus::Platform::Message_1<T>::Callback*() const noexcept {
      return callback;
    }
    // public Oculus.Platform.Request`1<T> OnComplete(Oculus.Platform.Message`1/Callback<T> callback)
    // Offset: 0xFFFFFFFF
    Oculus::Platform::Request_1<T>* OnComplete(typename Oculus::Platform::Message_1<T>::Callback* callback) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<T>*>(this, "OnComplete", callback));
    }
    // public System.Void .ctor(System.UInt64 requestID)
    // Offset: 0xFFFFFFFF
    // Implemented from: Oculus.Platform.Request
    // Base method: System.Void Request::.ctor(System.UInt64 requestID)
    static Request_1<T>* New_ctor(uint64_t requestID) {
      return THROW_UNLESS(il2cpp_utils::New<Request_1<T>*>(requestID));
    }
    // public override System.Void HandleMessage(Oculus.Platform.Message msg)
    // Offset: 0xFFFFFFFF
    // Implemented from: Oculus.Platform.Request
    // Base method: System.Void Request::HandleMessage(Oculus.Platform.Message msg)
    void HandleMessage(Oculus::Platform::Message* msg) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMessage", msg));
    }
  }; // Oculus.Platform.Request`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Oculus::Platform::Request_1, "Oculus.Platform", "Request`1");
#pragma pack(pop)
