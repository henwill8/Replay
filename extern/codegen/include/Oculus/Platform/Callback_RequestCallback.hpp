// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Callback
#include "Oculus/Platform/Callback.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.Callback/RequestCallback
  // [] Offset: FFFFFFFF
  class Callback::RequestCallback : public ::Il2CppObject {
    public:
    // private Oculus.Platform.Message/Callback messageCallback
    // Size: 0x8
    // Offset: 0x10
    Oculus::Platform::Message::Callback* messageCallback;
    // Field size check
    static_assert(sizeof(Oculus::Platform::Message::Callback*) == 0x8);
    // Creating value type constructor for type: RequestCallback
    RequestCallback(Oculus::Platform::Message::Callback* messageCallback_ = {}) noexcept : messageCallback{messageCallback_} {}
    // Creating conversion operator: operator Oculus::Platform::Message::Callback*
    constexpr operator Oculus::Platform::Message::Callback*() const noexcept {
      return messageCallback;
    }
    // public System.Void .ctor(Oculus.Platform.Message/Callback callback)
    // Offset: 0x13DEE14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Callback::RequestCallback* New_ctor(Oculus::Platform::Message::Callback* callback) {
      static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::RequestCallback::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Callback::RequestCallback*, creationType>(callback)));
    }
    // public System.Void HandleMessage(Oculus.Platform.Message msg)
    // Offset: 0x13DF5D8
    void HandleMessage(Oculus::Platform::Message* msg);
    // public System.Void .ctor()
    // Offset: 0x13DF5D0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Callback::RequestCallback* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::RequestCallback::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Callback::RequestCallback*, creationType>()));
    }
  }; // Oculus.Platform.Callback/RequestCallback
  #pragma pack(pop)
  static check_size<sizeof(Callback::RequestCallback), 16 + sizeof(Oculus::Platform::Message::Callback*)> __Oculus_Platform_Callback_RequestCallbackSizeCheck;
  static_assert(sizeof(Callback::RequestCallback) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::Callback::RequestCallback*, "Oculus.Platform", "Callback/RequestCallback");
