// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: AbuseReportType
  struct AbuseReportType;
}
// Completed forward declares
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Autogenerated type: Oculus.Platform.AbuseReportOptions
  class AbuseReportOptions : public ::Il2CppObject {
    public:
    // private System.IntPtr Handle
    // Offset: 0x10
    System::IntPtr Handle;
    // Creating conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept {
      return Handle;
    }
    // public System.Void SetPreventPeopleChooser(System.Boolean value)
    // Offset: 0x189C898
    void SetPreventPeopleChooser(bool value);
    // public System.Void SetReportType(Oculus.Platform.AbuseReportType value)
    // Offset: 0x189C9A0
    void SetReportType(Oculus::Platform::AbuseReportType value);
    // static public System.IntPtr op_Explicit(Oculus.Platform.AbuseReportOptions options)
    // Offset: 0x189CAA8
    // ABORTED: conflicts with another method.  explicit operator System::IntPtr();
    // public System.Void .ctor()
    // Offset: 0x189C7B0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static AbuseReportOptions* New_ctor();
    // protected override System.Void Finalize()
    // Offset: 0x189CAF8
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // Oculus.Platform.AbuseReportOptions
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::AbuseReportOptions*, "Oculus.Platform", "AbuseReportOptions");
#pragma pack(pop)
