// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: BeatLine
#include "GlobalNamespace/BeatLine.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapObjectManager
  class BeatmapObjectManager;
  // Forward declaring type: AudioTimeSyncController
  class AudioTimeSyncController;
  // Forward declaring type: NoteController
  class NoteController;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BeatLineManager
  class BeatLineManager : public UnityEngine::MonoBehaviour {
    public:
    // private System.Single _linesYPosition
    // Offset: 0x18
    float linesYPosition;
    // private BeatmapObjectManager _beatmapObjectManager
    // Offset: 0x20
    GlobalNamespace::BeatmapObjectManager* beatmapObjectManager;
    // private BeatLine/Pool _beatLinePool
    // Offset: 0x28
    GlobalNamespace::BeatLine::Pool* beatLinePool;
    // private AudioTimeSyncController _audioTimeSyncController
    // Offset: 0x30
    GlobalNamespace::AudioTimeSyncController* audioTimeSyncController;
    // private System.Collections.Generic.Dictionary`2<UnityEngine.Vector4,BeatLine> _activeBeatLines
    // Offset: 0x38
    System::Collections::Generic::Dictionary_2<UnityEngine::Vector4, GlobalNamespace::BeatLine*>* activeBeatLines;
    // private System.Collections.Generic.List`1<UnityEngine.Vector4> _removeBeatLineKeyList
    // Offset: 0x40
    System::Collections::Generic::List_1<UnityEngine::Vector4>* removeBeatLineKeyList;
    // private System.Boolean _isMidRotationValid
    // Offset: 0x48
    bool isMidRotationValid;
    // private System.Single _midRotation
    // Offset: 0x4C
    float midRotation;
    // private System.Single _rotationRange
    // Offset: 0x50
    float rotationRange;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Boolean get_isMidRotationValid()
    // Offset: 0xB8ED38
    bool get_isMidRotationValid();
    // public System.Single get_midRotation()
    // Offset: 0xB8ED40
    float get_midRotation();
    // public System.Single get_rotationRange()
    // Offset: 0xB8ED48
    float get_rotationRange();
    // protected System.Void Start()
    // Offset: 0xB8ED50
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0xB8EDE4
    void OnDestroy();
    // protected System.Void Update()
    // Offset: 0xB8EE78
    void Update();
    // private System.Void HandleNoteWasSpawned(NoteController noteController)
    // Offset: 0xB8F22C
    void HandleNoteWasSpawned(GlobalNamespace::NoteController* noteController);
    // public System.Void .ctor()
    // Offset: 0xB8F428
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static BeatLineManager* New_ctor();
  }; // BeatLineManager
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatLineManager*, "", "BeatLineManager");
#pragma pack(pop)
