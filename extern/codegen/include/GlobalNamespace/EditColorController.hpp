// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: HSVPanelController
  class HSVPanelController;
  // Forward declaring type: PreviousColorPanelController
  class PreviousColorPanelController;
  // Forward declaring type: ColorChangeUIEventType
  struct ColorChangeUIEventType;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: EditColorController
  class EditColorController : public HMUI::ViewController {
    public:
    // private HSVPanelController _hsvPanelController
    // Offset: 0x70
    GlobalNamespace::HSVPanelController* hsvPanelController;
    // private PreviousColorPanelController _previousColorPanelController
    // Offset: 0x78
    GlobalNamespace::PreviousColorPanelController* previousColorPanelController;
    // private UnityEngine.UI.Button _cancelButton
    // Offset: 0x80
    UnityEngine::UI::Button* cancelButton;
    // private UnityEngine.UI.Button _applyButton
    // Offset: 0x88
    UnityEngine::UI::Button* applyButton;
    // private System.Action`1<UnityEngine.Color> didChangeColorEvent
    // Offset: 0x90
    System::Action_1<UnityEngine::Color>* didChangeColorEvent;
    // private System.Action`1<System.Boolean> didFinishEvent
    // Offset: 0x98
    System::Action_1<bool>* didFinishEvent;
    // private System.Action`1<UnityEngine.Color> _colorCallback
    // Offset: 0xA0
    System::Action_1<UnityEngine::Color>* colorCallback;
    // private UnityEngine.Color _initialColor
    // Offset: 0xA8
    UnityEngine::Color initialColor;
    // private System.Boolean _colorChanged
    // Offset: 0xB8
    bool colorChanged;
    // public System.Void add_didChangeColorEvent(System.Action`1<UnityEngine.Color> value)
    // Offset: 0x1A5C3DC
    void add_didChangeColorEvent(System::Action_1<UnityEngine::Color>* value);
    // public System.Void remove_didChangeColorEvent(System.Action`1<UnityEngine.Color> value)
    // Offset: 0x1A5C928
    void remove_didChangeColorEvent(System::Action_1<UnityEngine::Color>* value);
    // public System.Void add_didFinishEvent(System.Action`1<System.Boolean> value)
    // Offset: 0x1A5C480
    void add_didFinishEvent(System::Action_1<bool>* value);
    // public System.Void remove_didFinishEvent(System.Action`1<System.Boolean> value)
    // Offset: 0x1A5C9CC
    void remove_didFinishEvent(System::Action_1<bool>* value);
    // public System.Void SetColorCallback(System.Action`1<UnityEngine.Color> colorCallback)
    // Offset: 0x1A5E584
    void SetColorCallback(System::Action_1<UnityEngine::Color>* colorCallback);
    // public System.Void SetColor(UnityEngine.Color color)
    // Offset: 0x1A5CAF4
    void SetColor(UnityEngine::Color color);
    // private System.Void HandleHSVPanelControllerColorDidChange(UnityEngine.Color color, ColorChangeUIEventType colorChangeUIEventType)
    // Offset: 0x1A5E7F4
    void HandleHSVPanelControllerColorDidChange(UnityEngine::Color color, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType);
    // private System.Void HandlePreviousColorPanelControllerColorWasSelected(UnityEngine.Color color)
    // Offset: 0x1A5E938
    void HandlePreviousColorPanelControllerColorWasSelected(UnityEngine::Color color);
    // private System.Void HandleCancelButtonWasPressed()
    // Offset: 0x1A5E9BC
    void HandleCancelButtonWasPressed();
    // private System.Void HandleApplyButtonWasPressed()
    // Offset: 0x1A5EA4C
    void HandleApplyButtonWasPressed();
    // private System.Void ChangeColor(UnityEngine.Color color)
    // Offset: 0x1A5E870
    void ChangeColor(UnityEngine::Color color);
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0x1A5E58C
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
    // protected override System.Void DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    // Offset: 0x1A5E714
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    void DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling);
    // public System.Void .ctor()
    // Offset: 0x1A5EAB0
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static EditColorController* New_ctor();
  }; // EditColorController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::EditColorController*, "", "EditColorController");
#pragma pack(pop)
