// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: Entry because it is already included!
  // Skipping declaration: <Enumerate>d__11 because it is already included!
  // Forward declaring type: OrderedSet`1<T>
  template<typename T>
  class OrderedSet_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: ExpiringDictionary`2
  template<typename TKey, typename TValue>
  class ExpiringDictionary_2 : public ::Il2CppObject/*, public System::IDisposable, public System::Collections::Generic::IEnumerable_1<TValue>*/ {
    public:
    // Nested type: GlobalNamespace::ExpiringDictionary_2::Entry<TKey, TValue>
    class Entry;
    // Nested type: GlobalNamespace::ExpiringDictionary_2::$Enumerate$d__11<TKey, TValue>
    class $Enumerate$d__11;
    // Autogenerated type: ExpiringDictionary`2/Entry
    class Entry : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public System::IDisposable*/ {
      public:
      using declaring_type = ExpiringDictionary_2<TKey, TValue>*;
      static constexpr std::string_view NESTED_NAME = "Entry";
      // public TKey key
      // Offset: 0x0
      TKey key;
      // public TValue value
      // Offset: 0x0
      TValue value;
      // public System.Int64 expireTime
      // Offset: 0x0
      int64_t expireTime;
      // Creating interface conversion operator: operator System::IDisposable
      operator System::IDisposable() noexcept {
        return *reinterpret_cast<System::IDisposable*>(this);
      }
      // public System.Void Dispose()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.IDisposable
      // Base method: System.Void IDisposable::Dispose()
      void Dispose() {
        THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose"));
      }
      // Creating proxy method: System_IDisposable_Dispose
      // Maps to method: Dispose
      void System_IDisposable_Dispose() {
        Dispose();
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      static typename ExpiringDictionary_2<TKey, TValue>::Entry* New_ctor() {
        return THROW_UNLESS((il2cpp_utils::New<typename ExpiringDictionary_2<TKey, TValue>::Entry*>()));
      }
    }; // ExpiringDictionary`2/Entry
    // Autogenerated type: ExpiringDictionary`2/<Enumerate>d__11
    class $Enumerate$d__11 : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public System::Collections::Generic::IEnumerator_1<TValue>*/ {
      public:
      using declaring_type = ExpiringDictionary_2<TKey, TValue>*;
      static constexpr std::string_view NESTED_NAME = "$Enumerate$d__11";
      // private System.Int32 <>1__state
      // Offset: 0x0
      int $$1__state;
      // private TValue <>2__current
      // Offset: 0x0
      TValue $$2__current;
      // public ExpiringDictionary`2<TKey,TValue> <>4__this
      // Offset: 0x0
      GlobalNamespace::ExpiringDictionary_2<TKey, TValue>* $$4__this;
      // private System.Collections.Generic.IEnumerator`1<ExpiringDictionary`2/Entry<TKey,TValue>> <>7__wrap1
      // Offset: 0x0
      System::Collections::Generic::IEnumerator_1<typename GlobalNamespace::ExpiringDictionary_2<TKey, TValue>::Entry*>* $$7__wrap1;
      // Creating interface conversion operator: operator System::Collections::Generic::IEnumerator_1<TValue>
      operator System::Collections::Generic::IEnumerator_1<TValue>() noexcept {
        return *reinterpret_cast<System::Collections::Generic::IEnumerator_1<TValue>*>(this);
      }
      // public System.Void .ctor(System.Int32 <>1__state)
      // Offset: 0xFFFFFFFF
      static typename ExpiringDictionary_2<TKey, TValue>::$Enumerate$d__11* New_ctor(int $$1__state) {
        return THROW_UNLESS((il2cpp_utils::New<typename ExpiringDictionary_2<TKey, TValue>::$Enumerate$d__11*>($$1__state)));
      }
      // private System.Void <>m__Finally1()
      // Offset: 0xFFFFFFFF
      void $$m__Finally1() {
        THROW_UNLESS(il2cpp_utils::RunMethod(this, "<>m__Finally1"));
      }
      // private System.Void System.IDisposable.Dispose()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.IDisposable
      // Base method: System.Void IDisposable::Dispose()
      void System_IDisposable_Dispose() {
        THROW_UNLESS(il2cpp_utils::RunMethod(this, "System.IDisposable.Dispose"));
      }
      // private System.Boolean MoveNext()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Collections.IEnumerator
      // Base method: System.Boolean IEnumerator::MoveNext()
      bool MoveNext() {
        return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "MoveNext"));
      }
      // Creating proxy method: System_Collections_IEnumerator_MoveNext
      // Maps to method: MoveNext
      bool System_Collections_IEnumerator_MoveNext() {
        return MoveNext();
      }
      // private TValue System.Collections.Generic.IEnumerator<TValue>.get_Current()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Collections.Generic.IEnumerator`1
      // Base method: T IEnumerator_1::get_Current()
      TValue System_Collections_Generic_IEnumerator_1_get_Current() {
        return THROW_UNLESS((il2cpp_utils::RunMethod<TValue>(this, "System.Collections.Generic.IEnumerator<TValue>.get_Current")));
      }
      // private System.Void System.Collections.IEnumerator.Reset()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Collections.IEnumerator
      // Base method: System.Void IEnumerator::Reset()
      void System_Collections_IEnumerator_Reset() {
        THROW_UNLESS(il2cpp_utils::RunMethod(this, "System.Collections.IEnumerator.Reset"));
      }
      // private System.Object System.Collections.IEnumerator.get_Current()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Collections.IEnumerator
      // Base method: System.Object IEnumerator::get_Current()
      ::Il2CppObject* System_Collections_IEnumerator_get_Current() {
        return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppObject*>(this, "System.Collections.IEnumerator.get_Current"));
      }
    }; // ExpiringDictionary`2/<Enumerate>d__11
    // private readonly System.Int64 _expirationLengthTicks
    // Offset: 0x0
    int64_t expirationLengthTicks;
    // private readonly OrderedSet`1<ExpiringDictionary`2/Entry<TKey,TValue>> _expirationQueue
    // Offset: 0x0
    GlobalNamespace::OrderedSet_1<typename GlobalNamespace::ExpiringDictionary_2<TKey, TValue>::Entry*>* expirationQueue;
    // private readonly System.Collections.Generic.Dictionary`2<TKey,ExpiringDictionary`2/Entry<TKey,TValue>> _entryLookup
    // Offset: 0x0
    System::Collections::Generic::Dictionary_2<TKey, typename GlobalNamespace::ExpiringDictionary_2<TKey, TValue>::Entry*>* entryLookup;
    // private readonly System.Collections.Generic.List`1<ExpiringDictionary`2/Entry<TKey,TValue>> _reusableEntries
    // Offset: 0x0
    System::Collections::Generic::List_1<typename GlobalNamespace::ExpiringDictionary_2<TKey, TValue>::Entry*>* reusableEntries;
    // Creating interface conversion operator: operator System::IDisposable
    operator System::IDisposable() noexcept {
      return *reinterpret_cast<System::IDisposable*>(this);
    }
    // Creating interface conversion operator: operator System::Collections::Generic::IEnumerable_1<TValue>
    operator System::Collections::Generic::IEnumerable_1<TValue>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IEnumerable_1<TValue>*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static private System.Int32 kMaxReusableEntries
    static int _get_kMaxReusableEntries() {
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ExpiringDictionary_2<TKey, TValue>*>::get(), "kMaxReusableEntries")));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Int32 kMaxReusableEntries
    static void _set_kMaxReusableEntries(int value) {
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ExpiringDictionary_2<TKey, TValue>*>::get(), "kMaxReusableEntries", value)));
    }
    // public System.Void .ctor(System.Int64 expirationLengthTicksTicks)
    // Offset: 0xFFFFFFFF
    static ExpiringDictionary_2<TKey, TValue>* New_ctor(int64_t expirationLengthTicksTicks) {
      return THROW_UNLESS((il2cpp_utils::New<ExpiringDictionary_2<TKey, TValue>*>(expirationLengthTicksTicks)));
    }
    // static private System.Int32 CompareEntries(ExpiringDictionary`2/Entry<TKey,TValue> a, ExpiringDictionary`2/Entry<TKey,TValue> b)
    // Offset: 0xFFFFFFFF
    static int CompareEntries(typename GlobalNamespace::ExpiringDictionary_2<TKey, TValue>::Entry* a, typename GlobalNamespace::ExpiringDictionary_2<TKey, TValue>::Entry* b) {
      return THROW_UNLESS((il2cpp_utils::RunMethod<int>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ExpiringDictionary_2<TKey, TValue>*>::get(), "CompareEntries", a, b)));
    }
    // private System.Void RemoveExpiredEntries()
    // Offset: 0xFFFFFFFF
    void RemoveExpiredEntries() {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveExpiredEntries"));
    }
    // private System.Collections.Generic.IEnumerator`1<TValue> Enumerate()
    // Offset: 0xFFFFFFFF
    System::Collections::Generic::IEnumerator_1<TValue>* Enumerate() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerator_1<TValue>*>(this, "Enumerate"));
    }
    // public System.Boolean ContainsKey(TKey key)
    // Offset: 0xFFFFFFFF
    bool ContainsKey(TKey key) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ContainsKey", key));
    }
    // public System.Boolean TryGetValue(TKey key, out TValue value)
    // Offset: 0xFFFFFFFF
    bool TryGetValue(TKey key, TValue& value) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryGetValue", key, value));
    }
    // public System.Boolean TryGetValueAndResetExpiration(TKey key, out TValue value)
    // Offset: 0xFFFFFFFF
    bool TryGetValueAndResetExpiration(TKey key, TValue& value) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryGetValueAndResetExpiration", key, value));
    }
    // public System.Boolean Remove(TKey key)
    // Offset: 0xFFFFFFFF
    bool Remove(TKey key) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Remove", key));
    }
    // public System.Void ResetExpiration(TKey key)
    // Offset: 0xFFFFFFFF
    void ResetExpiration(TKey key) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResetExpiration", key));
    }
    // public System.Boolean Add(TKey key, TValue value)
    // Offset: 0xFFFFFFFF
    bool Add(TKey key, TValue value) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Add", key, value));
    }
    // private TValue Get(TKey key)
    // Offset: 0xFFFFFFFF
    TValue Get(TKey key) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<TValue>(this, "Get", key));
    }
    // private System.Void Set(TKey key, TValue value)
    // Offset: 0xFFFFFFFF
    void Set(TKey key, TValue value) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "Set", key, value));
    }
    // public TValue get_Item(TKey key)
    // Offset: 0xFFFFFFFF
    TValue get_Item(TKey key) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<TValue>(this, "get_Item", key));
    }
    // public System.Void set_Item(TKey key, TValue value)
    // Offset: 0xFFFFFFFF
    void set_Item(TKey key, TValue value) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_Item", key, value));
    }
    // public System.Void PollUpdate()
    // Offset: 0xFFFFFFFF
    void PollUpdate() {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "PollUpdate"));
    }
    // private ExpiringDictionary`2/Entry<TKey,TValue> GetEntry(TKey key, TValue value)
    // Offset: 0xFFFFFFFF
    typename GlobalNamespace::ExpiringDictionary_2<TKey, TValue>::Entry* GetEntry(TKey key, TValue value) {
      return THROW_UNLESS((il2cpp_utils::RunMethod<typename GlobalNamespace::ExpiringDictionary_2<TKey, TValue>::Entry*>(this, "GetEntry", key, value)));
    }
    // private System.Void ReleaseEntry(ExpiringDictionary`2/Entry<TKey,TValue> entry)
    // Offset: 0xFFFFFFFF
    void ReleaseEntry(typename GlobalNamespace::ExpiringDictionary_2<TKey, TValue>::Entry* entry) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReleaseEntry", entry));
    }
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.IEnumerable
    // Base method: System.Collections.IEnumerator IEnumerable::GetEnumerator()
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "System.Collections.IEnumerable.GetEnumerator"));
    }
    // private System.Collections.Generic.IEnumerator`1<TValue> System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.Generic.IEnumerable`1
    // Base method: System.Collections.Generic.IEnumerator`1<T> IEnumerable_1::GetEnumerator()
    System::Collections::Generic::IEnumerator_1<TValue>* System_Collections_Generic_IEnumerable_1_GetEnumerator() {
      return THROW_UNLESS((il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerator_1<TValue>*>(this, "System.Collections.Generic.IEnumerable<TValue>.GetEnumerator")));
    }
    // public System.Void Dispose()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose() {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose"));
    }
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose() {
      Dispose();
    }
  }; // ExpiringDictionary`2
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::ExpiringDictionary_2, "", "ExpiringDictionary`2");
#pragma pack(pop)
