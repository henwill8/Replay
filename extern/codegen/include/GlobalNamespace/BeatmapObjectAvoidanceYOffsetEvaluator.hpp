// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: BeatmapObjectSpawnMovementData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IAudioTimeSource
  class IAudioTimeSource;
  // Forward declaring type: BeatmapObjectSpawnController
  class BeatmapObjectSpawnController;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BeatmapObjectAvoidanceYOffsetEvaluator
  class BeatmapObjectAvoidanceYOffsetEvaluator : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::BufferData
    struct BufferData;
    // private System.Int32 _currentYJumpOffsetBufferEndIndex
    // Offset: 0x10
    int currentYJumpOffsetBufferEndIndex;
    // private readonly System.Single _jumpDurationToDesiredZPosition
    // Offset: 0x14
    float jumpDurationToDesiredZPosition;
    // private readonly BeatmapObjectAvoidanceYOffsetEvaluator/BufferData[] _yJumpOffsetBuffer
    // Offset: 0x18
    ::Array<GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::BufferData>* yJumpOffsetBuffer;
    // private readonly IAudioTimeSource _audioTimeSource
    // Offset: 0x20
    GlobalNamespace::IAudioTimeSource* audioTimeSource;
    // private readonly BeatmapObjectSpawnController _beatmapObjectSpawnController
    // Offset: 0x28
    GlobalNamespace::BeatmapObjectSpawnController* beatmapObjectSpawnController;
    // static field const value: static private System.Int32 kYJumpOffsetBufferLength
    static constexpr const int kYJumpOffsetBufferLength = 2000;
    // Get static field: static private System.Int32 kYJumpOffsetBufferLength
    static int _get_kYJumpOffsetBufferLength();
    // Set static field: static private System.Int32 kYJumpOffsetBufferLength
    static void _set_kYJumpOffsetBufferLength(int value);
    // static field const value: static private System.Single kYJumpOffsetBufferSongTimeInitValue
    static constexpr const float kYJumpOffsetBufferSongTimeInitValue = -1000;
    // Get static field: static private System.Single kYJumpOffsetBufferSongTimeInitValue
    static float _get_kYJumpOffsetBufferSongTimeInitValue();
    // Set static field: static private System.Single kYJumpOffsetBufferSongTimeInitValue
    static void _set_kYJumpOffsetBufferSongTimeInitValue(float value);
    // public System.Void .ctor(IAudioTimeSource audioTimeSource, BeatmapObjectSpawnController beatmapObjectSpawnController, System.Single moveToPlayerHeadTParam, BeatmapObjectSpawnMovementData/NoteSpawnData noteSpawnData)
    // Offset: 0x1A24770
    static BeatmapObjectAvoidanceYOffsetEvaluator* New_ctor(GlobalNamespace::IAudioTimeSource* audioTimeSource, GlobalNamespace::BeatmapObjectSpawnController* beatmapObjectSpawnController, float moveToPlayerHeadTParam, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData);
    // public System.Void ManualUpdate()
    // Offset: 0x1A2489C
    void ManualUpdate();
    // public System.Single GetJumpOffsetYAtJumpStartSongTime(System.Single lastDeltaTime)
    // Offset: 0x1A249B8
    float GetJumpOffsetYAtJumpStartSongTime(float lastDeltaTime);
  }; // BeatmapObjectAvoidanceYOffsetEvaluator
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator*, "", "BeatmapObjectAvoidanceYOffsetEvaluator");
#pragma pack(pop)
