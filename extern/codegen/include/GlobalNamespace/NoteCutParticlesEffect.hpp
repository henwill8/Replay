// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.ParticleSystem/EmitParams
#include "UnityEngine/ParticleSystem_EmitParams.hpp"
// Including type: UnityEngine.ParticleSystem/MainModule
#include "UnityEngine/ParticleSystem_MainModule.hpp"
// Including type: UnityEngine.ParticleSystem/ShapeModule
#include "UnityEngine/ParticleSystem_ShapeModule.hpp"
// Including type: UnityEngine.ParticleSystem/ForceOverLifetimeModule
#include "UnityEngine/ParticleSystem_ForceOverLifetimeModule.hpp"
// Including type: UnityEngine.ParticleSystem/MinMaxCurve
#include "UnityEngine/ParticleSystem_MinMaxCurve.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: ParticleSystem because it is already included!
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Color32 because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: NoteCutParticlesEffect
  class NoteCutParticlesEffect : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.ParticleSystem _sparklesPS
    // Offset: 0x18
    UnityEngine::ParticleSystem* sparklesPS;
    // private UnityEngine.ParticleSystem _explosionPS
    // Offset: 0x20
    UnityEngine::ParticleSystem* explosionPS;
    // private UnityEngine.ParticleSystem _explosionCorePS
    // Offset: 0x28
    UnityEngine::ParticleSystem* explosionCorePS;
    // private UnityEngine.ParticleSystem/EmitParams _sparklesPSEmitParams
    // Offset: 0x30
    UnityEngine::ParticleSystem::EmitParams sparklesPSEmitParams;
    // private UnityEngine.ParticleSystem/MainModule _sparklesPSMainModule
    // Offset: 0xC0
    UnityEngine::ParticleSystem::MainModule sparklesPSMainModule;
    // private UnityEngine.ParticleSystem/ShapeModule _sparklesPSShapeModule
    // Offset: 0xC8
    UnityEngine::ParticleSystem::ShapeModule sparklesPSShapeModule;
    // private UnityEngine.ParticleSystem/ForceOverLifetimeModule _explosionPSForceOverLifetimeModule
    // Offset: 0xD0
    UnityEngine::ParticleSystem::ForceOverLifetimeModule explosionPSForceOverLifetimeModule;
    // private UnityEngine.ParticleSystem/EmitParams _explosionPSEmitParams
    // Offset: 0xD8
    UnityEngine::ParticleSystem::EmitParams explosionPSEmitParams;
    // private UnityEngine.ParticleSystem/EmitParams _explosionCoresPSEmitParams
    // Offset: 0x168
    UnityEngine::ParticleSystem::EmitParams explosionCoresPSEmitParams;
    // private UnityEngine.ParticleSystem/MinMaxCurve _sparklesLifetimeMinMaxCurve
    // Offset: 0x1F8
    UnityEngine::ParticleSystem::MinMaxCurve sparklesLifetimeMinMaxCurve;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void Awake()
    // Offset: 0xFE2AE8
    void Awake();
    // public System.Void SpawnParticles(UnityEngine.Vector3 pos, UnityEngine.Vector3 cutNormal, UnityEngine.Vector3 saberDir, UnityEngine.Vector3 moveVec, UnityEngine.Color32 color, System.Int32 sparkleParticlesCount, System.Int32 explosionParticlesCount, System.Single lifetimeMultiplier)
    // Offset: 0xFE1F34
    void SpawnParticles(UnityEngine::Vector3 pos, UnityEngine::Vector3 cutNormal, UnityEngine::Vector3 saberDir, UnityEngine::Vector3 moveVec, UnityEngine::Color32 color, int sparkleParticlesCount, int explosionParticlesCount, float lifetimeMultiplier);
    // public System.Void .ctor()
    // Offset: 0xFE2C38
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static NoteCutParticlesEffect* New_ctor();
  }; // NoteCutParticlesEffect
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::NoteCutParticlesEffect*, "", "NoteCutParticlesEffect");
#pragma pack(pop)
