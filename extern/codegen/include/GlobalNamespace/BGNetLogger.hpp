// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
// Including type: BGNetDebug/ILogger
#include "GlobalNamespace/BGNetDebug_ILogger.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Microsoft::Extensions::Logging
namespace Microsoft::Extensions::Logging {
  // Forward declaring type: ILogger
  class ILogger;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BGNetLogger
  class BGNetLogger : public ::Il2CppObject/*, public GlobalNamespace::BGNetDebug::ILogger*/ {
    public:
    // private readonly Microsoft.Extensions.Logging.ILogger[] _loggers
    // Offset: 0x10
    ::Array<Microsoft::Extensions::Logging::ILogger*>* loggers;
    // Creating interface conversion operator: operator GlobalNamespace::BGNetDebug::ILogger
    operator GlobalNamespace::BGNetDebug::ILogger() noexcept {
      return *reinterpret_cast<GlobalNamespace::BGNetDebug::ILogger*>(this);
    }
    // Creating conversion operator: operator ::Array<Microsoft::Extensions::Logging::ILogger*>*
    constexpr operator ::Array<Microsoft::Extensions::Logging::ILogger*>*() const noexcept {
      return loggers;
    }
    // public System.Void .ctor(params Microsoft.Extensions.Logging.ILogger[] loggers)
    // Offset: 0x1B4314C
    static BGNetLogger* New_ctor(::Array<Microsoft::Extensions::Logging::ILogger*>* loggers);
    // Creating initializer_list -> params proxy for: System.Void .ctor(params Microsoft.Extensions.Logging.ILogger[] loggers)
    static BGNetLogger* New_ctor(std::initializer_list<Microsoft::Extensions::Logging::ILogger*> loggers);
    // Creating TArgs -> initializer_list proxy for: System.Void .ctor(params Microsoft.Extensions.Logging.ILogger[] loggers)
    template<class ...TParams>
    static BGNetLogger* New_ctor(TParams&&... loggers) {
      return New_ctor({loggers...});
    }
    // public System.Void LogError(System.String message)
    // Offset: 0x1B43180
    // Implemented from: BGNetDebug/ILogger
    // Base method: System.Void ILogger::LogError(System.String message)
    void LogError(::Il2CppString* message);
    // public System.Void LogInfo(System.String message)
    // Offset: 0x1B43284
    // Implemented from: BGNetDebug/ILogger
    // Base method: System.Void ILogger::LogInfo(System.String message)
    void LogInfo(::Il2CppString* message);
    // public System.Void LogWarning(System.String message)
    // Offset: 0x1B4338C
    // Implemented from: BGNetDebug/ILogger
    // Base method: System.Void ILogger::LogWarning(System.String message)
    void LogWarning(::Il2CppString* message);
  }; // BGNetLogger
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BGNetLogger*, "", "BGNetLogger");
#pragma pack(pop)
