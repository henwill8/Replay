// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.Boolean
#include "System/Boolean.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MainSettingsModelSO
  class MainSettingsModelSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MainSettingsDefaultValues
  class MainSettingsDefaultValues : public ::Il2CppObject {
    public:
    // static field const value: static public System.Single kDefaultRoomCenterX
    static constexpr const float kDefaultRoomCenterX = 0;
    // Get static field: static public System.Single kDefaultRoomCenterX
    static float _get_kDefaultRoomCenterX();
    // Set static field: static public System.Single kDefaultRoomCenterX
    static void _set_kDefaultRoomCenterX(float value);
    // static field const value: static public System.Single kDefaultRoomCenterY
    static constexpr const float kDefaultRoomCenterY = 0;
    // Get static field: static public System.Single kDefaultRoomCenterY
    static float _get_kDefaultRoomCenterY();
    // Set static field: static public System.Single kDefaultRoomCenterY
    static void _set_kDefaultRoomCenterY(float value);
    // static field const value: static public System.Single kDefaultRoomCenterZ
    static constexpr const float kDefaultRoomCenterZ = 0;
    // Get static field: static public System.Single kDefaultRoomCenterZ
    static float _get_kDefaultRoomCenterZ();
    // Set static field: static public System.Single kDefaultRoomCenterZ
    static void _set_kDefaultRoomCenterZ(float value);
    // static field const value: static public System.Single kDetaultControllerPositionX
    static constexpr const float kDetaultControllerPositionX = 0;
    // Get static field: static public System.Single kDetaultControllerPositionX
    static float _get_kDetaultControllerPositionX();
    // Set static field: static public System.Single kDetaultControllerPositionX
    static void _set_kDetaultControllerPositionX(float value);
    // static field const value: static public System.Single kDetaultControllerPositionY
    static constexpr const float kDetaultControllerPositionY = 0;
    // Get static field: static public System.Single kDetaultControllerPositionY
    static float _get_kDetaultControllerPositionY();
    // Set static field: static public System.Single kDetaultControllerPositionY
    static void _set_kDetaultControllerPositionY(float value);
    // static field const value: static public System.Single kDetaultControllerPositionZ
    static constexpr const float kDetaultControllerPositionZ = 0;
    // Get static field: static public System.Single kDetaultControllerPositionZ
    static float _get_kDetaultControllerPositionZ();
    // Set static field: static public System.Single kDetaultControllerPositionZ
    static void _set_kDetaultControllerPositionZ(float value);
    // static field const value: static public System.Single kDetaultControllerRotationX
    static constexpr const float kDetaultControllerRotationX = 0;
    // Get static field: static public System.Single kDetaultControllerRotationX
    static float _get_kDetaultControllerRotationX();
    // Set static field: static public System.Single kDetaultControllerRotationX
    static void _set_kDetaultControllerRotationX(float value);
    // static field const value: static public System.Single kDetaultControllerRotationY
    static constexpr const float kDetaultControllerRotationY = 0;
    // Get static field: static public System.Single kDetaultControllerRotationY
    static float _get_kDetaultControllerRotationY();
    // Set static field: static public System.Single kDetaultControllerRotationY
    static void _set_kDetaultControllerRotationY(float value);
    // static field const value: static public System.Single kDetaultControllerRotationZ
    static constexpr const float kDetaultControllerRotationZ = 0;
    // Get static field: static public System.Single kDetaultControllerRotationZ
    static float _get_kDetaultControllerRotationZ();
    // Set static field: static public System.Single kDetaultControllerRotationZ
    static void _set_kDetaultControllerRotationZ(float value);
    // static field const value: static public System.Int32 kDefaultWindowResolutionWidth
    static constexpr const int kDefaultWindowResolutionWidth = 1920;
    // Get static field: static public System.Int32 kDefaultWindowResolutionWidth
    static int _get_kDefaultWindowResolutionWidth();
    // Set static field: static public System.Int32 kDefaultWindowResolutionWidth
    static void _set_kDefaultWindowResolutionWidth(int value);
    // static field const value: static public System.Int32 kDefaultWindowResolutionHeight
    static constexpr const int kDefaultWindowResolutionHeight = 1080;
    // Get static field: static public System.Int32 kDefaultWindowResolutionHeight
    static int _get_kDefaultWindowResolutionHeight();
    // Set static field: static public System.Int32 kDefaultWindowResolutionHeight
    static void _set_kDefaultWindowResolutionHeight(int value);
    // static field const value: static public System.Int32 kDefaultMirrorGraphicsSettings
    static constexpr const int kDefaultMirrorGraphicsSettings = 0;
    // Get static field: static public System.Int32 kDefaultMirrorGraphicsSettings
    static int _get_kDefaultMirrorGraphicsSettings();
    // Set static field: static public System.Int32 kDefaultMirrorGraphicsSettings
    static void _set_kDefaultMirrorGraphicsSettings(int value);
    // static field const value: static public System.Int32 kDefaultMainEffectGraphicsSettings
    static constexpr const int kDefaultMainEffectGraphicsSettings = 0;
    // Get static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
    static int _get_kDefaultMainEffectGraphicsSettings();
    // Set static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
    static void _set_kDefaultMainEffectGraphicsSettings(int value);
    // static field const value: static public System.Int32 kDefaultBloomGraphicsSettings
    static constexpr const int kDefaultBloomGraphicsSettings = 0;
    // Get static field: static public System.Int32 kDefaultBloomGraphicsSettings
    static int _get_kDefaultBloomGraphicsSettings();
    // Set static field: static public System.Int32 kDefaultBloomGraphicsSettings
    static void _set_kDefaultBloomGraphicsSettings(int value);
    // static field const value: static public System.Boolean kDefaultSmokeGraphicsSettings
    static constexpr const bool kDefaultSmokeGraphicsSettings = false;
    // Get static field: static public System.Boolean kDefaultSmokeGraphicsSettings
    static bool _get_kDefaultSmokeGraphicsSettings();
    // Set static field: static public System.Boolean kDefaultSmokeGraphicsSettings
    static void _set_kDefaultSmokeGraphicsSettings(bool value);
    // static field const value: static public System.Int32 kDefaultAntiAliasingLevel
    static constexpr const int kDefaultAntiAliasingLevel = 4;
    // Get static field: static public System.Int32 kDefaultAntiAliasingLevel
    static int _get_kDefaultAntiAliasingLevel();
    // Set static field: static public System.Int32 kDefaultAntiAliasingLevel
    static void _set_kDefaultAntiAliasingLevel(int value);
    // static field const value: static public System.Single kDefaultVrResolutionScale
    static constexpr const float kDefaultVrResolutionScale = 1;
    // Get static field: static public System.Single kDefaultVrResolutionScale
    static float _get_kDefaultVrResolutionScale();
    // Set static field: static public System.Single kDefaultVrResolutionScale
    static void _set_kDefaultVrResolutionScale(float value);
    // static field const value: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
    static constexpr const float kDefaultMenuVRResolutionScaleMultiplier = 1.2;
    // Get static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
    static float _get_kDefaultMenuVRResolutionScaleMultiplier();
    // Set static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
    static void _set_kDefaultMenuVRResolutionScaleMultiplier(float value);
    // static field const value: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
    static constexpr const bool kDefaultUseFixedFoveatedRenderingDuringGameplay = true;
    // Get static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
    static bool _get_kDefaultUseFixedFoveatedRenderingDuringGameplay();
    // Set static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
    static void _set_kDefaultUseFixedFoveatedRenderingDuringGameplay(bool value);
    // static field const value: static public System.Boolean kDefaultBurnMarkTrailsEnabled
    static constexpr const bool kDefaultBurnMarkTrailsEnabled = false;
    // Get static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
    static bool _get_kDefaultBurnMarkTrailsEnabled();
    // Set static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
    static void _set_kDefaultBurnMarkTrailsEnabled(bool value);
    // static field const value: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
    static constexpr const bool kDefaultScreenDisplacementEffectsEnabled = false;
    // Get static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
    static bool _get_kDefaultScreenDisplacementEffectsEnabled();
    // Set static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
    static void _set_kDefaultScreenDisplacementEffectsEnabled(bool value);
    // static field const value: static public System.Single kDefaultAudioLatency
    static constexpr const float kDefaultAudioLatency = 0.09;
    // Get static field: static public System.Single kDefaultAudioLatency
    static float _get_kDefaultAudioLatency();
    // Set static field: static public System.Single kDefaultAudioLatency
    static void _set_kDefaultAudioLatency(float value);
    // static field const value: static public System.Int32 kMaxShockwaveParticles
    static constexpr const int kMaxShockwaveParticles = 0;
    // Get static field: static public System.Int32 kMaxShockwaveParticles
    static int _get_kMaxShockwaveParticles();
    // Set static field: static public System.Int32 kMaxShockwaveParticles
    static void _set_kMaxShockwaveParticles(int value);
    // static field const value: static public System.Int32 kMaxNumberOfCutSoundEffects
    static constexpr const int kMaxNumberOfCutSoundEffects = 16;
    // Get static field: static public System.Int32 kMaxNumberOfCutSoundEffects
    static int _get_kMaxNumberOfCutSoundEffects();
    // Set static field: static public System.Int32 kMaxNumberOfCutSoundEffects
    static void _set_kMaxNumberOfCutSoundEffects(int value);
    // static field const value: static public System.Boolean kCreateScreenshotDuringTheGame
    static constexpr const bool kCreateScreenshotDuringTheGame = false;
    // Get static field: static public System.Boolean kCreateScreenshotDuringTheGame
    static bool _get_kCreateScreenshotDuringTheGame();
    // Set static field: static public System.Boolean kCreateScreenshotDuringTheGame
    static void _set_kCreateScreenshotDuringTheGame(bool value);
    // static field const value: static public System.Int32 kDefaultPauseButtonPressDurationLevel
    static constexpr const int kDefaultPauseButtonPressDurationLevel = 0;
    // Get static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
    static int _get_kDefaultPauseButtonPressDurationLevel();
    // Set static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
    static void _set_kDefaultPauseButtonPressDurationLevel(int value);
    // static public System.Void SetFixedDefaultValues(MainSettingsModelSO mainSettingsModel)
    // Offset: 0xBFFDE0
    static void SetFixedDefaultValues(GlobalNamespace::MainSettingsModelSO* mainSettingsModel);
    // public System.Void .ctor()
    // Offset: 0xBFFF38
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static MainSettingsDefaultValues* New_ctor();
  }; // MainSettingsDefaultValues
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MainSettingsDefaultValues*, "", "MainSettingsDefaultValues");
#pragma pack(pop)
