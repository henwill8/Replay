// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FloatSignal
  class FloatSignal;
  // Forward declaring type: FloatUnityEvent
  class FloatUnityEvent;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: FloatSignalListener
  // [] Offset: FFFFFFFF
  class FloatSignalListener : public UnityEngine::MonoBehaviour {
    public:
    // private FloatSignal _floatSignal
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::FloatSignal* floatSignal;
    // Field size check
    static_assert(sizeof(GlobalNamespace::FloatSignal*) == 0x8);
    // private FloatUnityEvent _unityEvent
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::FloatUnityEvent* unityEvent;
    // Field size check
    static_assert(sizeof(GlobalNamespace::FloatUnityEvent*) == 0x8);
    // Creating value type constructor for type: FloatSignalListener
    FloatSignalListener(GlobalNamespace::FloatSignal* floatSignal_ = {}, GlobalNamespace::FloatUnityEvent* unityEvent_ = {}) noexcept : floatSignal{floatSignal_}, unityEvent{unityEvent_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void OnEnable()
    // Offset: 0x110A964
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x110AA00
    void OnDisable();
    // private System.Void HandleEvent(System.Single f)
    // Offset: 0x110AA9C
    void HandleEvent(float f);
    // public System.Void .ctor()
    // Offset: 0x110AB04
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FloatSignalListener* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloatSignalListener::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FloatSignalListener*, creationType>()));
    }
  }; // FloatSignalListener
  #pragma pack(pop)
  static check_size<sizeof(FloatSignalListener), 32 + sizeof(GlobalNamespace::FloatUnityEvent*)> __GlobalNamespace_FloatSignalListenerSizeCheck;
  static_assert(sizeof(FloatSignalListener) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::FloatSignalListener*, "", "FloatSignalListener");
