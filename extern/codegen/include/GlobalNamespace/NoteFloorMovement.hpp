// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PlayerController
  class PlayerController;
  // Forward declaring type: AudioTimeSyncController
  class AudioTimeSyncController;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: NoteFloorMovement
  class NoteFloorMovement : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.Transform _rotatedObject
    // Offset: 0x18
    UnityEngine::Transform* rotatedObject;
    // private PlayerController _playerController
    // Offset: 0x20
    GlobalNamespace::PlayerController* playerController;
    // private AudioTimeSyncController _audioTimeSyncController
    // Offset: 0x28
    GlobalNamespace::AudioTimeSyncController* audioTimeSyncController;
    // private System.Action floorMovementDidFinishEvent
    // Offset: 0x30
    System::Action* floorMovementDidFinishEvent;
    // private UnityEngine.Vector3 _startPos
    // Offset: 0x38
    UnityEngine::Vector3 startPos;
    // private UnityEngine.Vector3 _endPos
    // Offset: 0x44
    UnityEngine::Vector3 endPos;
    // private System.Single _moveDuration
    // Offset: 0x50
    float moveDuration;
    // private System.Single _startTime
    // Offset: 0x54
    float startTime;
    // private UnityEngine.Quaternion _worldRotation
    // Offset: 0x58
    UnityEngine::Quaternion worldRotation;
    // private UnityEngine.Quaternion _inverseWorldRotation
    // Offset: 0x68
    UnityEngine::Quaternion inverseWorldRotation;
    // private UnityEngine.Vector3 _localPosition
    // Offset: 0x78
    UnityEngine::Vector3 localPosition;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_floorMovementDidFinishEvent(System.Action value)
    // Offset: 0xC2F988
    void add_floorMovementDidFinishEvent(System::Action* value);
    // public System.Void remove_floorMovementDidFinishEvent(System.Action value)
    // Offset: 0xC2FA2C
    void remove_floorMovementDidFinishEvent(System::Action* value);
    // public System.Single get_distanceToPlayer()
    // Offset: 0xC2FAD0
    float get_distanceToPlayer();
    // public UnityEngine.Vector3 get_startPos()
    // Offset: 0xC2FBBC
    UnityEngine::Vector3 get_startPos();
    // public UnityEngine.Vector3 get_endPos()
    // Offset: 0xC2FBC8
    UnityEngine::Vector3 get_endPos();
    // public System.Single get_startTime()
    // Offset: 0xC2FBD4
    float get_startTime();
    // public System.Single get_moveDuration()
    // Offset: 0xC2FBDC
    float get_moveDuration();
    // public UnityEngine.Quaternion get_worldRotation()
    // Offset: 0xC2FBE4
    UnityEngine::Quaternion get_worldRotation();
    // public UnityEngine.Quaternion get_inverseWorldRotation()
    // Offset: 0xC2FBF0
    UnityEngine::Quaternion get_inverseWorldRotation();
    // public System.Void Init(System.Single worldRotation, UnityEngine.Vector3 startPos, UnityEngine.Vector3 endPos, System.Single moveDuration, System.Single startTime)
    // Offset: 0xC2FBFC
    void Init(float worldRotation, UnityEngine::Vector3 startPos, UnityEngine::Vector3 endPos, float moveDuration, float startTime);
    // public UnityEngine.Vector3 SetToStart()
    // Offset: 0xC2FCF4
    UnityEngine::Vector3 SetToStart();
    // public UnityEngine.Vector3 ManualUpdate()
    // Offset: 0xC2FE24
    UnityEngine::Vector3 ManualUpdate();
    // public System.Void .ctor()
    // Offset: 0xC2FFA4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static NoteFloorMovement* New_ctor();
  }; // NoteFloorMovement
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::NoteFloorMovement*, "", "NoteFloorMovement");
#pragma pack(pop)
