// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PersistentSingleton`1
#include "GlobalNamespace/PersistentSingleton_1.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Queue`1<T>
  template<typename T>
  class Queue_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: HMMainThreadDispatcher
  class HMMainThreadDispatcher : public GlobalNamespace::PersistentSingleton_1<GlobalNamespace::HMMainThreadDispatcher*> {
    public:
    // Nested type: GlobalNamespace::HMMainThreadDispatcher::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    // Nested type: GlobalNamespace::HMMainThreadDispatcher::$ActionCoroutine$d__5
    class $ActionCoroutine$d__5;
    // Get static field: static private System.Collections.Generic.Queue`1<System.Action> _mainThreadExecutionQueue
    static System::Collections::Generic::Queue_1<System::Action*>* _get__mainThreadExecutionQueue();
    // Set static field: static private System.Collections.Generic.Queue`1<System.Action> _mainThreadExecutionQueue
    static void _set__mainThreadExecutionQueue(System::Collections::Generic::Queue_1<System::Action*>* value);
    // protected System.Void Update()
    // Offset: 0xCB68DC
    void Update();
    // public System.Void Enqueue(System.Collections.IEnumerator action)
    // Offset: 0xCB6A54
    void Enqueue(System::Collections::IEnumerator* action);
    // public System.Void Enqueue(System.Action action)
    // Offset: 0xCB6C00
    void Enqueue(System::Action* action);
    // private System.Collections.IEnumerator ActionCoroutine(System.Action action)
    // Offset: 0xCB6C28
    System::Collections::IEnumerator* ActionCoroutine(System::Action* action);
    // static protected System.Void NoDomainReloadInit()
    // Offset: 0xCB681C
    // Implemented from: PersistentSingleton`1
    // Base method: System.Void PersistentSingleton`1::NoDomainReloadInit()
    static void NoDomainReloadInit();
    // public System.Void .ctor()
    // Offset: 0xCB6CD0
    // Implemented from: PersistentSingleton`1
    // Base method: System.Void PersistentSingleton`1::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static HMMainThreadDispatcher* New_ctor();
    // static private System.Void .cctor()
    // Offset: 0xCB6D40
    // Implemented from: PersistentSingleton`1
    // Base method: System.Void PersistentSingleton`1::.cctor()
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // HMMainThreadDispatcher
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::HMMainThreadDispatcher*, "", "HMMainThreadDispatcher");
#pragma pack(pop)
