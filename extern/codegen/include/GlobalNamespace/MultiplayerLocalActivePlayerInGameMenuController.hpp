// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: MultiplayerController
#include "GlobalNamespace/MultiplayerController.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MultiplayerLocalActivePlayerInGameMenuViewController
  class MultiplayerLocalActivePlayerInGameMenuViewController;
  // Forward declaring type: IMenuButtonTrigger
  class IMenuButtonTrigger;
  // Forward declaring type: IVRPlatformHelper
  class IVRPlatformHelper;
  // Forward declaring type: SaberManager
  class SaberManager;
  // Forward declaring type: BeatmapObjectManager
  class BeatmapObjectManager;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MultiplayerLocalActivePlayerInGameMenuController
  class MultiplayerLocalActivePlayerInGameMenuController : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController::$$c__DisplayClass16_0
    class $$c__DisplayClass16_0;
    // private readonly MultiplayerLocalActivePlayerInGameMenuViewController _inGameMenuViewController
    // Offset: 0x18
    GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuViewController* inGameMenuViewController;
    // private readonly IMenuButtonTrigger _menuButtonTrigger
    // Offset: 0x20
    GlobalNamespace::IMenuButtonTrigger* menuButtonTrigger;
    // private readonly IVRPlatformHelper _vrPlatformHelper
    // Offset: 0x28
    GlobalNamespace::IVRPlatformHelper* vrPlatformHelper;
    // private readonly MultiplayerController _multiplayerController
    // Offset: 0x30
    GlobalNamespace::MultiplayerController* multiplayerController;
    // private readonly SaberManager _saberManager
    // Offset: 0x38
    GlobalNamespace::SaberManager* saberManager;
    // private readonly BeatmapObjectManager _beatmapObjectManager
    // Offset: 0x40
    GlobalNamespace::BeatmapObjectManager* beatmapObjectManager;
    // private System.Action didGiveUpEvent
    // Offset: 0x48
    System::Action* didGiveUpEvent;
    // private System.Action`1<System.Action`1<System.Boolean>> canShowInGameMenuEvent
    // Offset: 0x50
    System::Action_1<System::Action_1<bool>*>* canShowInGameMenuEvent;
    // private System.Action requestsDisconnectEvent
    // Offset: 0x58
    System::Action* requestsDisconnectEvent;
    // private System.Boolean _gameMenuIsShown
    // Offset: 0x60
    bool gameMenuIsShown;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_didGiveUpEvent(System.Action value)
    // Offset: 0xF6DF0C
    void add_didGiveUpEvent(System::Action* value);
    // public System.Void remove_didGiveUpEvent(System.Action value)
    // Offset: 0xF6E434
    void remove_didGiveUpEvent(System::Action* value);
    // public System.Void add_canShowInGameMenuEvent(System.Action`1<System.Action`1<System.Boolean>> value)
    // Offset: 0xF6EBD4
    void add_canShowInGameMenuEvent(System::Action_1<System::Action_1<bool>*>* value);
    // public System.Void remove_canShowInGameMenuEvent(System.Action`1<System.Action`1<System.Boolean>> value)
    // Offset: 0xF6EC78
    void remove_canShowInGameMenuEvent(System::Action_1<System::Action_1<bool>*>* value);
    // public System.Void add_requestsDisconnectEvent(System.Action value)
    // Offset: 0xF6DFB0
    void add_requestsDisconnectEvent(System::Action* value);
    // public System.Void remove_requestsDisconnectEvent(System.Action value)
    // Offset: 0xF6E4D8
    void remove_requestsDisconnectEvent(System::Action* value);
    // private System.Boolean get_canShowInGameMenu()
    // Offset: 0xF6ED1C
    bool get_canShowInGameMenu();
    // protected System.Void Start()
    // Offset: 0xF6EE08
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0xF6F2DC
    void OnDestroy();
    // protected System.Void OnApplicationPause(System.Boolean pauseStatus)
    // Offset: 0xF6F7D8
    void OnApplicationPause(bool pauseStatus);
    // public System.Void ShowInGameMenu()
    // Offset: 0xF6F7E4
    void ShowInGameMenu();
    // private System.Void HideInGameMenu()
    // Offset: 0xF6F084
    void HideInGameMenu();
    // private System.Void HandleMenuButtonTriggered()
    // Offset: 0xF6F90C
    void HandleMenuButtonTriggered();
    // private System.Void HandleInputFocusWasCaptured()
    // Offset: 0xF6F910
    void HandleInputFocusWasCaptured();
    // private System.Void HandleInGameMenuViewControllerDidPressResumeButton()
    // Offset: 0xF6F914
    void HandleInGameMenuViewControllerDidPressResumeButton();
    // private System.Void HandleInGameMenuViewControllerDidPressGiveUpButton()
    // Offset: 0xF6F918
    void HandleInGameMenuViewControllerDidPressGiveUpButton();
    // private System.Void HandleInGameMenuViewControllerDidPressDisconnectButton()
    // Offset: 0xF6F95C
    void HandleInGameMenuViewControllerDidPressDisconnectButton();
    // private System.Void HandleStateChanged(MultiplayerController/State state)
    // Offset: 0xF6F970
    void HandleStateChanged(GlobalNamespace::MultiplayerController::State state);
    // public System.Void .ctor()
    // Offset: 0xF6FB20
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static MultiplayerLocalActivePlayerInGameMenuController* New_ctor();
  }; // MultiplayerLocalActivePlayerInGameMenuController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerLocalActivePlayerInGameMenuController*, "", "MultiplayerLocalActivePlayerInGameMenuController");
#pragma pack(pop)
