// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: CoreGameHUDController
#include "GlobalNamespace/CoreGameHUDController.hpp"
// Including type: MultiplayerController
#include "GlobalNamespace/MultiplayerController.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MultiplayerPlayersManager
  class MultiplayerPlayersManager;
  // Forward declaring type: MultiplayerScoreProvider
  class MultiplayerScoreProvider;
  // Forward declaring type: IMultiplayerSessionManager
  class IMultiplayerSessionManager;
  // Forward declaring type: MultiplayerLayoutProvider
  class MultiplayerLayoutProvider;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MultiplayerOtherPlayersScoreDiffTextManager
  class MultiplayerOtherPlayersScoreDiffTextManager : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::MultiplayerOtherPlayersScoreDiffTextManager::$$c
    class $$c;
    // private readonly MultiplayerController _multiplayerController
    // Offset: 0x18
    GlobalNamespace::MultiplayerController* multiplayerController;
    // private readonly MultiplayerPlayersManager _playersManager
    // Offset: 0x20
    GlobalNamespace::MultiplayerPlayersManager* playersManager;
    // private readonly MultiplayerScoreProvider _scoreProvider
    // Offset: 0x28
    GlobalNamespace::MultiplayerScoreProvider* scoreProvider;
    // private readonly IMultiplayerSessionManager _multiplayerSessionManager
    // Offset: 0x30
    GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager;
    // private readonly MultiplayerLayoutProvider _layoutProvider
    // Offset: 0x38
    GlobalNamespace::MultiplayerLayoutProvider* layoutProvider;
    // private readonly CoreGameHUDController/InitData _initData
    // Offset: 0x40
    GlobalNamespace::CoreGameHUDController::InitData* initData;
    // private System.Single _timeToNextUpdate
    // Offset: 0x48
    float timeToNextUpdate;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // static field const value: static private System.Single kUpdateInterval
    static constexpr const float kUpdateInterval = 0.5;
    // Get static field: static private System.Single kUpdateInterval
    static float _get_kUpdateInterval();
    // Set static field: static private System.Single kUpdateInterval
    static void _set_kUpdateInterval(float value);
    // protected System.Void Start()
    // Offset: 0xF7803C
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0xF78104
    void OnDestroy();
    // protected System.Void Update()
    // Offset: 0xF781E0
    void Update();
    // private System.Void InitLeftRightPositions()
    // Offset: 0xF78B54
    void InitLeftRightPositions();
    // private System.Void HideAll()
    // Offset: 0xF785A8
    void HideAll();
    // private System.Void HandleStateChanged(MultiplayerController/State newState)
    // Offset: 0xF79058
    void HandleStateChanged(GlobalNamespace::MultiplayerController::State newState);
    // public System.Void .ctor()
    // Offset: 0xF79178
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static MultiplayerOtherPlayersScoreDiffTextManager* New_ctor();
  }; // MultiplayerOtherPlayersScoreDiffTextManager
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerOtherPlayersScoreDiffTextManager*, "", "MultiplayerOtherPlayersScoreDiffTextManager");
#pragma pack(pop)
