// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: IRefreshable
#include "GlobalNamespace/IRefreshable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Toggle
  class Toggle;
  // Forward declaring type: Button
  class Button;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ColorSchemeDropdownWithTableView
  class ColorSchemeDropdownWithTableView;
  // Forward declaring type: EditColorSchemeController
  class EditColorSchemeController;
  // Forward declaring type: ColorSchemesTableViewDataSource
  class ColorSchemesTableViewDataSource;
  // Forward declaring type: ColorSchemesSettings
  class ColorSchemesSettings;
  // Forward declaring type: ColorScheme
  class ColorScheme;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: ModalView
  class ModalView;
  // Forward declaring type: PanelAnimationSO
  class PanelAnimationSO;
  // Forward declaring type: ButtonBinder
  class ButtonBinder;
  // Forward declaring type: DropdownWithTableView
  class DropdownWithTableView;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: ColorsOverrideSettingsPanelController
  class ColorsOverrideSettingsPanelController : public UnityEngine::MonoBehaviour, public GlobalNamespace::IRefreshable {
    public:
    // private UnityEngine.UI.Toggle _overrideColorsToggle
    // Offset: 0x18
    UnityEngine::UI::Toggle* overrideColorsToggle;
    // private UnityEngine.GameObject _detailsPanelGO
    // Offset: 0x20
    UnityEngine::GameObject* detailsPanelGO;
    // private ColorSchemeDropdownWithTableView _colorSchemeDropDown
    // Offset: 0x28
    GlobalNamespace::ColorSchemeDropdownWithTableView* colorSchemeDropDown;
    // private EditColorSchemeController _editColorSchemeController
    // Offset: 0x30
    GlobalNamespace::EditColorSchemeController* editColorSchemeController;
    // private HMUI.ModalView _editColorSchemeModalView
    // Offset: 0x38
    HMUI::ModalView* editColorSchemeModalView;
    // private UnityEngine.UI.Button _editColorSchemeButton
    // Offset: 0x40
    UnityEngine::UI::Button* editColorSchemeButton;
    // private HMUI.PanelAnimationSO _presentPanelAnimation
    // Offset: 0x48
    HMUI::PanelAnimationSO* presentPanelAnimation;
    // private HMUI.PanelAnimationSO _dismissPanelAnimation
    // Offset: 0x50
    HMUI::PanelAnimationSO* dismissPanelAnimation;
    // private ColorSchemesTableViewDataSource _colorSchemesTableViewDataSourceTemplate
    // Offset: 0x58
    GlobalNamespace::ColorSchemesTableViewDataSource* colorSchemesTableViewDataSourceTemplate;
    // private ColorSchemesSettings _colorSchemesSettings
    // Offset: 0x60
    GlobalNamespace::ColorSchemesSettings* colorSchemesSettings;
    // private System.Boolean _initialized
    // Offset: 0x68
    bool initialized;
    // private HMUI.ButtonBinder _buttonBinder
    // Offset: 0x70
    HMUI::ButtonBinder* buttonBinder;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public ColorSchemesSettings get_colorSchemesSettings()
    // Offset: 0xBE0E18
    GlobalNamespace::ColorSchemesSettings* get_colorSchemesSettings();
    // public System.Void SetData(ColorSchemesSettings colorSchemesSettings)
    // Offset: 0xBE0E20
    void SetData(GlobalNamespace::ColorSchemesSettings* colorSchemesSettings);
    // protected System.Void OnDestroy()
    // Offset: 0xBE1180
    void OnDestroy();
    // protected System.Void OnDisable()
    // Offset: 0xBE14B8
    void OnDisable();
    // private System.Void HandleDropDownDidSelectCellWithIdx(HMUI.DropdownWithTableView dropDownWithTableView, System.Int32 idx)
    // Offset: 0xBE16A8
    void HandleDropDownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropDownWithTableView, int idx);
    // private System.Void HandleOverrideColorsToggleValueChanged(System.Boolean isOn)
    // Offset: 0xBE171C
    void HandleOverrideColorsToggleValueChanged(bool isOn);
    // private System.Void HandleEditColorSchemeButtonWasPressed()
    // Offset: 0xBE1830
    void HandleEditColorSchemeButtonWasPressed();
    // private System.Void HandleEditColorSchemeControllerDidFinish()
    // Offset: 0xBE18CC
    void HandleEditColorSchemeControllerDidFinish();
    // private System.Void HandleEditColorSchemeControllerDidChangeColorScheme(ColorScheme colorScheme)
    // Offset: 0xBE1928
    void HandleEditColorSchemeControllerDidChangeColorScheme(GlobalNamespace::ColorScheme* colorScheme);
    // private System.Void <HandleOverrideColorsToggleValueChanged>b__19_0()
    // Offset: 0xBE1948
    void $HandleOverrideColorsToggleValueChanged$b__19_0();
    // public System.Void Refresh()
    // Offset: 0xBE14DC
    // Implemented from: IRefreshable
    // Base method: System.Void IRefreshable::Refresh()
    void Refresh();
    // public System.Void .ctor()
    // Offset: 0xBE1940
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static ColorsOverrideSettingsPanelController* New_ctor();
  }; // ColorsOverrideSettingsPanelController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ColorsOverrideSettingsPanelController*, "", "ColorsOverrideSettingsPanelController");
#pragma pack(pop)
