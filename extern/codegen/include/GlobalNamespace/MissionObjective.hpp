// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: ReferenceValueComparisonType because it is already included!
  // Forward declaring type: MissionObjectiveTypeSO
  class MissionObjectiveTypeSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MissionObjective
  class MissionObjective : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::MissionObjective::ReferenceValueComparisonType
    struct ReferenceValueComparisonType;
    // Autogenerated type: MissionObjective/ReferenceValueComparisonType
    struct ReferenceValueComparisonType : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: ReferenceValueComparisonType
      constexpr ReferenceValueComparisonType(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MissionObjective/ReferenceValueComparisonType None
      static constexpr const int None = 0;
      // Get static field: static public MissionObjective/ReferenceValueComparisonType None
      static GlobalNamespace::MissionObjective::ReferenceValueComparisonType _get_None();
      // Set static field: static public MissionObjective/ReferenceValueComparisonType None
      static void _set_None(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value);
      // static field const value: static public MissionObjective/ReferenceValueComparisonType Equal
      static constexpr const int Equal = 1;
      // Get static field: static public MissionObjective/ReferenceValueComparisonType Equal
      static GlobalNamespace::MissionObjective::ReferenceValueComparisonType _get_Equal();
      // Set static field: static public MissionObjective/ReferenceValueComparisonType Equal
      static void _set_Equal(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value);
      // static field const value: static public MissionObjective/ReferenceValueComparisonType Max
      static constexpr const int Max = 2;
      // Get static field: static public MissionObjective/ReferenceValueComparisonType Max
      static GlobalNamespace::MissionObjective::ReferenceValueComparisonType _get_Max();
      // Set static field: static public MissionObjective/ReferenceValueComparisonType Max
      static void _set_Max(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value);
      // static field const value: static public MissionObjective/ReferenceValueComparisonType Min
      static constexpr const int Min = 3;
      // Get static field: static public MissionObjective/ReferenceValueComparisonType Min
      static GlobalNamespace::MissionObjective::ReferenceValueComparisonType _get_Min();
      // Set static field: static public MissionObjective/ReferenceValueComparisonType Min
      static void _set_Min(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value);
    }; // MissionObjective/ReferenceValueComparisonType
    // private MissionObjectiveTypeSO _type
    // Offset: 0x10
    GlobalNamespace::MissionObjectiveTypeSO* type;
    // private MissionObjective/ReferenceValueComparisonType _referenceValueComparisonType
    // Offset: 0x18
    GlobalNamespace::MissionObjective::ReferenceValueComparisonType referenceValueComparisonType;
    // private System.Int32 _referenceValue
    // Offset: 0x1C
    int referenceValue;
    // public MissionObjectiveTypeSO get_type()
    // Offset: 0xC0B7F0
    GlobalNamespace::MissionObjectiveTypeSO* get_type();
    // public MissionObjective/ReferenceValueComparisonType get_referenceValueComparisonType()
    // Offset: 0xC0B7F8
    GlobalNamespace::MissionObjective::ReferenceValueComparisonType get_referenceValueComparisonType();
    // public System.Int32 get_referenceValue()
    // Offset: 0xC0B800
    int get_referenceValue();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xC0B8F0
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0xC0BA00
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public System.Void .ctor()
    // Offset: 0xC0BA70
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static MissionObjective* New_ctor();
  }; // MissionObjective
  // static public System.Boolean op_Equality(MissionObjective obj1, MissionObjective obj2)
  // Offset: 0xC0B808
  bool operator ==(GlobalNamespace::MissionObjective* obj1, GlobalNamespace::MissionObjective& obj2);
  // static public System.Boolean op_Inequality(MissionObjective obj1, MissionObjective obj2)
  // Offset: 0xC0B8D4
  bool operator !=(GlobalNamespace::MissionObjective* obj1, GlobalNamespace::MissionObjective& obj2);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MissionObjective*, "", "MissionObjective");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MissionObjective::ReferenceValueComparisonType, "", "MissionObjective/ReferenceValueComparisonType");
#pragma pack(pop)
