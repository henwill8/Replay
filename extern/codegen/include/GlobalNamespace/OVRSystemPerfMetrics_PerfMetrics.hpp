// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSystemPerfMetrics
#include "GlobalNamespace/OVRSystemPerfMetrics.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRSystemPerfMetrics/PerfMetrics
  class OVRSystemPerfMetrics::PerfMetrics : public ::Il2CppObject {
    public:
    // public System.Int32 frameCount
    // Offset: 0x10
    int frameCount;
    // public System.Single frameTime
    // Offset: 0x14
    float frameTime;
    // public System.Single deltaFrameTime
    // Offset: 0x18
    float deltaFrameTime;
    // public System.Boolean appCpuTime_IsValid
    // Offset: 0x1C
    bool appCpuTime_IsValid;
    // public System.Single appCpuTime
    // Offset: 0x20
    float appCpuTime;
    // public System.Boolean appGpuTime_IsValid
    // Offset: 0x24
    bool appGpuTime_IsValid;
    // public System.Single appGpuTime
    // Offset: 0x28
    float appGpuTime;
    // public System.Boolean compositorCpuTime_IsValid
    // Offset: 0x2C
    bool compositorCpuTime_IsValid;
    // public System.Single compositorCpuTime
    // Offset: 0x30
    float compositorCpuTime;
    // public System.Boolean compositorGpuTime_IsValid
    // Offset: 0x34
    bool compositorGpuTime_IsValid;
    // public System.Single compositorGpuTime
    // Offset: 0x38
    float compositorGpuTime;
    // public System.Boolean compositorDroppedFrameCount_IsValid
    // Offset: 0x3C
    bool compositorDroppedFrameCount_IsValid;
    // public System.Int32 compositorDroppedFrameCount
    // Offset: 0x40
    int compositorDroppedFrameCount;
    // public System.Boolean systemGpuUtilPercentage_IsValid
    // Offset: 0x44
    bool systemGpuUtilPercentage_IsValid;
    // public System.Single systemGpuUtilPercentage
    // Offset: 0x48
    float systemGpuUtilPercentage;
    // public System.Boolean systemCpuUtilAveragePercentage_IsValid
    // Offset: 0x4C
    bool systemCpuUtilAveragePercentage_IsValid;
    // public System.Single systemCpuUtilAveragePercentage
    // Offset: 0x50
    float systemCpuUtilAveragePercentage;
    // public System.Boolean systemCpuUtilWorstPercentage_IsValid
    // Offset: 0x54
    bool systemCpuUtilWorstPercentage_IsValid;
    // public System.Single systemCpuUtilWorstPercentage
    // Offset: 0x58
    float systemCpuUtilWorstPercentage;
    // public System.Boolean deviceCpuClockFrequencyInMHz_IsValid
    // Offset: 0x5C
    bool deviceCpuClockFrequencyInMHz_IsValid;
    // public System.Single deviceCpuClockFrequencyInMHz
    // Offset: 0x60
    float deviceCpuClockFrequencyInMHz;
    // public System.Boolean deviceGpuClockFrequencyInMHz_IsValid
    // Offset: 0x64
    bool deviceGpuClockFrequencyInMHz_IsValid;
    // public System.Single deviceGpuClockFrequencyInMHz
    // Offset: 0x68
    float deviceGpuClockFrequencyInMHz;
    // public System.Boolean deviceCpuClockLevel_IsValid
    // Offset: 0x6C
    bool deviceCpuClockLevel_IsValid;
    // public System.Int32 deviceCpuClockLevel
    // Offset: 0x70
    int deviceCpuClockLevel;
    // public System.Boolean deviceGpuClockLevel_IsValid
    // Offset: 0x74
    bool deviceGpuClockLevel_IsValid;
    // public System.Int32 deviceGpuClockLevel
    // Offset: 0x78
    int deviceGpuClockLevel;
    // public System.String ToJSON()
    // Offset: 0x18FF41C
    ::Il2CppString* ToJSON();
    // public System.Boolean LoadFromJSON(System.String json)
    // Offset: 0x18FF954
    bool LoadFromJSON(::Il2CppString* json);
    // public System.Void .ctor()
    // Offset: 0x18FF8CC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static OVRSystemPerfMetrics::PerfMetrics* New_ctor();
  }; // OVRSystemPerfMetrics/PerfMetrics
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRSystemPerfMetrics::PerfMetrics*, "", "OVRSystemPerfMetrics/PerfMetrics");
#pragma pack(pop)
