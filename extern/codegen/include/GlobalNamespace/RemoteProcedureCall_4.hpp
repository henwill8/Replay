// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RemoteProcedureCall
#include "GlobalNamespace/RemoteProcedureCall.hpp"
// Including type: RemoteProcedureCall/TypeWrapper`1
#include "GlobalNamespace/RemoteProcedureCall_TypeWrapper_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: IRemoteProcedureCall because it is already included!
}
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
  // Forward declaring type: NetDataReader
  class NetDataReader;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: RemoteProcedureCall`4
  template<typename T0, typename T1, typename T2, typename T3>
  class RemoteProcedureCall_4 : public GlobalNamespace::RemoteProcedureCall {
    public:
    // private RemoteProcedureCall/TypeWrapper`1<T0> _value0
    // Offset: 0x0
    GlobalNamespace::RemoteProcedureCall::TypeWrapper_1<T0> value0;
    // private RemoteProcedureCall/TypeWrapper`1<T1> _value1
    // Offset: 0x0
    GlobalNamespace::RemoteProcedureCall::TypeWrapper_1<T1> value1;
    // private RemoteProcedureCall/TypeWrapper`1<T2> _value2
    // Offset: 0x0
    GlobalNamespace::RemoteProcedureCall::TypeWrapper_1<T2> value2;
    // private RemoteProcedureCall/TypeWrapper`1<T3> _value3
    // Offset: 0x0
    GlobalNamespace::RemoteProcedureCall::TypeWrapper_1<T3> value3;
    // Deleting conversion operator: operator float
    constexpr operator float() const noexcept = delete;
    // public T0 get_value0()
    // Offset: 0xFFFFFFFF
    T0 get_value0() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<T0>(this, "get_value0"));
    }
    // public System.Void set_value0(T0 value)
    // Offset: 0xFFFFFFFF
    void set_value0(T0 value) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_value0", value));
    }
    // public T1 get_value1()
    // Offset: 0xFFFFFFFF
    T1 get_value1() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<T1>(this, "get_value1"));
    }
    // public System.Void set_value1(T1 value)
    // Offset: 0xFFFFFFFF
    void set_value1(T1 value) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_value1", value));
    }
    // public T2 get_value2()
    // Offset: 0xFFFFFFFF
    T2 get_value2() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<T2>(this, "get_value2"));
    }
    // public System.Void set_value2(T2 value)
    // Offset: 0xFFFFFFFF
    void set_value2(T2 value) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_value2", value));
    }
    // public T3 get_value3()
    // Offset: 0xFFFFFFFF
    T3 get_value3() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<T3>(this, "get_value3"));
    }
    // public System.Void set_value3(T3 value)
    // Offset: 0xFFFFFFFF
    void set_value3(T3 value) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_value3", value));
    }
    // public IRemoteProcedureCall Init(System.Single syncTime, T0 value0, T1 value1, T2 value2, T3 value3)
    // Offset: 0xFFFFFFFF
    GlobalNamespace::IRemoteProcedureCall* Init(float syncTime, T0 value0, T1 value1, T2 value2, T3 value3) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IRemoteProcedureCall*>(this, "Init", syncTime, value0, value1, value2, value3));
    }
    // protected override System.Void SerializeData(LiteNetLib.Utils.NetDataWriter writer)
    // Offset: 0xFFFFFFFF
    // Implemented from: RemoteProcedureCall
    // Base method: System.Void RemoteProcedureCall::SerializeData(LiteNetLib.Utils.NetDataWriter writer)
    void SerializeData(LiteNetLib::Utils::NetDataWriter* writer) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "SerializeData", writer));
    }
    // protected override System.Void DeserializeData(LiteNetLib.Utils.NetDataReader reader)
    // Offset: 0xFFFFFFFF
    // Implemented from: RemoteProcedureCall
    // Base method: System.Void RemoteProcedureCall::DeserializeData(LiteNetLib.Utils.NetDataReader reader)
    void DeserializeData(LiteNetLib::Utils::NetDataReader* reader) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "DeserializeData", reader));
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: RemoteProcedureCall
    // Base method: System.Void RemoteProcedureCall::.ctor()
    // Base method: System.Void Object::.ctor()
    static RemoteProcedureCall_4<T0, T1, T2, T3>* New_ctor() {
      return THROW_UNLESS((il2cpp_utils::New<RemoteProcedureCall_4<T0, T1, T2, T3>*>()));
    }
  }; // RemoteProcedureCall`4
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::RemoteProcedureCall_4, "", "RemoteProcedureCall`4");
#pragma pack(pop)
