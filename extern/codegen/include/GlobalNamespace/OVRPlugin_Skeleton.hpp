// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: OVRPlugin/SkeletonType
#include "GlobalNamespace/OVRPlugin_SkeletonType.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRPlugin/Skeleton
  struct OVRPlugin::Skeleton : public System::ValueType {
    public:
    // public OVRPlugin/SkeletonType Type
    // Offset: 0x0
    GlobalNamespace::OVRPlugin::SkeletonType Type;
    // public System.UInt32 NumBones
    // Offset: 0x4
    uint NumBones;
    // public System.UInt32 NumBoneCapsules
    // Offset: 0x8
    uint NumBoneCapsules;
    // public OVRPlugin/Bone[] Bones
    // Offset: 0x10
    ::Array<GlobalNamespace::OVRPlugin::Bone>* Bones;
    // public OVRPlugin/BoneCapsule[] BoneCapsules
    // Offset: 0x18
    ::Array<GlobalNamespace::OVRPlugin::BoneCapsule>* BoneCapsules;
    // Creating value type constructor for type: Skeleton
    constexpr Skeleton(GlobalNamespace::OVRPlugin::SkeletonType Type_ = {}, uint NumBones_ = {}, uint NumBoneCapsules_ = {}, ::Array<GlobalNamespace::OVRPlugin::Bone>* Bones_ = {}, ::Array<GlobalNamespace::OVRPlugin::BoneCapsule>* BoneCapsules_ = {}) noexcept : Type{Type_}, NumBones{NumBones_}, NumBoneCapsules{NumBoneCapsules_}, Bones{Bones_}, BoneCapsules{BoneCapsules_} {}
  }; // OVRPlugin/Skeleton
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRPlugin::Skeleton, "", "OVRPlugin/Skeleton");
#pragma pack(pop)
