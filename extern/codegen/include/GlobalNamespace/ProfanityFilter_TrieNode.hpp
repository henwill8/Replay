// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProfanityFilter
#include "GlobalNamespace/ProfanityFilter.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: ProfanityFilter/TrieNode
  class ProfanityFilter::TrieNode : public ::Il2CppObject {
    public:
    // private System.Collections.Generic.Dictionary`2<System.Char,ProfanityFilter/TrieNode> _children
    // Offset: 0x10
    System::Collections::Generic::Dictionary_2<::Il2CppChar, GlobalNamespace::ProfanityFilter::TrieNode*>* children;
    // private System.Int32 _shortestWord
    // Offset: 0x18
    int shortestWord;
    // public System.Void AddWord(System.String word, System.Int32 index)
    // Offset: 0x1E53DA0
    void AddWord(::Il2CppString* word, int index);
    // public System.Boolean IsMatch(System.String word, System.Int32 index)
    // Offset: 0x1E54218
    bool IsMatch(::Il2CppString* word, int index);
    // public System.Void .ctor()
    // Offset: 0x1E53D90
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static ProfanityFilter::TrieNode* New_ctor();
  }; // ProfanityFilter/TrieNode
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ProfanityFilter::TrieNode*, "", "ProfanityFilter/TrieNode");
#pragma pack(pop)
