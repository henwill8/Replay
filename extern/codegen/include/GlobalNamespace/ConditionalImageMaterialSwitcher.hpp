// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BoolSO
  class BoolSO;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: ConditionalImageMaterialSwitcher
  // [] Offset: FFFFFFFF
  class ConditionalImageMaterialSwitcher : public UnityEngine::MonoBehaviour {
    public:
    // [HeaderAttribute] Offset: 0xD3DD44
    // private UnityEngine.Material _material0
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::Material* material0;
    // Field size check
    static_assert(sizeof(UnityEngine::Material*) == 0x8);
    // [HeaderAttribute] Offset: 0xD3DD90
    // private UnityEngine.Material _material1
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::Material* material1;
    // Field size check
    static_assert(sizeof(UnityEngine::Material*) == 0x8);
    // [SpaceAttribute] Offset: 0xD3DDDC
    // private BoolSO _value
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::BoolSO* value;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BoolSO*) == 0x8);
    // private UnityEngine.UI.Image _image
    // Size: 0x8
    // Offset: 0x30
    UnityEngine::UI::Image* image;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Image*) == 0x8);
    // Creating value type constructor for type: ConditionalImageMaterialSwitcher
    ConditionalImageMaterialSwitcher(UnityEngine::Material* material0_ = {}, UnityEngine::Material* material1_ = {}, GlobalNamespace::BoolSO* value_ = {}, UnityEngine::UI::Image* image_ = {}) noexcept : material0{material0_}, material1{material1_}, value{value_}, image{image_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void Awake()
    // Offset: 0x104308C
    void Awake();
    // public System.Void .ctor()
    // Offset: 0x1043114
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConditionalImageMaterialSwitcher* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalImageMaterialSwitcher::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConditionalImageMaterialSwitcher*, creationType>()));
    }
  }; // ConditionalImageMaterialSwitcher
  #pragma pack(pop)
  static check_size<sizeof(ConditionalImageMaterialSwitcher), 48 + sizeof(UnityEngine::UI::Image*)> __GlobalNamespace_ConditionalImageMaterialSwitcherSizeCheck;
  static_assert(sizeof(ConditionalImageMaterialSwitcher) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ConditionalImageMaterialSwitcher*, "", "ConditionalImageMaterialSwitcher");
