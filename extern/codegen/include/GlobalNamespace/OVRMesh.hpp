// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: MeshType because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRMesh
  class OVRMesh : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::OVRMesh::IOVRMeshDataProvider
    class IOVRMeshDataProvider;
    // Nested type: GlobalNamespace::OVRMesh::MeshType
    struct MeshType;
    // Autogenerated type: OVRMesh/MeshType
    struct MeshType : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: MeshType
      constexpr MeshType(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public OVRMesh/MeshType None
      static constexpr const int None = -1;
      // Get static field: static public OVRMesh/MeshType None
      static GlobalNamespace::OVRMesh::MeshType _get_None();
      // Set static field: static public OVRMesh/MeshType None
      static void _set_None(GlobalNamespace::OVRMesh::MeshType value);
      // static field const value: static public OVRMesh/MeshType HandLeft
      static constexpr const int HandLeft = 0;
      // Get static field: static public OVRMesh/MeshType HandLeft
      static GlobalNamespace::OVRMesh::MeshType _get_HandLeft();
      // Set static field: static public OVRMesh/MeshType HandLeft
      static void _set_HandLeft(GlobalNamespace::OVRMesh::MeshType value);
      // static field const value: static public OVRMesh/MeshType HandRight
      static constexpr const int HandRight = 1;
      // Get static field: static public OVRMesh/MeshType HandRight
      static GlobalNamespace::OVRMesh::MeshType _get_HandRight();
      // Set static field: static public OVRMesh/MeshType HandRight
      static void _set_HandRight(GlobalNamespace::OVRMesh::MeshType value);
    }; // OVRMesh/MeshType
    // private OVRMesh/IOVRMeshDataProvider _dataProvider
    // Offset: 0x18
    GlobalNamespace::OVRMesh::IOVRMeshDataProvider* dataProvider;
    // private OVRMesh/MeshType _meshType
    // Offset: 0x20
    GlobalNamespace::OVRMesh::MeshType meshType;
    // private UnityEngine.Mesh _mesh
    // Offset: 0x28
    UnityEngine::Mesh* mesh;
    // private System.Boolean <IsInitialized>k__BackingField
    // Offset: 0x30
    bool IsInitialized;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Boolean get_IsInitialized()
    // Offset: 0xEEB15C
    bool get_IsInitialized();
    // private System.Void set_IsInitialized(System.Boolean value)
    // Offset: 0xEEB164
    void set_IsInitialized(bool value);
    // public UnityEngine.Mesh get_Mesh()
    // Offset: 0xEEB170
    UnityEngine::Mesh* get_Mesh();
    // private System.Void Awake()
    // Offset: 0xEEB178
    void Awake();
    // private System.Void Initialize(OVRMesh/MeshType meshType)
    // Offset: 0xEEB288
    void Initialize(GlobalNamespace::OVRMesh::MeshType meshType);
    // public System.Void .ctor()
    // Offset: 0xEEB9A4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static OVRMesh* New_ctor();
  }; // OVRMesh
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRMesh*, "", "OVRMesh");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRMesh::MeshType, "", "OVRMesh/MeshType");
#pragma pack(pop)
