// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamVR_RenderModel
#include "GlobalNamespace/SteamVR_RenderModel.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Valve::VR
namespace Valve::VR {
  // Forward declaring type: CVRRenderModels
  class CVRRenderModels;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: SteamVR_RenderModel/<SetModelAsync>d__21
  class SteamVR_RenderModel::$SetModelAsync$d__21 : public ::Il2CppObject, public System::Collections::Generic::IEnumerator_1<::Il2CppObject*> {
    public:
    // private System.Int32 <>1__state
    // Offset: 0x10
    int $$1__state;
    // private System.Object <>2__current
    // Offset: 0x18
    ::Il2CppObject* $$2__current;
    // public System.String renderModelName
    // Offset: 0x20
    ::Il2CppString* renderModelName;
    // public SteamVR_RenderModel <>4__this
    // Offset: 0x28
    GlobalNamespace::SteamVR_RenderModel* $$4__this;
    // private SteamVR_RenderModel/RenderModelInterfaceHolder <holder>5__2
    // Offset: 0x30
    GlobalNamespace::SteamVR_RenderModel::RenderModelInterfaceHolder* $holder$5__2;
    // private Valve.VR.CVRRenderModels <renderModels>5__3
    // Offset: 0x38
    Valve::VR::CVRRenderModels* $renderModels$5__3;
    // private System.String[] <renderModelNames>5__4
    // Offset: 0x40
    ::Array<::Il2CppString*>* $renderModelNames$5__4;
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0xD906F8
    static SteamVR_RenderModel::$SetModelAsync$d__21* New_ctor(int $$1__state);
    // private System.Void <>m__Finally1()
    // Offset: 0xD930E4
    void $$m__Finally1();
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0xD930C8
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0xD931A4
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Boolean IEnumerator::MoveNext()
    bool MoveNext();
    // private System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()
    // Offset: 0xD93B00
    // Implemented from: System.Collections.Generic.IEnumerator`1
    // Base method: T IEnumerator`1::get_Current()
    ::Il2CppObject* System_Collections_Generic_IEnumerator_1_get_Current();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0xD93B08
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Void IEnumerator::Reset()
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0xD93B68
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Object IEnumerator::get_Current()
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
  }; // SteamVR_RenderModel/<SetModelAsync>d__21
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SteamVR_RenderModel::$SetModelAsync$d__21*, "", "SteamVR_RenderModel/<SetModelAsync>d__21");
#pragma pack(pop)
