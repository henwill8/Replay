// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ColorSchemeColorToggleController
  class ColorSchemeColorToggleController;
  // Forward declaring type: ColorScheme
  class ColorScheme;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: ToggleBinder
  class ToggleBinder;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: ColorSchemeColorsToggleGroup
  class ColorSchemeColorsToggleGroup : public UnityEngine::MonoBehaviour {
    public:
    // private ColorSchemeColorToggleController _saberAColorToggleController
    // Offset: 0x18
    GlobalNamespace::ColorSchemeColorToggleController* saberAColorToggleController;
    // private ColorSchemeColorToggleController _saberBColorToggleController
    // Offset: 0x20
    GlobalNamespace::ColorSchemeColorToggleController* saberBColorToggleController;
    // private ColorSchemeColorToggleController _environmentColor0ToggleController
    // Offset: 0x28
    GlobalNamespace::ColorSchemeColorToggleController* environmentColor0ToggleController;
    // private ColorSchemeColorToggleController _environmentColor1ToggleController
    // Offset: 0x30
    GlobalNamespace::ColorSchemeColorToggleController* environmentColor1ToggleController;
    // private ColorSchemeColorToggleController _obstaclesColorToggleController
    // Offset: 0x38
    GlobalNamespace::ColorSchemeColorToggleController* obstaclesColorToggleController;
    // private System.Action`1<UnityEngine.Color> selectedColorDidChangeEvent
    // Offset: 0x40
    System::Action_1<UnityEngine::Color>* selectedColorDidChangeEvent;
    // private HMUI.ToggleBinder _toggleBinder
    // Offset: 0x48
    HMUI::ToggleBinder* toggleBinder;
    // private ColorSchemeColorToggleController _selectedColorToggleController
    // Offset: 0x50
    GlobalNamespace::ColorSchemeColorToggleController* selectedColorToggleController;
    // private ColorScheme _colorScheme
    // Offset: 0x58
    GlobalNamespace::ColorScheme* colorScheme;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_selectedColorDidChangeEvent(System.Action`1<UnityEngine.Color> value)
    // Offset: 0x1A50894
    void add_selectedColorDidChangeEvent(System::Action_1<UnityEngine::Color>* value);
    // public System.Void remove_selectedColorDidChangeEvent(System.Action`1<UnityEngine.Color> value)
    // Offset: 0x1A50938
    void remove_selectedColorDidChangeEvent(System::Action_1<UnityEngine::Color>* value);
    // public UnityEngine.Color get_color()
    // Offset: 0x1A509DC
    UnityEngine::Color get_color();
    // public System.Void set_color(UnityEngine.Color value)
    // Offset: 0x1A509F4
    void set_color(UnityEngine::Color value);
    // public System.Void SetColorScheme(ColorScheme colorScheme)
    // Offset: 0x1A50A0C
    void SetColorScheme(GlobalNamespace::ColorScheme* colorScheme);
    // protected System.Void Awake()
    // Offset: 0x1A50B0C
    void Awake();
    // protected System.Void OnDestroy()
    // Offset: 0x1A50D44
    void OnDestroy();
    // private System.Void HandleToggleWasSelected(ColorSchemeColorToggleController toggleController, System.Boolean isOn)
    // Offset: 0x1A50D60
    void HandleToggleWasSelected(GlobalNamespace::ColorSchemeColorToggleController* toggleController, bool isOn);
    // public ColorScheme CreateColorSchemeFromEditedColors()
    // Offset: 0x1A50DFC
    GlobalNamespace::ColorScheme* CreateColorSchemeFromEditedColors();
    // private System.Void <Awake>b__15_0(System.Boolean isOn)
    // Offset: 0x1A50FE4
    void $Awake$b__15_0(bool isOn);
    // private System.Void <Awake>b__15_1(System.Boolean isOn)
    // Offset: 0x1A50FF4
    void $Awake$b__15_1(bool isOn);
    // private System.Void <Awake>b__15_2(System.Boolean isOn)
    // Offset: 0x1A51004
    void $Awake$b__15_2(bool isOn);
    // private System.Void <Awake>b__15_3(System.Boolean isOn)
    // Offset: 0x1A51014
    void $Awake$b__15_3(bool isOn);
    // private System.Void <Awake>b__15_4(System.Boolean isOn)
    // Offset: 0x1A51024
    void $Awake$b__15_4(bool isOn);
    // public System.Void .ctor()
    // Offset: 0x1A50FDC
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static ColorSchemeColorsToggleGroup* New_ctor();
  }; // ColorSchemeColorsToggleGroup
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ColorSchemeColorsToggleGroup*, "", "ColorSchemeColorsToggleGroup");
#pragma pack(pop)
