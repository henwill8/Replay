// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IPreviewBeatmapLevel
  class IPreviewBeatmapLevel;
  // Forward declaring type: BeatmapCharacteristicSO
  class BeatmapCharacteristicSO;
  // Forward declaring type: BeatmapDifficulty
  struct BeatmapDifficulty;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: ImageView
  class ImageView;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationTokenSource
  class CancellationTokenSource;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: LevelBar
  class LevelBar : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::LevelBar::$Setup$d__12
    struct $Setup$d__12;
    // private HMUI.ImageView _songArtworkImageView
    // Offset: 0x18
    HMUI::ImageView* songArtworkImageView;
    // private TMPro.TextMeshProUGUI _songNameText
    // Offset: 0x20
    TMPro::TextMeshProUGUI* songNameText;
    // private TMPro.TextMeshProUGUI _authorNameText
    // Offset: 0x28
    TMPro::TextMeshProUGUI* authorNameText;
    // private System.Boolean _showDifficultyAndCharacteristic
    // Offset: 0x30
    bool showDifficultyAndCharacteristic;
    // private TMPro.TextMeshProUGUI _difficultyText
    // Offset: 0x38
    TMPro::TextMeshProUGUI* difficultyText;
    // private HMUI.ImageView _characteristicIconImageView
    // Offset: 0x40
    HMUI::ImageView* characteristicIconImageView;
    // private System.Boolean _useArtworkBackground
    // Offset: 0x48
    bool useArtworkBackground;
    // private HMUI.ImageView _artworkBackgroundImage
    // Offset: 0x50
    HMUI::ImageView* artworkBackgroundImage;
    // private System.Threading.CancellationTokenSource _cancellationTokenSource
    // Offset: 0x58
    System::Threading::CancellationTokenSource* cancellationTokenSource;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void set_hide(System.Boolean value)
    // Offset: 0xF1F7AC
    void set_hide(bool value);
    // public System.Void Setup(IPreviewBeatmapLevel previewBeatmapLevel)
    // Offset: 0xF1F7E4
    void Setup(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel);
    // public System.Void Setup(IPreviewBeatmapLevel previewBeatmapLevel, BeatmapCharacteristicSO beatmapCharacteristic, BeatmapDifficulty beatmapDifficulty)
    // Offset: 0xF1F7F0
    void Setup(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty beatmapDifficulty);
    // protected System.Void OnDestroy()
    // Offset: 0xF1F904
    void OnDestroy();
    // public System.Void .ctor()
    // Offset: 0xF1F918
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static LevelBar* New_ctor();
  }; // LevelBar
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LevelBar*, "", "LevelBar");
#pragma pack(pop)
