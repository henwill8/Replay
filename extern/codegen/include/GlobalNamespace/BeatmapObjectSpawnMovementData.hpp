// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ObstacleData
  class ObstacleData;
  // Forward declaring type: NoteData
  class NoteData;
  // Forward declaring type: NoteLineLayer
  struct NoteLineLayer;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BeatmapObjectSpawnMovementData
  class BeatmapObjectSpawnMovementData : public ::Il2CppObject {
    public:
    // private System.Single _noteLinesDistance
    // Offset: 0x10
    float noteLinesDistance;
    // private System.Single _maxHalfJumpDistance
    // Offset: 0x14
    float maxHalfJumpDistance;
    // private System.Single _startHalfJumpDurationInBeats
    // Offset: 0x18
    float startHalfJumpDurationInBeats;
    // private System.Single _baseLinesHighestJumpPosY
    // Offset: 0x1C
    float baseLinesHighestJumpPosY;
    // private System.Single _upperLinesHighestJumpPosY
    // Offset: 0x20
    float upperLinesHighestJumpPosY;
    // private System.Single _topLinesHighestJumpPosY
    // Offset: 0x24
    float topLinesHighestJumpPosY;
    // private System.Single _moveSpeed
    // Offset: 0x28
    float moveSpeed;
    // private System.Single _moveDuration
    // Offset: 0x2C
    float moveDuration;
    // private System.Single _baseLinesYPos
    // Offset: 0x30
    float baseLinesYPos;
    // private System.Single _upperLinesYPos
    // Offset: 0x34
    float upperLinesYPos;
    // private System.Single _topLinesYPos
    // Offset: 0x38
    float topLinesYPos;
    // private System.Single _verticalObstaclePosY
    // Offset: 0x3C
    float verticalObstaclePosY;
    // private System.Single _topObstaclePosY
    // Offset: 0x40
    float topObstaclePosY;
    // private System.Single _verticalObstacleHeight
    // Offset: 0x44
    float verticalObstacleHeight;
    // private System.Single _topObstacleHeight
    // Offset: 0x48
    float topObstacleHeight;
    // private System.Single _spawnAheadTime
    // Offset: 0x4C
    float spawnAheadTime;
    // private System.Single _jumpDuration
    // Offset: 0x50
    float jumpDuration;
    // private System.Single _startBPM
    // Offset: 0x54
    float startBPM;
    // private System.Single _startNoteJumpMovementSpeed
    // Offset: 0x58
    float startNoteJumpMovementSpeed;
    // private System.Single _noteJumpStartBeatOffset
    // Offset: 0x5C
    float noteJumpStartBeatOffset;
    // private System.Single _noteJumpMovementSpeed
    // Offset: 0x60
    float noteJumpMovementSpeed;
    // private System.Single _jumpDistance
    // Offset: 0x64
    float jumpDistance;
    // private System.Single _moveDistance
    // Offset: 0x68
    float moveDistance;
    // private UnityEngine.Vector3 _moveStartPos
    // Offset: 0x6C
    UnityEngine::Vector3 moveStartPos;
    // private UnityEngine.Vector3 _moveEndPos
    // Offset: 0x78
    UnityEngine::Vector3 moveEndPos;
    // private UnityEngine.Vector3 _jumpEndPos
    // Offset: 0x84
    UnityEngine::Vector3 jumpEndPos;
    // private System.Single _noteLinesCount
    // Offset: 0x90
    float noteLinesCount;
    // private System.Single _jumpOffsetY
    // Offset: 0x94
    float jumpOffsetY;
    // private UnityEngine.Vector3 _rightVec
    // Offset: 0x98
    UnityEngine::Vector3 rightVec;
    // private UnityEngine.Vector3 _forwardVec
    // Offset: 0xA4
    UnityEngine::Vector3 forwardVec;
    // private UnityEngine.Vector3 _centerPos
    // Offset: 0xB0
    UnityEngine::Vector3 centerPos;
    // public System.Single get_spawnAheadTime()
    // Offset: 0xB7AB4C
    float get_spawnAheadTime();
    // public System.Single get_moveDuration()
    // Offset: 0xB7AB54
    float get_moveDuration();
    // public System.Single get_jumpDuration()
    // Offset: 0xB7AB5C
    float get_jumpDuration();
    // public System.Single get_noteLinesDistance()
    // Offset: 0xB7AB64
    float get_noteLinesDistance();
    // public System.Void Init(System.Int32 noteLinesCount, System.Single startNoteJumpMovementSpeed, System.Single startBPM, System.Single noteJumpStartBeatOffset, System.Single jumpOffsetY, UnityEngine.Vector3 centerPos, UnityEngine.Vector3 rightVec, UnityEngine.Vector3 forwardVec)
    // Offset: 0xB79968
    void Init(int noteLinesCount, float startNoteJumpMovementSpeed, float startBPM, float noteJumpStartBeatOffset, float jumpOffsetY, UnityEngine::Vector3 centerPos, UnityEngine::Vector3 rightVec, UnityEngine::Vector3 forwardVec);
    // public System.Void Update(System.Single bpm, System.Single jumpOffsetY)
    // Offset: 0xB7A4AC
    void Update(float bpm, float jumpOffsetY);
    // public System.Void GetObstacleSpawnMovementData(ObstacleData obstacleData, out UnityEngine.Vector3 moveStartPos, out UnityEngine.Vector3 moveEndPos, out UnityEngine.Vector3 jumpEndPos, out System.Single obstacleHeight)
    // Offset: 0xB79D74
    void GetObstacleSpawnMovementData(GlobalNamespace::ObstacleData* obstacleData, UnityEngine::Vector3& moveStartPos, UnityEngine::Vector3& moveEndPos, UnityEngine::Vector3& jumpEndPos, float& obstacleHeight);
    // public System.Void GetNoteSpawnMovementData(NoteData noteData, out UnityEngine.Vector3 moveStartPos, out UnityEngine.Vector3 moveEndPos, out UnityEngine.Vector3 jumpEndPos, out System.Single jumpGravity)
    // Offset: 0xB7A230
    void GetNoteSpawnMovementData(GlobalNamespace::NoteData* noteData, UnityEngine::Vector3& moveStartPos, UnityEngine::Vector3& moveEndPos, UnityEngine::Vector3& jumpEndPos, float& jumpGravity);
    // public UnityEngine.Vector3 GetNoteOffset(System.Int32 noteLineIndex, NoteLineLayer noteLineLayer)
    // Offset: 0xB7AB6C
    UnityEngine::Vector3 GetNoteOffset(int noteLineIndex, GlobalNamespace::NoteLineLayer noteLineLayer);
    // public UnityEngine.Vector2 Get2DNoteOffset(System.Int32 noteLineIndex, NoteLineLayer noteLineLayer)
    // Offset: 0xB79B44
    UnityEngine::Vector2 Get2DNoteOffset(int noteLineIndex, GlobalNamespace::NoteLineLayer noteLineLayer);
    // private System.Single HighestJumpPosYForLineLayer(NoteLineLayer lineLayer)
    // Offset: 0xB7ADB8
    float HighestJumpPosYForLineLayer(GlobalNamespace::NoteLineLayer lineLayer);
    // private System.Single LineYPosForLineLayer(NoteLineLayer lineLayer)
    // Offset: 0xB7AD90
    float LineYPosForLineLayer(GlobalNamespace::NoteLineLayer lineLayer);
    // private System.Single NoteJumpGravityForLineLayer(NoteLineLayer lineLayer, NoteLineLayer startLineLayer)
    // Offset: 0xB7ACA0
    float NoteJumpGravityForLineLayer(GlobalNamespace::NoteLineLayer lineLayer, GlobalNamespace::NoteLineLayer startLineLayer);
    // public System.Void .ctor()
    // Offset: 0xB7A838
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static BeatmapObjectSpawnMovementData* New_ctor();
  }; // BeatmapObjectSpawnMovementData
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatmapObjectSpawnMovementData*, "", "BeatmapObjectSpawnMovementData");
#pragma pack(pop)
