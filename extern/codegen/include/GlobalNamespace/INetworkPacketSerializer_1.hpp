// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataReader
  class NetDataReader;
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
  // Forward declaring type: INetSerializable
  class INetSerializable;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: INetworkPacketSerializer`1
  template<typename TData>
  class INetworkPacketSerializer_1 {
    public:
    // public System.Void ProcessAllPackets(LiteNetLib.Utils.NetDataReader reader, TData data)
    // Offset: 0xFFFFFFFF
    void ProcessAllPackets(LiteNetLib::Utils::NetDataReader* reader, TData data) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessAllPackets", reader, data));
    }
    // public System.Void SerializePacket(LiteNetLib.Utils.NetDataWriter writer, LiteNetLib.Utils.INetSerializable packet)
    // Offset: 0xFFFFFFFF
    void SerializePacket(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::Utils::INetSerializable* packet) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "SerializePacket", writer, packet));
    }
  }; // INetworkPacketSerializer`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::INetworkPacketSerializer_1, "", "INetworkPacketSerializer`1");
#pragma pack(pop)
