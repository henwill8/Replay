// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MaterialPropertyBlockController
  class MaterialPropertyBlockController;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MultiplayerConnectedPlayerObstacleClippingController
  // [] Offset: FFFFFFFF
  class MultiplayerConnectedPlayerObstacleClippingController : public UnityEngine::MonoBehaviour {
    public:
    // private MaterialPropertyBlockController[] _materialPropertyBlockControllers
    // Size: 0x8
    // Offset: 0x18
    ::Array<GlobalNamespace::MaterialPropertyBlockController*>* materialPropertyBlockControllers;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::MaterialPropertyBlockController*>*) == 0x8);
    // Creating value type constructor for type: MultiplayerConnectedPlayerObstacleClippingController
    MultiplayerConnectedPlayerObstacleClippingController(::Array<GlobalNamespace::MaterialPropertyBlockController*>* materialPropertyBlockControllers_ = {}) noexcept : materialPropertyBlockControllers{materialPropertyBlockControllers_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD3B1C4
    // Get static field: static private readonly System.Int32 _clippingPlanePositionID
    static int _get__clippingPlanePositionID();
    // Set static field: static private readonly System.Int32 _clippingPlanePositionID
    static void _set__clippingPlanePositionID(int value);
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD3B1D4
    // Get static field: static private readonly System.Int32 _clippingPlaneNormalID
    static int _get__clippingPlaneNormalID();
    // Set static field: static private readonly System.Int32 _clippingPlaneNormalID
    static void _set__clippingPlaneNormalID(int value);
    // public System.Void SetClippingParams(UnityEngine.Vector3 position, UnityEngine.Vector3 normal)
    // Offset: 0x101CEB4
    void SetClippingParams(UnityEngine::Vector3 position, UnityEngine::Vector3 normal);
    // public System.Void .ctor()
    // Offset: 0x101D060
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiplayerConnectedPlayerObstacleClippingController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerObstacleClippingController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiplayerConnectedPlayerObstacleClippingController*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x101D068
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // MultiplayerConnectedPlayerObstacleClippingController
  #pragma pack(pop)
  static check_size<sizeof(MultiplayerConnectedPlayerObstacleClippingController), 24 + sizeof(::Array<GlobalNamespace::MaterialPropertyBlockController*>*)> __GlobalNamespace_MultiplayerConnectedPlayerObstacleClippingControllerSizeCheck;
  static_assert(sizeof(MultiplayerConnectedPlayerObstacleClippingController) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerConnectedPlayerObstacleClippingController*, "", "MultiplayerConnectedPlayerObstacleClippingController");
