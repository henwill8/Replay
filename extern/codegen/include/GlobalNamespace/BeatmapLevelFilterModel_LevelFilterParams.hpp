// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelFilterModel
#include "GlobalNamespace/BeatmapLevelFilterModel.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapCharacteristicSO
  class BeatmapCharacteristicSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BeatmapLevelFilterModel/LevelFilterParams
  class BeatmapLevelFilterModel::LevelFilterParams : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams::FilterBy
    struct FilterBy;
    // Autogenerated type: BeatmapLevelFilterModel/LevelFilterParams/FilterBy
    struct FilterBy : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: FilterBy
      constexpr FilterBy(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public BeatmapLevelFilterModel/LevelFilterParams/FilterBy AllLevels
      static constexpr const int AllLevels = 0;
      // Get static field: static public BeatmapLevelFilterModel/LevelFilterParams/FilterBy AllLevels
      static GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams::FilterBy _get_AllLevels();
      // Set static field: static public BeatmapLevelFilterModel/LevelFilterParams/FilterBy AllLevels
      static void _set_AllLevels(GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams::FilterBy value);
      // static field const value: static public BeatmapLevelFilterModel/LevelFilterParams/FilterBy BeatmapLevelIds
      static constexpr const int BeatmapLevelIds = 1;
      // Get static field: static public BeatmapLevelFilterModel/LevelFilterParams/FilterBy BeatmapLevelIds
      static GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams::FilterBy _get_BeatmapLevelIds();
      // Set static field: static public BeatmapLevelFilterModel/LevelFilterParams/FilterBy BeatmapLevelIds
      static void _set_BeatmapLevelIds(GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams::FilterBy value);
      // static field const value: static public BeatmapLevelFilterModel/LevelFilterParams/FilterBy BeatmapCharacteristic
      static constexpr const int BeatmapCharacteristic = 2;
      // Get static field: static public BeatmapLevelFilterModel/LevelFilterParams/FilterBy BeatmapCharacteristic
      static GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams::FilterBy _get_BeatmapCharacteristic();
      // Set static field: static public BeatmapLevelFilterModel/LevelFilterParams/FilterBy BeatmapCharacteristic
      static void _set_BeatmapCharacteristic(GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams::FilterBy value);
    }; // BeatmapLevelFilterModel/LevelFilterParams/FilterBy
    // public BeatmapLevelFilterModel/LevelFilterParams/FilterBy filterBy
    // Offset: 0x10
    GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams::FilterBy filterBy;
    // public readonly System.Collections.Generic.HashSet`1<System.String> beatmapLevelIds
    // Offset: 0x18
    System::Collections::Generic::HashSet_1<::Il2CppString*>* beatmapLevelIds;
    // public readonly BeatmapCharacteristicSO beatmapCharacteristic
    // Offset: 0x20
    GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic;
    // System.Void .ctor(System.Collections.Generic.HashSet`1<System.String> beatmapLevelIds)
    // Offset: 0xB70D00
    static BeatmapLevelFilterModel::LevelFilterParams* New_ctor(System::Collections::Generic::HashSet_1<::Il2CppString*>* beatmapLevelIds);
    // System.Void .ctor(BeatmapCharacteristicSO beatmapCharacteristic)
    // Offset: 0xB70D4C
    static BeatmapLevelFilterModel::LevelFilterParams* New_ctor(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic);
    // static public BeatmapLevelFilterModel/LevelFilterParams NoFilter()
    // Offset: 0xB70D98
    static GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams* NoFilter();
    // static public BeatmapLevelFilterModel/LevelFilterParams ByBeatmapLevelIds(System.Collections.Generic.HashSet`1<System.String> beatmapLevelIds)
    // Offset: 0xB70DF0
    static GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams* ByBeatmapLevelIds(System::Collections::Generic::HashSet_1<::Il2CppString*>* beatmapLevelIds);
    // static public BeatmapLevelFilterModel/LevelFilterParams ByBeatmapCharacteristic(BeatmapCharacteristicSO beatmapCharacteristic)
    // Offset: 0xB70E50
    static GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams* ByBeatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic);
    // System.Void .ctor()
    // Offset: 0xB70CBC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static BeatmapLevelFilterModel::LevelFilterParams* New_ctor();
  }; // BeatmapLevelFilterModel/LevelFilterParams
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams*, "", "BeatmapLevelFilterModel/LevelFilterParams");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatmapLevelFilterModel::LevelFilterParams::FilterBy, "", "BeatmapLevelFilterModel/LevelFilterParams/FilterBy");
#pragma pack(pop)
