// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: IStateTable`2
#include "GlobalNamespace/IStateTable_2.hpp"
// Including type: StandardScoreSyncState/Score
#include "GlobalNamespace/StandardScoreSyncState_Score.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: IEquatableByReference`1
#include "GlobalNamespace/IEquatableByReference_1.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
  // Forward declaring type: NetDataReader
  class NetDataReader;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: StandardScoreSyncState
  struct StandardScoreSyncState : public System::ValueType/*, public GlobalNamespace::IStateTable_2<GlobalNamespace::StandardScoreSyncState_Score, int>, public LiteNetLib::Utils::INetSerializable, public GlobalNamespace::IEquatableByReference_1<GlobalNamespace::StandardScoreSyncState>*/ {
    public:
    // private System.Int32 _modifiedScore
    // Offset: 0x0
    int modifiedScore;
    // private System.Int32 _rawScore
    // Offset: 0x4
    int rawScore;
    // private System.Int32 _immediateMaxPossibleRawScore
    // Offset: 0x8
    int immediateMaxPossibleRawScore;
    // private System.Int32 _combo
    // Offset: 0xC
    int combo;
    // private System.Int32 _multiplier
    // Offset: 0x10
    int multiplier;
    // Creating value type constructor for type: StandardScoreSyncState
    constexpr StandardScoreSyncState(int modifiedScore_ = {}, int rawScore_ = {}, int immediateMaxPossibleRawScore_ = {}, int combo_ = {}, int multiplier_ = {}) noexcept : modifiedScore{modifiedScore_}, rawScore{rawScore_}, immediateMaxPossibleRawScore{immediateMaxPossibleRawScore_}, combo{combo_}, multiplier{multiplier_} {}
    // Creating interface conversion operator: operator GlobalNamespace::IStateTable_2<GlobalNamespace::StandardScoreSyncState_Score, int>
    operator GlobalNamespace::IStateTable_2<GlobalNamespace::StandardScoreSyncState_Score, int>() noexcept {
      return *reinterpret_cast<GlobalNamespace::IStateTable_2<GlobalNamespace::StandardScoreSyncState_Score, int>*>(this);
    }
    // Creating interface conversion operator: operator LiteNetLib::Utils::INetSerializable
    operator LiteNetLib::Utils::INetSerializable() noexcept {
      return *reinterpret_cast<LiteNetLib::Utils::INetSerializable*>(this);
    }
    // Creating interface conversion operator: operator GlobalNamespace::IEquatableByReference_1<GlobalNamespace::StandardScoreSyncState>
    operator GlobalNamespace::IEquatableByReference_1<GlobalNamespace::StandardScoreSyncState>() noexcept {
      return *reinterpret_cast<GlobalNamespace::IEquatableByReference_1<GlobalNamespace::StandardScoreSyncState>*>(this);
    }
    // static field const value: static private System.Int32 kIntSize
    static constexpr const int kIntSize = 4;
    // Get static field: static private System.Int32 kIntSize
    static int _get_kIntSize();
    // Set static field: static private System.Int32 kIntSize
    static void _set_kIntSize(int value);
    // public System.Boolean Equals(ref StandardScoreSyncState other)
    // Offset: 0xC92568
    bool Equals(GlobalNamespace::StandardScoreSyncState& other);
    // public System.Void SetState(StandardScoreSyncState/Score s, System.Int32 value)
    // Offset: 0xC924C0
    // Implemented from: IStateTable`2
    // Base method: System.Void IStateTable_2::SetState(StandardScoreSyncState/Score s, System.Int32 value)
    void SetState(GlobalNamespace::StandardScoreSyncState_Score s, int value);
    // public System.Int32 GetState(StandardScoreSyncState/Score s)
    // Offset: 0xC92508
    // Implemented from: IStateTable`2
    // Base method: TState IStateTable_2::GetState(StandardScoreSyncState/Score s)
    int GetState(GlobalNamespace::StandardScoreSyncState_Score s);
    // public System.Void Serialize(LiteNetLib.Utils.NetDataWriter writer)
    // Offset: 0xC92558
    // Implemented from: LiteNetLib.Utils.INetSerializable
    // Base method: System.Void INetSerializable::Serialize(LiteNetLib.Utils.NetDataWriter writer)
    void Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // Creating proxy method: LiteNetLib_Utils_INetSerializable_Serialize
    // Maps to method: Serialize
    void LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // public System.Void Deserialize(LiteNetLib.Utils.NetDataReader reader)
    // Offset: 0xC92560
    // Implemented from: LiteNetLib.Utils.INetSerializable
    // Base method: System.Void INetSerializable::Deserialize(LiteNetLib.Utils.NetDataReader reader)
    void Deserialize(LiteNetLib::Utils::NetDataReader* reader);
    // Creating proxy method: LiteNetLib_Utils_INetSerializable_Deserialize
    // Maps to method: Deserialize
    void LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader);
  }; // StandardScoreSyncState
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::StandardScoreSyncState, "", "StandardScoreSyncState");
#pragma pack(pop)
