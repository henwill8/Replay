// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Saber
  class Saber;
  // Forward declaring type: SaberType
  struct SaberType;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: SaberManager
  class SaberManager : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::SaberManager::InitData
    class InitData;
    // private Saber _leftSaber
    // Offset: 0x18
    GlobalNamespace::Saber* leftSaber;
    // private Saber _rightSaber
    // Offset: 0x20
    GlobalNamespace::Saber* rightSaber;
    // private readonly SaberManager/InitData _initData
    // Offset: 0x28
    GlobalNamespace::SaberManager::InitData* initData;
    // private System.Boolean _started
    // Offset: 0x30
    bool started;
    // private System.Action`2<Saber,Saber> didUpdateSaberPositionsEvent
    // Offset: 0x38
    System::Action_2<GlobalNamespace::Saber*, GlobalNamespace::Saber*>* didUpdateSaberPositionsEvent;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public Saber get_leftSaber()
    // Offset: 0xFC0844
    GlobalNamespace::Saber* get_leftSaber();
    // public Saber get_rightSaber()
    // Offset: 0xFC084C
    GlobalNamespace::Saber* get_rightSaber();
    // public System.Void add_didUpdateSaberPositionsEvent(System.Action`2<Saber,Saber> value)
    // Offset: 0xFC0854
    void add_didUpdateSaberPositionsEvent(System::Action_2<GlobalNamespace::Saber*, GlobalNamespace::Saber*>* value);
    // public System.Void remove_didUpdateSaberPositionsEvent(System.Action`2<Saber,Saber> value)
    // Offset: 0xFC08F8
    void remove_didUpdateSaberPositionsEvent(System::Action_2<GlobalNamespace::Saber*, GlobalNamespace::Saber*>* value);
    // public System.Void set_disableSabers(System.Boolean value)
    // Offset: 0xFC099C
    void set_disableSabers(bool value);
    // protected System.Void Start()
    // Offset: 0xFC09AC
    void Start();
    // protected System.Void OnDisable()
    // Offset: 0xFC0B10
    void OnDisable();
    // protected System.Void OnEnable()
    // Offset: 0xFC0B14
    void OnEnable();
    // protected System.Void Update()
    // Offset: 0xFC0B24
    void Update();
    // public Saber SaberForType(SaberType saberType)
    // Offset: 0xFC0C0C
    GlobalNamespace::Saber* SaberForType(GlobalNamespace::SaberType saberType);
    // private System.Void RefreshSabers()
    // Offset: 0xFC09D4
    void RefreshSabers();
    // public System.Void .ctor()
    // Offset: 0xFC0C7C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static SaberManager* New_ctor();
  }; // SaberManager
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SaberManager*, "", "SaberManager");
#pragma pack(pop)
