// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: DiscoveryPolicy
  // [] Offset: FFFFFFFF
  struct DiscoveryPolicy/*, public System::Enum*/ {
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Creating value type constructor for type: DiscoveryPolicy
    constexpr DiscoveryPolicy(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator System::Enum
    operator System::Enum() noexcept {
      return *reinterpret_cast<System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public DiscoveryPolicy Hidden
    static constexpr const uint8_t Hidden = 0u;
    // Get static field: static public DiscoveryPolicy Hidden
    static GlobalNamespace::DiscoveryPolicy _get_Hidden();
    // Set static field: static public DiscoveryPolicy Hidden
    static void _set_Hidden(GlobalNamespace::DiscoveryPolicy value);
    // static field const value: static public DiscoveryPolicy WithCode
    static constexpr const uint8_t WithCode = 1u;
    // Get static field: static public DiscoveryPolicy WithCode
    static GlobalNamespace::DiscoveryPolicy _get_WithCode();
    // Set static field: static public DiscoveryPolicy WithCode
    static void _set_WithCode(GlobalNamespace::DiscoveryPolicy value);
    // static field const value: static public DiscoveryPolicy Public
    static constexpr const uint8_t Public = 2u;
    // Get static field: static public DiscoveryPolicy Public
    static GlobalNamespace::DiscoveryPolicy _get_Public();
    // Set static field: static public DiscoveryPolicy Public
    static void _set_Public(GlobalNamespace::DiscoveryPolicy value);
  }; // DiscoveryPolicy
  #pragma pack(pop)
  static check_size<sizeof(DiscoveryPolicy), 0 + sizeof(uint8_t)> __GlobalNamespace_DiscoveryPolicySizeCheck;
  static_assert(sizeof(DiscoveryPolicy) == 0x1);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::DiscoveryPolicy, "", "DiscoveryPolicy");
