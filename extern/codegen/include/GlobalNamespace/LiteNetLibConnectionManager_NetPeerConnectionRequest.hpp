// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib
namespace LiteNetLib {
  // Forward declaring type: ConnectionRequest
  class ConnectionRequest;
  // Forward declaring type: NetPeer
  class NetPeer;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: IPEndPoint
  class IPEndPoint;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: LiteNetLibConnectionManager/NetPeerConnectionRequest
  class LiteNetLibConnectionManager::NetPeerConnectionRequest : public ::Il2CppObject {
    public:
    // private readonly System.String _userId
    // Offset: 0x10
    ::Il2CppString* userId;
    // private readonly System.String _userName
    // Offset: 0x18
    ::Il2CppString* userName;
    // private readonly System.Boolean _isConnectionOwner
    // Offset: 0x20
    bool isConnectionOwner;
    // private readonly LiteNetLib.ConnectionRequest _request
    // Offset: 0x28
    LiteNetLib::ConnectionRequest* request;
    // public System.String get_userId()
    // Offset: 0x1B523EC
    ::Il2CppString* get_userId();
    // public System.String get_userName()
    // Offset: 0x1B523F4
    ::Il2CppString* get_userName();
    // public System.Boolean get_isConnectionOwner()
    // Offset: 0x1B523FC
    bool get_isConnectionOwner();
    // public System.Net.IPEndPoint get_endPoint()
    // Offset: 0x1B52404
    System::Net::IPEndPoint* get_endPoint();
    // public System.Void .ctor(LiteNetLib.ConnectionRequest request, System.String userId, System.String userName, System.Boolean isConnectionOwner)
    // Offset: 0x1B51604
    static LiteNetLibConnectionManager::NetPeerConnectionRequest* New_ctor(LiteNetLib::ConnectionRequest* request, ::Il2CppString* userId, ::Il2CppString* userName, bool isConnectionOwner);
    // public LiteNetLib.NetPeer Accept()
    // Offset: 0x1B515E8
    LiteNetLib::NetPeer* Accept();
  }; // LiteNetLibConnectionManager/NetPeerConnectionRequest
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest*, "", "LiteNetLibConnectionManager/NetPeerConnectionRequest");
#pragma pack(pop)
