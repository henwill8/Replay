// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ColorSchemeSO
  class ColorSchemeSO;
  // Forward declaring type: SimpleColorSO
  class SimpleColorSO;
  // Forward declaring type: ColorScheme
  class ColorScheme;
  // Forward declaring type: NoteType
  struct NoteType;
  // Forward declaring type: SaberType
  struct SaberType;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: ColorManager
  class ColorManager : public UnityEngine::MonoBehaviour {
    public:
    // private ColorSchemeSO _defaultColorScheme
    // Offset: 0x18
    GlobalNamespace::ColorSchemeSO* defaultColorScheme;
    // private SimpleColorSO _saberAColor
    // Offset: 0x20
    GlobalNamespace::SimpleColorSO* saberAColor;
    // private SimpleColorSO _saberBColor
    // Offset: 0x28
    GlobalNamespace::SimpleColorSO* saberBColor;
    // private SimpleColorSO _environmentColor0
    // Offset: 0x30
    GlobalNamespace::SimpleColorSO* environmentColor0;
    // private SimpleColorSO _environmentColor1
    // Offset: 0x38
    GlobalNamespace::SimpleColorSO* environmentColor1;
    // private SimpleColorSO _environmentColor0Boost
    // Offset: 0x40
    GlobalNamespace::SimpleColorSO* environmentColor0Boost;
    // private SimpleColorSO _environmentColor1Boost
    // Offset: 0x48
    GlobalNamespace::SimpleColorSO* environmentColor1Boost;
    // private SimpleColorSO _obstaclesColor
    // Offset: 0x50
    GlobalNamespace::SimpleColorSO* obstaclesColor;
    // private ColorScheme _colorScheme
    // Offset: 0x58
    GlobalNamespace::ColorScheme* colorScheme;
    // private System.Action colorsDidChangeEvent
    // Offset: 0x60
    System::Action* colorsDidChangeEvent;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_colorsDidChangeEvent(System.Action value)
    // Offset: 0xB80280
    void add_colorsDidChangeEvent(System::Action* value);
    // public System.Void remove_colorsDidChangeEvent(System.Action value)
    // Offset: 0xB80324
    void remove_colorsDidChangeEvent(System::Action* value);
    // protected System.Void Awake()
    // Offset: 0xB803C8
    void Awake();
    // protected System.Void Start()
    // Offset: 0xB803F8
    void Start();
    // public UnityEngine.Color ColorForNoteType(NoteType type)
    // Offset: 0xB80514
    UnityEngine::Color ColorForNoteType(GlobalNamespace::NoteType type);
    // public UnityEngine.Color ColorForSaberType(SaberType type)
    // Offset: 0xB80568
    UnityEngine::Color ColorForSaberType(GlobalNamespace::SaberType type);
    // public UnityEngine.Color EffectsColorForSaberType(SaberType type)
    // Offset: 0xB805BC
    UnityEngine::Color EffectsColorForSaberType(GlobalNamespace::SaberType type);
    // public UnityEngine.Color GetObstacleEffectColor()
    // Offset: 0xB80654
    UnityEngine::Color GetObstacleEffectColor();
    // public System.Void .ctor()
    // Offset: 0xB806B8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static ColorManager* New_ctor();
  }; // ColorManager
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ColorManager*, "", "ColorManager");
#pragma pack(pop)
