// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IAvatarPart
  class IAvatarPart;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: AvatarPartCollection`1
  template<typename T>
  class AvatarPartCollection_1 : public ::Il2CppObject {
    public:
    // private readonly System.Collections.Generic.Dictionary`2<System.String,T> _partById
    // Offset: 0x0
    System::Collections::Generic::Dictionary_2<::Il2CppString*, T>* partById;
    // private readonly System.Collections.Generic.Dictionary`2<System.String,System.Int32> _partIndexById
    // Offset: 0x0
    System::Collections::Generic::Dictionary_2<::Il2CppString*, int>* partIndexById;
    // private readonly T[] _parts
    // Offset: 0x0
    ::Array<T>* parts;
    // public System.Int32 get_count()
    // Offset: 0xFFFFFFFF
    int get_count() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_count"));
    }
    // public T[] get_parts()
    // Offset: 0xFFFFFFFF
    ::Array<T>* get_parts() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<T>*>(this, "get_parts"));
    }
    // public System.Void .ctor(T[] parts)
    // Offset: 0xFFFFFFFF
    static AvatarPartCollection_1<T>* New_ctor(::Array<T>* parts) {
      return THROW_UNLESS(il2cpp_utils::New<AvatarPartCollection_1<T>*>(parts));
    }
    // public T GetById(System.String id)
    // Offset: 0xFFFFFFFF
    T GetById(::Il2CppString* id) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<T>(this, "GetById", id));
    }
    // public T GetRandom()
    // Offset: 0xFFFFFFFF
    T GetRandom() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<T>(this, "GetRandom"));
    }
    // public T GetByIndex(System.Int32 index)
    // Offset: 0xFFFFFFFF
    T GetByIndex(int index) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<T>(this, "GetByIndex", index));
    }
    // public System.Int32 GetIndexById(System.String id)
    // Offset: 0xFFFFFFFF
    int GetIndexById(::Il2CppString* id) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetIndexById", id));
    }
    // public T GetDefault()
    // Offset: 0xFFFFFFFF
    T GetDefault() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<T>(this, "GetDefault"));
    }
  }; // AvatarPartCollection`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::AvatarPartCollection_1, "", "AvatarPartCollection`1");
#pragma pack(pop)
