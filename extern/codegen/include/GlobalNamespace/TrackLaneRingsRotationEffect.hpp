// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: TrackLaneRingsManager
  class TrackLaneRingsManager;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: TrackLaneRingsRotationEffect
  // [] Offset: FFFFFFFF
  class TrackLaneRingsRotationEffect : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect
    class RingRotationEffect;
    // private TrackLaneRingsManager _trackLaneRingsManager
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::TrackLaneRingsManager* trackLaneRingsManager;
    // Field size check
    static_assert(sizeof(GlobalNamespace::TrackLaneRingsManager*) == 0x8);
    // [HeaderAttribute] Offset: 0xD39698
    // private System.Single _startupRotationAngle
    // Size: 0x4
    // Offset: 0x20
    float startupRotationAngle;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _startupRotationStep
    // Size: 0x4
    // Offset: 0x24
    float startupRotationStep;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 _startupRotationPropagationSpeed
    // Size: 0x4
    // Offset: 0x28
    int startupRotationPropagationSpeed;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single _startupRotationFlexySpeed
    // Size: 0x4
    // Offset: 0x2C
    float startupRotationFlexySpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Collections.Generic.List`1<TrackLaneRingsRotationEffect/RingRotationEffect> _activeRingRotationEffects
    // Size: 0x8
    // Offset: 0x30
    System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>* activeRingRotationEffects;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>*) == 0x8);
    // private System.Collections.Generic.List`1<TrackLaneRingsRotationEffect/RingRotationEffect> _ringRotationEffectsPool
    // Size: 0x8
    // Offset: 0x38
    System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>* ringRotationEffectsPool;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>*) == 0x8);
    // private System.Collections.Generic.List`1<System.Int32> ringRotationEffectsToDelete
    // Size: 0x8
    // Offset: 0x40
    System::Collections::Generic::List_1<int>* ringRotationEffectsToDelete;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<int>*) == 0x8);
    // Creating value type constructor for type: TrackLaneRingsRotationEffect
    TrackLaneRingsRotationEffect(GlobalNamespace::TrackLaneRingsManager* trackLaneRingsManager_ = {}, float startupRotationAngle_ = {}, float startupRotationStep_ = {}, int startupRotationPropagationSpeed_ = {}, float startupRotationFlexySpeed_ = {}, System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>* activeRingRotationEffects_ = {}, System::Collections::Generic::List_1<GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>* ringRotationEffectsPool_ = {}, System::Collections::Generic::List_1<int>* ringRotationEffectsToDelete_ = {}) noexcept : trackLaneRingsManager{trackLaneRingsManager_}, startupRotationAngle{startupRotationAngle_}, startupRotationStep{startupRotationStep_}, startupRotationPropagationSpeed{startupRotationPropagationSpeed_}, startupRotationFlexySpeed{startupRotationFlexySpeed_}, activeRingRotationEffects{activeRingRotationEffects_}, ringRotationEffectsPool{ringRotationEffectsPool_}, ringRotationEffectsToDelete{ringRotationEffectsToDelete_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void Awake()
    // Offset: 0xF469AC
    void Awake();
    // protected System.Void Start()
    // Offset: 0xF46AE0
    void Start();
    // protected System.Void FixedUpdate()
    // Offset: 0xF46B8C
    void FixedUpdate();
    // public System.Void AddRingRotationEffect(System.Single angle, System.Single step, System.Int32 propagationSpeed, System.Single flexySpeed)
    // Offset: 0xF46AF0
    void AddRingRotationEffect(float angle, float step, int propagationSpeed, float flexySpeed);
    // public System.Single GetFirstRingRotationAngle()
    // Offset: 0xF46E08
    float GetFirstRingRotationAngle();
    // public System.Single GetFirstRingDestinationRotationAngle()
    // Offset: 0xF46E4C
    float GetFirstRingDestinationRotationAngle();
    // private TrackLaneRingsRotationEffect/RingRotationEffect SpawnRingRotationEffect()
    // Offset: 0xF46D70
    GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect* SpawnRingRotationEffect();
    // private System.Void RecycleRingRotationEffect(TrackLaneRingsRotationEffect/RingRotationEffect ringRotationEffect)
    // Offset: 0xF46D08
    void RecycleRingRotationEffect(GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect* ringRotationEffect);
    // public System.Void .ctor()
    // Offset: 0xF46E90
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TrackLaneRingsRotationEffect* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TrackLaneRingsRotationEffect::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TrackLaneRingsRotationEffect*, creationType>()));
    }
  }; // TrackLaneRingsRotationEffect
  #pragma pack(pop)
  static check_size<sizeof(TrackLaneRingsRotationEffect), 64 + sizeof(System::Collections::Generic::List_1<int>*)> __GlobalNamespace_TrackLaneRingsRotationEffectSizeCheck;
  static_assert(sizeof(TrackLaneRingsRotationEffect) == 0x48);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::TrackLaneRingsRotationEffect*, "", "TrackLaneRingsRotationEffect");
