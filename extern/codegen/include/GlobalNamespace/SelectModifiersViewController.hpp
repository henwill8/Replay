// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: GameplayModifiersPanelController
  class GameplayModifiersPanelController;
  // Forward declaring type: GameplayModifiers
  class GameplayModifiers;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: SelectModifiersViewController
  // [] Offset: FFFFFFFF
  class SelectModifiersViewController : public HMUI::ViewController {
    public:
    // private GameplayModifiersPanelController _gameplayModifiersPanelController
    // Size: 0x8
    // Offset: 0x70
    GlobalNamespace::GameplayModifiersPanelController* gameplayModifiersPanelController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::GameplayModifiersPanelController*) == 0x8);
    // Creating value type constructor for type: SelectModifiersViewController
    SelectModifiersViewController(GlobalNamespace::GameplayModifiersPanelController* gameplayModifiersPanelController_ = {}) noexcept : gameplayModifiersPanelController{gameplayModifiersPanelController_} {}
    // public GameplayModifiers get_gameplayModifiers()
    // Offset: 0x1090070
    GlobalNamespace::GameplayModifiers* get_gameplayModifiers();
    // public System.Void Setup(GameplayModifiers gameplayModifiers)
    // Offset: 0x109008C
    void Setup(GlobalNamespace::GameplayModifiers* gameplayModifiers);
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0x10900A8
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
    // public System.Void .ctor()
    // Offset: 0x1090158
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SelectModifiersViewController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectModifiersViewController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SelectModifiersViewController*, creationType>()));
    }
  }; // SelectModifiersViewController
  #pragma pack(pop)
  static check_size<sizeof(SelectModifiersViewController), 112 + sizeof(GlobalNamespace::GameplayModifiersPanelController*)> __GlobalNamespace_SelectModifiersViewControllerSizeCheck;
  static_assert(sizeof(SelectModifiersViewController) == 0x78);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SelectModifiersViewController*, "", "SelectModifiersViewController");
