// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: MultiplayerPlayerLayout
#include "GlobalNamespace/MultiplayerPlayerLayout.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MultiplayerLayoutProvider
  class MultiplayerLayoutProvider;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MultiplayerConditionalActiveByLayout
  class MultiplayerConditionalActiveByLayout : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::MultiplayerConditionalActiveByLayout::Condition
    struct Condition;
    // Autogenerated type: MultiplayerConditionalActiveByLayout/Condition
    struct Condition : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: Condition
      constexpr Condition(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MultiplayerConditionalActiveByLayout/Condition ShowIf
      static constexpr const int ShowIf = 0;
      // Get static field: static public MultiplayerConditionalActiveByLayout/Condition ShowIf
      static GlobalNamespace::MultiplayerConditionalActiveByLayout::Condition _get_ShowIf();
      // Set static field: static public MultiplayerConditionalActiveByLayout/Condition ShowIf
      static void _set_ShowIf(GlobalNamespace::MultiplayerConditionalActiveByLayout::Condition value);
      // static field const value: static public MultiplayerConditionalActiveByLayout/Condition HideIf
      static constexpr const int HideIf = 1;
      // Get static field: static public MultiplayerConditionalActiveByLayout/Condition HideIf
      static GlobalNamespace::MultiplayerConditionalActiveByLayout::Condition _get_HideIf();
      // Set static field: static public MultiplayerConditionalActiveByLayout/Condition HideIf
      static void _set_HideIf(GlobalNamespace::MultiplayerConditionalActiveByLayout::Condition value);
    }; // MultiplayerConditionalActiveByLayout/Condition
    // private MultiplayerConditionalActiveByLayout/Condition _condition
    // Offset: 0x18
    GlobalNamespace::MultiplayerConditionalActiveByLayout::Condition condition;
    // private MultiplayerPlayerLayout _layout
    // Offset: 0x1C
    GlobalNamespace::MultiplayerPlayerLayout layout;
    // private readonly MultiplayerLayoutProvider _layoutProvider
    // Offset: 0x20
    GlobalNamespace::MultiplayerLayoutProvider* layoutProvider;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // private System.Void Start()
    // Offset: 0xFA8354
    void Start();
    // private System.Void HandlePlayersLayoutWasCalculated(MultiplayerPlayerLayout layout, System.Int32 playersCount)
    // Offset: 0xFA8400
    void HandlePlayersLayoutWasCalculated(GlobalNamespace::MultiplayerPlayerLayout layout, int playersCount);
    // public System.Void .ctor()
    // Offset: 0xFA8464
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static MultiplayerConditionalActiveByLayout* New_ctor();
  }; // MultiplayerConditionalActiveByLayout
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerConditionalActiveByLayout*, "", "MultiplayerConditionalActiveByLayout");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerConditionalActiveByLayout::Condition, "", "MultiplayerConditionalActiveByLayout/Condition");
#pragma pack(pop)
