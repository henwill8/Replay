// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRPlugin/Result
  struct OVRPlugin::Result : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: Result
    constexpr Result(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public OVRPlugin/Result Success
    static constexpr const int Success = 0;
    // Get static field: static public OVRPlugin/Result Success
    static GlobalNamespace::OVRPlugin::Result _get_Success();
    // Set static field: static public OVRPlugin/Result Success
    static void _set_Success(GlobalNamespace::OVRPlugin::Result value);
    // static field const value: static public OVRPlugin/Result Failure
    static constexpr const int Failure = -1000;
    // Get static field: static public OVRPlugin/Result Failure
    static GlobalNamespace::OVRPlugin::Result _get_Failure();
    // Set static field: static public OVRPlugin/Result Failure
    static void _set_Failure(GlobalNamespace::OVRPlugin::Result value);
    // static field const value: static public OVRPlugin/Result Failure_InvalidParameter
    static constexpr const int Failure_InvalidParameter = -1001;
    // Get static field: static public OVRPlugin/Result Failure_InvalidParameter
    static GlobalNamespace::OVRPlugin::Result _get_Failure_InvalidParameter();
    // Set static field: static public OVRPlugin/Result Failure_InvalidParameter
    static void _set_Failure_InvalidParameter(GlobalNamespace::OVRPlugin::Result value);
    // static field const value: static public OVRPlugin/Result Failure_NotInitialized
    static constexpr const int Failure_NotInitialized = -1002;
    // Get static field: static public OVRPlugin/Result Failure_NotInitialized
    static GlobalNamespace::OVRPlugin::Result _get_Failure_NotInitialized();
    // Set static field: static public OVRPlugin/Result Failure_NotInitialized
    static void _set_Failure_NotInitialized(GlobalNamespace::OVRPlugin::Result value);
    // static field const value: static public OVRPlugin/Result Failure_InvalidOperation
    static constexpr const int Failure_InvalidOperation = -1003;
    // Get static field: static public OVRPlugin/Result Failure_InvalidOperation
    static GlobalNamespace::OVRPlugin::Result _get_Failure_InvalidOperation();
    // Set static field: static public OVRPlugin/Result Failure_InvalidOperation
    static void _set_Failure_InvalidOperation(GlobalNamespace::OVRPlugin::Result value);
    // static field const value: static public OVRPlugin/Result Failure_Unsupported
    static constexpr const int Failure_Unsupported = -1004;
    // Get static field: static public OVRPlugin/Result Failure_Unsupported
    static GlobalNamespace::OVRPlugin::Result _get_Failure_Unsupported();
    // Set static field: static public OVRPlugin/Result Failure_Unsupported
    static void _set_Failure_Unsupported(GlobalNamespace::OVRPlugin::Result value);
    // static field const value: static public OVRPlugin/Result Failure_NotYetImplemented
    static constexpr const int Failure_NotYetImplemented = -1005;
    // Get static field: static public OVRPlugin/Result Failure_NotYetImplemented
    static GlobalNamespace::OVRPlugin::Result _get_Failure_NotYetImplemented();
    // Set static field: static public OVRPlugin/Result Failure_NotYetImplemented
    static void _set_Failure_NotYetImplemented(GlobalNamespace::OVRPlugin::Result value);
    // static field const value: static public OVRPlugin/Result Failure_OperationFailed
    static constexpr const int Failure_OperationFailed = -1006;
    // Get static field: static public OVRPlugin/Result Failure_OperationFailed
    static GlobalNamespace::OVRPlugin::Result _get_Failure_OperationFailed();
    // Set static field: static public OVRPlugin/Result Failure_OperationFailed
    static void _set_Failure_OperationFailed(GlobalNamespace::OVRPlugin::Result value);
    // static field const value: static public OVRPlugin/Result Failure_InsufficientSize
    static constexpr const int Failure_InsufficientSize = -1007;
    // Get static field: static public OVRPlugin/Result Failure_InsufficientSize
    static GlobalNamespace::OVRPlugin::Result _get_Failure_InsufficientSize();
    // Set static field: static public OVRPlugin/Result Failure_InsufficientSize
    static void _set_Failure_InsufficientSize(GlobalNamespace::OVRPlugin::Result value);
  }; // OVRPlugin/Result
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRPlugin::Result, "", "OVRPlugin/Result");
#pragma pack(pop)
