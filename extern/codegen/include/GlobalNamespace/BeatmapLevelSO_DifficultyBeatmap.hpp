// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapDataSO
  class BeatmapDataSO;
  // Forward declaring type: IBeatmapLevel
  class IBeatmapLevel;
  // Forward declaring type: IDifficultyBeatmapSet
  class IDifficultyBeatmapSet;
  // Forward declaring type: BeatmapData
  class BeatmapData;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BeatmapLevelSO/DifficultyBeatmap
  class BeatmapLevelSO::DifficultyBeatmap : public ::Il2CppObject, public GlobalNamespace::IDifficultyBeatmap {
    public:
    // private BeatmapDifficulty _difficulty
    // Offset: 0x10
    GlobalNamespace::BeatmapDifficulty difficulty;
    // private System.Int32 _difficultyRank
    // Offset: 0x14
    int difficultyRank;
    // private System.Single _noteJumpMovementSpeed
    // Offset: 0x18
    float noteJumpMovementSpeed;
    // private System.Single _noteJumpStartBeatOffset
    // Offset: 0x1C
    float noteJumpStartBeatOffset;
    // private BeatmapDataSO _beatmapData
    // Offset: 0x20
    GlobalNamespace::BeatmapDataSO* beatmapData;
    // private IBeatmapLevel _parentLevel
    // Offset: 0x28
    GlobalNamespace::IBeatmapLevel* parentLevel;
    // private IDifficultyBeatmapSet _parentDifficultyBeatmapSet
    // Offset: 0x30
    GlobalNamespace::IDifficultyBeatmapSet* parentDifficultyBeatmapSet;
    // public System.Void SetParents(IBeatmapLevel parentLevel, IDifficultyBeatmapSet parentDifficultyBeatmapSet)
    // Offset: 0xB70194
    void SetParents(GlobalNamespace::IBeatmapLevel* parentLevel, GlobalNamespace::IDifficultyBeatmapSet* parentDifficultyBeatmapSet);
    // public System.Void .ctor(IBeatmapLevel parentLevel, BeatmapDifficulty difficulty, System.Int32 difficultyRank, System.Single noteJumpMovementSpeed, System.Single noteJumpStartBeatOffset, BeatmapDataSO beatmapData)
    // Offset: 0xB730A8
    static BeatmapLevelSO::DifficultyBeatmap* New_ctor(GlobalNamespace::IBeatmapLevel* parentLevel, GlobalNamespace::BeatmapDifficulty difficulty, int difficultyRank, float noteJumpMovementSpeed, float noteJumpStartBeatOffset, GlobalNamespace::BeatmapDataSO* beatmapData);
    // public BeatmapDifficulty get_difficulty()
    // Offset: 0xB7305C
    // Implemented from: IDifficultyBeatmap
    // Base method: BeatmapDifficulty IDifficultyBeatmap::get_difficulty()
    GlobalNamespace::BeatmapDifficulty get_difficulty();
    // public System.Int32 get_difficultyRank()
    // Offset: 0xB73064
    // Implemented from: IDifficultyBeatmap
    // Base method: System.Int32 IDifficultyBeatmap::get_difficultyRank()
    int get_difficultyRank();
    // public System.Single get_noteJumpMovementSpeed()
    // Offset: 0xB7306C
    // Implemented from: IDifficultyBeatmap
    // Base method: System.Single IDifficultyBeatmap::get_noteJumpMovementSpeed()
    float get_noteJumpMovementSpeed();
    // public System.Single get_noteJumpStartBeatOffset()
    // Offset: 0xB73074
    // Implemented from: IDifficultyBeatmap
    // Base method: System.Single IDifficultyBeatmap::get_noteJumpStartBeatOffset()
    float get_noteJumpStartBeatOffset();
    // public BeatmapData get_beatmapData()
    // Offset: 0xB7307C
    // Implemented from: IDifficultyBeatmap
    // Base method: BeatmapData IDifficultyBeatmap::get_beatmapData()
    GlobalNamespace::BeatmapData* get_beatmapData();
    // public IBeatmapLevel get_level()
    // Offset: 0xB73098
    // Implemented from: IDifficultyBeatmap
    // Base method: IBeatmapLevel IDifficultyBeatmap::get_level()
    GlobalNamespace::IBeatmapLevel* get_level();
    // public IDifficultyBeatmapSet get_parentDifficultyBeatmapSet()
    // Offset: 0xB730A0
    // Implemented from: IDifficultyBeatmap
    // Base method: IDifficultyBeatmapSet IDifficultyBeatmap::get_parentDifficultyBeatmapSet()
    GlobalNamespace::IDifficultyBeatmapSet* get_parentDifficultyBeatmapSet();
  }; // BeatmapLevelSO/DifficultyBeatmap
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*, "", "BeatmapLevelSO/DifficultyBeatmap");
#pragma pack(pop)
