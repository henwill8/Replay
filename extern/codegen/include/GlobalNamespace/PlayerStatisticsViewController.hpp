// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PlayerDataModel
  class PlayerDataModel;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: TextSegmentedControl
  class TextSegmentedControl;
  // Forward declaring type: SegmentedControl
  class SegmentedControl;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: PlayerStatisticsViewController
  class PlayerStatisticsViewController : public HMUI::ViewController {
    public:
    // Nested type: GlobalNamespace::PlayerStatisticsViewController::StatsScopeData
    struct StatsScopeData;
    // private HMUI.TextSegmentedControl _statsScopeSegmentedControl
    // Offset: 0x68
    HMUI::TextSegmentedControl* statsScopeSegmentedControl;
    // private TMPro.TextMeshProUGUI _playedLevelsCountText
    // Offset: 0x70
    TMPro::TextMeshProUGUI* playedLevelsCountText;
    // private TMPro.TextMeshProUGUI _clearedLevelsCountText
    // Offset: 0x78
    TMPro::TextMeshProUGUI* clearedLevelsCountText;
    // private TMPro.TextMeshProUGUI _failedLevelsCountText
    // Offset: 0x80
    TMPro::TextMeshProUGUI* failedLevelsCountText;
    // private TMPro.TextMeshProUGUI _timePlayedText
    // Offset: 0x88
    TMPro::TextMeshProUGUI* timePlayedText;
    // private TMPro.TextMeshProUGUI _goodCutsCountText
    // Offset: 0x90
    TMPro::TextMeshProUGUI* goodCutsCountText;
    // private TMPro.TextMeshProUGUI _badCutsCountCountText
    // Offset: 0x98
    TMPro::TextMeshProUGUI* badCutsCountCountText;
    // private TMPro.TextMeshProUGUI _missedCountText
    // Offset: 0xA0
    TMPro::TextMeshProUGUI* missedCountText;
    // private TMPro.TextMeshProUGUI _averageCutScoreText
    // Offset: 0xA8
    TMPro::TextMeshProUGUI* averageCutScoreText;
    // private TMPro.TextMeshProUGUI _totalScoreText
    // Offset: 0xB0
    TMPro::TextMeshProUGUI* totalScoreText;
    // private TMPro.TextMeshProUGUI _fullComboCountText
    // Offset: 0xB8
    TMPro::TextMeshProUGUI* fullComboCountText;
    // private TMPro.TextMeshProUGUI _handDistanceTravelledText
    // Offset: 0xC0
    TMPro::TextMeshProUGUI* handDistanceTravelledText;
    // private PlayerDataModel _playerDataModel
    // Offset: 0xC8
    GlobalNamespace::PlayerDataModel* playerDataModel;
    // private PlayerStatisticsViewController/StatsScopeData[] _statsScopeDatas
    // Offset: 0xD0
    ::Array<GlobalNamespace::PlayerStatisticsViewController::StatsScopeData>* statsScopeDatas;
    // private System.Void UpdateView(PlayerAllOverallStatsData/PlayerOverallStatsData playerOverallStatsData)
    // Offset: 0xC1C71C
    void UpdateView(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* playerOverallStatsData);
    // private System.Void HandleStatsScopeSegmentedControlDidSelectCell(HMUI.SegmentedControl segmentedControl, System.Int32 cellIdx)
    // Offset: 0xC1CD2C
    void HandleStatsScopeSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellIdx);
    // private PlayerAllOverallStatsData/PlayerOverallStatsData <DidActivate>b__15_0()
    // Offset: 0xC1CDC8
    GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* $DidActivate$b__15_0();
    // private PlayerAllOverallStatsData/PlayerOverallStatsData <DidActivate>b__15_1()
    // Offset: 0xC1CDF8
    GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* $DidActivate$b__15_1();
    // private PlayerAllOverallStatsData/PlayerOverallStatsData <DidActivate>b__15_2()
    // Offset: 0xC1CE28
    GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* $DidActivate$b__15_2();
    // private PlayerAllOverallStatsData/PlayerOverallStatsData <DidActivate>b__15_3()
    // Offset: 0xC1CE58
    GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* $DidActivate$b__15_3();
    // protected override System.Void DidActivate(System.Boolean firstActivation, HMUI.ViewController/ActivationType activationType)
    // Offset: 0xC1C298
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, HMUI.ViewController/ActivationType activationType)
    void DidActivate(bool firstActivation, HMUI::ViewController::ActivationType activationType);
    // protected override System.Void DidDeactivate(HMUI.ViewController/DeactivationType deactivationType)
    // Offset: 0xC1CC80
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidDeactivate(HMUI.ViewController/DeactivationType deactivationType)
    void DidDeactivate(HMUI::ViewController::DeactivationType deactivationType);
    // public System.Void .ctor()
    // Offset: 0xC1CDC0
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static PlayerStatisticsViewController* New_ctor();
  }; // PlayerStatisticsViewController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::PlayerStatisticsViewController*, "", "PlayerStatisticsViewController");
#pragma pack(pop)
