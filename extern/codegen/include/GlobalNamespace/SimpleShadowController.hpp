// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: SpriteRenderer
  class SpriteRenderer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: SimpleShadowController
  // [] Offset: FFFFFFFF
  class SimpleShadowController : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.Transform _followTransform
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::Transform* followTransform;
    // Field size check
    static_assert(sizeof(UnityEngine::Transform*) == 0x8);
    // private UnityEngine.SpriteRenderer _spriteRenderer
    // Size: 0x8
    // Offset: 0x20
    UnityEngine::SpriteRenderer* spriteRenderer;
    // Field size check
    static_assert(sizeof(UnityEngine::SpriteRenderer*) == 0x8);
    // [SpaceAttribute] Offset: 0xD0A370
    // private System.Single _distanceScale
    // Size: 0x4
    // Offset: 0x28
    float distanceScale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _scale
    // Size: 0x4
    // Offset: 0x2C
    float scale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [SpaceAttribute] Offset: 0xD0A3B8
    // private System.Single _alpha
    // Size: 0x4
    // Offset: 0x30
    float alpha;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [SpaceAttribute] Offset: 0xD0A3F0
    // private System.Single _floorYPos
    // Size: 0x4
    // Offset: 0x34
    float floorYPos;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Transform _transform
    // Size: 0x8
    // Offset: 0x38
    UnityEngine::Transform* transform;
    // Field size check
    static_assert(sizeof(UnityEngine::Transform*) == 0x8);
    // Creating value type constructor for type: SimpleShadowController
    SimpleShadowController(UnityEngine::Transform* followTransform_ = {}, UnityEngine::SpriteRenderer* spriteRenderer_ = {}, float distanceScale_ = {}, float scale_ = {}, float alpha_ = {}, float floorYPos_ = {}, UnityEngine::Transform* transform_ = {}) noexcept : followTransform{followTransform_}, spriteRenderer{spriteRenderer_}, distanceScale{distanceScale_}, scale{scale_}, alpha{alpha_}, floorYPos{floorYPos_}, transform{transform_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void Start()
    // Offset: 0x1118204
    void Start();
    // protected System.Void LateUpdate()
    // Offset: 0x1118234
    void LateUpdate();
    // public System.Void .ctor()
    // Offset: 0x1118374
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SimpleShadowController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleShadowController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SimpleShadowController*, creationType>()));
    }
  }; // SimpleShadowController
  #pragma pack(pop)
  static check_size<sizeof(SimpleShadowController), 56 + sizeof(UnityEngine::Transform*)> __GlobalNamespace_SimpleShadowControllerSizeCheck;
  static_assert(sizeof(SimpleShadowController) == 0x40);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SimpleShadowController*, "", "SimpleShadowController");
