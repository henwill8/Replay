// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BloomPrePassBackgroundColorsGradient
  class BloomPrePassBackgroundColorsGradient;
  // Forward declaring type: ColorManager
  class ColorManager;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: BloomPrePassBackgroundColorsGradientFromEnvironmentColors
  // [] Offset: FFFFFFFF
  class BloomPrePassBackgroundColorsGradientFromEnvironmentColors : public UnityEngine::MonoBehaviour {
    public:
    // private BloomPrePassBackgroundColorsGradient _bloomPrePassBackgroundColorsGradient
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::BloomPrePassBackgroundColorsGradient* bloomPrePassBackgroundColorsGradient;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BloomPrePassBackgroundColorsGradient*) == 0x8);
    // [SpaceAttribute] Offset: 0xD448EC
    // private System.Single _skyColorIntensity
    // Size: 0x4
    // Offset: 0x20
    float skyColorIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _groundColorIntensity
    // Size: 0x4
    // Offset: 0x24
    float groundColorIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [InjectAttribute] Offset: 0xD44934
    // private readonly ColorManager _colorManager
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::ColorManager* colorManager;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ColorManager*) == 0x8);
    // Creating value type constructor for type: BloomPrePassBackgroundColorsGradientFromEnvironmentColors
    BloomPrePassBackgroundColorsGradientFromEnvironmentColors(GlobalNamespace::BloomPrePassBackgroundColorsGradient* bloomPrePassBackgroundColorsGradient_ = {}, float skyColorIntensity_ = {}, float groundColorIntensity_ = {}, GlobalNamespace::ColorManager* colorManager_ = {}) noexcept : bloomPrePassBackgroundColorsGradient{bloomPrePassBackgroundColorsGradient_}, skyColorIntensity{skyColorIntensity_}, groundColorIntensity{groundColorIntensity_}, colorManager{colorManager_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void Start()
    // Offset: 0xF6083C
    void Start();
    // public System.Void .ctor()
    // Offset: 0xF60A18
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BloomPrePassBackgroundColorsGradientFromEnvironmentColors* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientFromEnvironmentColors::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BloomPrePassBackgroundColorsGradientFromEnvironmentColors*, creationType>()));
    }
  }; // BloomPrePassBackgroundColorsGradientFromEnvironmentColors
  #pragma pack(pop)
  static check_size<sizeof(BloomPrePassBackgroundColorsGradientFromEnvironmentColors), 40 + sizeof(GlobalNamespace::ColorManager*)> __GlobalNamespace_BloomPrePassBackgroundColorsGradientFromEnvironmentColorsSizeCheck;
  static_assert(sizeof(BloomPrePassBackgroundColorsGradientFromEnvironmentColors) == 0x30);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BloomPrePassBackgroundColorsGradientFromEnvironmentColors*, "", "BloomPrePassBackgroundColorsGradientFromEnvironmentColors");
