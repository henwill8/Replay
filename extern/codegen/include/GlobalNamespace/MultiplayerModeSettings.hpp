// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MultiplayerModeSettings
  // [] Offset: FFFFFFFF
  class MultiplayerModeSettings : public ::Il2CppObject {
    public:
    // public System.Int32 createServerPlayersCount
    // Size: 0x4
    // Offset: 0x10
    int createServerPlayersCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public BeatmapDifficultyMask quickPlayBeatmapDifficulty
    // Size: 0x1
    // Offset: 0x14
    GlobalNamespace::BeatmapDifficultyMask quickPlayBeatmapDifficulty;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BeatmapDifficultyMask) == 0x1);
    // Padding between fields: quickPlayBeatmapDifficulty and: quickPlaySongPackMask
    char __padding1[0x3] = {};
    // public SongPackMask quickPlaySongPackMask
    // Size: 0x10
    // Offset: 0x18
    GlobalNamespace::SongPackMask quickPlaySongPackMask;
    // Field size check
    static_assert(sizeof(GlobalNamespace::SongPackMask) == 0x10);
    // Creating value type constructor for type: MultiplayerModeSettings
    MultiplayerModeSettings(int createServerPlayersCount_ = {}, GlobalNamespace::BeatmapDifficultyMask quickPlayBeatmapDifficulty_ = {}, GlobalNamespace::SongPackMask quickPlaySongPackMask_ = {}) noexcept : createServerPlayersCount{createServerPlayersCount_}, quickPlayBeatmapDifficulty{quickPlayBeatmapDifficulty_}, quickPlaySongPackMask{quickPlaySongPackMask_} {}
    // public System.Void .ctor()
    // Offset: 0xFEA464
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiplayerModeSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiplayerModeSettings*, creationType>()));
    }
  }; // MultiplayerModeSettings
  #pragma pack(pop)
  static check_size<sizeof(MultiplayerModeSettings), 24 + sizeof(GlobalNamespace::SongPackMask)> __GlobalNamespace_MultiplayerModeSettingsSizeCheck;
  static_assert(sizeof(MultiplayerModeSettings) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerModeSettings*, "", "MultiplayerModeSettings");
