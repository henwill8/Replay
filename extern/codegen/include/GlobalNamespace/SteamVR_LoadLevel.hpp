// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: SteamVR_LoadLevel
  class SteamVR_LoadLevel : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::SteamVR_LoadLevel::$LoadLevel$d__45
    class $LoadLevel$d__45;
    // public System.String levelName
    // Offset: 0x18
    ::Il2CppString* levelName;
    // public System.String internalProcessPath
    // Offset: 0x20
    ::Il2CppString* internalProcessPath;
    // public System.String internalProcessArgs
    // Offset: 0x28
    ::Il2CppString* internalProcessArgs;
    // public System.Boolean loadAdditive
    // Offset: 0x30
    bool loadAdditive;
    // public System.Boolean loadAsync
    // Offset: 0x31
    bool loadAsync;
    // public UnityEngine.Texture loadingScreen
    // Offset: 0x38
    UnityEngine::Texture* loadingScreen;
    // public UnityEngine.Texture progressBarEmpty
    // Offset: 0x40
    UnityEngine::Texture* progressBarEmpty;
    // public UnityEngine.Texture progressBarFull
    // Offset: 0x48
    UnityEngine::Texture* progressBarFull;
    // public System.Single loadingScreenWidthInMeters
    // Offset: 0x50
    float loadingScreenWidthInMeters;
    // public System.Single progressBarWidthInMeters
    // Offset: 0x54
    float progressBarWidthInMeters;
    // public System.Single loadingScreenDistance
    // Offset: 0x58
    float loadingScreenDistance;
    // public UnityEngine.Transform loadingScreenTransform
    // Offset: 0x60
    UnityEngine::Transform* loadingScreenTransform;
    // public UnityEngine.Transform progressBarTransform
    // Offset: 0x68
    UnityEngine::Transform* progressBarTransform;
    // public UnityEngine.Texture front
    // Offset: 0x70
    UnityEngine::Texture* front;
    // public UnityEngine.Texture back
    // Offset: 0x78
    UnityEngine::Texture* back;
    // public UnityEngine.Texture left
    // Offset: 0x80
    UnityEngine::Texture* left;
    // public UnityEngine.Texture right
    // Offset: 0x88
    UnityEngine::Texture* right;
    // public UnityEngine.Texture top
    // Offset: 0x90
    UnityEngine::Texture* top;
    // public UnityEngine.Texture bottom
    // Offset: 0x98
    UnityEngine::Texture* bottom;
    // public UnityEngine.Color backgroundColor
    // Offset: 0xA0
    UnityEngine::Color backgroundColor;
    // public System.Boolean showGrid
    // Offset: 0xB0
    bool showGrid;
    // public System.Single fadeOutTime
    // Offset: 0xB4
    float fadeOutTime;
    // public System.Single fadeInTime
    // Offset: 0xB8
    float fadeInTime;
    // public System.Single postLoadSettleTime
    // Offset: 0xBC
    float postLoadSettleTime;
    // public System.Single loadingScreenFadeInTime
    // Offset: 0xC0
    float loadingScreenFadeInTime;
    // public System.Single loadingScreenFadeOutTime
    // Offset: 0xC4
    float loadingScreenFadeOutTime;
    // private System.Single fadeRate
    // Offset: 0xC8
    float fadeRate;
    // private System.Single alpha
    // Offset: 0xCC
    float alpha;
    // private UnityEngine.AsyncOperation async
    // Offset: 0xD0
    UnityEngine::AsyncOperation* async;
    // private UnityEngine.RenderTexture renderTexture
    // Offset: 0xD8
    UnityEngine::RenderTexture* renderTexture;
    // private System.UInt64 loadingScreenOverlayHandle
    // Offset: 0xE0
    uint64_t loadingScreenOverlayHandle;
    // private System.UInt64 progressBarOverlayHandle
    // Offset: 0xE8
    uint64_t progressBarOverlayHandle;
    // public System.Boolean autoTriggerOnEnable
    // Offset: 0xF0
    bool autoTriggerOnEnable;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get static field: static private SteamVR_LoadLevel _active
    static GlobalNamespace::SteamVR_LoadLevel* _get__active();
    // Set static field: static private SteamVR_LoadLevel _active
    static void _set__active(GlobalNamespace::SteamVR_LoadLevel* value);
    // static public System.Boolean get_loading()
    // Offset: 0xD88564
    static bool get_loading();
    // static public System.Single get_progress()
    // Offset: 0xD885FC
    static float get_progress();
    // static public UnityEngine.Texture get_progressTexture()
    // Offset: 0xD88710
    static UnityEngine::Texture* get_progressTexture();
    // private System.Void OnEnable()
    // Offset: 0xD887E8
    void OnEnable();
    // public System.Void Trigger()
    // Offset: 0xD887F8
    void Trigger();
    // static public System.Void Begin(System.String levelName, System.Boolean showGrid, System.Single fadeOutTime, System.Single r, System.Single g, System.Single b, System.Single a)
    // Offset: 0xD8890C
    static void Begin(::Il2CppString* levelName, bool showGrid, float fadeOutTime, float r, float g, float b, float a);
    // private System.Void OnGUI()
    // Offset: 0xD88A20
    void OnGUI();
    // private System.Void Update()
    // Offset: 0xD89218
    void Update();
    // private System.Collections.IEnumerator LoadLevel()
    // Offset: 0xD88890
    System::Collections::IEnumerator* LoadLevel();
    // private System.UInt64 GetOverlayHandle(System.String overlayName, UnityEngine.Transform transform, System.Single widthInMeters)
    // Offset: 0xD88E7C
    uint64_t GetOverlayHandle(::Il2CppString* overlayName, UnityEngine::Transform* transform, float widthInMeters);
    // public System.Void .ctor()
    // Offset: 0xD89494
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static SteamVR_LoadLevel* New_ctor();
    // static private System.Void .cctor()
    // Offset: 0xD894F8
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // SteamVR_LoadLevel
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SteamVR_LoadLevel*, "", "SteamVR_LoadLevel");
#pragma pack(pop)
