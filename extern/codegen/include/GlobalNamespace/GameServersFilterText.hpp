// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: CurvedTextMeshPro
  class CurvedTextMeshPro;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SongPackMasksModel
  class SongPackMasksModel;
  // Forward declaring type: GameServersFilter
  class GameServersFilter;
  // Forward declaring type: BeatmapDifficultyMask
  struct BeatmapDifficultyMask;
  // Forward declaring type: SongPackMask
  struct SongPackMask;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: GameServersFilterText
  // [] Offset: FFFFFFFF
  // [RequireComponent] Offset: D306C8
  class GameServersFilterText : public UnityEngine::MonoBehaviour {
    public:
    // private HMUI.CurvedTextMeshPro _text
    // Size: 0x8
    // Offset: 0x18
    HMUI::CurvedTextMeshPro* text;
    // Field size check
    static_assert(sizeof(HMUI::CurvedTextMeshPro*) == 0x8);
    // [InjectAttribute] Offset: 0xD43EC8
    // private readonly SongPackMasksModel _songPackMasksModel
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::SongPackMasksModel* songPackMasksModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::SongPackMasksModel*) == 0x8);
    // private readonly System.Text.StringBuilder _stringBuilder
    // Size: 0x8
    // Offset: 0x28
    System::Text::StringBuilder* stringBuilder;
    // Field size check
    static_assert(sizeof(System::Text::StringBuilder*) == 0x8);
    // Creating value type constructor for type: GameServersFilterText
    GameServersFilterText(HMUI::CurvedTextMeshPro* text_ = {}, GlobalNamespace::SongPackMasksModel* songPackMasksModel_ = {}, System::Text::StringBuilder* stringBuilder_ = {}) noexcept : text{text_}, songPackMasksModel{songPackMasksModel_}, stringBuilder{stringBuilder_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void Setup(GameServersFilter filter)
    // Offset: 0xF3953C
    void Setup(GlobalNamespace::GameServersFilter* filter);
    // public System.Void Setup(BeatmapDifficultyMask beatmapDifficultyMask, SongPackMask songPackMask)
    // Offset: 0xF396EC
    void Setup(GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask, GlobalNamespace::SongPackMask songPackMask);
    // public System.Void .ctor()
    // Offset: 0xF39874
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameServersFilterText* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterText::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameServersFilterText*, creationType>()));
    }
  }; // GameServersFilterText
  #pragma pack(pop)
  static check_size<sizeof(GameServersFilterText), 40 + sizeof(System::Text::StringBuilder*)> __GlobalNamespace_GameServersFilterTextSizeCheck;
  static_assert(sizeof(GameServersFilterText) == 0x30);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::GameServersFilterText*, "", "GameServersFilterText");
