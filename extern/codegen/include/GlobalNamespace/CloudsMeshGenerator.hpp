// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: Gradient
  class Gradient;
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: CloudsMeshGenerator
  class CloudsMeshGenerator : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::CloudsMeshGenerator::Cloud
    struct Cloud;
    // Nested type: GlobalNamespace::CloudsMeshGenerator::Ring
    struct Ring;
    // Nested type: GlobalNamespace::CloudsMeshGenerator::ProhibitedRadius
    struct ProhibitedRadius;
    // Nested type: GlobalNamespace::CloudsMeshGenerator::RadiusChunk
    struct RadiusChunk;
    // private UnityEngine.MeshFilter _meshFilter
    // Offset: 0x18
    UnityEngine::MeshFilter* meshFilter;
    // private System.String _meshName
    // Offset: 0x20
    ::Il2CppString* meshName;
    // private System.Boolean _pauseGenerator
    // Offset: 0x28
    bool pauseGenerator;
    // private System.Boolean _bottomPushEnabled
    // Offset: 0x29
    bool bottomPushEnabled;
    // private System.Single _bottomPushDistance
    // Offset: 0x2C
    float bottomPushDistance;
    // private UnityEngine.Vector2 _bottomScaleTopBottom
    // Offset: 0x30
    UnityEngine::Vector2 bottomScaleTopBottom;
    // private System.Single _bottomHorizontalScale
    // Offset: 0x38
    float bottomHorizontalScale;
    // private System.Boolean _drawRingGizmos
    // Offset: 0x3C
    bool drawRingGizmos;
    // private CloudsMeshGenerator/ProhibitedRadius[] _prohibitedRadii
    // Offset: 0x40
    ::Array<GlobalNamespace::CloudsMeshGenerator::ProhibitedRadius>* prohibitedRadii;
    // private UnityEngine.Vector2 _meshSize
    // Offset: 0x48
    UnityEngine::Vector2 meshSize;
    // private System.Single _sizeRandomness
    // Offset: 0x50
    float sizeRandomness;
    // private System.Single _ratioRandomness
    // Offset: 0x54
    float ratioRandomness;
    // private System.Single _perMeshRadiusOffset
    // Offset: 0x58
    float perMeshRadiusOffset;
    // private UnityEngine.Gradient _possibleColors
    // Offset: 0x60
    UnityEngine::Gradient* possibleColors;
    // private System.Int32 _randomSeed
    // Offset: 0x68
    int randomSeed;
    // private System.Single _heightRandomness
    // Offset: 0x6C
    float heightRandomness;
    // private System.Single _ringRotationRandomness
    // Offset: 0x70
    float ringRotationRandomness;
    // private System.Int32 _ringCount
    // Offset: 0x74
    int ringCount;
    // private System.Single _meshesPerRadius
    // Offset: 0x78
    float meshesPerRadius;
    // private UnityEngine.Vector2 _radiusCloseFar
    // Offset: 0x7C
    UnityEngine::Vector2 radiusCloseFar;
    // private UnityEngine.Vector2 _sizeCloseFar
    // Offset: 0x84
    UnityEngine::Vector2 sizeCloseFar;
    // private UnityEngine.AnimationCurve _heightCloseFar
    // Offset: 0x90
    UnityEngine::AnimationCurve* heightCloseFar;
    // private System.Single _lowPolyThreshold
    // Offset: 0x98
    float lowPolyThreshold;
    // private System.Boolean _flipNormals
    // Offset: 0x9C
    bool flipNormals;
    // private System.Boolean _curveMesh
    // Offset: 0x9D
    bool curveMesh;
    // private CloudsMeshGenerator/Cloud[] _clouds
    // Offset: 0xA0
    ::Array<GlobalNamespace::CloudsMeshGenerator::Cloud>* clouds;
    // private System.Int32 _meshCount
    // Offset: 0xA8
    int meshCount;
    // private System.Int32 _vertexCount
    // Offset: 0xAC
    int vertexCount;
    // private UnityEngine.Mesh _generatedMesh
    // Offset: 0xB0
    UnityEngine::Mesh* generatedMesh;
    // private UnityEngine.Bounds _meshBounds
    // Offset: 0xB8
    UnityEngine::Bounds meshBounds;
    // private CloudsMeshGenerator/RadiusChunk[] _radiusChunks
    // Offset: 0xD0
    ::Array<GlobalNamespace::CloudsMeshGenerator::RadiusChunk>* radiusChunks;
    // private CloudsMeshGenerator/Ring[] _rings
    // Offset: 0xD8
    ::Array<GlobalNamespace::CloudsMeshGenerator::Ring>* rings;
    // private CloudsMeshGenerator/ProhibitedRadius[] _sortedProhibitedRadii
    // Offset: 0xE0
    ::Array<GlobalNamespace::CloudsMeshGenerator::ProhibitedRadius>* sortedProhibitedRadii;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void .ctor()
    // Offset: 0x1A4F240
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static CloudsMeshGenerator* New_ctor();
  }; // CloudsMeshGenerator
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::CloudsMeshGenerator*, "", "CloudsMeshGenerator");
#pragma pack(pop)
