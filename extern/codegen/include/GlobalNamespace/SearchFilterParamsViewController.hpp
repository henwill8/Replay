// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Toggle
  class Toggle;
  // Forward declaring type: Button
  class Button;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapCharacteristicsDropdown
  class BeatmapCharacteristicsDropdown;
  // Forward declaring type: BeatmapDifficultyDropdown
  class BeatmapDifficultyDropdown;
  // Forward declaring type: SongPacksDropdown
  class SongPacksDropdown;
  // Forward declaring type: FormattedFloatListSettingsController
  class FormattedFloatListSettingsController;
  // Forward declaring type: LevelFilterParams
  class LevelFilterParams;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: SearchFilterParamsViewController
  class SearchFilterParamsViewController : public HMUI::ViewController {
    public:
    // private UnityEngine.UI.Toggle _filterByOwnedToggle
    // Offset: 0x70
    UnityEngine::UI::Toggle* filterByOwnedToggle;
    // private UnityEngine.UI.Toggle _filterByCharacteristicToggle
    // Offset: 0x78
    UnityEngine::UI::Toggle* filterByCharacteristicToggle;
    // private BeatmapCharacteristicsDropdown _beatmapCharacteristicsDropdown
    // Offset: 0x80
    GlobalNamespace::BeatmapCharacteristicsDropdown* beatmapCharacteristicsDropdown;
    // private UnityEngine.UI.Toggle _filterByDifficultyToggle
    // Offset: 0x88
    UnityEngine::UI::Toggle* filterByDifficultyToggle;
    // private BeatmapDifficultyDropdown _beatmapDifficultyDropdown
    // Offset: 0x90
    GlobalNamespace::BeatmapDifficultyDropdown* beatmapDifficultyDropdown;
    // private UnityEngine.UI.Toggle _filterBySongPacksToggle
    // Offset: 0x98
    UnityEngine::UI::Toggle* filterBySongPacksToggle;
    // private SongPacksDropdown _songPacksDropdown
    // Offset: 0xA0
    GlobalNamespace::SongPacksDropdown* songPacksDropdown;
    // private UnityEngine.UI.Toggle _filterByNotPlayedYetToggle
    // Offset: 0xA8
    UnityEngine::UI::Toggle* filterByNotPlayedYetToggle;
    // private UnityEngine.UI.Toggle _filterByMinBpmToggle
    // Offset: 0xB0
    UnityEngine::UI::Toggle* filterByMinBpmToggle;
    // private FormattedFloatListSettingsController _minBpmController
    // Offset: 0xB8
    GlobalNamespace::FormattedFloatListSettingsController* minBpmController;
    // private UnityEngine.UI.Toggle _filterByMaxBpmToggle
    // Offset: 0xC0
    UnityEngine::UI::Toggle* filterByMaxBpmToggle;
    // private FormattedFloatListSettingsController _maxBpmController
    // Offset: 0xC8
    GlobalNamespace::FormattedFloatListSettingsController* maxBpmController;
    // private UnityEngine.UI.Button _okButton
    // Offset: 0xD0
    UnityEngine::UI::Button* okButton;
    // private LevelFilterParams _currentLevelFilterParams
    // Offset: 0xD8
    GlobalNamespace::LevelFilterParams* currentLevelFilterParams;
    // private System.Action`2<SearchFilterParamsViewController,LevelFilterParams> didFinishEvent
    // Offset: 0xE0
    System::Action_2<GlobalNamespace::SearchFilterParamsViewController*, GlobalNamespace::LevelFilterParams*>* didFinishEvent;
    // public System.Void add_didFinishEvent(System.Action`2<SearchFilterParamsViewController,LevelFilterParams> value)
    // Offset: 0xFC9478
    void add_didFinishEvent(System::Action_2<GlobalNamespace::SearchFilterParamsViewController*, GlobalNamespace::LevelFilterParams*>* value);
    // public System.Void remove_didFinishEvent(System.Action`2<SearchFilterParamsViewController,LevelFilterParams> value)
    // Offset: 0xFC951C
    void remove_didFinishEvent(System::Action_2<GlobalNamespace::SearchFilterParamsViewController*, GlobalNamespace::LevelFilterParams*>* value);
    // public System.Void Setup(LevelFilterParams levelFilterParams)
    // Offset: 0xFC95C0
    void Setup(GlobalNamespace::LevelFilterParams* levelFilterParams);
    // private System.Void OkButtonPressed()
    // Offset: 0xFC99F0
    void OkButtonPressed();
    // private System.Void MinBpmControllerValueDidChange(FormattedFloatListSettingsController minBpmController, System.Single value)
    // Offset: 0xFC9C08
    void MinBpmControllerValueDidChange(GlobalNamespace::FormattedFloatListSettingsController* minBpmController, float value);
    // private System.Void MaxBpmControllerValueDidChange(FormattedFloatListSettingsController maxBpmController, System.Single value)
    // Offset: 0xFC9CA0
    void MaxBpmControllerValueDidChange(GlobalNamespace::FormattedFloatListSettingsController* maxBpmController, float value);
    // private System.Void Refresh(LevelFilterParams levelFilterParams)
    // Offset: 0xFC95F4
    void Refresh(GlobalNamespace::LevelFilterParams* levelFilterParams);
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0xFC9798
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
    // protected override System.Void DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    // Offset: 0xFC98FC
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    void DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling);
    // public System.Void .ctor()
    // Offset: 0xFC9D38
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static SearchFilterParamsViewController* New_ctor();
  }; // SearchFilterParamsViewController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SearchFilterParamsViewController*, "", "SearchFilterParamsViewController");
#pragma pack(pop)
