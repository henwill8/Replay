// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: TubeBloomPrePassLight
  class TubeBloomPrePassLight;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
}
// Forward declaring namespace: Tweening
namespace Tweening {
  // Forward declaring type: TweeningManager
  class TweeningManager;
  // Forward declaring type: FloatTween
  class FloatTween;
  // Forward declaring type: EaseType
  struct EaseType;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: HologramRays
  class HologramRays : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::HologramRays::$FadingCoroutine$d__28
    class $FadingCoroutine$d__28;
    // private TubeBloomPrePassLight _bloomLight
    // Offset: 0x18
    GlobalNamespace::TubeBloomPrePassLight* bloomLight;
    // private UnityEngine.MeshRenderer _raysMeshRenderer
    // Offset: 0x20
    UnityEngine::MeshRenderer* raysMeshRenderer;
    // private UnityEngine.Transform _targetTransform
    // Offset: 0x28
    UnityEngine::Transform* targetTransform;
    // private UnityEngine.Transform _laserHolderTransform
    // Offset: 0x30
    UnityEngine::Transform* laserHolderTransform;
    // private UnityEngine.Transform _hologramRaysTransform
    // Offset: 0x38
    UnityEngine::Transform* hologramRaysTransform;
    // private UnityEngine.Mesh _hologramRaysMesh
    // Offset: 0x40
    UnityEngine::Mesh* hologramRaysMesh;
    // private System.Single _topYPosition
    // Offset: 0x48
    float topYPosition;
    // private System.Single _bottomYPosition
    // Offset: 0x4C
    float bottomYPosition;
    // private System.Single cachedExtent
    // Offset: 0x50
    float cachedExtent;
    // private readonly Tweening.TweeningManager _tweeningManager
    // Offset: 0x58
    Tweening::TweeningManager* tweeningManager;
    // private Tweening.FloatTween _transitionTween
    // Offset: 0x60
    Tweening::FloatTween* transitionTween;
    // private UnityEngine.Color _bloomColor
    // Offset: 0x68
    UnityEngine::Color bloomColor;
    // private UnityEngine.Color _bloomTransparentColor
    // Offset: 0x78
    UnityEngine::Color bloomTransparentColor;
    // private System.Single _alpha
    // Offset: 0x88
    float alpha;
    // private System.Single _raysDistance
    // Offset: 0x8C
    float raysDistance;
    // private UnityEngine.Vector3 _raysLocalScale
    // Offset: 0x90
    UnityEngine::Vector3 raysLocalScale;
    // private System.Boolean boundsInitialized
    // Offset: 0x9C
    bool boundsInitialized;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get static field: static private readonly System.Int32 _materialBottomPositionID
    static int _get__materialBottomPositionID();
    // Set static field: static private readonly System.Int32 _materialBottomPositionID
    static void _set__materialBottomPositionID(int value);
    // Get static field: static private readonly System.Int32 _materialTopPositionID
    static int _get__materialTopPositionID();
    // Set static field: static private readonly System.Int32 _materialTopPositionID
    static void _set__materialTopPositionID(int value);
    // Get static field: static private readonly System.Int32 _materialAlphaID
    static int _get__materialAlphaID();
    // Set static field: static private readonly System.Int32 _materialAlphaID
    static void _set__materialAlphaID(int value);
    // Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
    static UnityEngine::MaterialPropertyBlock* _get__materialPropertyBlock();
    // Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
    static void _set__materialPropertyBlock(UnityEngine::MaterialPropertyBlock* value);
    // static private System.Void RuntimeInit()
    // Offset: 0xF141F8
    static void RuntimeInit();
    // protected System.Void Awake()
    // Offset: 0xF14264
    void Awake();
    // protected System.Void OnDisable()
    // Offset: 0xF143A4
    void OnDisable();
    // protected System.Void OnValidate()
    // Offset: 0xF143C4
    void OnValidate();
    // private System.Void Update()
    // Offset: 0xF1474C
    void Update();
    // private System.Void Refresh()
    // Offset: 0xF144D4
    void Refresh();
    // public System.Void Animate(System.Boolean turningOn, System.Single duration, Tweening.EaseType easeType)
    // Offset: 0xF14750
    void Animate(bool turningOn, float duration, Tweening::EaseType easeType);
    // private System.Collections.IEnumerator FadingCoroutine(System.Boolean turningOn, System.Single duration, Tweening.EaseType easeType)
    // Offset: 0xF14820
    System::Collections::IEnumerator* FadingCoroutine(bool turningOn, float duration, Tweening::EaseType easeType);
    // private System.Void UpdateBounds()
    // Offset: 0xF148C8
    void UpdateBounds();
    // private System.Void <Awake>b__22_0(System.Single f)
    // Offset: 0xF14AC4
    void $Awake$b__22_0(float f);
    // public System.Void .ctor()
    // Offset: 0xF149F4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static HologramRays* New_ctor();
    // static private System.Void .cctor()
    // Offset: 0xF14A14
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // HologramRays
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::HologramRays*, "", "HologramRays");
#pragma pack(pop)
