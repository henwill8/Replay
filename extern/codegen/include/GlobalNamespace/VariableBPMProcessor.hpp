// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapEventData
  class BeatmapEventData;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: VariableBpmProcessor
  class VariableBpmProcessor : public ::Il2CppObject {
    public:
    // private System.Single _currentBpm
    // Offset: 0x10
    float currentBpm;
    // Creating conversion operator: operator float
    constexpr operator float() const noexcept {
      return currentBpm;
    }
    // public System.Single get_currentBpm()
    // Offset: 0x19777A0
    float get_currentBpm();
    // public System.Void SetBpm(System.Single newBpm)
    // Offset: 0x19777A8
    void SetBpm(float newBpm);
    // public System.Boolean ProcessBeatmapEventData(BeatmapEventData beatmapEventData)
    // Offset: 0x19777B0
    bool ProcessBeatmapEventData(GlobalNamespace::BeatmapEventData* beatmapEventData);
    // public System.Void .ctor()
    // Offset: 0x1977800
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static VariableBpmProcessor* New_ctor();
  }; // VariableBpmProcessor
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::VariableBpmProcessor*, "", "VariableBpmProcessor");
#pragma pack(pop)
