// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: ColorType
  struct ColorType : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: ColorType
    constexpr ColorType(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public ColorType ColorA
    static constexpr const int ColorA = 0;
    // Get static field: static public ColorType ColorA
    static GlobalNamespace::ColorType _get_ColorA();
    // Set static field: static public ColorType ColorA
    static void _set_ColorA(GlobalNamespace::ColorType value);
    // static field const value: static public ColorType ColorB
    static constexpr const int ColorB = 1;
    // Get static field: static public ColorType ColorB
    static GlobalNamespace::ColorType _get_ColorB();
    // Set static field: static public ColorType ColorB
    static void _set_ColorB(GlobalNamespace::ColorType value);
    // static field const value: static public ColorType None
    static constexpr const int None = -1;
    // Get static field: static public ColorType None
    static GlobalNamespace::ColorType _get_None();
    // Set static field: static public ColorType None
    static void _set_None(GlobalNamespace::ColorType value);
  }; // ColorType
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ColorType, "", "ColorType");
#pragma pack(pop)
