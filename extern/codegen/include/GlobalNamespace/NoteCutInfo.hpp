// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ISaberSwingRatingCounter
  class ISaberSwingRatingCounter;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: NoteCutInfo
  class NoteCutInfo : public ::Il2CppObject {
    public:
    // public readonly System.Boolean speedOK
    // Offset: 0x10
    bool speedOK;
    // public readonly System.Boolean directionOK
    // Offset: 0x11
    bool directionOK;
    // public readonly System.Boolean saberTypeOK
    // Offset: 0x12
    bool saberTypeOK;
    // public readonly System.Boolean wasCutTooSoon
    // Offset: 0x13
    bool wasCutTooSoon;
    // public readonly System.Single saberSpeed
    // Offset: 0x14
    float saberSpeed;
    // public readonly UnityEngine.Vector3 saberDir
    // Offset: 0x18
    UnityEngine::Vector3 saberDir;
    // public readonly SaberType saberType
    // Offset: 0x24
    GlobalNamespace::SaberType saberType;
    // public readonly System.Single timeDeviation
    // Offset: 0x28
    float timeDeviation;
    // public readonly System.Single cutDirDeviation
    // Offset: 0x2C
    float cutDirDeviation;
    // public readonly UnityEngine.Vector3 cutPoint
    // Offset: 0x30
    UnityEngine::Vector3 cutPoint;
    // public readonly UnityEngine.Vector3 cutNormal
    // Offset: 0x3C
    UnityEngine::Vector3 cutNormal;
    // public readonly System.Single cutAngle
    // Offset: 0x48
    float cutAngle;
    // public readonly System.Single cutDistanceToCenter
    // Offset: 0x4C
    float cutDistanceToCenter;
    // public readonly ISaberSwingRatingCounter swingRatingCounter
    // Offset: 0x50
    GlobalNamespace::ISaberSwingRatingCounter* swingRatingCounter;
    // public System.Boolean get_allIsOK()
    // Offset: 0x19A5FFC
    bool get_allIsOK();
    // public System.Boolean get_allExceptSaberTypeIsOK()
    // Offset: 0x19A602C
    bool get_allExceptSaberTypeIsOK();
    // public System.String get_failText()
    // Offset: 0x19A6054
    ::Il2CppString* get_failText();
    // public System.Void .ctor(System.Boolean speedOK, System.Boolean directionOK, System.Boolean saberTypeOK, System.Boolean wasCutTooSoon, System.Single saberSpeed, UnityEngine.Vector3 saberDir, SaberType saberType, System.Single timeDeviation, System.Single cutDirDeviation, UnityEngine.Vector3 cutPoint, UnityEngine.Vector3 cutNormal, System.Single cutDistanceToCenter, System.Single cutAngle, ISaberSwingRatingCounter swingRatingCounter)
    // Offset: 0x19A60F0
    static NoteCutInfo* New_ctor(bool speedOK, bool directionOK, bool saberTypeOK, bool wasCutTooSoon, float saberSpeed, UnityEngine::Vector3 saberDir, GlobalNamespace::SaberType saberType, float timeDeviation, float cutDirDeviation, UnityEngine::Vector3 cutPoint, UnityEngine::Vector3 cutNormal, float cutDistanceToCenter, float cutAngle, GlobalNamespace::ISaberSwingRatingCounter* swingRatingCounter);
  }; // NoteCutInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::NoteCutInfo*, "", "NoteCutInfo");
#pragma pack(pop)
