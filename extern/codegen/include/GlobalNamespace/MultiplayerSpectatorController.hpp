// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: MultiplayerController
#include "GlobalNamespace/MultiplayerController.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MultiplayerSpectatingSpotManager
  class MultiplayerSpectatingSpotManager;
  // Forward declaring type: MultiplayerLocalInactivePlayerSongSyncController
  class MultiplayerLocalInactivePlayerSongSyncController;
  // Forward declaring type: FadeInOutController
  class FadeInOutController;
  // Forward declaring type: IMultiplayerSpectatingSpot
  class IMultiplayerSpectatingSpot;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MultiplayerSpectatorController
  class MultiplayerSpectatorController : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17
    class $SwitchToDefaultSpotWithFadeCoroutine$d__17;
    // Nested type: GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18
    class $SwitchToDefaultSpotCoroutine$d__18;
    // private readonly MultiplayerSpectatingSpotManager _spotManager
    // Offset: 0x18
    GlobalNamespace::MultiplayerSpectatingSpotManager* spotManager;
    // private readonly MultiplayerLocalInactivePlayerSongSyncController _songController
    // Offset: 0x20
    GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController* songController;
    // private readonly MultiplayerController _multiplayerController
    // Offset: 0x28
    GlobalNamespace::MultiplayerController* multiplayerController;
    // private readonly FadeInOutController _fadeInOutController
    // Offset: 0x30
    GlobalNamespace::FadeInOutController* fadeInOutController;
    // private System.Action`1<IMultiplayerSpectatingSpot> spectatingSpotDidChangeEvent
    // Offset: 0x38
    System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* spectatingSpotDidChangeEvent;
    // private UnityEngine.Transform _transform
    // Offset: 0x40
    UnityEngine::Transform* transform;
    // private IMultiplayerSpectatingSpot _currentSpot
    // Offset: 0x48
    GlobalNamespace::IMultiplayerSpectatingSpot* currentSpot;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_spectatingSpotDidChangeEvent(System.Action`1<IMultiplayerSpectatingSpot> value)
    // Offset: 0xFD3D50
    void add_spectatingSpotDidChangeEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value);
    // public System.Void remove_spectatingSpotDidChangeEvent(System.Action`1<IMultiplayerSpectatingSpot> value)
    // Offset: 0xFD3F7C
    void remove_spectatingSpotDidChangeEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value);
    // public IMultiplayerSpectatingSpot get_currentSpot()
    // Offset: 0xFD40F4
    GlobalNamespace::IMultiplayerSpectatingSpot* get_currentSpot();
    // protected System.Void Awake()
    // Offset: 0xFD40FC
    void Awake();
    // protected System.Void Start()
    // Offset: 0xFD412C
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0xFD41C0
    void OnDestroy();
    // public System.Void SwitchToDefaultSpot()
    // Offset: 0xFD429C
    void SwitchToDefaultSpot();
    // public System.Void SwitchToPrev()
    // Offset: 0xFD40A0
    void SwitchToPrev();
    // public System.Void SwitchToNext()
    // Offset: 0xFD403C
    void SwitchToNext();
    // private System.Collections.IEnumerator SwitchToDefaultSpotWithFadeCoroutine()
    // Offset: 0xFD45C0
    System::Collections::IEnumerator* SwitchToDefaultSpotWithFadeCoroutine();
    // private System.Collections.IEnumerator SwitchToDefaultSpotCoroutine()
    // Offset: 0xFD42C8
    System::Collections::IEnumerator* SwitchToDefaultSpotCoroutine();
    // private System.Void SwitchToSpectatingSpot(IMultiplayerSpectatingSpot spectatingSpot)
    // Offset: 0xFD4344
    void SwitchToSpectatingSpot(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot);
    // private System.Void HandleStateChanged(MultiplayerController/State state)
    // Offset: 0xFD4694
    void HandleStateChanged(GlobalNamespace::MultiplayerController::State state);
    // public System.Void .ctor()
    // Offset: 0xFD46CC
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static MultiplayerSpectatorController* New_ctor();
  }; // MultiplayerSpectatorController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerSpectatorController*, "", "MultiplayerSpectatorController");
#pragma pack(pop)
