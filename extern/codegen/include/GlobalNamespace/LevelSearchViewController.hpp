// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PlayerDataModel
  class PlayerDataModel;
  // Forward declaring type: SongPackMasksModel
  class SongPackMasksModel;
  // Forward declaring type: AdditionalContentModel
  class AdditionalContentModel;
  // Forward declaring type: LevelFilterParams
  class LevelFilterParams;
  // Forward declaring type: IAnnotatedBeatmapLevelCollection
  class IAnnotatedBeatmapLevelCollection;
  // Forward declaring type: BeatmapCharacteristicSO
  class BeatmapCharacteristicSO;
  // Forward declaring type: IBeatmapLevelPack
  class IBeatmapLevelPack;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: InputFieldView
  class InputFieldView;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationTokenSource
  class CancellationTokenSource;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: LevelSearchViewController
  class LevelSearchViewController : public HMUI::ViewController {
    public:
    // Nested type: GlobalNamespace::LevelSearchViewController::BeatmapLevelPackCollection
    class BeatmapLevelPackCollection;
    // Nested type: GlobalNamespace::LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30
    struct $UpdateBeatmapLevelPackCollectionAsync$d__30;
    // private UnityEngine.UI.Button _searchButton
    // Offset: 0x70
    UnityEngine::UI::Button* searchButton;
    // private UnityEngine.UI.Button _clearFiltersButton
    // Offset: 0x78
    UnityEngine::UI::Button* clearFiltersButton;
    // private TMPro.TextMeshProUGUI _filterParamsText
    // Offset: 0x80
    TMPro::TextMeshProUGUI* filterParamsText;
    // private UnityEngine.GameObject _filterPlaceholder
    // Offset: 0x88
    UnityEngine::GameObject* filterPlaceholder;
    // private HMUI.InputFieldView _searchTextInputFieldView
    // Offset: 0x90
    HMUI::InputFieldView* searchTextInputFieldView;
    // private readonly PlayerDataModel _playerDataModel
    // Offset: 0x98
    GlobalNamespace::PlayerDataModel* playerDataModel;
    // private readonly SongPackMasksModel _songPackMasksModel
    // Offset: 0xA0
    GlobalNamespace::SongPackMasksModel* songPackMasksModel;
    // private readonly AdditionalContentModel _additionalContentModel
    // Offset: 0xA8
    GlobalNamespace::AdditionalContentModel* additionalContentModel;
    // private System.Action`2<LevelSearchViewController,LevelFilterParams> didPressSearchButtonEvent
    // Offset: 0xB0
    System::Action_2<GlobalNamespace::LevelSearchViewController*, GlobalNamespace::LevelFilterParams*>* didPressSearchButtonEvent;
    // private System.Action`2<IAnnotatedBeatmapLevelCollection,BeatmapCharacteristicSO> didFilterBeatmapLevelCollectionEvent
    // Offset: 0xB8
    System::Action_2<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*>* didFilterBeatmapLevelCollectionEvent;
    // private System.Action`1<LevelSearchViewController> didStartLoadingEvent
    // Offset: 0xC0
    System::Action_1<GlobalNamespace::LevelSearchViewController*>* didStartLoadingEvent;
    // private LevelSearchViewController/BeatmapLevelPackCollection _beatmapLevelPackCollection
    // Offset: 0xC8
    GlobalNamespace::LevelSearchViewController::BeatmapLevelPackCollection* beatmapLevelPackCollection;
    // private BeatmapCharacteristicSO _preferredBeatmapCharacteristic
    // Offset: 0xD0
    GlobalNamespace::BeatmapCharacteristicSO* preferredBeatmapCharacteristic;
    // private LevelFilterParams _currentFilterParams
    // Offset: 0xD8
    GlobalNamespace::LevelFilterParams* currentFilterParams;
    // private System.Boolean _onlyFavorites
    // Offset: 0xE0
    bool onlyFavorites;
    // private System.Threading.CancellationTokenSource _cancellationTokenSource
    // Offset: 0xE8
    System::Threading::CancellationTokenSource* cancellationTokenSource;
    // private IBeatmapLevelPack[] _beatmapLevelPacks
    // Offset: 0xF0
    ::Array<GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks;
    // public System.Void add_didPressSearchButtonEvent(System.Action`2<LevelSearchViewController,LevelFilterParams> value)
    // Offset: 0x1AC374C
    void add_didPressSearchButtonEvent(System::Action_2<GlobalNamespace::LevelSearchViewController*, GlobalNamespace::LevelFilterParams*>* value);
    // public System.Void remove_didPressSearchButtonEvent(System.Action`2<LevelSearchViewController,LevelFilterParams> value)
    // Offset: 0x1AC37F0
    void remove_didPressSearchButtonEvent(System::Action_2<GlobalNamespace::LevelSearchViewController*, GlobalNamespace::LevelFilterParams*>* value);
    // public System.Void add_didFilterBeatmapLevelCollectionEvent(System.Action`2<IAnnotatedBeatmapLevelCollection,BeatmapCharacteristicSO> value)
    // Offset: 0x1ABE8A0
    void add_didFilterBeatmapLevelCollectionEvent(System::Action_2<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*>* value);
    // public System.Void remove_didFilterBeatmapLevelCollectionEvent(System.Action`2<IAnnotatedBeatmapLevelCollection,BeatmapCharacteristicSO> value)
    // Offset: 0x1ABECC0
    void remove_didFilterBeatmapLevelCollectionEvent(System::Action_2<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*>* value);
    // public System.Void add_didStartLoadingEvent(System.Action`1<LevelSearchViewController> value)
    // Offset: 0x1ABE944
    void add_didStartLoadingEvent(System::Action_1<GlobalNamespace::LevelSearchViewController*>* value);
    // public System.Void remove_didStartLoadingEvent(System.Action`1<LevelSearchViewController> value)
    // Offset: 0x1ABED64
    void remove_didStartLoadingEvent(System::Action_1<GlobalNamespace::LevelSearchViewController*>* value);
    // public System.Void Setup(IBeatmapLevelPack[] beatmapLevelPacks)
    // Offset: 0x1ABE564
    void Setup(::Array<GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks);
    // public System.Void ResetFilterParams(System.Boolean onlyFavorites)
    // Offset: 0x1ABF0DC
    void ResetFilterParams(bool onlyFavorites);
    // public System.Void UpdateSearchLevelFilterParams(LevelFilterParams levelFilterParams)
    // Offset: 0x1AC3B04
    void UpdateSearchLevelFilterParams(GlobalNamespace::LevelFilterParams* levelFilterParams);
    // private System.Void ResetCurrentFilterParams()
    // Offset: 0x1AC3894
    void ResetCurrentFilterParams();
    // private System.Void UpdateBeatmapLevelPackCollectionAsync()
    // Offset: 0x1AC3A28
    void UpdateBeatmapLevelPackCollectionAsync();
    // private System.Void SearchTextInputFieldViewOnValueChanged(HMUI.InputFieldView inputFieldView)
    // Offset: 0x1AC3D68
    void SearchTextInputFieldViewOnValueChanged(HMUI::InputFieldView* inputFieldView);
    // private System.Void UpdateCurrentFilterParams()
    // Offset: 0x1AC39D0
    void UpdateCurrentFilterParams();
    // public System.Void RefreshAfterIncreaseNumberOfGameplay()
    // Offset: 0x1ABF33C
    void RefreshAfterIncreaseNumberOfGameplay();
    // private System.Void Refresh()
    // Offset: 0x1AC3B2C
    void Refresh();
    // private System.String LocalizedLevelFilterParamsDescription(LevelFilterParams levelFilterParams)
    // Offset: 0x1AC3DA4
    ::Il2CppString* LocalizedLevelFilterParamsDescription(GlobalNamespace::LevelFilterParams* levelFilterParams);
    // private System.Void <DidActivate>b__27_0()
    // Offset: 0x1AC40AC
    void $DidActivate$b__27_0();
    // private System.Void <DidActivate>b__27_1()
    // Offset: 0x1AC4114
    void $DidActivate$b__27_1();
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0x1AC3B30
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
    // protected override System.Void DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    // Offset: 0x1AC3CAC
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    void DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling);
    // public System.Void .ctor()
    // Offset: 0x1AC40A4
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static LevelSearchViewController* New_ctor();
  }; // LevelSearchViewController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LevelSearchViewController*, "", "LevelSearchViewController");
#pragma pack(pop)
