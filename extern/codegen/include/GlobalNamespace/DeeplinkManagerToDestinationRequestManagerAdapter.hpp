// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IDestinationRequestManager
#include "GlobalNamespace/IDestinationRequestManager.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapLevelsModel
  class BeatmapLevelsModel;
  // Forward declaring type: BeatmapCharacteristicCollectionSO
  class BeatmapCharacteristicCollectionSO;
  // Forward declaring type: MenuDestination
  class MenuDestination;
  // Forward declaring type: IDeeplinkManager
  class IDeeplinkManager;
  // Forward declaring type: Deeplink
  class Deeplink;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: DeeplinkManagerToDestinationRequestManagerAdapter
  class DeeplinkManagerToDestinationRequestManagerAdapter : public ::Il2CppObject, public GlobalNamespace::IDestinationRequestManager {
    public:
    // private BeatmapLevelsModel _beatmapLevelsModel
    // Offset: 0x10
    GlobalNamespace::BeatmapLevelsModel* beatmapLevelsModel;
    // private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
    // Offset: 0x18
    GlobalNamespace::BeatmapCharacteristicCollectionSO* beatmapCharacteristicCollection;
    // private System.Action`1<MenuDestination> didSendMenuDestinationRequestEvent
    // Offset: 0x20
    System::Action_1<GlobalNamespace::MenuDestination*>* didSendMenuDestinationRequestEvent;
    // private MenuDestination _currentMenuDestinationRequest
    // Offset: 0x28
    GlobalNamespace::MenuDestination* currentMenuDestinationRequest;
    // public System.Void Init(IDeeplinkManager deeplinkManager)
    // Offset: 0xBE6234
    void Init(GlobalNamespace::IDeeplinkManager* deeplinkManager);
    // protected System.Void HandleDeeplinkManagerDidReceiveDeeplink(Deeplink deeplink)
    // Offset: 0xBE640C
    void HandleDeeplinkManagerDidReceiveDeeplink(GlobalNamespace::Deeplink* deeplink);
    // public System.Void add_didSendMenuDestinationRequestEvent(System.Action`1<MenuDestination> value)
    // Offset: 0xBE60E4
    // Implemented from: IDestinationRequestManager
    // Base method: System.Void IDestinationRequestManager::add_didSendMenuDestinationRequestEvent(System.Action`1<MenuDestination> value)
    void add_didSendMenuDestinationRequestEvent(System::Action_1<GlobalNamespace::MenuDestination*>* value);
    // public System.Void remove_didSendMenuDestinationRequestEvent(System.Action`1<MenuDestination> value)
    // Offset: 0xBE6188
    // Implemented from: IDestinationRequestManager
    // Base method: System.Void IDestinationRequestManager::remove_didSendMenuDestinationRequestEvent(System.Action`1<MenuDestination> value)
    void remove_didSendMenuDestinationRequestEvent(System::Action_1<GlobalNamespace::MenuDestination*>* value);
    // public MenuDestination get_currentMenuDestinationRequest()
    // Offset: 0xBE622C
    // Implemented from: IDestinationRequestManager
    // Base method: MenuDestination IDestinationRequestManager::get_currentMenuDestinationRequest()
    GlobalNamespace::MenuDestination* get_currentMenuDestinationRequest();
    // public System.Void Clear()
    // Offset: 0xBE6978
    // Implemented from: IDestinationRequestManager
    // Base method: System.Void IDestinationRequestManager::Clear()
    void Clear();
    // public System.Void .ctor()
    // Offset: 0xBE6984
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static DeeplinkManagerToDestinationRequestManagerAdapter* New_ctor();
  }; // DeeplinkManagerToDestinationRequestManagerAdapter
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter*, "", "DeeplinkManagerToDestinationRequestManagerAdapter");
#pragma pack(pop)
