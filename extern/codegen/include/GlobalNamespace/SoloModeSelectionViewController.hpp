// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: MenuType because it is already included!
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: SoloModeSelectionViewController
  class SoloModeSelectionViewController : public HMUI::ViewController {
    public:
    // Nested type: GlobalNamespace::SoloModeSelectionViewController::MenuType
    struct MenuType;
    // Autogenerated type: SoloModeSelectionViewController/MenuType
    struct MenuType : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: MenuType
      constexpr MenuType(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public SoloModeSelectionViewController/MenuType FreePlayMode
      static constexpr const int FreePlayMode = 0;
      // Get static field: static public SoloModeSelectionViewController/MenuType FreePlayMode
      static GlobalNamespace::SoloModeSelectionViewController::MenuType _get_FreePlayMode();
      // Set static field: static public SoloModeSelectionViewController/MenuType FreePlayMode
      static void _set_FreePlayMode(GlobalNamespace::SoloModeSelectionViewController::MenuType value);
      // static field const value: static public SoloModeSelectionViewController/MenuType NoArrowsMode
      static constexpr const int NoArrowsMode = 1;
      // Get static field: static public SoloModeSelectionViewController/MenuType NoArrowsMode
      static GlobalNamespace::SoloModeSelectionViewController::MenuType _get_NoArrowsMode();
      // Set static field: static public SoloModeSelectionViewController/MenuType NoArrowsMode
      static void _set_NoArrowsMode(GlobalNamespace::SoloModeSelectionViewController::MenuType value);
      // static field const value: static public SoloModeSelectionViewController/MenuType OneSaberMode
      static constexpr const int OneSaberMode = 2;
      // Get static field: static public SoloModeSelectionViewController/MenuType OneSaberMode
      static GlobalNamespace::SoloModeSelectionViewController::MenuType _get_OneSaberMode();
      // Set static field: static public SoloModeSelectionViewController/MenuType OneSaberMode
      static void _set_OneSaberMode(GlobalNamespace::SoloModeSelectionViewController::MenuType value);
      // static field const value: static public SoloModeSelectionViewController/MenuType Back
      static constexpr const int Back = 3;
      // Get static field: static public SoloModeSelectionViewController/MenuType Back
      static GlobalNamespace::SoloModeSelectionViewController::MenuType _get_Back();
      // Set static field: static public SoloModeSelectionViewController/MenuType Back
      static void _set_Back(GlobalNamespace::SoloModeSelectionViewController::MenuType value);
    }; // SoloModeSelectionViewController/MenuType
    // private UnityEngine.UI.Button _freePlayModeButton
    // Offset: 0x68
    UnityEngine::UI::Button* freePlayModeButton;
    // private UnityEngine.UI.Button _oneSaberModeButton
    // Offset: 0x70
    UnityEngine::UI::Button* oneSaberModeButton;
    // private UnityEngine.UI.Button _noArrowsModeButton
    // Offset: 0x78
    UnityEngine::UI::Button* noArrowsModeButton;
    // private UnityEngine.UI.Button _dismissButton
    // Offset: 0x80
    UnityEngine::UI::Button* dismissButton;
    // private System.Action`2<SoloModeSelectionViewController,SoloModeSelectionViewController/MenuType> didFinishEvent
    // Offset: 0x88
    System::Action_2<GlobalNamespace::SoloModeSelectionViewController*, GlobalNamespace::SoloModeSelectionViewController::MenuType>* didFinishEvent;
    // public System.Void add_didFinishEvent(System.Action`2<SoloModeSelectionViewController,SoloModeSelectionViewController/MenuType> value)
    // Offset: 0xB9BFEC
    void add_didFinishEvent(System::Action_2<GlobalNamespace::SoloModeSelectionViewController*, GlobalNamespace::SoloModeSelectionViewController::MenuType>* value);
    // public System.Void remove_didFinishEvent(System.Action`2<SoloModeSelectionViewController,SoloModeSelectionViewController/MenuType> value)
    // Offset: 0xB9C090
    void remove_didFinishEvent(System::Action_2<GlobalNamespace::SoloModeSelectionViewController*, GlobalNamespace::SoloModeSelectionViewController::MenuType>* value);
    // private System.Void HandleMenuButton(SoloModeSelectionViewController/MenuType subMenuType)
    // Offset: 0xB9C2B8
    void HandleMenuButton(GlobalNamespace::SoloModeSelectionViewController::MenuType subMenuType);
    // private System.Void <DidActivate>b__8_0()
    // Offset: 0xB9C338
    void $DidActivate$b__8_0();
    // private System.Void <DidActivate>b__8_1()
    // Offset: 0xB9C340
    void $DidActivate$b__8_1();
    // private System.Void <DidActivate>b__8_2()
    // Offset: 0xB9C348
    void $DidActivate$b__8_2();
    // private System.Void <DidActivate>b__8_3()
    // Offset: 0xB9C350
    void $DidActivate$b__8_3();
    // protected override System.Void DidActivate(System.Boolean firstActivation, HMUI.ViewController/ActivationType activationType)
    // Offset: 0xB9C134
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, HMUI.ViewController/ActivationType activationType)
    void DidActivate(bool firstActivation, HMUI::ViewController::ActivationType activationType);
    // public System.Void .ctor()
    // Offset: 0xB9C330
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static SoloModeSelectionViewController* New_ctor();
  }; // SoloModeSelectionViewController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SoloModeSelectionViewController*, "", "SoloModeSelectionViewController");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SoloModeSelectionViewController::MenuType, "", "SoloModeSelectionViewController/MenuType");
#pragma pack(pop)
