// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlyingObjectEffect
#include "GlobalNamespace/FlyingObjectEffect.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NoteCutInfo
  class NoteCutInfo;
  // Forward declaring type: ISaberSwingRatingCounter
  class ISaberSwingRatingCounter;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
  // Forward declaring type: SpriteRenderer
  class SpriteRenderer;
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshPro
  class TextMeshPro;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: FlyingScoreEffect
  class FlyingScoreEffect : public GlobalNamespace::FlyingObjectEffect {
    public:
    // Nested type: GlobalNamespace::FlyingScoreEffect::Pool
    class Pool;
    // private UnityEngine.AnimationCurve _fadeAnimationCurve
    // Offset: 0x80
    UnityEngine::AnimationCurve* fadeAnimationCurve;
    // private UnityEngine.SpriteRenderer _maxCutDistanceScoreIndicator
    // Offset: 0x88
    UnityEngine::SpriteRenderer* maxCutDistanceScoreIndicator;
    // private TMPro.TextMeshPro _text
    // Offset: 0x90
    TMPro::TextMeshPro* text;
    // private UnityEngine.Color _color
    // Offset: 0x98
    UnityEngine::Color color;
    // private System.Single _colorAMultiplier
    // Offset: 0xA8
    float colorAMultiplier;
    // private NoteCutInfo _noteCutInfo
    // Offset: 0xB0
    GlobalNamespace::NoteCutInfo* noteCutInfo;
    // public System.Void InitAndPresent(NoteCutInfo noteCutInfo, System.Int32 multiplier, System.Single duration, UnityEngine.Vector3 targetPos, UnityEngine.Quaternion rotation, UnityEngine.Color color)
    // Offset: 0x1A1501C
    void InitAndPresent(GlobalNamespace::NoteCutInfo* noteCutInfo, int multiplier, float duration, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion rotation, UnityEngine::Color color);
    // protected System.Void OnDisable()
    // Offset: 0x1A15250
    void OnDisable();
    // private System.Void HandleSaberSwingRatingCounterDidChangeEvent(ISaberSwingRatingCounter saberSwingRatingCounter, System.Single rating)
    // Offset: 0x1A153FC
    void HandleSaberSwingRatingCounterDidChangeEvent(GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter, float rating);
    // private System.String GetScoreText(System.Int32 score)
    // Offset: 0x1A15228
    ::Il2CppString* GetScoreText(int score);
    // protected override System.Void ManualUpdate(System.Single t)
    // Offset: 0x1A15350
    // Implemented from: FlyingObjectEffect
    // Base method: System.Void FlyingObjectEffect::ManualUpdate(System.Single t)
    void ManualUpdate(float t);
    // public System.Void .ctor()
    // Offset: 0x1A15498
    // Implemented from: FlyingObjectEffect
    // Base method: System.Void FlyingObjectEffect::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static FlyingScoreEffect* New_ctor();
  }; // FlyingScoreEffect
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::FlyingScoreEffect*, "", "FlyingScoreEffect");
#pragma pack(pop)
