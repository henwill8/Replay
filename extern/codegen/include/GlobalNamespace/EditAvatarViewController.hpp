// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: NamedIntListController
#include "GlobalNamespace/NamedIntListController.hpp"
// Including type: NamedColorListController
#include "GlobalNamespace/NamedColorListController.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: AvatarEditHistory
  class AvatarEditHistory;
  // Forward declaring type: SkinColorSO
  class SkinColorSO;
  // Forward declaring type: AvatarPartCollection`1<T>
  template<typename T>
  class AvatarPartCollection_1;
  // Forward declaring type: ColorPickerButtonController
  class ColorPickerButtonController;
  // Forward declaring type: AvatarPartsModel
  class AvatarPartsModel;
  // Forward declaring type: AvatarDataModel
  class AvatarDataModel;
  // Forward declaring type: PlayerDataModel
  class PlayerDataModel;
  // Forward declaring type: IAvatarPart
  class IAvatarPart;
  // Skipping declaration: AvatarEditPart because it is already included!
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: CurvedTextMeshPro
  class CurvedTextMeshPro;
  // Forward declaring type: ValueChangedBinder`1<T>
  template<typename T>
  class ValueChangedBinder_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Action_4;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: String
  class String;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: EditAvatarViewController
  class EditAvatarViewController : public HMUI::ViewController {
    public:
    // Nested type: GlobalNamespace::EditAvatarViewController::AvatarEditPart
    struct AvatarEditPart;
    // Nested type: GlobalNamespace::EditAvatarViewController::$$c__DisplayClass56_0
    class $$c__DisplayClass56_0;
    // Nested type: GlobalNamespace::EditAvatarViewController::$$c__DisplayClass57_0_1<T>
    template<typename T>
    class $$c__DisplayClass57_0_1;
    // Autogenerated type: EditAvatarViewController/AvatarEditPart
    struct AvatarEditPart : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: AvatarEditPart
      constexpr AvatarEditPart(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public EditAvatarViewController/AvatarEditPart Unknown
      static constexpr const int Unknown = 0;
      // Get static field: static public EditAvatarViewController/AvatarEditPart Unknown
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_Unknown();
      // Set static field: static public EditAvatarViewController/AvatarEditPart Unknown
      static void _set_Unknown(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart All
      static constexpr const int All = 1;
      // Get static field: static public EditAvatarViewController/AvatarEditPart All
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_All();
      // Set static field: static public EditAvatarViewController/AvatarEditPart All
      static void _set_All(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart SkinColor
      static constexpr const int SkinColor = 2;
      // Get static field: static public EditAvatarViewController/AvatarEditPart SkinColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_SkinColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart SkinColor
      static void _set_SkinColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HeadTopModel
      static constexpr const int HeadTopModel = 3;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopModel
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HeadTopModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopModel
      static void _set_HeadTopModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
      static constexpr const int HeadTopPrimaryColor = 4;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HeadTopPrimaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
      static void _set_HeadTopPrimaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
      static constexpr const int HeadTopSecondaryColor = 5;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HeadTopSecondaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
      static void _set_HeadTopSecondaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart GlassesModel
      static constexpr const int GlassesModel = 6;
      // Get static field: static public EditAvatarViewController/AvatarEditPart GlassesModel
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_GlassesModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart GlassesModel
      static void _set_GlassesModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart GlassesColor
      static constexpr const int GlassesColor = 7;
      // Get static field: static public EditAvatarViewController/AvatarEditPart GlassesColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_GlassesColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart GlassesColor
      static void _set_GlassesColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart FacialHairModel
      static constexpr const int FacialHairModel = 8;
      // Get static field: static public EditAvatarViewController/AvatarEditPart FacialHairModel
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_FacialHairModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart FacialHairModel
      static void _set_FacialHairModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart FacialHairColor
      static constexpr const int FacialHairColor = 9;
      // Get static field: static public EditAvatarViewController/AvatarEditPart FacialHairColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_FacialHairColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart FacialHairColor
      static void _set_FacialHairColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HandsModel
      static constexpr const int HandsModel = 10;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HandsModel
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HandsModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HandsModel
      static void _set_HandsModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HandsColor
      static constexpr const int HandsColor = 11;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HandsColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HandsColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HandsColor
      static void _set_HandsColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModel
      static constexpr const int ClothesModel = 12;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModel
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModel
      static void _set_ClothesModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
      static constexpr const int ClothesModelPrimaryColor = 13;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModelPrimaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
      static void _set_ClothesModelPrimaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
      static constexpr const int ClothesModelSecondaryColor = 14;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModelSecondaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
      static void _set_ClothesModelSecondaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
      static constexpr const int ClothesModelDetailColor = 15;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
      static GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModelDetailColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
      static void _set_ClothesModelDetailColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
    }; // EditAvatarViewController/AvatarEditPart
    // private NamedColorListController _skinColorValuePicker
    // Offset: 0x70
    GlobalNamespace::NamedColorListController* skinColorValuePicker;
    // private NamedIntListController _headTopValuePicker
    // Offset: 0x78
    GlobalNamespace::NamedIntListController* headTopValuePicker;
    // private NamedIntListController _eyesValuePicker
    // Offset: 0x80
    GlobalNamespace::NamedIntListController* eyesValuePicker;
    // private NamedIntListController _handsValuePicker
    // Offset: 0x88
    GlobalNamespace::NamedIntListController* handsValuePicker;
    // private NamedIntListController _clothesValuePicker
    // Offset: 0x90
    GlobalNamespace::NamedIntListController* clothesValuePicker;
    // private ColorPickerButtonController _headTopPrimaryColorButtonController
    // Offset: 0x98
    GlobalNamespace::ColorPickerButtonController* headTopPrimaryColorButtonController;
    // private ColorPickerButtonController _headTopSecondaryColorButtonController
    // Offset: 0xA0
    GlobalNamespace::ColorPickerButtonController* headTopSecondaryColorButtonController;
    // private ColorPickerButtonController _handsColorButtonController
    // Offset: 0xA8
    GlobalNamespace::ColorPickerButtonController* handsColorButtonController;
    // private ColorPickerButtonController _clothesColorButtonControllerPrimary
    // Offset: 0xB0
    GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerPrimary;
    // private ColorPickerButtonController _clothesColorButtonControllerSecondary
    // Offset: 0xB8
    GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerSecondary;
    // private ColorPickerButtonController _clothesColorButtonControllerDetail
    // Offset: 0xC0
    GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerDetail;
    // private UnityEngine.UI.Button _randomizeAllButton
    // Offset: 0xC8
    UnityEngine::UI::Button* randomizeAllButton;
    // private UnityEngine.UI.Button _undoButton
    // Offset: 0xD0
    UnityEngine::UI::Button* undoButton;
    // private UnityEngine.UI.Button _redoButton
    // Offset: 0xD8
    UnityEngine::UI::Button* redoButton;
    // private UnityEngine.UI.Button _applyButton
    // Offset: 0xE0
    UnityEngine::UI::Button* applyButton;
    // private UnityEngine.UI.Button _cancelButton
    // Offset: 0xE8
    UnityEngine::UI::Button* cancelButton;
    // private HMUI.CurvedTextMeshPro _applyButtonText
    // Offset: 0xF0
    HMUI::CurvedTextMeshPro* applyButtonText;
    // private UnityEngine.UI.Image _eyesPreviewImage
    // Offset: 0xF8
    UnityEngine::UI::Image* eyesPreviewImage;
    // private readonly AvatarPartsModel _avatarPartsModel
    // Offset: 0x100
    GlobalNamespace::AvatarPartsModel* avatarPartsModel;
    // private readonly AvatarDataModel _avatarDataModel
    // Offset: 0x108
    GlobalNamespace::AvatarDataModel* avatarDataModel;
    // private readonly PlayerDataModel _playerDataModel
    // Offset: 0x110
    GlobalNamespace::PlayerDataModel* playerDataModel;
    // private System.Action didFinishEvent
    // Offset: 0x118
    System::Action* didFinishEvent;
    // private System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> didRequestColorChangeEvent
    // Offset: 0x120
    System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* didRequestColorChangeEvent;
    // private System.Action`1<EditAvatarViewController/AvatarEditPart> didChangedAvatarPartEvent
    // Offset: 0x128
    System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>* didChangedAvatarPartEvent;
    // private readonly AvatarEditHistory _avatarEditHistory
    // Offset: 0x130
    GlobalNamespace::AvatarEditHistory* avatarEditHistory;
    // private HMUI.ValueChangedBinder`1<System.Int32> _intPickerBinder
    // Offset: 0x138
    HMUI::ValueChangedBinder_1<int>* intPickerBinder;
    // private EditAvatarViewController/AvatarEditPart _lastEditedPart
    // Offset: 0x140
    GlobalNamespace::EditAvatarViewController::AvatarEditPart lastEditedPart;
    // static field const value: static private System.String kEditApplyButtonLocalizationKey
    static constexpr const char* kEditApplyButtonLocalizationKey = "BUTTON_APPLY";
    // Get static field: static private System.String kEditApplyButtonLocalizationKey
    static ::Il2CppString* _get_kEditApplyButtonLocalizationKey();
    // Set static field: static private System.String kEditApplyButtonLocalizationKey
    static void _set_kEditApplyButtonLocalizationKey(::Il2CppString* value);
    // static field const value: static private System.String kCreateApplyButtonLocalizationKey
    static constexpr const char* kCreateApplyButtonLocalizationKey = "BUTTON_CREATE_AVATAR";
    // Get static field: static private System.String kCreateApplyButtonLocalizationKey
    static ::Il2CppString* _get_kCreateApplyButtonLocalizationKey();
    // Set static field: static private System.String kCreateApplyButtonLocalizationKey
    static void _set_kCreateApplyButtonLocalizationKey(::Il2CppString* value);
    // public System.Void add_didFinishEvent(System.Action value)
    // Offset: 0x1A5C334
    void add_didFinishEvent(System::Action* value);
    // public System.Void remove_didFinishEvent(System.Action value)
    // Offset: 0x1A5C880
    void remove_didFinishEvent(System::Action* value);
    // public System.Void add_didRequestColorChangeEvent(System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> value)
    // Offset: 0x1A5C1E4
    void add_didRequestColorChangeEvent(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* value);
    // public System.Void remove_didRequestColorChangeEvent(System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> value)
    // Offset: 0x1A5C730
    void remove_didRequestColorChangeEvent(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* value);
    // public System.Void add_didChangedAvatarPartEvent(System.Action`1<EditAvatarViewController/AvatarEditPart> value)
    // Offset: 0x1A5C28C
    void add_didChangedAvatarPartEvent(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>* value);
    // public System.Void remove_didChangedAvatarPartEvent(System.Action`1<EditAvatarViewController/AvatarEditPart> value)
    // Offset: 0x1A5C7D8
    void remove_didChangedAvatarPartEvent(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>* value);
    // public System.Void Setup(System.Boolean showAsCreateView)
    // Offset: 0x1A5BD94
    void Setup(bool showAsCreateView);
    // public System.Void InitHistory()
    // Offset: 0x1A5C524
    void InitHistory();
    // public System.Void DiscardLastEdit()
    // Offset: 0x1A5CD10
    void DiscardLastEdit();
    // protected System.Void Update()
    // Offset: 0x1A5CDA0
    void Update();
    // private System.Void RefreshUi()
    // Offset: 0x1A5D880
    void RefreshUi();
    // private System.Void UpdateButtons()
    // Offset: 0x1A5CD34
    void UpdateButtons();
    // private System.Void HandleSkinColorDidChanged(System.Int32 value)
    // Offset: 0x1A5DC10
    void HandleSkinColorDidChanged(int value);
    // private System.Void EyesValuePickerHasChanged(System.String eyesId)
    // Offset: 0x1A5DCF0
    void EyesValuePickerHasChanged(::Il2CppString* eyesId);
    // private System.Void HandleUndoButtonWasPressed()
    // Offset: 0x1A5CE80
    void HandleUndoButtonWasPressed();
    // private System.Void HandleRedoButtonWasPressed()
    // Offset: 0x1A5DDA0
    void HandleRedoButtonWasPressed();
    // private System.Void HandleRandomizeAllButtonWasPressed()
    // Offset: 0x1A5CDF4
    void HandleRandomizeAllButtonWasPressed();
    // private System.Void HandleRandomizeModelsButtonWasPressed()
    // Offset: 0x1A5DF18
    void HandleRandomizeModelsButtonWasPressed();
    // private System.Void HandleRandomizeColorsButtonWasPressed()
    // Offset: 0x1A5DFA4
    void HandleRandomizeColorsButtonWasPressed();
    // private System.Void ReportAllChangedAndUpdate()
    // Offset: 0x1A5DE84
    void ReportAllChangedAndUpdate();
    // private System.Void HandleApplyButtonWasPressed()
    // Offset: 0x1A5E020
    void HandleApplyButtonWasPressed();
    // private System.Void SaveAvatarAndFinish()
    // Offset: 0x1A5E024
    void SaveAvatarAndFinish();
    // private System.Void HandleCancelButtonWasPressed()
    // Offset: 0x1A5E08C
    void HandleCancelButtonWasPressed();
    // static private NamedIntListController/TextValuePair[] CreateTextValuePairsForAvatarPartCollection(AvatarPartCollection`1<T> partCollection)
    // Offset: 0xFFFFFFFF
    template<class T>
    static ::Array<GlobalNamespace::NamedIntListController::TextValuePair*>* CreateTextValuePairsForAvatarPartCollection(GlobalNamespace::AvatarPartCollection_1<T>* partCollection) {
      static_assert(std::is_convertible_v<T, UnityEngine::Object*> && std::is_base_of_v<GlobalNamespace::IAvatarPart, std::remove_pointer_t<T>>);
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<::Array<GlobalNamespace::NamedIntListController::TextValuePair*>*>("", "EditAvatarViewController", "CreateTextValuePairsForAvatarPartCollection", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, partCollection)));
    }
    // private NamedColorListController/ColorValuePair[] CreateColorValuePairsForAvatarPartCollection(SkinColorSO[] colors)
    // Offset: 0x1A5D748
    ::Array<GlobalNamespace::NamedColorListController::ColorValuePair*>* CreateColorValuePairsForAvatarPartCollection(::Array<GlobalNamespace::SkinColorSO*>* colors);
    // private System.Void SetupColorButton(UnityEngine.UI.Button button, System.Action`1<UnityEngine.Color> colorSetter, System.Func`1<UnityEngine.Color> currentColor, EditAvatarViewController/AvatarEditPart avatarEditPart, System.Int32 uvSegment)
    // Offset: 0x1A5D63C
    void SetupColorButton(UnityEngine::UI::Button* button, System::Action_1<UnityEngine::Color>* colorSetter, System::Func_1<UnityEngine::Color>* currentColor, GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart, int uvSegment);
    // private System.Void SetupValuePicker(AvatarPartCollection`1<T> partCollection, NamedIntListController valuePicker, System.Action`1<System.String> setIdAction, EditAvatarViewController/AvatarEditPart avatarEditPart)
    // Offset: 0xFFFFFFFF
    template<class T>
    void SetupValuePicker(GlobalNamespace::AvatarPartCollection_1<T>* partCollection, GlobalNamespace::NamedIntListController* valuePicker, System::Action_1<::Il2CppString*>* setIdAction, GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart) {
      static_assert(std::is_convertible_v<T, UnityEngine::Object*> && std::is_base_of_v<GlobalNamespace::IAvatarPart, std::remove_pointer_t<T>>);
      THROW_UNLESS(il2cpp_utils::RunGenericMethod(this, "SetupValuePicker", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, partCollection, valuePicker, setIdAction, avatarEditPart));
    }
    // private System.Void <DidActivate>b__40_0(UnityEngine.Color color)
    // Offset: 0x1A5E150
    void $DidActivate$b__40_0(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_1()
    // Offset: 0x1A5E17C
    UnityEngine::Color $DidActivate$b__40_1();
    // private System.Void <DidActivate>b__40_2(UnityEngine.Color color)
    // Offset: 0x1A5E1A8
    void $DidActivate$b__40_2(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_3()
    // Offset: 0x1A5E1D4
    UnityEngine::Color $DidActivate$b__40_3();
    // private System.Void <DidActivate>b__40_4(UnityEngine.Color color)
    // Offset: 0x1A5E200
    void $DidActivate$b__40_4(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_5()
    // Offset: 0x1A5E22C
    UnityEngine::Color $DidActivate$b__40_5();
    // private System.Void <DidActivate>b__40_6(UnityEngine.Color color)
    // Offset: 0x1A5E258
    void $DidActivate$b__40_6(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_7()
    // Offset: 0x1A5E284
    UnityEngine::Color $DidActivate$b__40_7();
    // private System.Void <DidActivate>b__40_8(UnityEngine.Color color)
    // Offset: 0x1A5E2B0
    void $DidActivate$b__40_8(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_9()
    // Offset: 0x1A5E2DC
    UnityEngine::Color $DidActivate$b__40_9();
    // private System.Void <DidActivate>b__40_10(UnityEngine.Color color)
    // Offset: 0x1A5E308
    void $DidActivate$b__40_10(UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__40_11()
    // Offset: 0x1A5E334
    UnityEngine::Color $DidActivate$b__40_11();
    // private System.Void <DidActivate>b__40_12(System.String s)
    // Offset: 0x1A5E360
    void $DidActivate$b__40_12(::Il2CppString* s);
    // private System.Void <DidActivate>b__40_13(System.String s)
    // Offset: 0x1A5E388
    void $DidActivate$b__40_13(::Il2CppString* s);
    // private System.Void <DidActivate>b__40_14(System.String s)
    // Offset: 0x1A5E3B0
    void $DidActivate$b__40_14(::Il2CppString* s);
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0x1A5CF74
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
    // public System.Void .ctor()
    // Offset: 0x1A5E0DC
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static EditAvatarViewController* New_ctor();
  }; // EditAvatarViewController
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::EditAvatarViewController*, "", "EditAvatarViewController");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::EditAvatarViewController::AvatarEditPart, "", "EditAvatarViewController/AvatarEditPart");
#pragma pack(pop)
