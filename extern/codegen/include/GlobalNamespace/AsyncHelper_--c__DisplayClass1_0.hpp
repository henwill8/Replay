// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AsyncHelper
#include "GlobalNamespace/AsyncHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: AsyncHelper/<>c__DisplayClass1_0
  // [] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: D09E78
  class AsyncHelper::$$c__DisplayClass1_0 : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::AsyncHelper::$$c__DisplayClass1_0::$$RunSync$b__0$d
    struct $$RunSync$b__0$d;
    // public System.Func`1<System.Threading.Tasks.Task> asyncTask
    // Size: 0x8
    // Offset: 0x10
    System::Func_1<System::Threading::Tasks::Task*>* asyncTask;
    // Field size check
    static_assert(sizeof(System::Func_1<System::Threading::Tasks::Task*>*) == 0x8);
    // Creating value type constructor for type: $$c__DisplayClass1_0
    $$c__DisplayClass1_0(System::Func_1<System::Threading::Tasks::Task*>* asyncTask_ = {}) noexcept : asyncTask{asyncTask_} {}
    // Creating conversion operator: operator System::Func_1<System::Threading::Tasks::Task*>*
    constexpr operator System::Func_1<System::Threading::Tasks::Task*>*() const noexcept {
      return asyncTask;
    }
    // System.Threading.Tasks.Task <RunSync>b__0()
    // Offset: 0x1103F60
    System::Threading::Tasks::Task* $RunSync$b__0();
    // public System.Void .ctor()
    // Offset: 0x1103F58
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AsyncHelper::$$c__DisplayClass1_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass1_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AsyncHelper::$$c__DisplayClass1_0*, creationType>()));
    }
  }; // AsyncHelper/<>c__DisplayClass1_0
  #pragma pack(pop)
  static check_size<sizeof(AsyncHelper::$$c__DisplayClass1_0), 16 + sizeof(System::Func_1<System::Threading::Tasks::Task*>*)> __GlobalNamespace_AsyncHelper_$$c__DisplayClass1_0SizeCheck;
  static_assert(sizeof(AsyncHelper::$$c__DisplayClass1_0) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::AsyncHelper::$$c__DisplayClass1_0*, "", "AsyncHelper/<>c__DisplayClass1_0");
