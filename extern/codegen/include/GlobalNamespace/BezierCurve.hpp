// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BezierCurve
  struct BezierCurve : public System::ValueType {
    public:
    // public readonly UnityEngine.Vector3 p0
    // Offset: 0x0
    UnityEngine::Vector3 p0;
    // public readonly UnityEngine.Vector3 p1
    // Offset: 0xC
    UnityEngine::Vector3 p1;
    // public readonly UnityEngine.Vector3 p2
    // Offset: 0x18
    UnityEngine::Vector3 p2;
    // public readonly UnityEngine.Vector3 p3
    // Offset: 0x24
    UnityEngine::Vector3 p3;
    // Creating value type constructor for type: BezierCurve
    constexpr BezierCurve(UnityEngine::Vector3 p0_ = {}, UnityEngine::Vector3 p1_ = {}, UnityEngine::Vector3 p2_ = {}, UnityEngine::Vector3 p3_ = {}) noexcept : p0{p0_}, p1{p1_}, p2{p2_}, p3{p3_} {}
    // public System.Void .ctor(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, UnityEngine.Vector3 p3)
    // Offset: 0xE7F1F4
    // ABORTED: conflicts with another method.  BezierCurve(UnityEngine::Vector3 p0, UnityEngine::Vector3 p1, UnityEngine::Vector3 p2, UnityEngine::Vector3 p3);
  }; // BezierCurve
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BezierCurve, "", "BezierCurve");
#pragma pack(pop)
