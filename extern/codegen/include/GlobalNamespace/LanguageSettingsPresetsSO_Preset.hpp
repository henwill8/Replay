// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LanguageSettingsPresetsSO
#include "GlobalNamespace/LanguageSettingsPresetsSO.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: LanguageSettingsPresetsSO/Preset
  // [] Offset: FFFFFFFF
  class LanguageSettingsPresetsSO::Preset : public GlobalNamespace::NamedPreset {
    public:
    // public Polyglot.Language language
    // Size: 0x4
    // Offset: 0x18
    Polyglot::Language language;
    // Field size check
    static_assert(sizeof(Polyglot::Language) == 0x4);
    // Creating value type constructor for type: Preset
    Preset(Polyglot::Language language_ = {}) noexcept : language{language_} {}
    // Deleting conversion operator: operator ::Il2CppString*
    constexpr operator ::Il2CppString*() const noexcept = delete;
    // public System.Void .ctor()
    // Offset: 0xFD4018
    // Implemented from: NamedPreset
    // Base method: System.Void NamedPreset::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LanguageSettingsPresetsSO::Preset* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LanguageSettingsPresetsSO::Preset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LanguageSettingsPresetsSO::Preset*, creationType>()));
    }
  }; // LanguageSettingsPresetsSO/Preset
  #pragma pack(pop)
  static check_size<sizeof(LanguageSettingsPresetsSO::Preset), 24 + sizeof(Polyglot::Language)> __GlobalNamespace_LanguageSettingsPresetsSO_PresetSizeCheck;
  static_assert(sizeof(LanguageSettingsPresetsSO::Preset) == 0x1C);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LanguageSettingsPresetsSO::Preset*, "", "LanguageSettingsPresetsSO/Preset");
