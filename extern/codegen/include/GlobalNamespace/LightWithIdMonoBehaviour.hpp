// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: ILightWithId
#include "GlobalNamespace/ILightWithId.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: LightWithIdManager
  class LightWithIdManager;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: LightWithIdMonoBehaviour
  class LightWithIdMonoBehaviour : public UnityEngine::MonoBehaviour/*, public GlobalNamespace::ILightWithId*/ {
    public:
    // private System.Int32 _ID
    // Offset: 0x18
    int ID;
    // private readonly LightWithIdManager _lightManager
    // Offset: 0x20
    GlobalNamespace::LightWithIdManager* lightManager;
    // private System.Boolean _isRegistered
    // Offset: 0x28
    bool isRegistered;
    // Creating interface conversion operator: operator GlobalNamespace::ILightWithId
    operator GlobalNamespace::ILightWithId() noexcept {
      return *reinterpret_cast<GlobalNamespace::ILightWithId*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected UnityEngine.Color get_lightColor()
    // Offset: 0x18795D8
    UnityEngine::Color get_lightColor();
    // protected System.Void OnEnable()
    // Offset: 0x18795D4
    void OnEnable();
    // protected System.Void Start()
    // Offset: 0x187CB18
    void Start();
    // protected System.Void OnDisable()
    // Offset: 0x187CB1C
    void OnDisable();
    // private System.Void RegisterLight()
    // Offset: 0x187CA84
    void RegisterLight();
    // public System.Int32 get_lightId()
    // Offset: 0x187CA60
    // Implemented from: ILightWithId
    // Base method: System.Int32 ILightWithId::get_lightId()
    int get_lightId();
    // public System.Boolean get_isRegistered()
    // Offset: 0x187CA68
    // Implemented from: ILightWithId
    // Base method: System.Boolean ILightWithId::get_isRegistered()
    bool get_isRegistered();
    // public System.Void __SetIsRegistered()
    // Offset: 0x187CA70
    // Implemented from: ILightWithId
    // Base method: System.Void ILightWithId::__SetIsRegistered()
    void __SetIsRegistered();
    // public System.Void __SetIsUnRegistered()
    // Offset: 0x187CA7C
    // Implemented from: ILightWithId
    // Base method: System.Void ILightWithId::__SetIsUnRegistered()
    void __SetIsUnRegistered();
    // public System.Void ColorWasSet(UnityEngine.Color color)
    // Offset: 0xFFFFFFFF
    // Implemented from: ILightWithId
    // Base method: System.Void ILightWithId::ColorWasSet(UnityEngine.Color color)
    void ColorWasSet(UnityEngine::Color color);
    // protected System.Void .ctor()
    // Offset: 0x1875A44
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static LightWithIdMonoBehaviour* New_ctor();
  }; // LightWithIdMonoBehaviour
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LightWithIdMonoBehaviour*, "", "LightWithIdMonoBehaviour");
#pragma pack(pop)
