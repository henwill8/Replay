// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.FlowCoordinator
#include "HMUI/FlowCoordinator.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PlayerDataModel
  class PlayerDataModel;
  // Forward declaring type: EulaViewController
  class EulaViewController;
  // Forward declaring type: HealthWarningViewController
  class HealthWarningViewController;
  // Forward declaring type: PrivacyPolicyViewController
  class PrivacyPolicyViewController;
  // Forward declaring type: SimpleDialogPromptViewController
  class SimpleDialogPromptViewController;
  // Forward declaring type: FadeInOutController
  class FadeInOutController;
  // Forward declaring type: GameScenesManager
  class GameScenesManager;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: HealthWarningFlowCoordinator
  class HealthWarningFlowCoordinator : public HMUI::FlowCoordinator {
    public:
    // Nested type: GlobalNamespace::HealthWarningFlowCoordinator::InitData
    class InitData;
    // private PlayerDataModel _playerDataModel
    // Offset: 0xA8
    GlobalNamespace::PlayerDataModel* playerDataModel;
    // private EulaViewController _eulaViewController
    // Offset: 0xB0
    GlobalNamespace::EulaViewController* eulaViewController;
    // private HealthWarningViewController _healthWarningViewController
    // Offset: 0xB8
    GlobalNamespace::HealthWarningViewController* healthWarningViewController;
    // private PrivacyPolicyViewController _privacyPolicyViewController
    // Offset: 0xC0
    GlobalNamespace::PrivacyPolicyViewController* privacyPolicyViewController;
    // private readonly SimpleDialogPromptViewController _simpleDialogPromptViewController
    // Offset: 0xC8
    GlobalNamespace::SimpleDialogPromptViewController* simpleDialogPromptViewController;
    // private readonly FadeInOutController _fadeInOut
    // Offset: 0xD0
    GlobalNamespace::FadeInOutController* fadeInOut;
    // private readonly GameScenesManager _gameScenesManager
    // Offset: 0xD8
    GlobalNamespace::GameScenesManager* gameScenesManager;
    // private readonly HealthWarningFlowCoordinator/InitData _initData
    // Offset: 0xE0
    GlobalNamespace::HealthWarningFlowCoordinator::InitData* initData;
    // private System.Collections.Generic.Dictionary`2<HMUI.ViewController,System.String> _viewControllerTitles
    // Offset: 0xE8
    System::Collections::Generic::Dictionary_2<HMUI::ViewController*, ::Il2CppString*>* viewControllerTitles;
    // protected System.Void Update()
    // Offset: 0xF137A4
    void Update();
    // private System.Void HandleEulaViewControllerDidFinish(System.Boolean agreed)
    // Offset: 0xF137E4
    void HandleEulaViewControllerDidFinish(bool agreed);
    // private System.Void HandleHealthWarningViewControllerPrivacyPolicyButtonPressed()
    // Offset: 0xF13858
    void HandleHealthWarningViewControllerPrivacyPolicyButtonPressed();
    // private System.Void HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed()
    // Offset: 0xF13870
    void HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed();
    // private System.Void HandleHealthWarningViewControllerDidFinish()
    // Offset: 0xF137E0
    void HandleHealthWarningViewControllerDidFinish();
    // private System.Void GoToNextScene()
    // Offset: 0xF13944
    void GoToNextScene();
    // private System.Void <HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed>b__16_0(System.Int32 button)
    // Offset: 0xF13A34
    void $HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed$b__16_0(int button);
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0xF12EF0
    // Implemented from: HMUI.FlowCoordinator
    // Base method: System.Void FlowCoordinator::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
    // protected override System.Void DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    // Offset: 0xF13388
    // Implemented from: HMUI.FlowCoordinator
    // Base method: System.Void FlowCoordinator::DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    void DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling);
    // protected override System.Void TopViewControllerWillChange(HMUI.ViewController oldViewController, HMUI.ViewController newViewController, HMUI.ViewController/AnimationType animationType)
    // Offset: 0xF136D0
    // Implemented from: HMUI.FlowCoordinator
    // Base method: System.Void FlowCoordinator::TopViewControllerWillChange(HMUI.ViewController oldViewController, HMUI.ViewController newViewController, HMUI.ViewController/AnimationType animationType)
    void TopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType);
    // protected override System.Void BackButtonWasPressed(HMUI.ViewController topViewController)
    // Offset: 0xF13980
    // Implemented from: HMUI.FlowCoordinator
    // Base method: System.Void FlowCoordinator::BackButtonWasPressed(HMUI.ViewController topViewController)
    void BackButtonWasPressed(HMUI::ViewController* topViewController);
    // public System.Void .ctor()
    // Offset: 0xF13A2C
    // Implemented from: HMUI.FlowCoordinator
    // Base method: System.Void FlowCoordinator::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static HealthWarningFlowCoordinator* New_ctor();
  }; // HealthWarningFlowCoordinator
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::HealthWarningFlowCoordinator*, "", "HealthWarningFlowCoordinator");
#pragma pack(pop)
