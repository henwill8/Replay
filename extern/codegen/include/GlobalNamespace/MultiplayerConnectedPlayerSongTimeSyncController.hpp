// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FloatSO
  class FloatSO;
  // Forward declaring type: IConnectedPlayer
  class IConnectedPlayer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MultiplayerConnectedPlayerSongTimeSyncController
  class MultiplayerConnectedPlayerSongTimeSyncController : public UnityEngine::MonoBehaviour/*, public GlobalNamespace::IAudioTimeSource*/ {
    public:
    // Nested type: GlobalNamespace::MultiplayerConnectedPlayerSongTimeSyncController::InitData
    class InitData;
    // private System.Single _audioSyncLerpSpeed
    // Offset: 0x18
    float audioSyncLerpSpeed;
    // private System.Single _forcedSyncDeltaTime
    // Offset: 0x1C
    float forcedSyncDeltaTime;
    // private System.Single _startSyncDeltaTime
    // Offset: 0x20
    float startSyncDeltaTime;
    // private System.Single _stopSyncDeltaTime
    // Offset: 0x24
    float stopSyncDeltaTime;
    // private FloatSO _audioLatency
    // Offset: 0x28
    GlobalNamespace::FloatSO* audioLatency;
    // private readonly MultiplayerConnectedPlayerSongTimeSyncController/InitData _initData
    // Offset: 0x30
    GlobalNamespace::MultiplayerConnectedPlayerSongTimeSyncController::InitData* initData;
    // private readonly IConnectedPlayer _connectedPlayer
    // Offset: 0x38
    GlobalNamespace::IConnectedPlayer* connectedPlayer;
    // private System.Single <songTime>k__BackingField
    // Offset: 0x40
    float songTime;
    // private System.Single _timeScale
    // Offset: 0x44
    float timeScale;
    // private System.Single _startSongSyncTime
    // Offset: 0x48
    float startSongSyncTime;
    // private System.Boolean _fixingAudioSyncError
    // Offset: 0x4C
    bool fixingAudioSyncError;
    // Creating interface conversion operator: operator GlobalNamespace::IAudioTimeSource
    operator GlobalNamespace::IAudioTimeSource() noexcept {
      return *reinterpret_cast<GlobalNamespace::IAudioTimeSource*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // private System.Void set_songTime(System.Single value)
    // Offset: 0xFADA28
    void set_songTime(float value);
    // protected System.Void Start()
    // Offset: 0xFADA3C
    void Start();
    // protected System.Void Update()
    // Offset: 0xFADA48
    void Update();
    // public System.Void StartSong(System.Single songStartSyncTime)
    // Offset: 0xFA9BFC
    void StartSong(float songStartSyncTime);
    // public System.Void SetConnectedPlayerSongTime(System.Single syncTime, System.Single songTime)
    // Offset: 0xFACA68
    void SetConnectedPlayerSongTime(float syncTime, float songTime);
    // public System.Void StopSong()
    // Offset: 0xFA9D9C
    void StopSong();
    // public System.Single get_songTime()
    // Offset: 0xFADA20
    // Implemented from: IAudioTimeSource
    // Base method: System.Single IAudioTimeSource::get_songTime()
    float get_songTime();
    // public System.Single get_songEndTime()
    // Offset: 0xFADA30
    // Implemented from: IAudioTimeSource
    // Base method: System.Single IAudioTimeSource::get_songEndTime()
    float get_songEndTime();
    // public System.Void .ctor()
    // Offset: 0xFADBD4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static MultiplayerConnectedPlayerSongTimeSyncController* New_ctor();
  }; // MultiplayerConnectedPlayerSongTimeSyncController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerConnectedPlayerSongTimeSyncController*, "", "MultiplayerConnectedPlayerSongTimeSyncController");
#pragma pack(pop)
