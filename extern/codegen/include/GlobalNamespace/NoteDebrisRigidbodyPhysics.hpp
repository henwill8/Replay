// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteDebrisPhysics
#include "GlobalNamespace/NoteDebrisPhysics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NoteDebrisSimplePhysics
  class NoteDebrisSimplePhysics;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x29
  #pragma pack(push, 1)
  // Autogenerated type: NoteDebrisRigidbodyPhysics
  // [] Offset: FFFFFFFF
  // [RequireComponent] Offset: D30494
  class NoteDebrisRigidbodyPhysics : public GlobalNamespace::NoteDebrisPhysics {
    public:
    // private UnityEngine.Rigidbody _rigidbody
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::Rigidbody* rigidbody;
    // Field size check
    static_assert(sizeof(UnityEngine::Rigidbody*) == 0x8);
    // private NoteDebrisSimplePhysics _simplePhysics
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::NoteDebrisSimplePhysics* simplePhysics;
    // Field size check
    static_assert(sizeof(GlobalNamespace::NoteDebrisSimplePhysics*) == 0x8);
    // private System.Boolean _firstUpdate
    // Size: 0x1
    // Offset: 0x28
    bool firstUpdate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: NoteDebrisRigidbodyPhysics
    NoteDebrisRigidbodyPhysics(UnityEngine::Rigidbody* rigidbody_ = {}, GlobalNamespace::NoteDebrisSimplePhysics* simplePhysics_ = {}, bool firstUpdate_ = {}) noexcept : rigidbody{rigidbody_}, simplePhysics{simplePhysics_}, firstUpdate{firstUpdate_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void FixedUpdate()
    // Offset: 0xF94138
    void FixedUpdate();
    // public override System.Void SetVelocity(UnityEngine.Vector3 force)
    // Offset: 0xF94190
    // Implemented from: NoteDebrisPhysics
    // Base method: System.Void NoteDebrisPhysics::SetVelocity(UnityEngine.Vector3 force)
    void SetVelocity(UnityEngine::Vector3 force);
    // public override System.Void SetAngularVelocity(UnityEngine.Vector3 torque)
    // Offset: 0xF94224
    // Implemented from: NoteDebrisPhysics
    // Base method: System.Void NoteDebrisPhysics::SetAngularVelocity(UnityEngine.Vector3 torque)
    void SetAngularVelocity(UnityEngine::Vector3 torque);
    // public System.Void .ctor()
    // Offset: 0xF942B0
    // Implemented from: NoteDebrisPhysics
    // Base method: System.Void NoteDebrisPhysics::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NoteDebrisRigidbodyPhysics* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NoteDebrisRigidbodyPhysics*, creationType>()));
    }
  }; // NoteDebrisRigidbodyPhysics
  #pragma pack(pop)
  static check_size<sizeof(NoteDebrisRigidbodyPhysics), 40 + sizeof(bool)> __GlobalNamespace_NoteDebrisRigidbodyPhysicsSizeCheck;
  static_assert(sizeof(NoteDebrisRigidbodyPhysics) == 0x29);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::NoteDebrisRigidbodyPhysics*, "", "NoteDebrisRigidbodyPhysics");
