// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MonoMemoryPool`1
#include "Zenject/MonoMemoryPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Component
  class Component;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MemoryPoolWithActiveItems`1
  template<typename TValue>
  class MemoryPoolWithActiveItems_1 : public Zenject::MonoMemoryPool_1<TValue> {
    static_assert((!std::is_complete_v<std::remove_pointer_t<TValue>> || std::is_convertible_v<TValue, UnityEngine::Component*>));
    public:
    // private System.Collections.Generic.HashSet`1<TValue> _activeItems
    // Offset: 0x0
    System::Collections::Generic::HashSet_1<TValue>* activeItems;
    // Deleting conversion operator: operator UnityEngine::Transform*
    constexpr operator UnityEngine::Transform*() const noexcept = delete;
    // public System.Collections.Generic.HashSet`1<TValue> get_activeItems()
    // Offset: 0xFFFFFFFF
    System::Collections::Generic::HashSet_1<TValue>* get_activeItems() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::HashSet_1<TValue>*>(this, "get_activeItems"));
    }
    // protected override System.Void OnSpawned(TValue item)
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.MonoMemoryPool`1
    // Base method: System.Void MonoMemoryPool`1::OnSpawned(TValue item)
    void OnSpawned(TValue item) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnSpawned", item));
    }
    // protected override System.Void OnDespawned(TValue item)
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.MonoMemoryPool`1
    // Base method: System.Void MonoMemoryPool`1::OnDespawned(TValue item)
    void OnDespawned(TValue item) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDespawned", item));
    }
    // protected override System.Void OnDestroyed(TValue item)
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.MonoMemoryPool`1
    // Base method: System.Void MonoMemoryPool`1::OnDestroyed(TValue item)
    void OnDestroyed(TValue item) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroyed", item));
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.MonoMemoryPool`1
    // Base method: System.Void MonoMemoryPool`1::.ctor()
    // Base method: System.Void MemoryPool`1::.ctor()
    // Base method: System.Void MemoryPoolBase`1::.ctor()
    // Base method: System.Void Object::.ctor()
    static MemoryPoolWithActiveItems_1<TValue>* New_ctor() {
      return THROW_UNLESS(il2cpp_utils::New<MemoryPoolWithActiveItems_1<TValue>*>());
    }
  }; // MemoryPoolWithActiveItems`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::MemoryPoolWithActiveItems_1, "", "MemoryPoolWithActiveItems`1");
#pragma pack(pop)
