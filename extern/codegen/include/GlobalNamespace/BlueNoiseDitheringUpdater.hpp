// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BlueNoiseDithering
  class BlueNoiseDithering;
  // Forward declaring type: RandomValueToShader
  class RandomValueToShader;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: BlueNoiseDitheringUpdater
  // [] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: D15E68
  class BlueNoiseDitheringUpdater : public UnityEngine::MonoBehaviour {
    public:
    // private BlueNoiseDithering _blueNoiseDithering
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::BlueNoiseDithering* blueNoiseDithering;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BlueNoiseDithering*) == 0x8);
    // private RandomValueToShader _randomValueToShader
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::RandomValueToShader* randomValueToShader;
    // Field size check
    static_assert(sizeof(GlobalNamespace::RandomValueToShader*) == 0x8);
    // Creating value type constructor for type: BlueNoiseDitheringUpdater
    BlueNoiseDitheringUpdater(GlobalNamespace::BlueNoiseDithering* blueNoiseDithering_ = {}, GlobalNamespace::RandomValueToShader* randomValueToShader_ = {}) noexcept : blueNoiseDithering{blueNoiseDithering_}, randomValueToShader{randomValueToShader_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void OnEnable()
    // Offset: 0x1D9B8A8
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0x1D9B9E4
    void OnDisable();
    // public System.Void HandleCameraPreRender(UnityEngine.Camera camera)
    // Offset: 0x1D9BAB8
    void HandleCameraPreRender(UnityEngine::Camera* camera);
    // public System.Void .ctor()
    // Offset: 0x1D9BBC8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BlueNoiseDitheringUpdater* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDitheringUpdater::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BlueNoiseDitheringUpdater*, creationType>()));
    }
  }; // BlueNoiseDitheringUpdater
  #pragma pack(pop)
  static check_size<sizeof(BlueNoiseDitheringUpdater), 32 + sizeof(GlobalNamespace::RandomValueToShader*)> __GlobalNamespace_BlueNoiseDitheringUpdaterSizeCheck;
  static_assert(sizeof(BlueNoiseDitheringUpdater) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BlueNoiseDitheringUpdater*, "", "BlueNoiseDitheringUpdater");
