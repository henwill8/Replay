// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRPose
  struct OVRPose;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRTracker
  class OVRTracker : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::OVRTracker::Frustum
    struct Frustum;
    // public System.Boolean get_isPresent()
    // Offset: 0x190023C
    bool get_isPresent();
    // public System.Boolean get_isPositionTracked()
    // Offset: 0x19002D8
    bool get_isPositionTracked();
    // public System.Boolean get_isEnabled()
    // Offset: 0x1900338
    bool get_isEnabled();
    // public System.Void set_isEnabled(System.Boolean value)
    // Offset: 0x19003D4
    void set_isEnabled(bool value);
    // public System.Int32 get_count()
    // Offset: 0x1900474
    int get_count();
    // public OVRTracker/Frustum GetFrustum(System.Int32 tracker)
    // Offset: 0x19005F0
    GlobalNamespace::OVRTracker::Frustum GetFrustum(int tracker);
    // public OVRPose GetPose(System.Int32 tracker)
    // Offset: 0x19006A0
    GlobalNamespace::OVRPose GetPose(int tracker);
    // public System.Boolean GetPoseValid(System.Int32 tracker)
    // Offset: 0x1900934
    bool GetPoseValid(int tracker);
    // public System.Boolean GetPresent(System.Int32 tracker)
    // Offset: 0x19004B4
    bool GetPresent(int tracker);
    // public System.Void .ctor()
    // Offset: 0x1900A70
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static OVRTracker* New_ctor();
  }; // OVRTracker
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRTracker*, "", "OVRTracker");
#pragma pack(pop)
