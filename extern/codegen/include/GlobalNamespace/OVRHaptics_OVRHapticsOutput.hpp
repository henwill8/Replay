// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRHaptics
#include "GlobalNamespace/OVRHaptics.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRNativeBuffer
  class OVRNativeBuffer;
  // Forward declaring type: OVRHapticsClip
  class OVRHapticsClip;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRHaptics/OVRHapticsOutput
  class OVRHaptics::OVRHapticsOutput : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker
    class ClipPlaybackTracker;
    // private System.Boolean m_lowLatencyMode
    // Offset: 0x10
    bool m_lowLatencyMode;
    // private System.Boolean m_paddingEnabled
    // Offset: 0x11
    bool m_paddingEnabled;
    // private System.Int32 m_prevSamplesQueued
    // Offset: 0x14
    int m_prevSamplesQueued;
    // private System.Single m_prevSamplesQueuedTime
    // Offset: 0x18
    float m_prevSamplesQueuedTime;
    // private System.Int32 m_numPredictionHits
    // Offset: 0x1C
    int m_numPredictionHits;
    // private System.Int32 m_numPredictionMisses
    // Offset: 0x20
    int m_numPredictionMisses;
    // private System.Int32 m_numUnderruns
    // Offset: 0x24
    int m_numUnderruns;
    // private System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker> m_pendingClips
    // Offset: 0x28
    System::Collections::Generic::List_1<GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>* m_pendingClips;
    // private System.UInt32 m_controller
    // Offset: 0x30
    uint m_controller;
    // private OVRNativeBuffer m_nativeBuffer
    // Offset: 0x38
    GlobalNamespace::OVRNativeBuffer* m_nativeBuffer;
    // private OVRHapticsClip m_paddingClip
    // Offset: 0x40
    GlobalNamespace::OVRHapticsClip* m_paddingClip;
    // public System.Void .ctor(System.UInt32 controller)
    // Offset: 0xE6E004
    static OVRHaptics::OVRHapticsOutput* New_ctor(uint controller);
    // public System.Void Process()
    // Offset: 0xE6E35C
    void Process();
    // public System.Void Preempt(OVRHapticsClip clip)
    // Offset: 0xE6F244
    void Preempt(GlobalNamespace::OVRHapticsClip* clip);
    // public System.Void Queue(OVRHapticsClip clip)
    // Offset: 0xE6F30C
    void Queue(GlobalNamespace::OVRHapticsClip* clip);
    // public System.Void Mix(OVRHapticsClip clip)
    // Offset: 0xE6F3BC
    void Mix(GlobalNamespace::OVRHapticsClip* clip);
    // public System.Void Clear()
    // Offset: 0xE6F8BC
    void Clear();
  }; // OVRHaptics/OVRHapticsOutput
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRHaptics::OVRHapticsOutput*, "", "OVRHaptics/OVRHapticsOutput");
#pragma pack(pop)
