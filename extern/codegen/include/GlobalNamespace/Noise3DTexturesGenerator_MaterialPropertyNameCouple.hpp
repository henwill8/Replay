// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: Noise3DTexturesGenerator
#include "GlobalNamespace/Noise3DTexturesGenerator.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppString;
// Completed il2cpp-utils forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: Noise3DTexturesGenerator/MaterialPropertyNameCouple
  struct Noise3DTexturesGenerator::MaterialPropertyNameCouple : public System::ValueType {
    public:
    // public System.String texturePropertyName
    // Offset: 0x0
    ::Il2CppString* texturePropertyName;
    // public UnityEngine.Material material
    // Offset: 0x8
    UnityEngine::Material* material;
    // Creating value type constructor for type: MaterialPropertyNameCouple
    constexpr MaterialPropertyNameCouple(::Il2CppString* texturePropertyName_ = {}, UnityEngine::Material* material_ = {}) noexcept : texturePropertyName{texturePropertyName_}, material{material_} {}
  }; // Noise3DTexturesGenerator/MaterialPropertyNameCouple
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::Noise3DTexturesGenerator::MaterialPropertyNameCouple, "", "Noise3DTexturesGenerator/MaterialPropertyNameCouple");
#pragma pack(pop)
