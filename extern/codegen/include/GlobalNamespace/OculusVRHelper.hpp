// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRPlatformHelper
#include "GlobalNamespace/VRPlatformHelper.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRHapticsClip
  class OVRHapticsClip;
}
// Forward declaring namespace: UnityEngine::XR
namespace UnityEngine::XR {
  // Skipping declaration: XRNode because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OculusVRHelper
  class OculusVRHelper : public ::Il2CppObject {
    public:
    // private System.Action inputFocusWasCapturedEvent
    // Offset: 0x10
    System::Action* inputFocusWasCapturedEvent;
    // private System.Action inputFocusWasReleasedEvent
    // Offset: 0x18
    System::Action* inputFocusWasReleasedEvent;
    // private System.Action hmdUnmountedEvent
    // Offset: 0x20
    System::Action* hmdUnmountedEvent;
    // private System.Action hmdMountedEvent
    // Offset: 0x28
    System::Action* hmdMountedEvent;
    // private OVRHapticsClip _hapticsClip
    // Offset: 0x30
    GlobalNamespace::OVRHapticsClip* hapticsClip;
    // private System.Boolean _userPresent
    // Offset: 0x38
    bool userPresent;
    // private System.Boolean _hasInputFocus
    // Offset: 0x39
    bool hasInputFocus;
    // private System.Boolean _hasVrFocus
    // Offset: 0x3A
    bool hasVrFocus;
    // public System.Void add_inputFocusWasCapturedEvent(System.Action value)
    // Offset: 0xCB9054
    void add_inputFocusWasCapturedEvent(System::Action* value);
    // public System.Void remove_inputFocusWasCapturedEvent(System.Action value)
    // Offset: 0xCB90F8
    void remove_inputFocusWasCapturedEvent(System::Action* value);
    // public System.Void add_inputFocusWasReleasedEvent(System.Action value)
    // Offset: 0xCB919C
    void add_inputFocusWasReleasedEvent(System::Action* value);
    // public System.Void remove_inputFocusWasReleasedEvent(System.Action value)
    // Offset: 0xCB9240
    void remove_inputFocusWasReleasedEvent(System::Action* value);
    // public System.Void add_hmdUnmountedEvent(System.Action value)
    // Offset: 0xCB92E4
    void add_hmdUnmountedEvent(System::Action* value);
    // public System.Void remove_hmdUnmountedEvent(System.Action value)
    // Offset: 0xCB9388
    void remove_hmdUnmountedEvent(System::Action* value);
    // public System.Void add_hmdMountedEvent(System.Action value)
    // Offset: 0xCB942C
    void add_hmdMountedEvent(System::Action* value);
    // public System.Void remove_hmdMountedEvent(System.Action value)
    // Offset: 0xCB94D0
    void remove_hmdMountedEvent(System::Action* value);
    // private System.Boolean get__isOVRManagerPresent()
    // Offset: 0xCB9574
    bool get__isOVRManagerPresent();
    // public System.Void .ctor(VRPlatformHelper/XRDeviceModel currentXRDeviceModel)
    // Offset: 0xCB9648
    static OculusVRHelper* New_ctor(GlobalNamespace::VRPlatformHelper::XRDeviceModel currentXRDeviceModel);
    // public System.Void Update()
    // Offset: 0xCB9914
    void Update();
    // public System.Void FixedUpdate()
    // Offset: 0xCB9B04
    void FixedUpdate();
    // public System.Void LateUpdate()
    // Offset: 0xCB9B78
    void LateUpdate();
    // public System.Void TriggerHapticPulse(UnityEngine.XR.XRNode node, System.Single strength)
    // Offset: 0xCB9BEC
    void TriggerHapticPulse(UnityEngine::XR::XRNode node, float strength);
  }; // OculusVRHelper
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OculusVRHelper*, "", "OculusVRHelper");
#pragma pack(pop)
