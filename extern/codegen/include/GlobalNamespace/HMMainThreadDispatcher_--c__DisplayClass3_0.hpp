// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMMainThreadDispatcher
#include "GlobalNamespace/HMMainThreadDispatcher.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: HMMainThreadDispatcher/<>c__DisplayClass3_0
  // [] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: D09F68
  class HMMainThreadDispatcher::$$c__DisplayClass3_0 : public ::Il2CppObject {
    public:
    // public HMMainThreadDispatcher <>4__this
    // Size: 0x8
    // Offset: 0x10
    GlobalNamespace::HMMainThreadDispatcher* $$4__this;
    // Field size check
    static_assert(sizeof(GlobalNamespace::HMMainThreadDispatcher*) == 0x8);
    // public System.Collections.IEnumerator action
    // Size: 0x8
    // Offset: 0x18
    System::Collections::IEnumerator* action;
    // Field size check
    static_assert(sizeof(System::Collections::IEnumerator*) == 0x8);
    // Creating value type constructor for type: $$c__DisplayClass3_0
    $$c__DisplayClass3_0(GlobalNamespace::HMMainThreadDispatcher* $$4__this_ = {}, System::Collections::IEnumerator* action_ = {}) noexcept : $$4__this{$$4__this_}, action{action_} {}
    // System.Void <Enqueue>b__0()
    // Offset: 0x110F510
    void $Enqueue$b__0();
    // public System.Void .ctor()
    // Offset: 0x110F350
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HMMainThreadDispatcher::$$c__DisplayClass3_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HMMainThreadDispatcher::$$c__DisplayClass3_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HMMainThreadDispatcher::$$c__DisplayClass3_0*, creationType>()));
    }
  }; // HMMainThreadDispatcher/<>c__DisplayClass3_0
  #pragma pack(pop)
  static check_size<sizeof(HMMainThreadDispatcher::$$c__DisplayClass3_0), 24 + sizeof(System::Collections::IEnumerator*)> __GlobalNamespace_HMMainThreadDispatcher_$$c__DisplayClass3_0SizeCheck;
  static_assert(sizeof(HMMainThreadDispatcher::$$c__DisplayClass3_0) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::HMMainThreadDispatcher::$$c__DisplayClass3_0*, "", "HMMainThreadDispatcher/<>c__DisplayClass3_0");
