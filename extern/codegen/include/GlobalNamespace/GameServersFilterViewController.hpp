// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Toggle
  class Toggle;
  // Forward declaring type: Button
  class Button;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapDifficultyDropdown
  class BeatmapDifficultyDropdown;
  // Forward declaring type: GameplayModifiersDropdown
  class GameplayModifiersDropdown;
  // Forward declaring type: SongPacksDropdown
  class SongPacksDropdown;
  // Forward declaring type: GameServersFilter
  class GameServersFilter;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: ToggleBinder
  class ToggleBinder;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: GameServersFilterViewController
  class GameServersFilterViewController : public HMUI::ViewController {
    public:
    // private UnityEngine.UI.Toggle _filterByDifficultyToggle
    // Offset: 0x70
    UnityEngine::UI::Toggle* filterByDifficultyToggle;
    // private UnityEngine.UI.Button _filterByDifficultyButton
    // Offset: 0x78
    UnityEngine::UI::Button* filterByDifficultyButton;
    // private BeatmapDifficultyDropdown _beatmapDifficultyDropdown
    // Offset: 0x80
    GlobalNamespace::BeatmapDifficultyDropdown* beatmapDifficultyDropdown;
    // private UnityEngine.UI.Toggle _filterByModifiersToggle
    // Offset: 0x88
    UnityEngine::UI::Toggle* filterByModifiersToggle;
    // private UnityEngine.UI.Button _filterByModifiersButton
    // Offset: 0x90
    UnityEngine::UI::Button* filterByModifiersButton;
    // private GameplayModifiersDropdown _gameplayModifiersDropdown
    // Offset: 0x98
    GlobalNamespace::GameplayModifiersDropdown* gameplayModifiersDropdown;
    // private UnityEngine.UI.Toggle _filterBySongsToggle
    // Offset: 0xA0
    UnityEngine::UI::Toggle* filterBySongsToggle;
    // private UnityEngine.UI.Button _filterBySongsButton
    // Offset: 0xA8
    UnityEngine::UI::Button* filterBySongsButton;
    // private SongPacksDropdown _songPacksDropdown
    // Offset: 0xB0
    GlobalNamespace::SongPacksDropdown* songPacksDropdown;
    // private UnityEngine.UI.Toggle _showFullToggle
    // Offset: 0xB8
    UnityEngine::UI::Toggle* showFullToggle;
    // private UnityEngine.UI.Toggle _showPasswordProtectedToggle
    // Offset: 0xC0
    UnityEngine::UI::Toggle* showPasswordProtectedToggle;
    // private readonly HMUI.ToggleBinder _toggleBinder
    // Offset: 0xC8
    HMUI::ToggleBinder* toggleBinder;
    // private System.Boolean _showInternetGames
    // Offset: 0xD0
    bool showInternetGames;
    // public GameServersFilter get_gameServersFilter()
    // Offset: 0x1A1F3B0
    GlobalNamespace::GameServersFilter* get_gameServersFilter();
    // public System.Void SetupGameServersFilter(GameServersFilter gameServersFilter)
    // Offset: 0x1A1F5A4
    void SetupGameServersFilter(GlobalNamespace::GameServersFilter* gameServersFilter);
    // private System.Void Refresh(GameServersFilter currentFilter)
    // Offset: 0x1A1F5A8
    void Refresh(GlobalNamespace::GameServersFilter* currentFilter);
    // private System.Void <DidActivate>b__16_0(System.Boolean isOn)
    // Offset: 0x1A1F8DC
    void $DidActivate$b__16_0(bool isOn);
    // private System.Void <DidActivate>b__16_1(System.Boolean isOn)
    // Offset: 0x1A1F8FC
    void $DidActivate$b__16_1(bool isOn);
    // private System.Void <DidActivate>b__16_2(System.Boolean isOn)
    // Offset: 0x1A1F91C
    void $DidActivate$b__16_2(bool isOn);
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0x1A1F6B0
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
    // protected override System.Void OnDestroy()
    // Offset: 0x1A1F7F8
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::OnDestroy()
    void OnDestroy();
    // public System.Void .ctor()
    // Offset: 0x1A1F868
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static GameServersFilterViewController* New_ctor();
  }; // GameServersFilterViewController
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::GameServersFilterViewController*, "", "GameServersFilterViewController");
#pragma pack(pop)
