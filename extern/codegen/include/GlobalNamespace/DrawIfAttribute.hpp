// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PropertyAttribute
#include "UnityEngine/PropertyAttribute.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: DisablingType because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: DrawIfAttribute
  class DrawIfAttribute : public UnityEngine::PropertyAttribute {
    public:
    // Nested type: GlobalNamespace::DrawIfAttribute::DisablingType
    struct DisablingType;
    // Autogenerated type: DrawIfAttribute/DisablingType
    struct DisablingType : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: DisablingType
      constexpr DisablingType(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public DrawIfAttribute/DisablingType ReadOnly
      static constexpr const int ReadOnly = 0;
      // Get static field: static public DrawIfAttribute/DisablingType ReadOnly
      static GlobalNamespace::DrawIfAttribute::DisablingType _get_ReadOnly();
      // Set static field: static public DrawIfAttribute/DisablingType ReadOnly
      static void _set_ReadOnly(GlobalNamespace::DrawIfAttribute::DisablingType value);
      // static field const value: static public DrawIfAttribute/DisablingType DontDraw
      static constexpr const int DontDraw = 1;
      // Get static field: static public DrawIfAttribute/DisablingType DontDraw
      static GlobalNamespace::DrawIfAttribute::DisablingType _get_DontDraw();
      // Set static field: static public DrawIfAttribute/DisablingType DontDraw
      static void _set_DontDraw(GlobalNamespace::DrawIfAttribute::DisablingType value);
    }; // DrawIfAttribute/DisablingType
    // public readonly System.String propertyName
    // Offset: 0x10
    ::Il2CppString* propertyName;
    // public readonly System.Object value
    // Offset: 0x18
    ::Il2CppObject* value;
    // public readonly System.Object orValue
    // Offset: 0x20
    ::Il2CppObject* orValue;
    // public readonly DrawIfAttribute/DisablingType disablingType
    // Offset: 0x28
    GlobalNamespace::DrawIfAttribute::DisablingType disablingType;
    // public System.Void .ctor(System.String propertyName, System.Object value, DrawIfAttribute/DisablingType disablingType)
    // Offset: 0x102D248
    static DrawIfAttribute* New_ctor(::Il2CppString* propertyName, ::Il2CppObject* value, GlobalNamespace::DrawIfAttribute::DisablingType disablingType);
    // public System.Void .ctor(System.String propertyName, System.Object value, System.Object orValue, DrawIfAttribute/DisablingType disablingType)
    // Offset: 0x102D2A4
    static DrawIfAttribute* New_ctor(::Il2CppString* propertyName, ::Il2CppObject* value, ::Il2CppObject* orValue, GlobalNamespace::DrawIfAttribute::DisablingType disablingType);
  }; // DrawIfAttribute
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::DrawIfAttribute*, "", "DrawIfAttribute");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::DrawIfAttribute::DisablingType, "", "DrawIfAttribute/DisablingType");
#pragma pack(pop)
