// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FullVRControllersRecorder
  class FullVRControllersRecorder;
  // Forward declaring type: PlayerTransforms
  class PlayerTransforms;
  // Forward declaring type: SaberManager
  class SaberManager;
  // Forward declaring type: PlayerVRControllersManager
  class PlayerVRControllersManager;
  // Forward declaring type: VRController
  class VRController;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: OverridePlayerTransformsFromFullVRControllersRecorder
  // [] Offset: FFFFFFFF
  class OverridePlayerTransformsFromFullVRControllersRecorder : public UnityEngine::MonoBehaviour {
    public:
    // private FullVRControllersRecorder _fullVRControllersRecorder
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::FullVRControllersRecorder* fullVRControllersRecorder;
    // Field size check
    static_assert(sizeof(GlobalNamespace::FullVRControllersRecorder*) == 0x8);
    // [InjectAttribute] Offset: 0xD44C04
    // private readonly PlayerTransforms _playerTransforms
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::PlayerTransforms* playerTransforms;
    // Field size check
    static_assert(sizeof(GlobalNamespace::PlayerTransforms*) == 0x8);
    // [InjectAttribute] Offset: 0xD44C14
    // private readonly SaberManager _saberManager
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::SaberManager* saberManager;
    // Field size check
    static_assert(sizeof(GlobalNamespace::SaberManager*) == 0x8);
    // [InjectAttribute] Offset: 0xD44C24
    // private readonly PlayerVRControllersManager _playerVRControllersManager
    // Size: 0x8
    // Offset: 0x30
    GlobalNamespace::PlayerVRControllersManager* playerVRControllersManager;
    // Field size check
    static_assert(sizeof(GlobalNamespace::PlayerVRControllersManager*) == 0x8);
    // Creating value type constructor for type: OverridePlayerTransformsFromFullVRControllersRecorder
    OverridePlayerTransformsFromFullVRControllersRecorder(GlobalNamespace::FullVRControllersRecorder* fullVRControllersRecorder_ = {}, GlobalNamespace::PlayerTransforms* playerTransforms_ = {}, GlobalNamespace::SaberManager* saberManager_ = {}, GlobalNamespace::PlayerVRControllersManager* playerVRControllersManager_ = {}) noexcept : fullVRControllersRecorder{fullVRControllersRecorder_}, playerTransforms{playerTransforms_}, saberManager{saberManager_}, playerVRControllersManager{playerVRControllersManager_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void Start()
    // Offset: 0xF1D724
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0xF1D7C8
    void OnDestroy();
    // private System.Void HandleFullVRControllersRecorderDidSetControllerTransform(VRController controller)
    // Offset: 0xF1D8A4
    void HandleFullVRControllersRecorderDidSetControllerTransform(GlobalNamespace::VRController* controller);
    // public System.Void .ctor()
    // Offset: 0xF1D9BC
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OverridePlayerTransformsFromFullVRControllersRecorder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OverridePlayerTransformsFromFullVRControllersRecorder*, creationType>()));
    }
  }; // OverridePlayerTransformsFromFullVRControllersRecorder
  #pragma pack(pop)
  static check_size<sizeof(OverridePlayerTransformsFromFullVRControllersRecorder), 48 + sizeof(GlobalNamespace::PlayerVRControllersManager*)> __GlobalNamespace_OverridePlayerTransformsFromFullVRControllersRecorderSizeCheck;
  static_assert(sizeof(OverridePlayerTransformsFromFullVRControllersRecorder) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder*, "", "OverridePlayerTransformsFromFullVRControllersRecorder");
