// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BtsResultsEnvironmentController
#include "GlobalNamespace/BtsResultsEnvironmentController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: AnimationClip
  class AnimationClip;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BTSCharacterResultAnimationController
  class BTSCharacterResultAnimationController;
  // Forward declaring type: BTSCharacter
  class BTSCharacter;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation
  // [] Offset: FFFFFFFF
  class BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation : public ::Il2CppObject {
    public:
    // private System.String _name
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* name;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private UnityEngine.Transform _placeTransform
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::Transform* placeTransform;
    // Field size check
    static_assert(sizeof(UnityEngine::Transform*) == 0x8);
    // private BTSCharacterResultAnimationController _animationController
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::BTSCharacterResultAnimationController* animationController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BTSCharacterResultAnimationController*) == 0x8);
    // private UnityEngine.AnimationClip _animationClip
    // Size: 0x8
    // Offset: 0x28
    UnityEngine::AnimationClip* animationClip;
    // Field size check
    static_assert(sizeof(UnityEngine::AnimationClip*) == 0x8);
    // private BTSCharacter _btsCharacter
    // Size: 0x8
    // Offset: 0x30
    GlobalNamespace::BTSCharacter* btsCharacter;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BTSCharacter*) == 0x8);
    // Creating value type constructor for type: BTSResultCharacterPlaceWithAnimation
    BTSResultCharacterPlaceWithAnimation(::Il2CppString* name_ = {}, UnityEngine::Transform* placeTransform_ = {}, GlobalNamespace::BTSCharacterResultAnimationController* animationController_ = {}, UnityEngine::AnimationClip* animationClip_ = {}, GlobalNamespace::BTSCharacter* btsCharacter_ = {}) noexcept : name{name_}, placeTransform{placeTransform_}, animationController{animationController_}, animationClip{animationClip_}, btsCharacter{btsCharacter_} {}
    // public System.String get_name()
    // Offset: 0xF63654
    ::Il2CppString* get_name();
    // public System.Void Clean()
    // Offset: 0xF633C8
    void Clean();
    // public System.Void SetCharacter(BTSCharacter btsCharacter, System.Boolean alternativeMaterial)
    // Offset: 0xF63038
    void SetCharacter(GlobalNamespace::BTSCharacter* btsCharacter, bool alternativeMaterial);
    // public System.Void .ctor()
    // Offset: 0xF6365C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation*, creationType>()));
    }
  }; // BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation
  #pragma pack(pop)
  static check_size<sizeof(BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation), 48 + sizeof(GlobalNamespace::BTSCharacter*)> __GlobalNamespace_BtsResultsEnvironmentController_BTSResultCharacterPlaceWithAnimationSizeCheck;
  static_assert(sizeof(BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation*, "", "BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation");
