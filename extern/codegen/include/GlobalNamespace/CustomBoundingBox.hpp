// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: CustomBoundingBox
  class CustomBoundingBox : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.MeshFilter _meshFilter
    // Offset: 0x18
    UnityEngine::MeshFilter* meshFilter;
    // private UnityEngine.Vector3 _boundingBoxCenter
    // Offset: 0x20
    UnityEngine::Vector3 boundingBoxCenter;
    // private UnityEngine.Vector3 _boundingBoxSize
    // Offset: 0x2C
    UnityEngine::Vector3 boundingBoxSize;
    // private UnityEngine.MeshRenderer _meshRenderer
    // Offset: 0x38
    UnityEngine::MeshRenderer* meshRenderer;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void Awake()
    // Offset: 0x102C3A8
    void Awake();
    // protected System.Void OnDestroy()
    // Offset: 0x102C4B8
    void OnDestroy();
    // public System.Void .ctor()
    // Offset: 0x102C5B4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static CustomBoundingBox* New_ctor();
  }; // CustomBoundingBox
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::CustomBoundingBox*, "", "CustomBoundingBox");
#pragma pack(pop)
