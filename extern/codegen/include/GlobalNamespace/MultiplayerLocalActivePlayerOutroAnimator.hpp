// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ColorSO
  class ColorSO;
  // Forward declaring type: LightsAnimator
  class LightsAnimator;
  // Forward declaring type: CoreGameHUDController
  class CoreGameHUDController;
  // Forward declaring type: MultiplayerPositionHUDController
  class MultiplayerPositionHUDController;
  // Forward declaring type: MultiplayerLocalPlayerOutroAudio
  class MultiplayerLocalPlayerOutroAudio;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: Tweening
namespace Tweening {
  // Forward declaring type: TweeningManager
  class TweeningManager;
  // Forward declaring type: Tween
  class Tween;
  // Forward declaring type: Tween`1<T>
  template<typename T>
  class Tween_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MultiplayerLocalActivePlayerOutroAnimator
  class MultiplayerLocalActivePlayerOutroAnimator : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::MultiplayerLocalActivePlayerOutroAnimator::$AnimateCoroutine$d__14
    class $AnimateCoroutine$d__14;
    // protected ColorSO _offLightsColor
    // Offset: 0x18
    GlobalNamespace::ColorSO* offLightsColor;
    // protected LightsAnimator[] _lightsAnimators
    // Offset: 0x20
    ::Array<GlobalNamespace::LightsAnimator*>* lightsAnimators;
    // protected CoreGameHUDController _coreGameHUDController
    // Offset: 0x28
    GlobalNamespace::CoreGameHUDController* coreGameHUDController;
    // protected MultiplayerPositionHUDController _multiplayerPositionHUDController
    // Offset: 0x30
    GlobalNamespace::MultiplayerPositionHUDController* multiplayerPositionHUDController;
    // private MultiplayerLocalPlayerOutroAudio _outroAudio
    // Offset: 0x38
    GlobalNamespace::MultiplayerLocalPlayerOutroAudio* outroAudio;
    // private UnityEngine.Vector3 _leftGeometryTargetPosition
    // Offset: 0x40
    UnityEngine::Vector3 leftGeometryTargetPosition;
    // private UnityEngine.Vector3 _rightGeometryTargetPosition
    // Offset: 0x4C
    UnityEngine::Vector3 rightGeometryTargetPosition;
    // private UnityEngine.Transform _leftGeometryTransform
    // Offset: 0x58
    UnityEngine::Transform* leftGeometryTransform;
    // private UnityEngine.Transform _rightGeometryTransform
    // Offset: 0x60
    UnityEngine::Transform* rightGeometryTransform;
    // private readonly Tweening.TweeningManager _tweeningManager
    // Offset: 0x68
    Tweening::TweeningManager* tweeningManager;
    // private Tweening.Tween _fadeHUDTween
    // Offset: 0x70
    Tweening::Tween* fadeHUDTween;
    // private Tweening.Tween`1<UnityEngine.Vector3> _leftGeometryPositionTween
    // Offset: 0x78
    Tweening::Tween_1<UnityEngine::Vector3>* leftGeometryPositionTween;
    // private Tweening.Tween`1<UnityEngine.Vector3> _rightGeometryPositionTween
    // Offset: 0x80
    Tweening::Tween_1<UnityEngine::Vector3>* rightGeometryPositionTween;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void OnDestroy()
    // Offset: 0xF70D78
    void OnDestroy();
    // public System.Collections.IEnumerator AnimateCoroutine()
    // Offset: 0xF70E10
    System::Collections::IEnumerator* AnimateCoroutine();
    // public System.Void PlayOutroMusicSample(System.Single maxDuration, System.Single volume)
    // Offset: 0xF70EB8
    void PlayOutroMusicSample(float maxDuration, float volume);
    // private System.Void <AnimateCoroutine>b__14_0(System.Single f)
    // Offset: 0xF70FBC
    void $AnimateCoroutine$b__14_0(float f);
    // private System.Void <AnimateCoroutine>b__14_1(UnityEngine.Vector3 val)
    // Offset: 0xF71010
    void $AnimateCoroutine$b__14_1(UnityEngine::Vector3 val);
    // private System.Void <AnimateCoroutine>b__14_2(UnityEngine.Vector3 val)
    // Offset: 0xF7102C
    void $AnimateCoroutine$b__14_2(UnityEngine::Vector3 val);
    // public System.Void .ctor()
    // Offset: 0xF70F1C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static MultiplayerLocalActivePlayerOutroAnimator* New_ctor();
  }; // MultiplayerLocalActivePlayerOutroAnimator
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerLocalActivePlayerOutroAnimator*, "", "MultiplayerLocalActivePlayerOutroAnimator");
#pragma pack(pop)
