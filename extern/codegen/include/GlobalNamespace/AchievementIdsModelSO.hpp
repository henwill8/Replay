// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PersistentScriptableObject
#include "GlobalNamespace/PersistentScriptableObject.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: AchievementSO
  class AchievementSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: AchievementIdsModelSO
  class AchievementIdsModelSO : public GlobalNamespace::PersistentScriptableObject {
    public:
    // private System.Collections.Generic.List`1<AchievementSO> _achievementsIds
    // Offset: 0x18
    System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>* achievementsIds;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Collections.Generic.List`1<AchievementSO> get_achievementsIds()
    // Offset: 0xB82D30
    System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>* get_achievementsIds();
    // public System.Void .ctor()
    // Offset: 0xB82D38
    // Implemented from: PersistentScriptableObject
    // Base method: System.Void PersistentScriptableObject::.ctor()
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static AchievementIdsModelSO* New_ctor();
  }; // AchievementIdsModelSO
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::AchievementIdsModelSO*, "", "AchievementIdsModelSO");
#pragma pack(pop)
