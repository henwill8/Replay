// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PersistentScriptableObject
#include "GlobalNamespace/PersistentScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: AchievementSO
  class AchievementSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: AchievementIdsModelSO
  // [] Offset: FFFFFFFF
  class AchievementIdsModelSO : public GlobalNamespace::PersistentScriptableObject {
    public:
    // private System.Collections.Generic.List`1<AchievementSO> _achievementsIds
    // Size: 0x8
    // Offset: 0x18
    System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>* achievementsIds;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>*) == 0x8);
    // Creating value type constructor for type: AchievementIdsModelSO
    AchievementIdsModelSO(System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>* achievementsIds_ = {}) noexcept : achievementsIds{achievementsIds_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Collections.Generic.List`1<AchievementSO> get_achievementsIds()
    // Offset: 0x1028F20
    System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>* get_achievementsIds();
    // public System.Void .ctor()
    // Offset: 0x1028F28
    // Implemented from: PersistentScriptableObject
    // Base method: System.Void PersistentScriptableObject::.ctor()
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AchievementIdsModelSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementIdsModelSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AchievementIdsModelSO*, creationType>()));
    }
  }; // AchievementIdsModelSO
  #pragma pack(pop)
  static check_size<sizeof(AchievementIdsModelSO), 24 + sizeof(System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>*)> __GlobalNamespace_AchievementIdsModelSOSizeCheck;
  static_assert(sizeof(AchievementIdsModelSO) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::AchievementIdsModelSO*, "", "AchievementIdsModelSO");
