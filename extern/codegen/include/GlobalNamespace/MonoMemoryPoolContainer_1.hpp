// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MonoBehaviour
  class MonoBehaviour;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: MonoMemoryPool`1<TValue>
  template<typename TValue>
  class MonoMemoryPool_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MonoMemoryPoolContainer`1
  template<typename T>
  class MonoMemoryPoolContainer_1 : public ::Il2CppObject {
    public:
    // private readonly System.Collections.Generic.HashSet`1<T> _activeItems
    // Offset: 0x0
    System::Collections::Generic::HashSet_1<T>* activeItems;
    // private readonly Zenject.MonoMemoryPool`1<T> _memoryPool
    // Offset: 0x0
    Zenject::MonoMemoryPool_1<T>* memoryPool;
    // public System.Collections.Generic.HashSet`1<T> get_activeItems()
    // Offset: 0xFFFFFFFF
    System::Collections::Generic::HashSet_1<T>* get_activeItems() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::HashSet_1<T>*>(this, "get_activeItems"));
    }
    // public System.Void .ctor(Zenject.MonoMemoryPool`1<T> memoryPool)
    // Offset: 0xFFFFFFFF
    static MonoMemoryPoolContainer_1<T>* New_ctor(Zenject::MonoMemoryPool_1<T>* memoryPool) {
      return THROW_UNLESS(il2cpp_utils::New<MonoMemoryPoolContainer_1<T>*>(memoryPool));
    }
    // public T Spawn()
    // Offset: 0xFFFFFFFF
    T Spawn() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<T>(this, "Spawn"));
    }
    // public System.Void Despawn(T item)
    // Offset: 0xFFFFFFFF
    void Despawn(T item) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "Despawn", item));
    }
  }; // MonoMemoryPoolContainer`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::MonoMemoryPoolContainer_1, "", "MonoMemoryPoolContainer`1");
#pragma pack(pop)
