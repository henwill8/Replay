// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IMultiplayerObservable
  class IMultiplayerObservable;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppString;
// Completed il2cpp-utils forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: IMultiplayerSpectatingSpot
  // [] Offset: FFFFFFFF
  class IMultiplayerSpectatingSpot {
    public:
    // Creating value type constructor for type: IMultiplayerSpectatingSpot
    IMultiplayerSpectatingSpot() noexcept {}
    // public System.Void add_hasBeenRemovedEvent(System.Action`1<IMultiplayerSpectatingSpot> value)
    // Offset: 0xFFFFFFFF
    void add_hasBeenRemovedEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value);
    // public System.Void remove_hasBeenRemovedEvent(System.Action`1<IMultiplayerSpectatingSpot> value)
    // Offset: 0xFFFFFFFF
    void remove_hasBeenRemovedEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value);
    // public System.Boolean get_isMain()
    // Offset: 0xFFFFFFFF
    bool get_isMain();
    // public IMultiplayerObservable get_observable()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::IMultiplayerObservable* get_observable();
    // public UnityEngine.Transform get_transform()
    // Offset: 0xFFFFFFFF
    UnityEngine::Transform* GlobalNamespace_IMultiplayerSpectatingSpot_get_transform();
    // public System.String get_spotName()
    // Offset: 0xFFFFFFFF
    ::Il2CppString* get_spotName();
    // public System.Void SetIsObserved(System.Boolean isObserved)
    // Offset: 0xFFFFFFFF
    void SetIsObserved(bool isObserved);
  }; // IMultiplayerSpectatingSpot
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::IMultiplayerSpectatingSpot*, "", "IMultiplayerSpectatingSpot");
