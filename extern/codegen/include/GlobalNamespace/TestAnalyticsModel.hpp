// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: TestAnalyticsModel
  // [] Offset: FFFFFFFF
  class TestAnalyticsModel : public ::Il2CppObject/*, public GlobalNamespace::IAnalyticsModel*/ {
    public:
    // Nested type: GlobalNamespace::TestAnalyticsModel::$$c
    class $$c;
    // Creating value type constructor for type: TestAnalyticsModel
    TestAnalyticsModel() noexcept {}
    // Creating interface conversion operator: operator GlobalNamespace::IAnalyticsModel
    operator GlobalNamespace::IAnalyticsModel() noexcept {
      return *reinterpret_cast<GlobalNamespace::IAnalyticsModel*>(this);
    }
    // public System.Boolean get_supportsOpenDataPrivacyPage()
    // Offset: 0xF413A0
    // Implemented from: IAnalyticsModel
    // Base method: System.Boolean IAnalyticsModel::get_supportsOpenDataPrivacyPage()
    bool get_supportsOpenDataPrivacyPage();
    // public System.Void OpenDataPrivacyPage()
    // Offset: 0xF413A8
    // Implemented from: IAnalyticsModel
    // Base method: System.Void IAnalyticsModel::OpenDataPrivacyPage()
    void OpenDataPrivacyPage();
    // public System.Void LogEvent(System.String eventType, System.Collections.Generic.Dictionary`2<System.String,System.String> eventData)
    // Offset: 0xF413AC
    // Implemented from: IAnalyticsModel
    // Base method: System.Void IAnalyticsModel::LogEvent(System.String eventType, System.Collections.Generic.Dictionary`2<System.String,System.String> eventData)
    void LogEvent(::Il2CppString* eventType, System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* eventData);
    // public System.Void .ctor()
    // Offset: 0xF41518
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TestAnalyticsModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestAnalyticsModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TestAnalyticsModel*, creationType>()));
    }
  }; // TestAnalyticsModel
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::TestAnalyticsModel*, "", "TestAnalyticsModel");
