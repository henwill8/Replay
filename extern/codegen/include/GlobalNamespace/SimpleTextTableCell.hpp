// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: SimpleTextTableCell
  // [] Offset: FFFFFFFF
  class SimpleTextTableCell : public HMUI::TableCell {
    public:
    // private TMPro.TextMeshProUGUI _text
    // Size: 0x8
    // Offset: 0x50
    TMPro::TextMeshProUGUI* text;
    // Field size check
    static_assert(sizeof(TMPro::TextMeshProUGUI*) == 0x8);
    // Creating value type constructor for type: SimpleTextTableCell
    SimpleTextTableCell(TMPro::TextMeshProUGUI* text_ = {}) noexcept : text{text_} {}
    // public System.Void set_text(System.String value)
    // Offset: 0x22478C0
    void set_text(::Il2CppString* value);
    // public System.String get_text()
    // Offset: 0x22478DC
    ::Il2CppString* get_text();
    // public System.Void .ctor()
    // Offset: 0x22478F8
    // Implemented from: HMUI.TableCell
    // Base method: System.Void TableCell::.ctor()
    // Base method: System.Void SelectableCell::.ctor()
    // Base method: System.Void Interactable::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SimpleTextTableCell* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextTableCell::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SimpleTextTableCell*, creationType>()));
    }
  }; // SimpleTextTableCell
  #pragma pack(pop)
  static check_size<sizeof(SimpleTextTableCell), 80 + sizeof(TMPro::TextMeshProUGUI*)> __GlobalNamespace_SimpleTextTableCellSizeCheck;
  static_assert(sizeof(SimpleTextTableCell) == 0x58);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SimpleTextTableCell*, "", "SimpleTextTableCell");
