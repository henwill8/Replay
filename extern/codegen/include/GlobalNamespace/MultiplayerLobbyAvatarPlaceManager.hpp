// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: MultiplayerLobbyAvatarPlace
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ILobbyStateDataModel
  class ILobbyStateDataModel;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: MultiplayerLobbyAvatarPlaceManager
  // [] Offset: FFFFFFFF
  class MultiplayerLobbyAvatarPlaceManager : public UnityEngine::MonoBehaviour {
    public:
    // [InjectAttribute] Offset: 0xD34390
    // private readonly ILobbyStateDataModel _lobbyStateDataModel
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::ILobbyStateDataModel* lobbyStateDataModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::ILobbyStateDataModel*) == 0x8);
    // [InjectAttribute] Offset: 0xD343A0
    // private readonly MultiplayerLobbyAvatarPlace/Pool _avatarPlacesPool
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::MultiplayerLobbyAvatarPlace::Pool* avatarPlacesPool;
    // Field size check
    static_assert(sizeof(GlobalNamespace::MultiplayerLobbyAvatarPlace::Pool*) == 0x8);
    // private readonly System.Collections.Generic.List`1<MultiplayerLobbyAvatarPlace> _allPlaces
    // Size: 0x8
    // Offset: 0x28
    System::Collections::Generic::List_1<GlobalNamespace::MultiplayerLobbyAvatarPlace*>* allPlaces;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<GlobalNamespace::MultiplayerLobbyAvatarPlace*>*) == 0x8);
    // private System.Single _innerCircleRadius
    // Size: 0x4
    // Offset: 0x30
    float innerCircleRadius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _minOuterCircleRadius
    // Size: 0x4
    // Offset: 0x34
    float minOuterCircleRadius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Creating value type constructor for type: MultiplayerLobbyAvatarPlaceManager
    MultiplayerLobbyAvatarPlaceManager(GlobalNamespace::ILobbyStateDataModel* lobbyStateDataModel_ = {}, GlobalNamespace::MultiplayerLobbyAvatarPlace::Pool* avatarPlacesPool_ = {}, System::Collections::Generic::List_1<GlobalNamespace::MultiplayerLobbyAvatarPlace*>* allPlaces_ = {}, float innerCircleRadius_ = {}, float minOuterCircleRadius_ = {}) noexcept : lobbyStateDataModel{lobbyStateDataModel_}, avatarPlacesPool{avatarPlacesPool_}, allPlaces{allPlaces_}, innerCircleRadius{innerCircleRadius_}, minOuterCircleRadius{minOuterCircleRadius_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void Activate(System.Single innerCircleRadius, System.Single minOuterCircleRadius)
    // Offset: 0xFDAB58
    void Activate(float innerCircleRadius, float minOuterCircleRadius);
    // public System.Void Deactivate()
    // Offset: 0xFDAFD4
    void Deactivate();
    // private System.Void OnDestroy()
    // Offset: 0xFDB100
    void OnDestroy();
    // private System.Void SpawnAllPlaces()
    // Offset: 0xFDAB60
    void SpawnAllPlaces();
    // private System.Void DespawnAllPlaces()
    // Offset: 0xFDAFD8
    void DespawnAllPlaces();
    // public System.Void .ctor()
    // Offset: 0xFDB104
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiplayerLobbyAvatarPlaceManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiplayerLobbyAvatarPlaceManager*, creationType>()));
    }
  }; // MultiplayerLobbyAvatarPlaceManager
  #pragma pack(pop)
  static check_size<sizeof(MultiplayerLobbyAvatarPlaceManager), 52 + sizeof(float)> __GlobalNamespace_MultiplayerLobbyAvatarPlaceManagerSizeCheck;
  static_assert(sizeof(MultiplayerLobbyAvatarPlaceManager) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerLobbyAvatarPlaceManager*, "", "MultiplayerLobbyAvatarPlaceManager");
