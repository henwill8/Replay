// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: NetEase.Docker.ReceivedHighscoreData
#include "NetEase/Docker/ReceivedHighscoreData.hpp"
// Including type: NetEase.Docker.InitializeData
#include "NetEase/Docker/InitializeData.hpp"
// Including type: NetEase.Docker.LoginData
#include "NetEase/Docker/LoginData.hpp"
// Including type: NetEase.Docker.LogoutData
#include "NetEase/Docker/LogoutData.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: NetEaseManager
  class NetEaseManager : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::NetEaseManager::$InitAsync$d__11
    struct $InitAsync$d__11;
    // Nested type: GlobalNamespace::NetEaseManager::$LoginAsync$d__13
    struct $LoginAsync$d__13;
    // Nested type: GlobalNamespace::NetEaseManager::$LogoutAsync$d__15
    struct $LogoutAsync$d__15;
    // Nested type: GlobalNamespace::NetEaseManager::$RequestHighscoreDataAsync$d__17
    struct $RequestHighscoreDataAsync$d__17;
    // private System.String _userName
    // Offset: 0x18
    ::Il2CppString* userName;
    // private System.Threading.Tasks.TaskCompletionSource`1<NetEase.Docker.ReceivedHighscoreData> _requestHighscoreDataTaskCompletionSource
    // Offset: 0x20
    System::Threading::Tasks::TaskCompletionSource_1<NetEase::Docker::ReceivedHighscoreData>* requestHighscoreDataTaskCompletionSource;
    // private System.Threading.Tasks.TaskCompletionSource`1<NetEase.Docker.InitializeData> _initTaskCompletionSource
    // Offset: 0x28
    System::Threading::Tasks::TaskCompletionSource_1<NetEase::Docker::InitializeData>* initTaskCompletionSource;
    // private System.Threading.Tasks.TaskCompletionSource`1<NetEase.Docker.LoginData> _loginTaskCompletionSource
    // Offset: 0x30
    System::Threading::Tasks::TaskCompletionSource_1<NetEase::Docker::LoginData>* loginTaskCompletionSource;
    // private System.Threading.Tasks.TaskCompletionSource`1<NetEase.Docker.LogoutData> _logoutTaskCompletionSource
    // Offset: 0x38
    System::Threading::Tasks::TaskCompletionSource_1<NetEase::Docker::LogoutData>* logoutTaskCompletionSource;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Boolean get_supportsLeaderboards()
    // Offset: 0xC10E04
    bool get_supportsLeaderboards();
    // public System.String get_userName()
    // Offset: 0xC134DC
    ::Il2CppString* get_userName();
    // protected System.Void Awake()
    // Offset: 0xC134E4
    void Awake();
    // protected System.Void Update()
    // Offset: 0xC13610
    void Update();
    // public System.Threading.Tasks.Task`1<NetEase.Docker.InitializeData> InitAsync()
    // Offset: 0xC131AC
    System::Threading::Tasks::Task_1<NetEase::Docker::InitializeData>* InitAsync();
    // private System.Void HandleDidInitialize(NetEase.Docker.InitializeData initializeData)
    // Offset: 0xC13614
    void HandleDidInitialize(NetEase::Docker::InitializeData initializeData);
    // public System.Threading.Tasks.Task`1<NetEase.Docker.LoginData> LoginAsync()
    // Offset: 0xC132C4
    System::Threading::Tasks::Task_1<NetEase::Docker::LoginData>* LoginAsync();
    // private System.Void HandleDidLogin(NetEase.Docker.LoginData loginData)
    // Offset: 0xC13688
    void HandleDidLogin(NetEase::Docker::LoginData loginData);
    // public System.Threading.Tasks.Task`1<NetEase.Docker.LogoutData> LogoutAsync()
    // Offset: 0xC11E98
    System::Threading::Tasks::Task_1<NetEase::Docker::LogoutData>* LogoutAsync();
    // private System.Void HandleDidLogout(NetEase.Docker.LogoutData logoutData)
    // Offset: 0xC13728
    void HandleDidLogout(NetEase::Docker::LogoutData logoutData);
    // public System.Threading.Tasks.Task`1<NetEase.Docker.ReceivedHighscoreData> RequestHighscoreDataAsync(System.String leaderboardId)
    // Offset: 0xC12A54
    System::Threading::Tasks::Task_1<NetEase::Docker::ReceivedHighscoreData>* RequestHighscoreDataAsync(::Il2CppString* leaderboardId);
    // private System.Void HandleDidReceiveHighscore(NetEase.Docker.ReceivedHighscoreData highscoreData)
    // Offset: 0xC1379C
    void HandleDidReceiveHighscore(NetEase::Docker::ReceivedHighscoreData highscoreData);
    // public System.Void UploadHighscore(System.String leaderboardId, System.Int32 score)
    // Offset: 0xC118E0
    void UploadHighscore(::Il2CppString* leaderboardId, int score);
    // static public System.Void Log(System.String message)
    // Offset: 0xC13828
    static void Log(::Il2CppString* message);
    // public System.Void .ctor()
    // Offset: 0xC13890
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static NetEaseManager* New_ctor();
  }; // NetEaseManager
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::NetEaseManager*, "", "NetEaseManager");
#pragma pack(pop)
