// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerPlayerLayout
#include "GlobalNamespace/MultiplayerPlayerLayout.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MultiplayerLayoutProvider
  // [] Offset: FFFFFFFF
  class MultiplayerLayoutProvider : public ::Il2CppObject {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xD3C370
    // private MultiplayerPlayerLayout <layout>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    GlobalNamespace::MultiplayerPlayerLayout layout;
    // Field size check
    static_assert(sizeof(GlobalNamespace::MultiplayerPlayerLayout) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xD3C380
    // private System.Int32 <activePlayerSpotsCount>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    int activePlayerSpotsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xD3C390
    // private System.Action`2<MultiplayerPlayerLayout,System.Int32> playersLayoutWasCalculatedEvent
    // Size: 0x8
    // Offset: 0x18
    System::Action_2<GlobalNamespace::MultiplayerPlayerLayout, int>* playersLayoutWasCalculatedEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<GlobalNamespace::MultiplayerPlayerLayout, int>*) == 0x8);
    // Creating value type constructor for type: MultiplayerLayoutProvider
    MultiplayerLayoutProvider(GlobalNamespace::MultiplayerPlayerLayout layout_ = {}, int activePlayerSpotsCount_ = {}, System::Action_2<GlobalNamespace::MultiplayerPlayerLayout, int>* playersLayoutWasCalculatedEvent_ = {}) noexcept : layout{layout_}, activePlayerSpotsCount{activePlayerSpotsCount_}, playersLayoutWasCalculatedEvent{playersLayoutWasCalculatedEvent_} {}
    // public MultiplayerPlayerLayout get_layout()
    // Offset: 0x10256F0
    GlobalNamespace::MultiplayerPlayerLayout get_layout();
    // private System.Void set_layout(MultiplayerPlayerLayout value)
    // Offset: 0x10256F8
    void set_layout(GlobalNamespace::MultiplayerPlayerLayout value);
    // public System.Int32 get_activePlayerSpotsCount()
    // Offset: 0x1025700
    int get_activePlayerSpotsCount();
    // private System.Void set_activePlayerSpotsCount(System.Int32 value)
    // Offset: 0x1025708
    void set_activePlayerSpotsCount(int value);
    // public System.Void add_playersLayoutWasCalculatedEvent(System.Action`2<MultiplayerPlayerLayout,System.Int32> value)
    // Offset: 0x1017260
    void add_playersLayoutWasCalculatedEvent(System::Action_2<GlobalNamespace::MultiplayerPlayerLayout, int>* value);
    // public System.Void remove_playersLayoutWasCalculatedEvent(System.Action`2<MultiplayerPlayerLayout,System.Int32> value)
    // Offset: 0x10173A0
    void remove_playersLayoutWasCalculatedEvent(System::Action_2<GlobalNamespace::MultiplayerPlayerLayout, int>* value);
    // public MultiplayerPlayerLayout CalculateLayout(System.Int32 activePlayersCount)
    // Offset: 0x1025710
    GlobalNamespace::MultiplayerPlayerLayout CalculateLayout(int activePlayersCount);
    // public System.Void .ctor()
    // Offset: 0x10257AC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiplayerLayoutProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLayoutProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiplayerLayoutProvider*, creationType>()));
    }
  }; // MultiplayerLayoutProvider
  #pragma pack(pop)
  static check_size<sizeof(MultiplayerLayoutProvider), 24 + sizeof(System::Action_2<GlobalNamespace::MultiplayerPlayerLayout, int>*)> __GlobalNamespace_MultiplayerLayoutProviderSizeCheck;
  static_assert(sizeof(MultiplayerLayoutProvider) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerLayoutProvider*, "", "MultiplayerLayoutProvider");
