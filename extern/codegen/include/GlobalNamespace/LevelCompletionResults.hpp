// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.INetImmutableSerializable`1
#include "LiteNetLib/Utils/INetImmutableSerializable_1.hpp"
// Including type: System.IComparable
#include "System/IComparable.hpp"
// Including type: RankModel/Rank
#include "GlobalNamespace/RankModel_Rank.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: LevelEndStateType because it is already included!
  // Skipping declaration: LevelEndAction because it is already included!
  // Forward declaring type: GameplayModifiers
  class GameplayModifiers;
}
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataReader
  class NetDataReader;
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: LevelCompletionResults
  class LevelCompletionResults : public ::Il2CppObject/*, public LiteNetLib::Utils::INetImmutableSerializable_1<GlobalNamespace::LevelCompletionResults*>, public System::IComparable*/ {
    public:
    // Nested type: GlobalNamespace::LevelCompletionResults::LevelEndStateType
    struct LevelEndStateType;
    // Nested type: GlobalNamespace::LevelCompletionResults::LevelEndAction
    struct LevelEndAction;
    // Autogenerated type: LevelCompletionResults/LevelEndStateType
    struct LevelEndStateType : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: LevelEndStateType
      constexpr LevelEndStateType(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public LevelCompletionResults/LevelEndStateType None
      static constexpr const int None = 0;
      // Get static field: static public LevelCompletionResults/LevelEndStateType None
      static GlobalNamespace::LevelCompletionResults::LevelEndStateType _get_None();
      // Set static field: static public LevelCompletionResults/LevelEndStateType None
      static void _set_None(GlobalNamespace::LevelCompletionResults::LevelEndStateType value);
      // static field const value: static public LevelCompletionResults/LevelEndStateType Cleared
      static constexpr const int Cleared = 1;
      // Get static field: static public LevelCompletionResults/LevelEndStateType Cleared
      static GlobalNamespace::LevelCompletionResults::LevelEndStateType _get_Cleared();
      // Set static field: static public LevelCompletionResults/LevelEndStateType Cleared
      static void _set_Cleared(GlobalNamespace::LevelCompletionResults::LevelEndStateType value);
      // static field const value: static public LevelCompletionResults/LevelEndStateType Failed
      static constexpr const int Failed = 2;
      // Get static field: static public LevelCompletionResults/LevelEndStateType Failed
      static GlobalNamespace::LevelCompletionResults::LevelEndStateType _get_Failed();
      // Set static field: static public LevelCompletionResults/LevelEndStateType Failed
      static void _set_Failed(GlobalNamespace::LevelCompletionResults::LevelEndStateType value);
    }; // LevelCompletionResults/LevelEndStateType
    // Autogenerated type: LevelCompletionResults/LevelEndAction
    struct LevelEndAction : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: LevelEndAction
      constexpr LevelEndAction(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public LevelCompletionResults/LevelEndAction None
      static constexpr const int None = 0;
      // Get static field: static public LevelCompletionResults/LevelEndAction None
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_None();
      // Set static field: static public LevelCompletionResults/LevelEndAction None
      static void _set_None(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction Quit
      static constexpr const int Quit = 1;
      // Get static field: static public LevelCompletionResults/LevelEndAction Quit
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_Quit();
      // Set static field: static public LevelCompletionResults/LevelEndAction Quit
      static void _set_Quit(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction Restart
      static constexpr const int Restart = 2;
      // Get static field: static public LevelCompletionResults/LevelEndAction Restart
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_Restart();
      // Set static field: static public LevelCompletionResults/LevelEndAction Restart
      static void _set_Restart(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction MultiplayerInactive
      static constexpr const int MultiplayerInactive = 3;
      // Get static field: static public LevelCompletionResults/LevelEndAction MultiplayerInactive
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_MultiplayerInactive();
      // Set static field: static public LevelCompletionResults/LevelEndAction MultiplayerInactive
      static void _set_MultiplayerInactive(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction LostConnection
      static constexpr const int LostConnection = 4;
      // Get static field: static public LevelCompletionResults/LevelEndAction LostConnection
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_LostConnection();
      // Set static field: static public LevelCompletionResults/LevelEndAction LostConnection
      static void _set_LostConnection(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction StartupFailed
      static constexpr const int StartupFailed = 5;
      // Get static field: static public LevelCompletionResults/LevelEndAction StartupFailed
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_StartupFailed();
      // Set static field: static public LevelCompletionResults/LevelEndAction StartupFailed
      static void _set_StartupFailed(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction HostEndedLevel
      static constexpr const int HostEndedLevel = 6;
      // Get static field: static public LevelCompletionResults/LevelEndAction HostEndedLevel
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_HostEndedLevel();
      // Set static field: static public LevelCompletionResults/LevelEndAction HostEndedLevel
      static void _set_HostEndedLevel(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction ConnectedAfterLevelEnded
      static constexpr const int ConnectedAfterLevelEnded = 7;
      // Get static field: static public LevelCompletionResults/LevelEndAction ConnectedAfterLevelEnded
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_ConnectedAfterLevelEnded();
      // Set static field: static public LevelCompletionResults/LevelEndAction ConnectedAfterLevelEnded
      static void _set_ConnectedAfterLevelEnded(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
    }; // LevelCompletionResults/LevelEndAction
    // public readonly GameplayModifiers gameplayModifiers
    // Offset: 0x10
    GlobalNamespace::GameplayModifiers* gameplayModifiers;
    // public readonly System.Int32 modifiedScore
    // Offset: 0x18
    int modifiedScore;
    // public readonly System.Int32 rawScore
    // Offset: 0x1C
    int rawScore;
    // public readonly RankModel/Rank rank
    // Offset: 0x20
    GlobalNamespace::RankModel::Rank rank;
    // public readonly System.Boolean fullCombo
    // Offset: 0x24
    bool fullCombo;
    // public readonly System.Single leftSaberMovementDistance
    // Offset: 0x28
    float leftSaberMovementDistance;
    // public readonly System.Single rightSaberMovementDistance
    // Offset: 0x2C
    float rightSaberMovementDistance;
    // public readonly System.Single leftHandMovementDistance
    // Offset: 0x30
    float leftHandMovementDistance;
    // public readonly System.Single rightHandMovementDistance
    // Offset: 0x34
    float rightHandMovementDistance;
    // public readonly System.Single songDuration
    // Offset: 0x38
    float songDuration;
    // public readonly LevelCompletionResults/LevelEndStateType levelEndStateType
    // Offset: 0x3C
    GlobalNamespace::LevelCompletionResults::LevelEndStateType levelEndStateType;
    // public readonly LevelCompletionResults/LevelEndAction levelEndAction
    // Offset: 0x40
    GlobalNamespace::LevelCompletionResults::LevelEndAction levelEndAction;
    // public readonly System.Single energy
    // Offset: 0x44
    float energy;
    // public readonly System.Int32 goodCutsCount
    // Offset: 0x48
    int goodCutsCount;
    // public readonly System.Int32 badCutsCount
    // Offset: 0x4C
    int badCutsCount;
    // public readonly System.Int32 missedCount
    // Offset: 0x50
    int missedCount;
    // public readonly System.Int32 notGoodCount
    // Offset: 0x54
    int notGoodCount;
    // public readonly System.Int32 okCount
    // Offset: 0x58
    int okCount;
    // public readonly System.Int32 averageCutScore
    // Offset: 0x5C
    int averageCutScore;
    // public readonly System.Int32 maxCutScore
    // Offset: 0x60
    int maxCutScore;
    // public readonly System.Int32 maxCombo
    // Offset: 0x64
    int maxCombo;
    // public readonly System.Single minDirDeviation
    // Offset: 0x68
    float minDirDeviation;
    // public readonly System.Single maxDirDeviation
    // Offset: 0x6C
    float maxDirDeviation;
    // public readonly System.Single averageDirDeviation
    // Offset: 0x70
    float averageDirDeviation;
    // public readonly System.Single minTimeDeviation
    // Offset: 0x74
    float minTimeDeviation;
    // public readonly System.Single maxTimeDeviation
    // Offset: 0x78
    float maxTimeDeviation;
    // public readonly System.Single averageTimeDeviation
    // Offset: 0x7C
    float averageTimeDeviation;
    // public readonly System.Single endSongTime
    // Offset: 0x80
    float endSongTime;
    // Creating interface conversion operator: operator LiteNetLib::Utils::INetImmutableSerializable_1<GlobalNamespace::LevelCompletionResults*>
    operator LiteNetLib::Utils::INetImmutableSerializable_1<GlobalNamespace::LevelCompletionResults*>() noexcept {
      return *reinterpret_cast<LiteNetLib::Utils::INetImmutableSerializable_1<GlobalNamespace::LevelCompletionResults*>*>(this);
    }
    // Creating interface conversion operator: operator System::IComparable
    operator System::IComparable() noexcept {
      return *reinterpret_cast<System::IComparable*>(this);
    }
    // public System.Void .ctor(LevelCompletionResults/LevelEndAction levelEndAction)
    // Offset: 0x19A47DC
    static LevelCompletionResults* New_ctor(GlobalNamespace::LevelCompletionResults::LevelEndAction levelEndAction);
    // public System.Void .ctor(GameplayModifiers gameplayModifiers, System.Int32 modifiedScore, System.Int32 rawScore, RankModel/Rank rank, System.Boolean fullCombo, System.Single leftSaberMovementDistance, System.Single rightSaberMovementDistance, System.Single leftHandMovementDistance, System.Single rightHandMovementDistance, System.Single songDuration, LevelCompletionResults/LevelEndStateType levelEndStateType, LevelCompletionResults/LevelEndAction levelEndAction, System.Single energy, System.Int32 goodCutsCount, System.Int32 badCutsCount, System.Int32 missedCount, System.Int32 notGoodCount, System.Int32 okCount, System.Int32 averageCutScore, System.Int32 maxCutScore, System.Int32 maxCombo, System.Single minDirDeviation, System.Single maxDirDeviation, System.Single averageDirDeviation, System.Single minTimeDeviation, System.Single maxTimeDeviation, System.Single averageTimeDeviation, System.Single endSongTime)
    // Offset: 0x19A4874
    static LevelCompletionResults* New_ctor(GlobalNamespace::GameplayModifiers* gameplayModifiers, int modifiedScore, int rawScore, GlobalNamespace::RankModel::Rank rank, bool fullCombo, float leftSaberMovementDistance, float rightSaberMovementDistance, float leftHandMovementDistance, float rightHandMovementDistance, float songDuration, GlobalNamespace::LevelCompletionResults::LevelEndStateType levelEndStateType, GlobalNamespace::LevelCompletionResults::LevelEndAction levelEndAction, float energy, int goodCutsCount, int badCutsCount, int missedCount, int notGoodCount, int okCount, int averageCutScore, int maxCutScore, int maxCombo, float minDirDeviation, float maxDirDeviation, float averageDirDeviation, float minTimeDeviation, float maxTimeDeviation, float averageTimeDeviation, float endSongTime);
    // static public LevelCompletionResults CreateFromSerializedData(LiteNetLib.Utils.NetDataReader reader)
    // Offset: 0x19A4D38
    static GlobalNamespace::LevelCompletionResults* CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader);
    // public System.Void .ctor()
    // Offset: 0x19A47D4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static LevelCompletionResults* New_ctor();
    // public System.Int32 CompareTo(System.Object obj)
    // Offset: 0x19A49F0
    // Implemented from: System.IComparable
    // Base method: System.Int32 IComparable::CompareTo(System.Object obj)
    int CompareTo(::Il2CppObject* obj);
    // Creating proxy method: System_IComparable_CompareTo
    // Maps to method: CompareTo
    int System_IComparable_CompareTo(::Il2CppObject* obj);
    // public System.Void Serialize(LiteNetLib.Utils.NetDataWriter writer)
    // Offset: 0x19A4B0C
    // Implemented from: LiteNetLib.Utils.INetImmutableSerializable`1
    // Base method: System.Void INetImmutableSerializable_1::Serialize(LiteNetLib.Utils.NetDataWriter writer)
    void Serialize(LiteNetLib::Utils::NetDataWriter* writer);
    // private LevelCompletionResults LiteNetLib.Utils.INetImmutableSerializable<LevelCompletionResults>.CreateFromSerializedData(LiteNetLib.Utils.NetDataReader reader)
    // Offset: 0x19A4D30
    // Implemented from: LiteNetLib.Utils.INetImmutableSerializable`1
    // Base method: T INetImmutableSerializable_1::CreateFromSerializedData(LiteNetLib.Utils.NetDataReader reader)
    GlobalNamespace::LevelCompletionResults* LiteNetLib_Utils_INetImmutableSerializable_1_CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader);
  }; // LevelCompletionResults
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LevelCompletionResults*, "", "LevelCompletionResults");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LevelCompletionResults::LevelEndStateType, "", "LevelCompletionResults/LevelEndStateType");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LevelCompletionResults::LevelEndAction, "", "LevelCompletionResults/LevelEndAction");
#pragma pack(pop)
