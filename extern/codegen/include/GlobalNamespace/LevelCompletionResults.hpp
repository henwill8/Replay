// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RankModel/Rank
#include "GlobalNamespace/RankModel_Rank.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: LevelEndAction because it is already included!
  // Skipping declaration: LevelEndStateType because it is already included!
  // Forward declaring type: BeatmapObjectExecutionRating
  class BeatmapObjectExecutionRating;
  // Forward declaring type: GameplayModifiers
  class GameplayModifiers;
  // Forward declaring type: GameplayModifiersModelSO
  class GameplayModifiersModelSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: LevelCompletionResults
  class LevelCompletionResults : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::LevelCompletionResults::LevelEndStateType
    struct LevelEndStateType;
    // Nested type: GlobalNamespace::LevelCompletionResults::LevelEndAction
    struct LevelEndAction;
    // Autogenerated type: LevelCompletionResults/LevelEndStateType
    struct LevelEndStateType : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: LevelEndStateType
      constexpr LevelEndStateType(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public LevelCompletionResults/LevelEndStateType None
      static constexpr const int None = 0;
      // Get static field: static public LevelCompletionResults/LevelEndStateType None
      static GlobalNamespace::LevelCompletionResults::LevelEndStateType _get_None();
      // Set static field: static public LevelCompletionResults/LevelEndStateType None
      static void _set_None(GlobalNamespace::LevelCompletionResults::LevelEndStateType value);
      // static field const value: static public LevelCompletionResults/LevelEndStateType Cleared
      static constexpr const int Cleared = 1;
      // Get static field: static public LevelCompletionResults/LevelEndStateType Cleared
      static GlobalNamespace::LevelCompletionResults::LevelEndStateType _get_Cleared();
      // Set static field: static public LevelCompletionResults/LevelEndStateType Cleared
      static void _set_Cleared(GlobalNamespace::LevelCompletionResults::LevelEndStateType value);
      // static field const value: static public LevelCompletionResults/LevelEndStateType Failed
      static constexpr const int Failed = 2;
      // Get static field: static public LevelCompletionResults/LevelEndStateType Failed
      static GlobalNamespace::LevelCompletionResults::LevelEndStateType _get_Failed();
      // Set static field: static public LevelCompletionResults/LevelEndStateType Failed
      static void _set_Failed(GlobalNamespace::LevelCompletionResults::LevelEndStateType value);
    }; // LevelCompletionResults/LevelEndStateType
    // Autogenerated type: LevelCompletionResults/LevelEndAction
    struct LevelEndAction : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: LevelEndAction
      constexpr LevelEndAction(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public LevelCompletionResults/LevelEndAction None
      static constexpr const int None = 0;
      // Get static field: static public LevelCompletionResults/LevelEndAction None
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_None();
      // Set static field: static public LevelCompletionResults/LevelEndAction None
      static void _set_None(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction Quit
      static constexpr const int Quit = 1;
      // Get static field: static public LevelCompletionResults/LevelEndAction Quit
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_Quit();
      // Set static field: static public LevelCompletionResults/LevelEndAction Quit
      static void _set_Quit(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction Restart
      static constexpr const int Restart = 2;
      // Get static field: static public LevelCompletionResults/LevelEndAction Restart
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_Restart();
      // Set static field: static public LevelCompletionResults/LevelEndAction Restart
      static void _set_Restart(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction LostConnection
      static constexpr const int LostConnection = 3;
      // Get static field: static public LevelCompletionResults/LevelEndAction LostConnection
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_LostConnection();
      // Set static field: static public LevelCompletionResults/LevelEndAction LostConnection
      static void _set_LostConnection(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
      // static field const value: static public LevelCompletionResults/LevelEndAction RoomDestroyed
      static constexpr const int RoomDestroyed = 4;
      // Get static field: static public LevelCompletionResults/LevelEndAction RoomDestroyed
      static GlobalNamespace::LevelCompletionResults::LevelEndAction _get_RoomDestroyed();
      // Set static field: static public LevelCompletionResults/LevelEndAction RoomDestroyed
      static void _set_RoomDestroyed(GlobalNamespace::LevelCompletionResults::LevelEndAction value);
    }; // LevelCompletionResults/LevelEndAction
    // public readonly BeatmapObjectExecutionRating[] beatmapObjectExecutionRatings
    // Offset: 0x10
    ::Array<GlobalNamespace::BeatmapObjectExecutionRating*>* beatmapObjectExecutionRatings;
    // public readonly GameplayModifiers gameplayModifiers
    // Offset: 0x18
    GlobalNamespace::GameplayModifiers* gameplayModifiers;
    // public readonly GameplayModifiersModelSO gameplayModifiersModel
    // Offset: 0x20
    GlobalNamespace::GameplayModifiersModelSO* gameplayModifiersModel;
    // public readonly System.Int32 modifiedScore
    // Offset: 0x28
    int modifiedScore;
    // public readonly System.Int32 rawScore
    // Offset: 0x2C
    int rawScore;
    // public readonly RankModel/Rank rank
    // Offset: 0x30
    GlobalNamespace::RankModel::Rank rank;
    // public readonly System.Boolean fullCombo
    // Offset: 0x34
    bool fullCombo;
    // public readonly System.Single[] saberActivityValues
    // Offset: 0x38
    ::Array<float>* saberActivityValues;
    // public readonly System.Single leftSaberMovementDistance
    // Offset: 0x40
    float leftSaberMovementDistance;
    // public readonly System.Single rightSaberMovementDistance
    // Offset: 0x44
    float rightSaberMovementDistance;
    // public readonly System.Single[] handActivityValues
    // Offset: 0x48
    ::Array<float>* handActivityValues;
    // public readonly System.Single leftHandMovementDistance
    // Offset: 0x50
    float leftHandMovementDistance;
    // public readonly System.Single rightHandMovementDistance
    // Offset: 0x54
    float rightHandMovementDistance;
    // public readonly System.Single songDuration
    // Offset: 0x58
    float songDuration;
    // public readonly LevelCompletionResults/LevelEndStateType levelEndStateType
    // Offset: 0x5C
    GlobalNamespace::LevelCompletionResults::LevelEndStateType levelEndStateType;
    // public readonly LevelCompletionResults/LevelEndAction levelEndAction
    // Offset: 0x60
    GlobalNamespace::LevelCompletionResults::LevelEndAction levelEndAction;
    // public readonly System.Single energy
    // Offset: 0x64
    float energy;
    // public readonly System.Int32 goodCutsCount
    // Offset: 0x68
    int goodCutsCount;
    // public readonly System.Int32 badCutsCount
    // Offset: 0x6C
    int badCutsCount;
    // public readonly System.Int32 missedCount
    // Offset: 0x70
    int missedCount;
    // public readonly System.Int32 notGoodCount
    // Offset: 0x74
    int notGoodCount;
    // public readonly System.Int32 okCount
    // Offset: 0x78
    int okCount;
    // public readonly System.Int32 averageCutScore
    // Offset: 0x7C
    int averageCutScore;
    // public readonly System.Int32 maxCutScore
    // Offset: 0x80
    int maxCutScore;
    // public readonly System.Int32 maxCombo
    // Offset: 0x84
    int maxCombo;
    // public readonly System.Single minDirDeviation
    // Offset: 0x88
    float minDirDeviation;
    // public readonly System.Single maxDirDeviation
    // Offset: 0x8C
    float maxDirDeviation;
    // public readonly System.Single averageDirDeviation
    // Offset: 0x90
    float averageDirDeviation;
    // public readonly System.Single minTimeDeviation
    // Offset: 0x94
    float minTimeDeviation;
    // public readonly System.Single maxTimeDeviation
    // Offset: 0x98
    float maxTimeDeviation;
    // public readonly System.Single averageTimeDeviation
    // Offset: 0x9C
    float averageTimeDeviation;
    // public readonly System.Single endSongTime
    // Offset: 0xA0
    float endSongTime;
    // public System.Void .ctor(System.Int32 levelNotesCount, BeatmapObjectExecutionRating[] beatmapObjectExecutionRatings, GameplayModifiers gameplayModifiers, GameplayModifiersModelSO gameplayModifiersModel, System.Int32 rawScore, System.Int32 modifiedScore, System.Int32 maxCombo, System.Single[] saberActivityValues, System.Single leftSaberMovementDistance, System.Single rightSaberMovementDistance, System.Single[] handActivityValues, System.Single leftHandMovementDistance, System.Single rightHandMovementDistance, System.Single songDuration, LevelCompletionResults/LevelEndStateType levelEndStateType, LevelCompletionResults/LevelEndAction levelEndAction, System.Single energy, System.Single songTime)
    // Offset: 0xB4BB84
    static LevelCompletionResults* New_ctor(int levelNotesCount, ::Array<GlobalNamespace::BeatmapObjectExecutionRating*>* beatmapObjectExecutionRatings, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::GameplayModifiersModelSO* gameplayModifiersModel, int rawScore, int modifiedScore, int maxCombo, ::Array<float>* saberActivityValues, float leftSaberMovementDistance, float rightSaberMovementDistance, ::Array<float>* handActivityValues, float leftHandMovementDistance, float rightHandMovementDistance, float songDuration, GlobalNamespace::LevelCompletionResults::LevelEndStateType levelEndStateType, GlobalNamespace::LevelCompletionResults::LevelEndAction levelEndAction, float energy, float songTime);
  }; // LevelCompletionResults
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LevelCompletionResults*, "", "LevelCompletionResults");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LevelCompletionResults::LevelEndStateType, "", "LevelCompletionResults/LevelEndStateType");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LevelCompletionResults::LevelEndAction, "", "LevelCompletionResults/LevelEndAction");
#pragma pack(pop)
