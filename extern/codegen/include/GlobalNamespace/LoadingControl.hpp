// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: ButtonBinder
  class ButtonBinder;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: LoadingControl
  // [] Offset: FFFFFFFF
  class LoadingControl : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.GameObject _loadingContainer
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::GameObject* loadingContainer;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private TMPro.TextMeshProUGUI _loadingText
    // Size: 0x8
    // Offset: 0x20
    TMPro::TextMeshProUGUI* loadingText;
    // Field size check
    static_assert(sizeof(TMPro::TextMeshProUGUI*) == 0x8);
    // [SpaceAttribute] Offset: 0xD3F220
    // private TMPro.TextMeshProUGUI _refreshText
    // Size: 0x8
    // Offset: 0x28
    TMPro::TextMeshProUGUI* refreshText;
    // Field size check
    static_assert(sizeof(TMPro::TextMeshProUGUI*) == 0x8);
    // private UnityEngine.UI.Button _refreshButton
    // Size: 0x8
    // Offset: 0x30
    UnityEngine::UI::Button* refreshButton;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.GameObject _refreshContainer
    // Size: 0x8
    // Offset: 0x38
    UnityEngine::GameObject* refreshContainer;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // [SpaceAttribute] Offset: 0xD3F278
    // private UnityEngine.GameObject _downloadingContainer
    // Size: 0x8
    // Offset: 0x40
    UnityEngine::GameObject* downloadingContainer;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private TMPro.TextMeshProUGUI _downloadingText
    // Size: 0x8
    // Offset: 0x48
    TMPro::TextMeshProUGUI* downloadingText;
    // Field size check
    static_assert(sizeof(TMPro::TextMeshProUGUI*) == 0x8);
    // private UnityEngine.UI.Image _donwloadingProgressImage
    // Size: 0x8
    // Offset: 0x50
    UnityEngine::UI::Image* donwloadingProgressImage;
    // Field size check
    static_assert(sizeof(UnityEngine::UI::Image*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xD3F2D0
    // private System.Action didPressRefreshButtonEvent
    // Size: 0x8
    // Offset: 0x58
    System::Action* didPressRefreshButtonEvent;
    // Field size check
    static_assert(sizeof(System::Action*) == 0x8);
    // private HMUI.ButtonBinder _buttonBinder
    // Size: 0x8
    // Offset: 0x60
    HMUI::ButtonBinder* buttonBinder;
    // Field size check
    static_assert(sizeof(HMUI::ButtonBinder*) == 0x8);
    // Creating value type constructor for type: LoadingControl
    LoadingControl(UnityEngine::GameObject* loadingContainer_ = {}, TMPro::TextMeshProUGUI* loadingText_ = {}, TMPro::TextMeshProUGUI* refreshText_ = {}, UnityEngine::UI::Button* refreshButton_ = {}, UnityEngine::GameObject* refreshContainer_ = {}, UnityEngine::GameObject* downloadingContainer_ = {}, TMPro::TextMeshProUGUI* downloadingText_ = {}, UnityEngine::UI::Image* donwloadingProgressImage_ = {}, System::Action* didPressRefreshButtonEvent_ = {}, HMUI::ButtonBinder* buttonBinder_ = {}) noexcept : loadingContainer{loadingContainer_}, loadingText{loadingText_}, refreshText{refreshText_}, refreshButton{refreshButton_}, refreshContainer{refreshContainer_}, downloadingContainer{downloadingContainer_}, downloadingText{downloadingText_}, donwloadingProgressImage{donwloadingProgressImage_}, didPressRefreshButtonEvent{didPressRefreshButtonEvent_}, buttonBinder{buttonBinder_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void add_didPressRefreshButtonEvent(System.Action value)
    // Offset: 0x10DFD8C
    void add_didPressRefreshButtonEvent(System::Action* value);
    // public System.Void remove_didPressRefreshButtonEvent(System.Action value)
    // Offset: 0x10DFE5C
    void remove_didPressRefreshButtonEvent(System::Action* value);
    // public System.Boolean get_isLoading()
    // Offset: 0x10E5954
    bool get_isLoading();
    // protected System.Void Awake()
    // Offset: 0x10E5970
    void Awake();
    // protected System.Void OnDestroy()
    // Offset: 0x10E5A34
    void OnDestroy();
    // public System.Void ShowLoading(System.String text)
    // Offset: 0x10DFB80
    void ShowLoading(::Il2CppString* text);
    // public System.Void ShowText(System.String text, System.Boolean showRefreshButton)
    // Offset: 0x10DFC08
    void ShowText(::Il2CppString* text, bool showRefreshButton);
    // public System.Void ShowDownloadingProgress(System.String text, System.Single downloadingProgress)
    // Offset: 0x10E5A50
    void ShowDownloadingProgress(::Il2CppString* text, float downloadingProgress);
    // public System.Void Hide()
    // Offset: 0x10DFCBC
    void Hide();
    // private System.Void <Awake>b__14_0()
    // Offset: 0x10E5B00
    void $Awake$b__14_0();
    // public System.Void .ctor()
    // Offset: 0x10E5AF8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoadingControl* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoadingControl*, creationType>()));
    }
  }; // LoadingControl
  #pragma pack(pop)
  static check_size<sizeof(LoadingControl), 96 + sizeof(HMUI::ButtonBinder*)> __GlobalNamespace_LoadingControlSizeCheck;
  static_assert(sizeof(LoadingControl) == 0x68);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LoadingControl*, "", "LoadingControl");
