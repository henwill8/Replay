// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: FileSystemWatcher
  class FileSystemWatcher;
  // Forward declaring type: FileSystemEventArgs
  class FileSystemEventArgs;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Rect
  struct Rect;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SteamVR_Camera
  class SteamVR_Camera;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: SteamVR_ExternalCamera
  class SteamVR_ExternalCamera : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: GlobalNamespace::SteamVR_ExternalCamera::Config
    struct Config;
    // Autogenerated type: SteamVR_ExternalCamera/Config
    struct Config : public System::ValueType {
      public:
      // public System.Single x
      // Offset: 0x0
      float x;
      // public System.Single y
      // Offset: 0x4
      float y;
      // public System.Single z
      // Offset: 0x8
      float z;
      // public System.Single rx
      // Offset: 0xC
      float rx;
      // public System.Single ry
      // Offset: 0x10
      float ry;
      // public System.Single rz
      // Offset: 0x14
      float rz;
      // public System.Single fov
      // Offset: 0x18
      float fov;
      // public System.Single near
      // Offset: 0x1C
      float near;
      // public System.Single far
      // Offset: 0x20
      float far;
      // public System.Single sceneResolutionScale
      // Offset: 0x24
      float sceneResolutionScale;
      // public System.Single frameSkip
      // Offset: 0x28
      float frameSkip;
      // public System.Single nearOffset
      // Offset: 0x2C
      float nearOffset;
      // public System.Single farOffset
      // Offset: 0x30
      float farOffset;
      // public System.Single hmdOffset
      // Offset: 0x34
      float hmdOffset;
      // public System.Single r
      // Offset: 0x38
      float r;
      // public System.Single g
      // Offset: 0x3C
      float g;
      // public System.Single b
      // Offset: 0x40
      float b;
      // public System.Single a
      // Offset: 0x44
      float a;
      // public System.Boolean disableStandardAssets
      // Offset: 0x48
      bool disableStandardAssets;
      // Creating value type constructor for type: Config
      constexpr Config(float x_ = {}, float y_ = {}, float z_ = {}, float rx_ = {}, float ry_ = {}, float rz_ = {}, float fov_ = {}, float near_ = {}, float far_ = {}, float sceneResolutionScale_ = {}, float frameSkip_ = {}, float nearOffset_ = {}, float farOffset_ = {}, float hmdOffset_ = {}, float r_ = {}, float g_ = {}, float b_ = {}, float a_ = {}, bool disableStandardAssets_ = {}) noexcept : x{x_}, y{y_}, z{z_}, rx{rx_}, ry{ry_}, rz{rz_}, fov{fov_}, near{near_}, far{far_}, sceneResolutionScale{sceneResolutionScale_}, frameSkip{frameSkip_}, nearOffset{nearOffset_}, farOffset{farOffset_}, hmdOffset{hmdOffset_}, r{r_}, g{g_}, b{b_}, a{a_}, disableStandardAssets{disableStandardAssets_} {}
    }; // SteamVR_ExternalCamera/Config
    // public SteamVR_ExternalCamera/Config config
    // Offset: 0x18
    GlobalNamespace::SteamVR_ExternalCamera::Config config;
    // public System.String configPath
    // Offset: 0x68
    ::Il2CppString* configPath;
    // private System.IO.FileSystemWatcher watcher
    // Offset: 0x70
    System::IO::FileSystemWatcher* watcher;
    // private UnityEngine.Camera cam
    // Offset: 0x78
    UnityEngine::Camera* cam;
    // private UnityEngine.Transform target
    // Offset: 0x80
    UnityEngine::Transform* target;
    // private UnityEngine.GameObject clipQuad
    // Offset: 0x88
    UnityEngine::GameObject* clipQuad;
    // private UnityEngine.Material clipMaterial
    // Offset: 0x90
    UnityEngine::Material* clipMaterial;
    // private UnityEngine.Material colorMat
    // Offset: 0x98
    UnityEngine::Material* colorMat;
    // private UnityEngine.Material alphaMat
    // Offset: 0xA0
    UnityEngine::Material* alphaMat;
    // private UnityEngine.Camera[] cameras
    // Offset: 0xA8
    ::Array<UnityEngine::Camera*>* cameras;
    // private UnityEngine.Rect[] cameraRects
    // Offset: 0xB0
    ::Array<UnityEngine::Rect>* cameraRects;
    // private System.Single sceneResolutionScale
    // Offset: 0xB8
    float sceneResolutionScale;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void ReadConfig()
    // Offset: 0xD8431C
    void ReadConfig();
    // private System.Void OnChanged(System.Object source, System.IO.FileSystemEventArgs e)
    // Offset: 0xD84C40
    void OnChanged(::Il2CppObject* source, System::IO::FileSystemEventArgs* e);
    // public System.Void AttachToCamera(SteamVR_Camera vrcam)
    // Offset: 0xD84C44
    void AttachToCamera(GlobalNamespace::SteamVR_Camera* vrcam);
    // public System.Single GetTargetDistance()
    // Offset: 0xD8524C
    float GetTargetDistance();
    // public System.Void RenderNear()
    // Offset: 0xD854F8
    void RenderNear();
    // public System.Void RenderFar()
    // Offset: 0xD85C50
    void RenderFar();
    // private System.Void OnGUI()
    // Offset: 0xD85D70
    void OnGUI();
    // private System.Void OnEnable()
    // Offset: 0xD85D74
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0xD85FF0
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0xD8615C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static SteamVR_ExternalCamera* New_ctor();
  }; // SteamVR_ExternalCamera
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SteamVR_ExternalCamera*, "", "SteamVR_ExternalCamera");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SteamVR_ExternalCamera::Config, "", "SteamVR_ExternalCamera/Config");
#pragma pack(pop)
