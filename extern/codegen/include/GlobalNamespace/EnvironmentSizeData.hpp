// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: FloorType because it is already included!
  // Skipping declaration: CeilingType because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: EnvironmentSizeData
  class EnvironmentSizeData : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::EnvironmentSizeData::FloorType
    struct FloorType;
    // Nested type: GlobalNamespace::EnvironmentSizeData::CeilingType
    struct CeilingType;
    // Autogenerated type: EnvironmentSizeData/FloorType
    struct FloorType : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: FloorType
      constexpr FloorType(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public EnvironmentSizeData/FloorType NoFloor
      static constexpr const int NoFloor = 0;
      // Get static field: static public EnvironmentSizeData/FloorType NoFloor
      static GlobalNamespace::EnvironmentSizeData::FloorType _get_NoFloor();
      // Set static field: static public EnvironmentSizeData/FloorType NoFloor
      static void _set_NoFloor(GlobalNamespace::EnvironmentSizeData::FloorType value);
      // static field const value: static public EnvironmentSizeData/FloorType CloseTo0
      static constexpr const int CloseTo0 = 1;
      // Get static field: static public EnvironmentSizeData/FloorType CloseTo0
      static GlobalNamespace::EnvironmentSizeData::FloorType _get_CloseTo0();
      // Set static field: static public EnvironmentSizeData/FloorType CloseTo0
      static void _set_CloseTo0(GlobalNamespace::EnvironmentSizeData::FloorType value);
    }; // EnvironmentSizeData/FloorType
    // Autogenerated type: EnvironmentSizeData/CeilingType
    struct CeilingType : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: CeilingType
      constexpr CeilingType(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public EnvironmentSizeData/CeilingType NoCeiling
      static constexpr const int NoCeiling = 0;
      // Get static field: static public EnvironmentSizeData/CeilingType NoCeiling
      static GlobalNamespace::EnvironmentSizeData::CeilingType _get_NoCeiling();
      // Set static field: static public EnvironmentSizeData/CeilingType NoCeiling
      static void _set_NoCeiling(GlobalNamespace::EnvironmentSizeData::CeilingType value);
      // static field const value: static public EnvironmentSizeData/CeilingType LowCeiling
      static constexpr const int LowCeiling = 1;
      // Get static field: static public EnvironmentSizeData/CeilingType LowCeiling
      static GlobalNamespace::EnvironmentSizeData::CeilingType _get_LowCeiling();
      // Set static field: static public EnvironmentSizeData/CeilingType LowCeiling
      static void _set_LowCeiling(GlobalNamespace::EnvironmentSizeData::CeilingType value);
    }; // EnvironmentSizeData/CeilingType
    // private EnvironmentSizeData/FloorType _floorType
    // Offset: 0x10
    GlobalNamespace::EnvironmentSizeData::FloorType floorType;
    // private EnvironmentSizeData/CeilingType _ceilingType
    // Offset: 0x14
    GlobalNamespace::EnvironmentSizeData::CeilingType ceilingType;
    // public EnvironmentSizeData/FloorType get_floorType()
    // Offset: 0x1A0E658
    GlobalNamespace::EnvironmentSizeData::FloorType get_floorType();
    // public EnvironmentSizeData/CeilingType get_ceilingType()
    // Offset: 0x1A0E660
    GlobalNamespace::EnvironmentSizeData::CeilingType get_ceilingType();
    // public System.Void .ctor()
    // Offset: 0x1A0E668
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static EnvironmentSizeData* New_ctor();
  }; // EnvironmentSizeData
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::EnvironmentSizeData*, "", "EnvironmentSizeData");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::EnvironmentSizeData::FloorType, "", "EnvironmentSizeData/FloorType");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::EnvironmentSizeData::CeilingType, "", "EnvironmentSizeData/CeilingType");
#pragma pack(pop)
