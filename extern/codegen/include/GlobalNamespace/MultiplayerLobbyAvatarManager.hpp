// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: MultiplayerLobbyAvatarController
#include "GlobalNamespace/MultiplayerLobbyAvatarController.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ILobbyStateDataModel
  class ILobbyStateDataModel;
  // Forward declaring type: IConnectedPlayer
  class IConnectedPlayer;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MultiplayerLobbyAvatarManager
  class MultiplayerLobbyAvatarManager : public UnityEngine::MonoBehaviour {
    public:
    // private readonly ILobbyStateDataModel _lobbyStateDataModel
    // Offset: 0x18
    GlobalNamespace::ILobbyStateDataModel* lobbyStateDataModel;
    // private readonly MultiplayerLobbyAvatarController/Factory _avatarControllerPool
    // Offset: 0x20
    GlobalNamespace::MultiplayerLobbyAvatarController::Factory* avatarControllerPool;
    // private System.Single _innerCircleRadius
    // Offset: 0x28
    float innerCircleRadius;
    // private System.Single _minOuterCircleRadius
    // Offset: 0x2C
    float minOuterCircleRadius;
    // private readonly System.Collections.Generic.Dictionary`2<System.String,MultiplayerLobbyAvatarController> _playerIdToAvatarMap
    // Offset: 0x30
    System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLobbyAvatarController*>* playerIdToAvatarMap;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Void Init(System.Single innerCircleRadius, System.Single minOuterCircleRadius)
    // Offset: 0xFB88D0
    void Init(float innerCircleRadius, float minOuterCircleRadius);
    // public System.Void ActivateMultiplayerLobbyAvatarManager()
    // Offset: 0xFB88D8
    void ActivateMultiplayerLobbyAvatarManager();
    // public System.Void DeactivateMultiplayerLobbyAvatarManager()
    // Offset: 0xFB8FBC
    void DeactivateMultiplayerLobbyAvatarManager();
    // private System.Void HandleLobbyStateDataModelPlayerConnected(IConnectedPlayer connectedPlayer)
    // Offset: 0xFB9254
    void HandleLobbyStateDataModelPlayerConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer);
    // private System.Void HandleLobbyStateDataModelPlayerDisconnected(IConnectedPlayer connectedPlayer)
    // Offset: 0xFB9258
    void HandleLobbyStateDataModelPlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer);
    // private System.Void AddPlayer(IConnectedPlayer connectedPlayer)
    // Offset: 0xFB8B78
    void AddPlayer(GlobalNamespace::IConnectedPlayer* connectedPlayer);
    // private System.Void RemovePlayer(IConnectedPlayer connectedPlayer)
    // Offset: 0xFB925C
    void RemovePlayer(GlobalNamespace::IConnectedPlayer* connectedPlayer);
    // public System.Void .ctor()
    // Offset: 0xFB9418
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static MultiplayerLobbyAvatarManager* New_ctor();
  }; // MultiplayerLobbyAvatarManager
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerLobbyAvatarManager*, "", "MultiplayerLobbyAvatarManager");
#pragma pack(pop)
