// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PlayerDataModel
  class PlayerDataModel;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: CampaignProgressModel
  // [] Offset: FFFFFFFF
  class CampaignProgressModel : public UnityEngine::MonoBehaviour {
    public:
    // [InjectAttribute] Offset: 0xD35D38
    // private PlayerDataModel _playerDataModel
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::PlayerDataModel* playerDataModel;
    // Field size check
    static_assert(sizeof(GlobalNamespace::PlayerDataModel*) == 0x8);
    // private System.Collections.Generic.HashSet`1<System.String> _missionIds
    // Size: 0x8
    // Offset: 0x20
    System::Collections::Generic::HashSet_1<::Il2CppString*>* missionIds;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::HashSet_1<::Il2CppString*>*) == 0x8);
    // private System.String _finalMissionId
    // Size: 0x8
    // Offset: 0x28
    ::Il2CppString* finalMissionId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Boolean _numberOfClearedMissionsDirty
    // Size: 0x1
    // Offset: 0x30
    bool numberOfClearedMissionsDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: numberOfClearedMissionsDirty and: numberOfClearedMissions
    char __padding3[0x3] = {};
    // private System.Int32 _numberOfClearedMissions
    // Size: 0x4
    // Offset: 0x34
    int numberOfClearedMissions;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: CampaignProgressModel
    CampaignProgressModel(GlobalNamespace::PlayerDataModel* playerDataModel_ = {}, System::Collections::Generic::HashSet_1<::Il2CppString*>* missionIds_ = {}, ::Il2CppString* finalMissionId_ = {}, bool numberOfClearedMissionsDirty_ = {}, int numberOfClearedMissions_ = {}) noexcept : playerDataModel{playerDataModel_}, missionIds{missionIds_}, finalMissionId{finalMissionId_}, numberOfClearedMissionsDirty{numberOfClearedMissionsDirty_}, numberOfClearedMissions{numberOfClearedMissions_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Int32 get_numberOfClearedMissions()
    // Offset: 0xF64594
    int get_numberOfClearedMissions();
    // protected System.Void Awake()
    // Offset: 0xF646FC
    void Awake();
    // public System.Boolean IsMissionRegistered(System.String missionId)
    // Offset: 0xF6476C
    bool IsMissionRegistered(::Il2CppString* missionId);
    // public System.Void RegisterMissionId(System.String missionId)
    // Offset: 0xF647D4
    void RegisterMissionId(::Il2CppString* missionId);
    // public System.Boolean IsMissionCleared(System.String missionId)
    // Offset: 0xF64848
    bool IsMissionCleared(::Il2CppString* missionId);
    // public System.Boolean IsMissionFinal(System.String missionId)
    // Offset: 0xF6487C
    bool IsMissionFinal(::Il2CppString* missionId);
    // public System.Void SetFinalMissionId(System.String missionId)
    // Offset: 0xF64888
    void SetFinalMissionId(::Il2CppString* missionId);
    // public System.Boolean WillFinishGameAfterThisMission(System.String missionId)
    // Offset: 0xF6430C
    bool WillFinishGameAfterThisMission(::Il2CppString* missionId);
    // public System.Void SetMissionCleared(System.String missionId)
    // Offset: 0xF64358
    void SetMissionCleared(::Il2CppString* missionId);
    // public System.Void __SetMissionCleared(System.String missionId, System.Boolean cleared)
    // Offset: 0xF64890
    void __SetMissionCleared(::Il2CppString* missionId, bool cleared);
    // private System.Int32 UpdateNumberOfClearedMissions()
    // Offset: 0xF645C8
    int UpdateNumberOfClearedMissions();
    // public System.Void .ctor()
    // Offset: 0xF648E0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CampaignProgressModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CampaignProgressModel*, creationType>()));
    }
  }; // CampaignProgressModel
  #pragma pack(pop)
  static check_size<sizeof(CampaignProgressModel), 52 + sizeof(int)> __GlobalNamespace_CampaignProgressModelSizeCheck;
  static_assert(sizeof(CampaignProgressModel) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::CampaignProgressModel*, "", "CampaignProgressModel");
