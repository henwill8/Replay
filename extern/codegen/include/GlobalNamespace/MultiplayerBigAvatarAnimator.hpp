// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: HologramRays
  class HologramRays;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
}
// Forward declaring namespace: Tweening
namespace Tweening {
  // Forward declaring type: TweeningManager
  class TweeningManager;
  // Forward declaring type: Tween`1<T>
  template<typename T>
  class Tween_1;
  // Forward declaring type: EaseType
  struct EaseType;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MultiplayerBigAvatarAnimator
  class MultiplayerBigAvatarAnimator : public UnityEngine::MonoBehaviour {
    public:
    // private System.Single _displayedScale
    // Offset: 0x18
    float displayedScale;
    // private HologramRays _hologramRays
    // Offset: 0x20
    GlobalNamespace::HologramRays* hologramRays;
    // private UnityEngine.Transform _avatarTransform
    // Offset: 0x28
    UnityEngine::Transform* avatarTransform;
    // private readonly Tweening.TweeningManager _tweeningManager
    // Offset: 0x30
    Tweening::TweeningManager* tweeningManager;
    // private Tweening.Tween`1<System.Single> _scaleUpTween
    // Offset: 0x38
    Tweening::Tween_1<float>* scaleUpTween;
    // private Tweening.Tween`1<System.Single> _scaleDownTween
    // Offset: 0x40
    Tweening::Tween_1<float>* scaleDownTween;
    // private System.Boolean _initialized
    // Offset: 0x48
    bool initialized;
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // protected System.Void OnDestroy()
    // Offset: 0xFA6D24
    void OnDestroy();
    // private System.Void InitIfNeeded()
    // Offset: 0xFA6DBC
    void InitIfNeeded();
    // public System.Void SetPositionAndRotation(UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)
    // Offset: 0xFA6F94
    void SetPositionAndRotation(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation);
    // public System.Void HideInstant()
    // Offset: 0xFA7010
    void HideInstant();
    // public System.Void Animate(System.Boolean show, System.Single duration, Tweening.EaseType easeType)
    // Offset: 0xFA70D4
    void Animate(bool show, float duration, Tweening::EaseType easeType);
    // private System.Void <InitIfNeeded>b__8_0(System.Single val)
    // Offset: 0xFA72D0
    void $InitIfNeeded$b__8_0(float val);
    // private System.Void <InitIfNeeded>b__8_1(System.Single val)
    // Offset: 0xFA7364
    void $InitIfNeeded$b__8_1(float val);
    // private System.Void <InitIfNeeded>b__8_2()
    // Offset: 0xFA73F8
    void $InitIfNeeded$b__8_2();
    // public System.Void .ctor()
    // Offset: 0xFA72C0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static MultiplayerBigAvatarAnimator* New_ctor();
  }; // MultiplayerBigAvatarAnimator
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MultiplayerBigAvatarAnimator*, "", "MultiplayerBigAvatarAnimator");
#pragma pack(pop)
