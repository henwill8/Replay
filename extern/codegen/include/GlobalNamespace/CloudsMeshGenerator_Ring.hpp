// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: CloudsMeshGenerator
#include "GlobalNamespace/CloudsMeshGenerator.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
template<class T>
struct Array;
// Completed il2cpp-utils forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: CloudsMeshGenerator/Ring
  struct CloudsMeshGenerator::Ring : public System::ValueType {
    public:
    // public System.Single radius
    // Offset: 0x0
    float radius;
    // public System.Single normalizedRadius
    // Offset: 0x4
    float normalizedRadius;
    // public System.Int32 meshCount
    // Offset: 0x8
    int meshCount;
    // public System.Int32[] cloudIDs
    // Offset: 0x10
    ::Array<int>* cloudIDs;
    // public System.Single sizeMultiplier
    // Offset: 0x18
    float sizeMultiplier;
    // Creating value type constructor for type: Ring
    constexpr Ring(float radius_ = {}, float normalizedRadius_ = {}, int meshCount_ = {}, ::Array<int>* cloudIDs_ = {}, float sizeMultiplier_ = {}) noexcept : radius{radius_}, normalizedRadius{normalizedRadius_}, meshCount{meshCount_}, cloudIDs{cloudIDs_}, sizeMultiplier{sizeMultiplier_} {}
  }; // CloudsMeshGenerator/Ring
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::CloudsMeshGenerator::Ring, "", "CloudsMeshGenerator/Ring");
#pragma pack(pop)
