// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Completed includes
// Type namespace: Microsoft.Win32
namespace Microsoft::Win32 {
  // Autogenerated type: Microsoft.Win32.RegistryKeyComparer
  class RegistryKeyComparer : public ::Il2CppObject, public System::Collections::IEqualityComparer {
    public:
    // public System.Boolean Equals(System.Object x, System.Object y)
    // Offset: 0x10AE190
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object x, System.Object y)
    // Base method: System.Boolean IEqualityComparer::Equals(System.Object x, System.Object y)
    bool Equals(::Il2CppObject* x, ::Il2CppObject* y);
    // Creating proxy method: System_Collections_IEqualityComparer_Equals
    // Maps to method: Equals
    bool System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y);
    // public System.Int32 GetHashCode(System.Object obj)
    // Offset: 0x10AE244
    // Implemented from: System.Collections.IEqualityComparer
    // Base method: System.Int32 IEqualityComparer::GetHashCode(System.Object obj)
    int GetHashCode(::Il2CppObject* obj);
    // Creating proxy method: System_Collections_IEqualityComparer_GetHashCode
    // Maps to method: GetHashCode
    int System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj);
    // public System.Void .ctor()
    // Offset: 0x10A8B9C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static RegistryKeyComparer* New_ctor();
  }; // Microsoft.Win32.RegistryKeyComparer
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Microsoft::Win32::RegistryKeyComparer*, "Microsoft.Win32", "RegistryKeyComparer");
#pragma pack(pop)
