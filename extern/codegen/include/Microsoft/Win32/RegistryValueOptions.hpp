// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Microsoft.Win32
namespace Microsoft::Win32 {
  // Autogenerated type: Microsoft.Win32.RegistryValueOptions
  struct RegistryValueOptions : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: RegistryValueOptions
    constexpr RegistryValueOptions(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Microsoft.Win32.RegistryValueOptions None
    static constexpr const int None = 0;
    // Get static field: static public Microsoft.Win32.RegistryValueOptions None
    static Microsoft::Win32::RegistryValueOptions _get_None();
    // Set static field: static public Microsoft.Win32.RegistryValueOptions None
    static void _set_None(Microsoft::Win32::RegistryValueOptions value);
    // static field const value: static public Microsoft.Win32.RegistryValueOptions DoNotExpandEnvironmentNames
    static constexpr const int DoNotExpandEnvironmentNames = 1;
    // Get static field: static public Microsoft.Win32.RegistryValueOptions DoNotExpandEnvironmentNames
    static Microsoft::Win32::RegistryValueOptions _get_DoNotExpandEnvironmentNames();
    // Set static field: static public Microsoft.Win32.RegistryValueOptions DoNotExpandEnvironmentNames
    static void _set_DoNotExpandEnvironmentNames(Microsoft::Win32::RegistryValueOptions value);
  }; // Microsoft.Win32.RegistryValueOptions
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Microsoft::Win32::RegistryValueOptions, "Microsoft.Win32", "RegistryValueOptions");
#pragma pack(pop)
