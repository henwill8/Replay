// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DisposableManager
#include "Zenject/DisposableManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IDisposable
  class IDisposable;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.DisposableManager/<>c__DisplayClass9_0
  // [] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: D05D6C
  class DisposableManager::$$c__DisplayClass9_0 : public ::Il2CppObject {
    public:
    // public System.IDisposable disposable
    // Size: 0x8
    // Offset: 0x10
    System::IDisposable* disposable;
    // Field size check
    static_assert(sizeof(System::IDisposable*) == 0x8);
    // Creating value type constructor for type: $$c__DisplayClass9_0
    $$c__DisplayClass9_0(System::IDisposable* disposable_ = {}) noexcept : disposable{disposable_} {}
    // Creating conversion operator: operator System::IDisposable*
    constexpr operator System::IDisposable*() const noexcept {
      return disposable;
    }
    // System.Boolean <Remove>b__0(Zenject.DisposableManager/DisposableInfo x)
    // Offset: 0x14E36FC
    bool $Remove$b__0(Zenject::DisposableManager::DisposableInfo x);
    // public System.Void .ctor()
    // Offset: 0x14E2CA8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DisposableManager::$$c__DisplayClass9_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c__DisplayClass9_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DisposableManager::$$c__DisplayClass9_0*, creationType>()));
    }
  }; // Zenject.DisposableManager/<>c__DisplayClass9_0
  #pragma pack(pop)
  static check_size<sizeof(DisposableManager::$$c__DisplayClass9_0), 16 + sizeof(System::IDisposable*)> __Zenject_DisposableManager_$$c__DisplayClass9_0SizeCheck;
  static_assert(sizeof(DisposableManager::$$c__DisplayClass9_0) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::DisposableManager::$$c__DisplayClass9_0*, "Zenject", "DisposableManager/<>c__DisplayClass9_0");
