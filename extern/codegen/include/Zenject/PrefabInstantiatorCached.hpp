// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Object
  class Object;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: GameObjectCreationParameters
  class GameObjectCreationParameters;
  // Forward declaring type: InjectContext
  class InjectContext;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.PrefabInstantiatorCached
  // [] Offset: FFFFFFFF
  // [NoReflectionBakingAttribute] Offset: D048C4
  class PrefabInstantiatorCached : public ::Il2CppObject/*, public Zenject::IPrefabInstantiator*/ {
    public:
    // private readonly Zenject.IPrefabInstantiator _subInstantiator
    // Size: 0x8
    // Offset: 0x10
    Zenject::IPrefabInstantiator* subInstantiator;
    // Field size check
    static_assert(sizeof(Zenject::IPrefabInstantiator*) == 0x8);
    // private UnityEngine.GameObject _gameObject
    // Size: 0x8
    // Offset: 0x18
    UnityEngine::GameObject* gameObject;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // Creating value type constructor for type: PrefabInstantiatorCached
    PrefabInstantiatorCached(Zenject::IPrefabInstantiator* subInstantiator_ = {}, UnityEngine::GameObject* gameObject_ = {}) noexcept : subInstantiator{subInstantiator_}, gameObject{gameObject_} {}
    // Creating interface conversion operator: operator Zenject::IPrefabInstantiator
    operator Zenject::IPrefabInstantiator() noexcept {
      return *reinterpret_cast<Zenject::IPrefabInstantiator*>(this);
    }
    // public System.Void .ctor(Zenject.IPrefabInstantiator subInstantiator)
    // Offset: 0x15B6CD0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PrefabInstantiatorCached* New_ctor(Zenject::IPrefabInstantiator* subInstantiator) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabInstantiatorCached::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PrefabInstantiatorCached*, creationType>(subInstantiator)));
    }
    // public System.Collections.Generic.List`1<Zenject.TypeValuePair> get_ExtraArguments()
    // Offset: 0x15B7B20
    // Implemented from: Zenject.IPrefabInstantiator
    // Base method: System.Collections.Generic.List`1<Zenject.TypeValuePair> IPrefabInstantiator::get_ExtraArguments()
    System::Collections::Generic::List_1<Zenject::TypeValuePair>* get_ExtraArguments();
    // public System.Type get_ArgumentTarget()
    // Offset: 0x15B7BD4
    // Implemented from: Zenject.IPrefabInstantiator
    // Base method: System.Type IPrefabInstantiator::get_ArgumentTarget()
    System::Type* get_ArgumentTarget();
    // public Zenject.GameObjectCreationParameters get_GameObjectCreationParameters()
    // Offset: 0x15B7C84
    // Implemented from: Zenject.IPrefabInstantiator
    // Base method: Zenject.GameObjectCreationParameters IPrefabInstantiator::get_GameObjectCreationParameters()
    Zenject::GameObjectCreationParameters* get_GameObjectCreationParameters();
    // public UnityEngine.Object GetPrefab()
    // Offset: 0x15B7D38
    // Implemented from: Zenject.IPrefabInstantiator
    // Base method: UnityEngine.Object IPrefabInstantiator::GetPrefab()
    UnityEngine::Object* GetPrefab();
    // public UnityEngine.GameObject Instantiate(Zenject.InjectContext context, System.Collections.Generic.List`1<Zenject.TypeValuePair> args, out System.Action injectAction)
    // Offset: 0x15B7DEC
    // Implemented from: Zenject.IPrefabInstantiator
    // Base method: UnityEngine.GameObject IPrefabInstantiator::Instantiate(Zenject.InjectContext context, System.Collections.Generic.List`1<Zenject.TypeValuePair> args, out System.Action injectAction)
    UnityEngine::GameObject* Instantiate(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction);
  }; // Zenject.PrefabInstantiatorCached
  #pragma pack(pop)
  static check_size<sizeof(PrefabInstantiatorCached), 24 + sizeof(UnityEngine::GameObject*)> __Zenject_PrefabInstantiatorCachedSizeCheck;
  static_assert(sizeof(PrefabInstantiatorCached) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::PrefabInstantiatorCached*, "Zenject", "PrefabInstantiatorCached");
