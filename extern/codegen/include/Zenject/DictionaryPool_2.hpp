// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.StaticMemoryPool`1
#include "Zenject/StaticMemoryPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // WARNING Size may be invalid!
  // Autogenerated type: Zenject.DictionaryPool`2
  // [] Offset: FFFFFFFF
  template<typename TKey, typename TValue>
  class DictionaryPool_2 : public Zenject::StaticMemoryPool_1<System::Collections::Generic::Dictionary_2<TKey, TValue>*> {
    public:
    // Creating value type constructor for type: DictionaryPool_2
    DictionaryPool_2() noexcept {}
    // Autogenerated static field getter
    // Get static field: static private readonly Zenject.DictionaryPool`2<TKey,TValue> _instance
    static Zenject::DictionaryPool_2<TKey, TValue>* _get__instance() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DictionaryPool_2::_get__instance");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::DictionaryPool_2<TKey, TValue>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<DictionaryPool_2<TKey, TValue>*>::get(), "_instance")));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly Zenject.DictionaryPool`2<TKey,TValue> _instance
    static void _set__instance(Zenject::DictionaryPool_2<TKey, TValue>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DictionaryPool_2::_set__instance");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<DictionaryPool_2<TKey, TValue>*>::get(), "_instance", value)));
    }
    // static public Zenject.DictionaryPool`2<TKey,TValue> get_Instance()
    // Offset: 0xFFFFFFFF
    static Zenject::DictionaryPool_2<TKey, TValue>* get_Instance() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DictionaryPool_2::get_Instance");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<DictionaryPool_2<TKey, TValue>*>::get(), "get_Instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
      return ::il2cpp_utils::RunMethodThrow<Zenject::DictionaryPool_2<TKey, TValue>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
    }
    // static private System.Void OnSpawned(System.Collections.Generic.Dictionary`2<TKey,TValue> items)
    // Offset: 0xFFFFFFFF
    static void OnSpawned(System::Collections::Generic::Dictionary_2<TKey, TValue>* items) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DictionaryPool_2::OnSpawned");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<DictionaryPool_2<TKey, TValue>*>::get(), "OnSpawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(items))));
      ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, items);
    }
    // static private System.Void OnDespawned(System.Collections.Generic.Dictionary`2<TKey,TValue> items)
    // Offset: 0xFFFFFFFF
    static void OnDespawned(System::Collections::Generic::Dictionary_2<TKey, TValue>* items) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DictionaryPool_2::OnDespawned");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<DictionaryPool_2<TKey, TValue>*>::get(), "OnDespawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(items))));
      ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, items);
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DictionaryPool_2::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<DictionaryPool_2<TKey, TValue>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
      ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DictionaryPool_2<TKey, TValue>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DictionaryPool_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DictionaryPool_2<TKey, TValue>*, creationType>()));
    }
  }; // Zenject.DictionaryPool`2
  // Could not write size check! Type: Zenject.DictionaryPool`2 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Zenject::DictionaryPool_2, "Zenject", "DictionaryPool`2");
