// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IValidatable
#include "Zenject/IValidatable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Skipping declaration: <>c because it is already included!
  // Forward declaring type: DiContainer
  class DiContainer;
  // Forward declaring type: ConditionCopyNonLazyBinder
  class ConditionCopyNonLazyBinder;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
  // Forward declaring type: ICollection`1<T>
  template<typename T>
  class ICollection_1;
}
// Forward declaring namespace: ModestTree::Util
namespace ModestTree::Util {
  // Forward declaring type: ValuePair`2<T1, T2>
  template<typename T1, typename T2>
  class ValuePair_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.KeyedFactoryBase`2
  template<typename TBase, typename TKey>
  class KeyedFactoryBase_2 : public ::Il2CppObject/*, public Zenject::IValidatable*/ {
    public:
    // Nested type: Zenject::KeyedFactoryBase_2::$$c<TBase, TKey>
    class $$c;
    // Autogenerated type: Zenject.KeyedFactoryBase`2/<>c
    class $$c : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = KeyedFactoryBase_2<TBase, TKey>*;
      static constexpr std::string_view NESTED_NAME = "$$c";
      // Autogenerated static field getter
      // Get static field: static public readonly Zenject.KeyedFactoryBase`2/<>c<TBase,TKey> <>9
      static typename Zenject::KeyedFactoryBase_2<TBase, TKey>::$$c* _get_$$9() {
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename Zenject::KeyedFactoryBase_2<TBase, TKey>::$$c*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename KeyedFactoryBase_2<TBase, TKey>::$$c*>::get(), "<>9")));
      }
      // Autogenerated static field setter
      // Set static field: static public readonly Zenject.KeyedFactoryBase`2/<>c<TBase,TKey> <>9
      static void _set_$$9(typename Zenject::KeyedFactoryBase_2<TBase, TKey>::$$c* value) {
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename KeyedFactoryBase_2<TBase, TKey>::$$c*>::get(), "<>9", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<TKey,System.Type>,TKey> <>9__12_0
      static System::Func_2<ModestTree::Util::ValuePair_2<TKey, System::Type*>*, TKey>* _get_$$9__12_0() {
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<TKey, System::Type*>*, TKey>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename KeyedFactoryBase_2<TBase, TKey>::$$c*>::get(), "<>9__12_0")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<TKey,System.Type>,TKey> <>9__12_0
      static void _set_$$9__12_0(System::Func_2<ModestTree::Util::ValuePair_2<TKey, System::Type*>*, TKey>* value) {
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename KeyedFactoryBase_2<TBase, TKey>::$$c*>::get(), "<>9__12_0", value)));
      }
      // Autogenerated static field getter
      // Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<TKey,System.Type>,System.Type> <>9__12_1
      static System::Func_2<ModestTree::Util::ValuePair_2<TKey, System::Type*>*, System::Type*>* _get_$$9__12_1() {
        return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<TKey, System::Type*>*, System::Type*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename KeyedFactoryBase_2<TBase, TKey>::$$c*>::get(), "<>9__12_1")));
      }
      // Autogenerated static field setter
      // Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<TKey,System.Type>,System.Type> <>9__12_1
      static void _set_$$9__12_1(System::Func_2<ModestTree::Util::ValuePair_2<TKey, System::Type*>*, System::Type*>* value) {
        THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename KeyedFactoryBase_2<TBase, TKey>::$$c*>::get(), "<>9__12_1", value)));
      }
      // static private System.Void .cctor()
      // Offset: 0xFFFFFFFF
      static void _cctor() {
        THROW_UNLESS((il2cpp_utils::RunMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename KeyedFactoryBase_2<TBase, TKey>::$$c*>::get(), ".cctor")));
      }
      // TKey <Initialize>b__12_0(ModestTree.Util.ValuePair`2<TKey,System.Type> x)
      // Offset: 0xFFFFFFFF
      TKey $Initialize$b__12_0(ModestTree::Util::ValuePair_2<TKey, System::Type*>* x) {
        return THROW_UNLESS((il2cpp_utils::RunMethod<TKey>(this, "<Initialize>b__12_0", x)));
      }
      // System.Type <Initialize>b__12_1(ModestTree.Util.ValuePair`2<TKey,System.Type> x)
      // Offset: 0xFFFFFFFF
      System::Type* $Initialize$b__12_1(ModestTree::Util::ValuePair_2<TKey, System::Type*>* x) {
        return THROW_UNLESS((il2cpp_utils::RunMethod<System::Type*>(this, "<Initialize>b__12_1", x)));
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      static typename KeyedFactoryBase_2<TBase, TKey>::$$c* New_ctor() {
        return THROW_UNLESS((il2cpp_utils::New<typename KeyedFactoryBase_2<TBase, TKey>::$$c*>()));
      }
    }; // Zenject.KeyedFactoryBase`2/<>c
    // private readonly Zenject.DiContainer _container
    // Offset: 0x0
    Zenject::DiContainer* container;
    // private readonly System.Collections.Generic.List`1<ModestTree.Util.ValuePair`2<TKey,System.Type>> _typePairs
    // Offset: 0x0
    System::Collections::Generic::List_1<ModestTree::Util::ValuePair_2<TKey, System::Type*>*>* typePairs;
    // private System.Collections.Generic.Dictionary`2<TKey,System.Type> _typeMap
    // Offset: 0x0
    System::Collections::Generic::Dictionary_2<TKey, System::Type*>* typeMap;
    // private readonly System.Type _fallbackType
    // Offset: 0x0
    System::Type* fallbackType;
    // Creating interface conversion operator: operator Zenject::IValidatable
    operator Zenject::IValidatable() noexcept {
      return *reinterpret_cast<Zenject::IValidatable*>(this);
    }
    // protected Zenject.DiContainer get_Container()
    // Offset: 0xFFFFFFFF
    Zenject::DiContainer* get_Container() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<Zenject::DiContainer*>(this, "get_Container"));
    }
    // protected System.Collections.Generic.IEnumerable`1<System.Type> get_ProvidedTypes()
    // Offset: 0xFFFFFFFF
    System::Collections::Generic::IEnumerable_1<System::Type*>* get_ProvidedTypes() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerable_1<System::Type*>*>(this, "get_ProvidedTypes"));
    }
    // public System.Collections.Generic.ICollection`1<TKey> get_Keys()
    // Offset: 0xFFFFFFFF
    System::Collections::Generic::ICollection_1<TKey>* get_Keys() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::ICollection_1<TKey>*>(this, "get_Keys"));
    }
    // protected System.Collections.Generic.Dictionary`2<TKey,System.Type> get_TypeMap()
    // Offset: 0xFFFFFFFF
    System::Collections::Generic::Dictionary_2<TKey, System::Type*>* get_TypeMap() {
      return THROW_UNLESS((il2cpp_utils::RunMethod<System::Collections::Generic::Dictionary_2<TKey, System::Type*>*>(this, "get_TypeMap")));
    }
    // public System.Void Initialize()
    // Offset: 0xFFFFFFFF
    void Initialize() {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "Initialize"));
    }
    // public System.Boolean HasKey(TKey key)
    // Offset: 0xFFFFFFFF
    bool HasKey(TKey key) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasKey", key));
    }
    // protected System.Type GetTypeForKey(TKey key)
    // Offset: 0xFFFFFFFF
    System::Type* GetTypeForKey(TKey key) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<System::Type*>(this, "GetTypeForKey", key));
    }
    // static protected Zenject.ConditionCopyNonLazyBinder AddBindingInternal(Zenject.DiContainer container, TKey key)
    // Offset: 0xFFFFFFFF
    template<class TDerived>
    static Zenject::ConditionCopyNonLazyBinder* AddBindingInternal(Zenject::DiContainer* container, TKey key) {
      static_assert(std::is_convertible_v<TDerived, TBase>);
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<Zenject::ConditionCopyNonLazyBinder*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<KeyedFactoryBase_2<TBase, TKey>*>::get(), "AddBindingInternal", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDerived>::get()}, container, key)));
    }
    // public System.Void Validate()
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.IValidatable
    // Base method: System.Void IValidatable::Validate()
    void Validate() {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "Validate"));
    }
    // Creating proxy method: Zenject_IValidatable_Validate
    // Maps to method: Validate
    void Zenject_IValidatable_Validate() {
      Validate();
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static KeyedFactoryBase_2<TBase, TKey>* New_ctor() {
      return THROW_UNLESS((il2cpp_utils::New<KeyedFactoryBase_2<TBase, TKey>*>()));
    }
  }; // Zenject.KeyedFactoryBase`2
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Zenject::KeyedFactoryBase_2, "Zenject", "KeyedFactoryBase`2");
#pragma pack(pop)
