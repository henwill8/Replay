// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DisposableManager
#include "Zenject/DisposableManager.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: ILateDisposable
  class ILateDisposable;
}
// Forward declaring namespace: ModestTree::Util
namespace ModestTree::Util {
  // Forward declaring type: ValuePair`2<T1, T2>
  template<typename T1, typename T2>
  class ValuePair_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.DisposableManager/<>c__DisplayClass4_1
  class DisposableManager::$$c__DisplayClass4_1 : public ::Il2CppObject {
    public:
    // public Zenject.ILateDisposable lateDisposable
    // Offset: 0x10
    Zenject::ILateDisposable* lateDisposable;
    // Creating conversion operator: operator Zenject::ILateDisposable*
    constexpr operator Zenject::ILateDisposable*() const noexcept {
      return lateDisposable;
    }
    // System.Boolean <.ctor>b__2(ModestTree.Util.ValuePair`2<System.Type,System.Int32> x)
    // Offset: 0xF30960
    bool $_ctor$b__2(ModestTree::Util::ValuePair_2<System::Type*, int>* x);
    // public System.Void .ctor()
    // Offset: 0xF2FD14
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static DisposableManager::$$c__DisplayClass4_1* New_ctor();
  }; // Zenject.DisposableManager/<>c__DisplayClass4_1
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Zenject::DisposableManager::$$c__DisplayClass4_1*, "Zenject", "DisposableManager/<>c__DisplayClass4_1");
#pragma pack(pop)
