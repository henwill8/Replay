// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.SubContainerCreatorBindInfo
  class SubContainerCreatorBindInfo : public ::Il2CppObject {
    public:
    // private System.String <DefaultParentName>k__BackingField
    // Offset: 0x10
    ::Il2CppString* DefaultParentName;
    // private System.Boolean <CreateKernel>k__BackingField
    // Offset: 0x18
    bool CreateKernel;
    // private System.Type <KernelType>k__BackingField
    // Offset: 0x20
    System::Type* KernelType;
    // public System.String get_DefaultParentName()
    // Offset: 0x13559C8
    ::Il2CppString* get_DefaultParentName();
    // public System.Void set_DefaultParentName(System.String value)
    // Offset: 0x13559D0
    void set_DefaultParentName(::Il2CppString* value);
    // public System.Boolean get_CreateKernel()
    // Offset: 0x13559D8
    bool get_CreateKernel();
    // public System.Void set_CreateKernel(System.Boolean value)
    // Offset: 0x13559E0
    void set_CreateKernel(bool value);
    // public System.Type get_KernelType()
    // Offset: 0x13559EC
    System::Type* get_KernelType();
    // public System.Void set_KernelType(System.Type value)
    // Offset: 0x13559F4
    void set_KernelType(System::Type* value);
    // public System.Void .ctor()
    // Offset: 0x13536E8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static SubContainerCreatorBindInfo* New_ctor();
  }; // Zenject.SubContainerCreatorBindInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Zenject::SubContainerCreatorBindInfo*, "Zenject", "SubContainerCreatorBindInfo");
#pragma pack(pop)
