// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.ZenjectException
  // [] Offset: FFFFFFFF
  // [DebuggerStepThroughAttribute] Offset: FFFFFFFF
  // [NoReflectionBakingAttribute] Offset: D04BE4
  class ZenjectException : public System::Exception {
    public:
    // Creating value type constructor for type: ZenjectException
    ZenjectException() noexcept {}
    // public System.Void .ctor(System.String message)
    // Offset: 0x22A1958
    // Implemented from: System.Exception
    // Base method: System.Void Exception::.ctor(System.String message)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ZenjectException* New_ctor(::Il2CppString* message) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ZenjectException*, creationType>(message)));
    }
    // public System.Void .ctor(System.String message, System.Exception innerException)
    // Offset: 0x22A19D0
    // Implemented from: System.Exception
    // Base method: System.Void Exception::.ctor(System.String message, System.Exception innerException)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ZenjectException* New_ctor(::Il2CppString* message, System::Exception* innerException) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ZenjectException*, creationType>(message, innerException)));
    }
  }; // Zenject.ZenjectException
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::ZenjectException*, "Zenject", "ZenjectException");
