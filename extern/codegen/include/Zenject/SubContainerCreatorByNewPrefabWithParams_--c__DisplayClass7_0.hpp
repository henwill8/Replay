// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerCreatorByNewPrefabWithParams
#include "Zenject/SubContainerCreatorByNewPrefabWithParams.hpp"
// Including type: Zenject.TypeValuePair
#include "Zenject/TypeValuePair.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: InjectableInfo
  class InjectableInfo;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0
  class SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0 : public ::Il2CppObject {
    public:
    // public Zenject.TypeValuePair argPair
    // Offset: 0x10
    Zenject::TypeValuePair argPair;
    // Creating conversion operator: operator Zenject::TypeValuePair
    constexpr operator Zenject::TypeValuePair() const noexcept {
      return argPair;
    }
    // System.Boolean <CreateTempContainer>b__0(Zenject.InjectableInfo x)
    // Offset: 0xFD32B4
    bool $CreateTempContainer$b__0(Zenject::InjectableInfo* x);
    // System.Int32 <CreateTempContainer>b__1(Zenject.InjectableInfo x)
    // Offset: 0xFD333C
    int $CreateTempContainer$b__1(Zenject::InjectableInfo* x);
    // public System.Void .ctor()
    // Offset: 0xFD3118
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0* New_ctor();
  }; // Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0*, "Zenject", "SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0");
#pragma pack(pop)
