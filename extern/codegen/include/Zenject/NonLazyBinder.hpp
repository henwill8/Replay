// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IfNotBoundBinder
#include "Zenject/IfNotBoundBinder.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: BindInfo
  class BindInfo;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.NonLazyBinder
  class NonLazyBinder : public Zenject::IfNotBoundBinder {
    public:
    // public Zenject.IfNotBoundBinder NonLazy()
    // Offset: 0xFC491C
    Zenject::IfNotBoundBinder* NonLazy();
    // public Zenject.IfNotBoundBinder Lazy()
    // Offset: 0xFC493C
    Zenject::IfNotBoundBinder* Lazy();
    // public System.Void .ctor(Zenject.BindInfo bindInfo)
    // Offset: 0xFC4914
    // Implemented from: Zenject.IfNotBoundBinder
    // Base method: System.Void IfNotBoundBinder::.ctor(Zenject.BindInfo bindInfo)
    static NonLazyBinder* New_ctor(Zenject::BindInfo* bindInfo);
  }; // Zenject.NonLazyBinder
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Zenject::NonLazyBinder*, "Zenject", "NonLazyBinder");
#pragma pack(pop)
