// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PoolableManager
#include "Zenject/PoolableManager.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: IPoolable
  class IPoolable;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.PoolableManager/PoolableInfo
  struct PoolableManager::PoolableInfo : public System::ValueType {
    public:
    // public Zenject.IPoolable Poolable
    // Offset: 0x0
    Zenject::IPoolable* Poolable;
    // public System.Int32 Priority
    // Offset: 0x8
    int Priority;
    // Creating value type constructor for type: PoolableInfo
    constexpr PoolableInfo(Zenject::IPoolable* Poolable_ = {}, int Priority_ = {}) noexcept : Poolable{Poolable_}, Priority{Priority_} {}
    // public System.Void .ctor(Zenject.IPoolable poolable, System.Int32 priority)
    // Offset: 0xA3D1A8
    // ABORTED: conflicts with another method.  PoolableInfo(Zenject::IPoolable* poolable, int priority);
  }; // Zenject.PoolableManager/PoolableInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Zenject::PoolableManager::PoolableInfo, "Zenject", "PoolableManager/PoolableInfo");
#pragma pack(pop)
