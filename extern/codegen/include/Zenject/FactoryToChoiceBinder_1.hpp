// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinder`1
#include "Zenject/FactoryFromBinder_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: FactoryFromBinderUntyped
  class FactoryFromBinderUntyped;
  // Forward declaring type: DiContainer
  class DiContainer;
  // Forward declaring type: BindInfo
  class BindInfo;
  // Forward declaring type: FactoryBindInfo
  class FactoryBindInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.FactoryToChoiceBinder`1
  template<typename TContract>
  class FactoryToChoiceBinder_1 : public Zenject::FactoryFromBinder_1<TContract> {
    public:
    // public Zenject.FactoryFromBinder`1<TContract> ToSelf()
    // Offset: 0xFFFFFFFF
    Zenject::FactoryFromBinder_1<TContract>* ToSelf() {
      return THROW_UNLESS(il2cpp_utils::RunMethod<Zenject::FactoryFromBinder_1<TContract>*>(this, "ToSelf"));
    }
    // public Zenject.FactoryFromBinderUntyped To(System.Type concreteType)
    // Offset: 0xFFFFFFFF
    Zenject::FactoryFromBinderUntyped* To(System::Type* concreteType) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<Zenject::FactoryFromBinderUntyped*>(this, "To", concreteType));
    }
    // public Zenject.FactoryFromBinder`1<TConcrete> To()
    // Offset: 0xFFFFFFFF
    template<class TConcrete>
    Zenject::FactoryFromBinder_1<TConcrete>* To() {
      static_assert(std::is_convertible_v<TConcrete, TContract>);
      return THROW_UNLESS((il2cpp_utils::RunGenericMethod<Zenject::FactoryFromBinder_1<TConcrete>*>(this, "To", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TConcrete>::get()})));
    }
    // public System.Void .ctor(Zenject.DiContainer container, Zenject.BindInfo bindInfo, Zenject.FactoryBindInfo factoryBindInfo)
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.FactoryFromBinder`1
    // Base method: System.Void FactoryFromBinder_1::.ctor(Zenject.DiContainer container, Zenject.BindInfo bindInfo, Zenject.FactoryBindInfo factoryBindInfo)
    static FactoryToChoiceBinder_1<TContract>* New_ctor(Zenject::DiContainer* container, Zenject::BindInfo* bindInfo, Zenject::FactoryBindInfo* factoryBindInfo) {
      return THROW_UNLESS(il2cpp_utils::New<FactoryToChoiceBinder_1<TContract>*>(container, bindInfo, factoryBindInfo));
    }
  }; // Zenject.FactoryToChoiceBinder`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Zenject::FactoryToChoiceBinder_1, "Zenject", "FactoryToChoiceBinder`1");
#pragma pack(pop)
