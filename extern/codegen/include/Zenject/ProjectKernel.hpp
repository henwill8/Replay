// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MonoKernel
#include "Zenject/MonoKernel.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: ZenjectSettings
  class ZenjectSettings;
  // Forward declaring type: SceneContextRegistry
  class SceneContextRegistry;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.ProjectKernel
  class ProjectKernel : public Zenject::MonoKernel {
    public:
    // Nested type: Zenject::ProjectKernel::$$c__DisplayClass4_0
    class $$c__DisplayClass4_0;
    // private Zenject.ZenjectSettings _settings
    // Offset: 0x38
    Zenject::ZenjectSettings* settings;
    // private Zenject.SceneContextRegistry _contextRegistry
    // Offset: 0x40
    Zenject::SceneContextRegistry* contextRegistry;
    // public System.Void OnApplicationQuit()
    // Offset: 0xFC9B38
    void OnApplicationQuit();
    // public System.Void DestroyEverythingInOrder()
    // Offset: 0xFC9B5C
    void DestroyEverythingInOrder();
    // public System.Void ForceUnloadAllScenes(System.Boolean immediate)
    // Offset: 0xFC9C04
    void ForceUnloadAllScenes(bool immediate);
    // public System.Void .ctor()
    // Offset: 0xFC9F34
    // Implemented from: Zenject.MonoKernel
    // Base method: System.Void MonoKernel::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static ProjectKernel* New_ctor();
  }; // Zenject.ProjectKernel
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Zenject::ProjectKernel*, "Zenject", "ProjectKernel");
#pragma pack(pop)
