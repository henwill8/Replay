// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.SignalDefaultSyncModes
  struct SignalDefaultSyncModes : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: SignalDefaultSyncModes
    constexpr SignalDefaultSyncModes(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Zenject.SignalDefaultSyncModes Synchronous
    static constexpr const int Synchronous = 0;
    // Get static field: static public Zenject.SignalDefaultSyncModes Synchronous
    static Zenject::SignalDefaultSyncModes _get_Synchronous();
    // Set static field: static public Zenject.SignalDefaultSyncModes Synchronous
    static void _set_Synchronous(Zenject::SignalDefaultSyncModes value);
    // static field const value: static public Zenject.SignalDefaultSyncModes Asynchronous
    static constexpr const int Asynchronous = 1;
    // Get static field: static public Zenject.SignalDefaultSyncModes Asynchronous
    static Zenject::SignalDefaultSyncModes _get_Asynchronous();
    // Set static field: static public Zenject.SignalDefaultSyncModes Asynchronous
    static void _set_Asynchronous(Zenject::SignalDefaultSyncModes value);
  }; // Zenject.SignalDefaultSyncModes
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Zenject::SignalDefaultSyncModes, "Zenject", "SignalDefaultSyncModes");
#pragma pack(pop)
