// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MemoryPoolBase`1
#include "Zenject/MemoryPoolBase_1.hpp"
// Including type: Zenject.IMemoryPool`3
#include "Zenject/IMemoryPool_3.hpp"
// Including type: Zenject.IFactory`3
#include "Zenject/IFactory_3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.MemoryPool`3
  template<typename TParam1, typename TParam2, typename TValue>
  class MemoryPool_3 : public Zenject::MemoryPoolBase_1<TValue>/*, public Zenject::IMemoryPool_3<TParam1, TParam2, TValue>, public Zenject::IFactory_3<TParam1, TParam2, TValue>*/ {
    public:
    // Creating interface conversion operator: operator Zenject::IMemoryPool_3<TParam1, TParam2, TValue>
    operator Zenject::IMemoryPool_3<TParam1, TParam2, TValue>() noexcept {
      return *reinterpret_cast<Zenject::IMemoryPool_3<TParam1, TParam2, TValue>*>(this);
    }
    // Creating interface conversion operator: operator Zenject::IFactory_3<TParam1, TParam2, TValue>
    operator Zenject::IFactory_3<TParam1, TParam2, TValue>() noexcept {
      return *reinterpret_cast<Zenject::IFactory_3<TParam1, TParam2, TValue>*>(this);
    }
    // protected System.Void Reinitialize(TParam1 p1, TParam2 p2, TValue item)
    // Offset: 0xFFFFFFFF
    void Reinitialize(TParam1 p1, TParam2 p2, TValue item) {
      THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reinitialize", p1, p2, item));
    }
    // public TValue Spawn(TParam1 param1, TParam2 param2)
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.IMemoryPool`3
    // Base method: TValue IMemoryPool_3::Spawn(TParam1 param1, TParam2 param2)
    TValue Spawn(TParam1 param1, TParam2 param2) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<TValue>(this, "Spawn", param1, param2));
    }
    // private TValue Zenject.IFactory<TParam1,TParam2,TValue>.Create(TParam1 p1, TParam2 p2)
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.IFactory`3
    // Base method: TValue IFactory_3::Create(TParam1 p1, TParam2 p2)
    TValue Zenject_IFactory_3_Create(TParam1 p1, TParam2 p2) {
      return THROW_UNLESS((il2cpp_utils::RunMethod<TValue>(this, "Zenject.IFactory<TParam1,TParam2,TValue>.Create", p1, p2)));
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.MemoryPoolBase`1
    // Base method: System.Void MemoryPoolBase_1::.ctor()
    // Base method: System.Void Object::.ctor()
    static MemoryPool_3<TParam1, TParam2, TValue>* New_ctor() {
      return THROW_UNLESS((il2cpp_utils::New<MemoryPool_3<TParam1, TParam2, TValue>*>()));
    }
  }; // Zenject.MemoryPool`3
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Zenject::MemoryPool_3, "Zenject", "MemoryPool`3");
#pragma pack(pop)
