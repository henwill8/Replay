// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: IProvider
  class IProvider;
  // Forward declaring type: BindingCondition
  class BindingCondition;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.DiContainer/ProviderInfo
  class DiContainer::ProviderInfo : public ::Il2CppObject {
    public:
    // public readonly Zenject.DiContainer Container
    // Offset: 0x10
    Zenject::DiContainer* Container;
    // public readonly System.Boolean NonLazy
    // Offset: 0x18
    bool NonLazy;
    // public readonly Zenject.IProvider Provider
    // Offset: 0x20
    Zenject::IProvider* Provider;
    // public readonly Zenject.BindingCondition Condition
    // Offset: 0x28
    Zenject::BindingCondition* Condition;
    // public System.Void .ctor(Zenject.IProvider provider, Zenject.BindingCondition condition, System.Boolean nonLazy, Zenject.DiContainer container)
    // Offset: 0xF2F630
    static DiContainer::ProviderInfo* New_ctor(Zenject::IProvider* provider, Zenject::BindingCondition* condition, bool nonLazy, Zenject::DiContainer* container);
  }; // Zenject.DiContainer/ProviderInfo
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Zenject::DiContainer::ProviderInfo*, "Zenject", "DiContainer/ProviderInfo");
#pragma pack(pop)
