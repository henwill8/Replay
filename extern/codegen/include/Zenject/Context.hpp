// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: ScriptableObjectInstaller
  class ScriptableObjectInstaller;
  // Forward declaring type: MonoInstaller
  class MonoInstaller;
  // Forward declaring type: InstallerBase
  class InstallerBase;
  // Forward declaring type: DiContainer
  class DiContainer;
  // Forward declaring type: ZenjectBinding
  class ZenjectBinding;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.Context
  // [] Offset: FFFFFFFF
  class Context : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: Zenject::Context::$$c
    class $$c;
    // private System.Collections.Generic.List`1<Zenject.ScriptableObjectInstaller> _scriptableObjectInstallers
    // Size: 0x8
    // Offset: 0x18
    System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>* scriptableObjectInstallers;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xD0627C
    // [FormerlySerializedAsAttribute] Offset: 0xD0627C
    // private System.Collections.Generic.List`1<Zenject.MonoInstaller> _monoInstallers
    // Size: 0x8
    // Offset: 0x20
    System::Collections::Generic::List_1<Zenject::MonoInstaller*>* monoInstallers;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<Zenject::MonoInstaller*>*) == 0x8);
    // private System.Collections.Generic.List`1<Zenject.MonoInstaller> _installerPrefabs
    // Size: 0x8
    // Offset: 0x28
    System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installerPrefabs;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<Zenject::MonoInstaller*>*) == 0x8);
    // private System.Collections.Generic.List`1<Zenject.InstallerBase> _normalInstallers
    // Size: 0x8
    // Offset: 0x30
    System::Collections::Generic::List_1<Zenject::InstallerBase*>* normalInstallers;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<Zenject::InstallerBase*>*) == 0x8);
    // private System.Collections.Generic.List`1<System.Type> _normalInstallerTypes
    // Size: 0x8
    // Offset: 0x38
    System::Collections::Generic::List_1<System::Type*>* normalInstallerTypes;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<System::Type*>*) == 0x8);
    // Creating value type constructor for type: Context
    Context(System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>* scriptableObjectInstallers_ = {}, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* monoInstallers_ = {}, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installerPrefabs_ = {}, System::Collections::Generic::List_1<Zenject::InstallerBase*>* normalInstallers_ = {}, System::Collections::Generic::List_1<System::Type*>* normalInstallerTypes_ = {}) noexcept : scriptableObjectInstallers{scriptableObjectInstallers_}, monoInstallers{monoInstallers_}, installerPrefabs{installerPrefabs_}, normalInstallers{normalInstallers_}, normalInstallerTypes{normalInstallerTypes_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // public System.Collections.Generic.IEnumerable`1<Zenject.MonoInstaller> get_Installers()
    // Offset: 0x1264DD8
    System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* get_Installers();
    // public System.Void set_Installers(System.Collections.Generic.IEnumerable`1<Zenject.MonoInstaller> value)
    // Offset: 0x1264DE0
    void set_Installers(System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* value);
    // public System.Collections.Generic.IEnumerable`1<Zenject.MonoInstaller> get_InstallerPrefabs()
    // Offset: 0x1264E60
    System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* get_InstallerPrefabs();
    // public System.Void set_InstallerPrefabs(System.Collections.Generic.IEnumerable`1<Zenject.MonoInstaller> value)
    // Offset: 0x1264E68
    void set_InstallerPrefabs(System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* value);
    // public System.Collections.Generic.IEnumerable`1<Zenject.ScriptableObjectInstaller> get_ScriptableObjectInstallers()
    // Offset: 0x1264EE8
    System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>* get_ScriptableObjectInstallers();
    // public System.Void set_ScriptableObjectInstallers(System.Collections.Generic.IEnumerable`1<Zenject.ScriptableObjectInstaller> value)
    // Offset: 0x1264EF0
    void set_ScriptableObjectInstallers(System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>* value);
    // public System.Collections.Generic.IEnumerable`1<System.Type> get_NormalInstallerTypes()
    // Offset: 0x1264F70
    System::Collections::Generic::IEnumerable_1<System::Type*>* get_NormalInstallerTypes();
    // public System.Void set_NormalInstallerTypes(System.Collections.Generic.IEnumerable`1<System.Type> value)
    // Offset: 0x1264F78
    void set_NormalInstallerTypes(System::Collections::Generic::IEnumerable_1<System::Type*>* value);
    // public System.Collections.Generic.IEnumerable`1<Zenject.InstallerBase> get_NormalInstallers()
    // Offset: 0x12650B8
    System::Collections::Generic::IEnumerable_1<Zenject::InstallerBase*>* get_NormalInstallers();
    // public System.Void set_NormalInstallers(System.Collections.Generic.IEnumerable`1<Zenject.InstallerBase> value)
    // Offset: 0x12650C0
    void set_NormalInstallers(System::Collections::Generic::IEnumerable_1<Zenject::InstallerBase*>* value);
    // public Zenject.DiContainer get_Container()
    // Offset: 0xFFFFFFFF
    Zenject::DiContainer* get_Container();
    // public System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject> GetRootGameObjects()
    // Offset: 0xFFFFFFFF
    System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* GetRootGameObjects();
    // public System.Void AddNormalInstallerType(System.Type installerType)
    // Offset: 0x1265140
    void AddNormalInstallerType(System::Type* installerType);
    // public System.Void AddNormalInstaller(Zenject.InstallerBase installer)
    // Offset: 0x12651EC
    void AddNormalInstaller(Zenject::InstallerBase* installer);
    // private System.Void CheckInstallerPrefabTypes(System.Collections.Generic.List`1<Zenject.MonoInstaller> installers, System.Collections.Generic.List`1<Zenject.MonoInstaller> installerPrefabs)
    // Offset: 0x1265254
    void CheckInstallerPrefabTypes(System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installers, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installerPrefabs);
    // protected System.Void InstallInstallers()
    // Offset: 0x12654B4
    void InstallInstallers();
    // protected System.Void InstallInstallers(System.Collections.Generic.List`1<Zenject.InstallerBase> normalInstallers, System.Collections.Generic.List`1<System.Type> normalInstallerTypes, System.Collections.Generic.List`1<Zenject.ScriptableObjectInstaller> scriptableObjectInstallers, System.Collections.Generic.List`1<Zenject.MonoInstaller> installers, System.Collections.Generic.List`1<Zenject.MonoInstaller> installerPrefabs)
    // Offset: 0x12654C4
    void InstallInstallers(System::Collections::Generic::List_1<Zenject::InstallerBase*>* normalInstallers, System::Collections::Generic::List_1<System::Type*>* normalInstallerTypes, System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>* scriptableObjectInstallers, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installers, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installerPrefabs);
    // protected System.Void InstallSceneBindings(System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> injectableMonoBehaviours)
    // Offset: 0x1265B80
    void InstallSceneBindings(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableMonoBehaviours);
    // private System.Void InstallZenjectBinding(Zenject.ZenjectBinding binding)
    // Offset: 0x1266090
    void InstallZenjectBinding(Zenject::ZenjectBinding* binding);
    // protected System.Void GetInjectableMonoBehaviours(System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> components)
    // Offset: 0xFFFFFFFF
    void GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* components);
    // protected System.Void .ctor()
    // Offset: 0x1266850
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Context* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Context*, creationType>()));
    }
  }; // Zenject.Context
  #pragma pack(pop)
  static check_size<sizeof(Context), 56 + sizeof(System::Collections::Generic::List_1<System::Type*>*)> __Zenject_ContextSizeCheck;
  static_assert(sizeof(Context) == 0x40);
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::Context*, "Zenject", "Context");
