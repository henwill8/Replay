// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactorySubContainerBinderWithParams`1
#include "Zenject/FactorySubContainerBinderWithParams_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Skipping declaration: <>c__DisplayClass1_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass2_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass3_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass4_0 because it is already included!
  // Forward declaring type: ScopeConcreteIdArgConditionCopyNonLazyBinder
  class ScopeConcreteIdArgConditionCopyNonLazyBinder;
  // Forward declaring type: DiContainer
  class DiContainer;
  // Forward declaring type: NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
  class NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder;
  // Forward declaring type: BindInfo
  class BindInfo;
  // Forward declaring type: FactoryBindInfo
  class FactoryBindInfo;
  // Forward declaring type: SubContainerCreatorBindInfo
  class SubContainerCreatorBindInfo;
  // Forward declaring type: IProvider
  class IProvider;
  // Forward declaring type: GameObjectCreationParameters
  class GameObjectCreationParameters;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.FactorySubContainerBinder`3
  template<typename TParam1, typename TParam2, typename TContract>
  class FactorySubContainerBinder_3 : public Zenject::FactorySubContainerBinderWithParams_1<TContract> {
    public:
    // Nested type: Zenject::FactorySubContainerBinder_3::$$c__DisplayClass1_0<TParam1, TParam2, TContract>
    class $$c__DisplayClass1_0;
    // Nested type: Zenject::FactorySubContainerBinder_3::$$c__DisplayClass2_0<TParam1, TParam2, TContract>
    class $$c__DisplayClass2_0;
    // Nested type: Zenject::FactorySubContainerBinder_3::$$c__DisplayClass3_0<TParam1, TParam2, TContract>
    class $$c__DisplayClass3_0;
    // Nested type: Zenject::FactorySubContainerBinder_3::$$c__DisplayClass4_0<TParam1, TParam2, TContract>
    class $$c__DisplayClass4_0;
    // Autogenerated type: Zenject.FactorySubContainerBinder`3/<>c__DisplayClass1_0
    class $$c__DisplayClass1_0 : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = FactorySubContainerBinder_3<TParam1, TParam2, TContract>*;
      static constexpr std::string_view NESTED_NAME = "$$c__DisplayClass1_0";
      // public Zenject.FactorySubContainerBinder`3<TParam1,TParam2,TContract> <>4__this
      // Offset: 0x0
      Zenject::FactorySubContainerBinder_3<TParam1, TParam2, TContract>* $$4__this;
      // public Zenject.SubContainerCreatorBindInfo subcontainerBindInfo
      // Offset: 0x0
      Zenject::SubContainerCreatorBindInfo* subcontainerBindInfo;
      // public System.Action`3<Zenject.DiContainer,TParam1,TParam2> installerMethod
      // Offset: 0x0
      System::Action_3<Zenject::DiContainer*, TParam1, TParam2>* installerMethod;
      // Zenject.IProvider <ByMethod>b__0(Zenject.DiContainer container)
      // Offset: 0xFFFFFFFF
      Zenject::IProvider* $ByMethod$b__0(Zenject::DiContainer* container) {
        return THROW_UNLESS((il2cpp_utils::RunMethod<Zenject::IProvider*>(this, "<ByMethod>b__0", container)));
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      static typename FactorySubContainerBinder_3<TParam1, TParam2, TContract>::$$c__DisplayClass1_0* New_ctor() {
        return THROW_UNLESS((il2cpp_utils::New<typename FactorySubContainerBinder_3<TParam1, TParam2, TContract>::$$c__DisplayClass1_0*>()));
      }
    }; // Zenject.FactorySubContainerBinder`3/<>c__DisplayClass1_0
    // Autogenerated type: Zenject.FactorySubContainerBinder`3/<>c__DisplayClass2_0
    class $$c__DisplayClass2_0 : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = FactorySubContainerBinder_3<TParam1, TParam2, TContract>*;
      static constexpr std::string_view NESTED_NAME = "$$c__DisplayClass2_0";
      // public Zenject.FactorySubContainerBinder`3<TParam1,TParam2,TContract> <>4__this
      // Offset: 0x0
      Zenject::FactorySubContainerBinder_3<TParam1, TParam2, TContract>* $$4__this;
      // public Zenject.GameObjectCreationParameters gameObjectInfo
      // Offset: 0x0
      Zenject::GameObjectCreationParameters* gameObjectInfo;
      // public System.Action`3<Zenject.DiContainer,TParam1,TParam2> installerMethod
      // Offset: 0x0
      System::Action_3<Zenject::DiContainer*, TParam1, TParam2>* installerMethod;
      // Zenject.IProvider <ByNewGameObjectMethod>b__0(Zenject.DiContainer container)
      // Offset: 0xFFFFFFFF
      Zenject::IProvider* $ByNewGameObjectMethod$b__0(Zenject::DiContainer* container) {
        return THROW_UNLESS((il2cpp_utils::RunMethod<Zenject::IProvider*>(this, "<ByNewGameObjectMethod>b__0", container)));
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      static typename FactorySubContainerBinder_3<TParam1, TParam2, TContract>::$$c__DisplayClass2_0* New_ctor() {
        return THROW_UNLESS((il2cpp_utils::New<typename FactorySubContainerBinder_3<TParam1, TParam2, TContract>::$$c__DisplayClass2_0*>()));
      }
    }; // Zenject.FactorySubContainerBinder`3/<>c__DisplayClass2_0
    // Autogenerated type: Zenject.FactorySubContainerBinder`3/<>c__DisplayClass3_0
    class $$c__DisplayClass3_0 : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = FactorySubContainerBinder_3<TParam1, TParam2, TContract>*;
      static constexpr std::string_view NESTED_NAME = "$$c__DisplayClass3_0";
      // public Zenject.FactorySubContainerBinder`3<TParam1,TParam2,TContract> <>4__this
      // Offset: 0x0
      Zenject::FactorySubContainerBinder_3<TParam1, TParam2, TContract>* $$4__this;
      // public UnityEngine.Object prefab
      // Offset: 0x0
      UnityEngine::Object* prefab;
      // public Zenject.GameObjectCreationParameters gameObjectInfo
      // Offset: 0x0
      Zenject::GameObjectCreationParameters* gameObjectInfo;
      // public System.Action`3<Zenject.DiContainer,TParam1,TParam2> installerMethod
      // Offset: 0x0
      System::Action_3<Zenject::DiContainer*, TParam1, TParam2>* installerMethod;
      // Zenject.IProvider <ByNewPrefabMethod>b__0(Zenject.DiContainer container)
      // Offset: 0xFFFFFFFF
      Zenject::IProvider* $ByNewPrefabMethod$b__0(Zenject::DiContainer* container) {
        return THROW_UNLESS((il2cpp_utils::RunMethod<Zenject::IProvider*>(this, "<ByNewPrefabMethod>b__0", container)));
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      static typename FactorySubContainerBinder_3<TParam1, TParam2, TContract>::$$c__DisplayClass3_0* New_ctor() {
        return THROW_UNLESS((il2cpp_utils::New<typename FactorySubContainerBinder_3<TParam1, TParam2, TContract>::$$c__DisplayClass3_0*>()));
      }
    }; // Zenject.FactorySubContainerBinder`3/<>c__DisplayClass3_0
    // Autogenerated type: Zenject.FactorySubContainerBinder`3/<>c__DisplayClass4_0
    class $$c__DisplayClass4_0 : public ::Il2CppObject, public ::il2cpp_utils::il2cpp_type_check::NestedType {
      public:
      using declaring_type = FactorySubContainerBinder_3<TParam1, TParam2, TContract>*;
      static constexpr std::string_view NESTED_NAME = "$$c__DisplayClass4_0";
      // public Zenject.FactorySubContainerBinder`3<TParam1,TParam2,TContract> <>4__this
      // Offset: 0x0
      Zenject::FactorySubContainerBinder_3<TParam1, TParam2, TContract>* $$4__this;
      // public System.String resourcePath
      // Offset: 0x0
      ::Il2CppString* resourcePath;
      // public Zenject.GameObjectCreationParameters gameObjectInfo
      // Offset: 0x0
      Zenject::GameObjectCreationParameters* gameObjectInfo;
      // public System.Action`3<Zenject.DiContainer,TParam1,TParam2> installerMethod
      // Offset: 0x0
      System::Action_3<Zenject::DiContainer*, TParam1, TParam2>* installerMethod;
      // Zenject.IProvider <ByNewPrefabResourceMethod>b__0(Zenject.DiContainer container)
      // Offset: 0xFFFFFFFF
      Zenject::IProvider* $ByNewPrefabResourceMethod$b__0(Zenject::DiContainer* container) {
        return THROW_UNLESS((il2cpp_utils::RunMethod<Zenject::IProvider*>(this, "<ByNewPrefabResourceMethod>b__0", container)));
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      static typename FactorySubContainerBinder_3<TParam1, TParam2, TContract>::$$c__DisplayClass4_0* New_ctor() {
        return THROW_UNLESS((il2cpp_utils::New<typename FactorySubContainerBinder_3<TParam1, TParam2, TContract>::$$c__DisplayClass4_0*>()));
      }
    }; // Zenject.FactorySubContainerBinder`3/<>c__DisplayClass4_0
    // public Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder ByMethod(System.Action`3<Zenject.DiContainer,TParam1,TParam2> installerMethod)
    // Offset: 0xFFFFFFFF
    Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* ByMethod(System::Action_3<Zenject::DiContainer*, TParam1, TParam2>* installerMethod) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*>(this, "ByMethod", installerMethod));
    }
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder ByNewGameObjectMethod(System.Action`3<Zenject.DiContainer,TParam1,TParam2> installerMethod)
    // Offset: 0xFFFFFFFF
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* ByNewGameObjectMethod(System::Action_3<Zenject::DiContainer*, TParam1, TParam2>* installerMethod) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*>(this, "ByNewGameObjectMethod", installerMethod));
    }
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder ByNewPrefabMethod(UnityEngine.Object prefab, System.Action`3<Zenject.DiContainer,TParam1,TParam2> installerMethod)
    // Offset: 0xFFFFFFFF
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* ByNewPrefabMethod(UnityEngine::Object* prefab, System::Action_3<Zenject::DiContainer*, TParam1, TParam2>* installerMethod) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*>(this, "ByNewPrefabMethod", prefab, installerMethod));
    }
    // public Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder ByNewPrefabResourceMethod(System.String resourcePath, System.Action`3<Zenject.DiContainer,TParam1,TParam2> installerMethod)
    // Offset: 0xFFFFFFFF
    Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* ByNewPrefabResourceMethod(::Il2CppString* resourcePath, System::Action_3<Zenject::DiContainer*, TParam1, TParam2>* installerMethod) {
      return THROW_UNLESS(il2cpp_utils::RunMethod<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*>(this, "ByNewPrefabResourceMethod", resourcePath, installerMethod));
    }
    // public System.Void .ctor(Zenject.DiContainer bindContainer, Zenject.BindInfo bindInfo, Zenject.FactoryBindInfo factoryBindInfo, System.Object subIdentifier)
    // Offset: 0xFFFFFFFF
    // Implemented from: Zenject.FactorySubContainerBinderWithParams`1
    // Base method: System.Void FactorySubContainerBinderWithParams_1::.ctor(Zenject.DiContainer bindContainer, Zenject.BindInfo bindInfo, Zenject.FactoryBindInfo factoryBindInfo, System.Object subIdentifier)
    // Base method: System.Void FactorySubContainerBinderBase_1::.ctor(Zenject.DiContainer bindContainer, Zenject.BindInfo bindInfo, Zenject.FactoryBindInfo factoryBindInfo, System.Object subIdentifier)
    static FactorySubContainerBinder_3<TParam1, TParam2, TContract>* New_ctor(Zenject::DiContainer* bindContainer, Zenject::BindInfo* bindInfo, Zenject::FactoryBindInfo* factoryBindInfo, ::Il2CppObject* subIdentifier) {
      return THROW_UNLESS((il2cpp_utils::New<FactorySubContainerBinder_3<TParam1, TParam2, TContract>*>(bindContainer, bindInfo, factoryBindInfo, subIdentifier)));
    }
  }; // Zenject.FactorySubContainerBinder`3
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Zenject::FactorySubContainerBinder_3, "Zenject", "FactorySubContainerBinder`3");
#pragma pack(pop)
