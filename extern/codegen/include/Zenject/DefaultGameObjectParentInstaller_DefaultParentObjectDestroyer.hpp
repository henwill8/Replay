// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DefaultGameObjectParentInstaller
#include "Zenject/DefaultGameObjectParentInstaller.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.DefaultGameObjectParentInstaller/DefaultParentObjectDestroyer
  class DefaultGameObjectParentInstaller::DefaultParentObjectDestroyer : public ::Il2CppObject, public System::IDisposable {
    public:
    // private readonly UnityEngine.GameObject _gameObject
    // Offset: 0x10
    UnityEngine::GameObject* gameObject;
    // Creating conversion operator: operator UnityEngine::GameObject*
    constexpr operator UnityEngine::GameObject*() const noexcept {
      return gameObject;
    }
    // public System.Void .ctor(UnityEngine.GameObject gameObject)
    // Offset: 0xD70F18
    static DefaultGameObjectParentInstaller::DefaultParentObjectDestroyer* New_ctor(UnityEngine::GameObject* gameObject);
    // public System.Void Dispose()
    // Offset: 0xD70F4C
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose();
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose();
  }; // Zenject.DefaultGameObjectParentInstaller/DefaultParentObjectDestroyer
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Zenject::DefaultGameObjectParentInstaller::DefaultParentObjectDestroyer*, "Zenject", "DefaultGameObjectParentInstaller/DefaultParentObjectDestroyer");
#pragma pack(pop)
