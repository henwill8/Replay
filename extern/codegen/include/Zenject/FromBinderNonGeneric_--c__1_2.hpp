// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinderNonGeneric
#include "Zenject/FromBinderNonGeneric.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: IFactory`1<TValue>
  template<typename TValue>
  class IFactory_1;
  // Forward declaring type: ConcreteBinderGeneric`1<TContract>
  template<typename TContract>
  class ConcreteBinderGeneric_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // WARNING Size may be invalid!
  // Autogenerated type: Zenject.FromBinderNonGeneric/<>c__1`2
  // [] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: D0583C
  template<typename TConcrete, typename TFactory>
  class FromBinderNonGeneric::$$c__1_2 : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: $$c__1_2
    $$c__1_2() noexcept {}
    // Autogenerated static field getter
    // Get static field: static public readonly Zenject.FromBinderNonGeneric/<>c__1`2<TConcrete,TFactory> <>9
    static Zenject::FromBinderNonGeneric::$$c__1_2<TConcrete, TFactory>* _get_$$9() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinderNonGeneric::$$c__1_2::_get_$$9");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::FromBinderNonGeneric::$$c__1_2<TConcrete, TFactory>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<FromBinderNonGeneric::$$c__1_2<TConcrete, TFactory>*>::get(), "<>9")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly Zenject.FromBinderNonGeneric/<>c__1`2<TConcrete,TFactory> <>9
    static void _set_$$9(Zenject::FromBinderNonGeneric::$$c__1_2<TConcrete, TFactory>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinderNonGeneric::$$c__1_2::_set_$$9");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<FromBinderNonGeneric::$$c__1_2<TConcrete, TFactory>*>::get(), "<>9", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public System.Action`1<Zenject.ConcreteBinderGeneric`1<Zenject.IFactory`1<TConcrete>>> <>9__1_0
    static System::Action_1<Zenject::ConcreteBinderGeneric_1<Zenject::IFactory_1<TConcrete>*>*>* _get_$$9__1_0() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinderNonGeneric::$$c__1_2::_get_$$9__1_0");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_1<Zenject::ConcreteBinderGeneric_1<Zenject::IFactory_1<TConcrete>*>*>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<FromBinderNonGeneric::$$c__1_2<TConcrete, TFactory>*>::get(), "<>9__1_0")));
    }
    // Autogenerated static field setter
    // Set static field: static public System.Action`1<Zenject.ConcreteBinderGeneric`1<Zenject.IFactory`1<TConcrete>>> <>9__1_0
    static void _set_$$9__1_0(System::Action_1<Zenject::ConcreteBinderGeneric_1<Zenject::IFactory_1<TConcrete>*>*>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinderNonGeneric::$$c__1_2::_set_$$9__1_0");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<FromBinderNonGeneric::$$c__1_2<TConcrete, TFactory>*>::get(), "<>9__1_0", value)));
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinderNonGeneric::$$c__1_2::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<FromBinderNonGeneric::$$c__1_2<TConcrete, TFactory>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
      ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
    }
    // System.Void <FromFactory>b__1_0(Zenject.ConcreteBinderGeneric`1<Zenject.IFactory`1<TConcrete>> x)
    // Offset: 0xFFFFFFFF
    void $FromFactory$b__1_0(Zenject::ConcreteBinderGeneric_1<Zenject::IFactory_1<TConcrete>*>* x) {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinderNonGeneric::$$c__1_2::<FromFactory>b__1_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromFactory>b__1_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
      ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FromBinderNonGeneric::$$c__1_2<TConcrete, TFactory>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FromBinderNonGeneric::$$c__1_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FromBinderNonGeneric::$$c__1_2<TConcrete, TFactory>*, creationType>()));
    }
  }; // Zenject.FromBinderNonGeneric/<>c__1`2
  // Could not write size check! Type: Zenject.FromBinderNonGeneric/<>c__1`2 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Zenject::FromBinderNonGeneric::$$c__1_2, "Zenject", "FromBinderNonGeneric/<>c__1`2");
