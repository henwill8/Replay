// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: NUnit::Framework::Constraints
namespace NUnit::Framework::Constraints {
  // Forward declaring type: IResolveConstraint
  class IResolveConstraint;
}
// Completed forward declares
// Type namespace: NUnit.Framework
namespace NUnit::Framework {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: NUnit.Framework.Assert
  // [] Offset: FFFFFFFF
  class _Assert : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: _Assert
    _Assert() noexcept {}
    // static public System.Void IsTrue(System.Boolean condition, System.String message, params System.Object[] args)
    // Offset: 0x16967F8
    static void IsTrue(bool condition, ::Il2CppString* message, ::Array<::Il2CppObject*>* args);
    // Creating initializer_list -> params proxy for: System.Void IsTrue(System.Boolean condition, System.String message, params System.Object[] args)
    static void IsTrue(bool condition, ::Il2CppString* message, std::initializer_list<::Il2CppObject*> args);
    // Creating TArgs -> initializer_list proxy for: System.Void IsTrue(System.Boolean condition, System.String message, params System.Object[] args)
    template<class ...TParams>
    static void IsTrue(bool condition, ::Il2CppString* message, TParams&&... args) {
      IsTrue(condition, message, {args...});
    }
    // static public System.Void IsTrue(System.Boolean condition)
    // Offset: 0x1696870
    static void IsTrue(bool condition);
    // static public System.Void That(TActual actual, NUnit.Framework.Constraints.IResolveConstraint expression, System.String message, params System.Object[] args)
    // Offset: 0xFFFFFFFF
    template<class TActual>
    static void That(TActual actual, NUnit::Framework::Constraints::IResolveConstraint* expression, ::Il2CppString* message, ::Array<::Il2CppObject*>* args) {
      static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::_Assert::That");
      static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "That", std::vector<Il2CppClass*>{il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TActual>::get()}, ::il2cpp_utils::ExtractTypes(actual, expression, message, args)));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TActual>::get()}));
      ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___generic__method, actual, expression, message, args);
    }
    // Creating initializer_list -> params proxy for: System.Void That(TActual actual, NUnit.Framework.Constraints.IResolveConstraint expression, System.String message, params System.Object[] args)
    template<class TActual>
    static void That(TActual actual, NUnit::Framework::Constraints::IResolveConstraint* expression, ::Il2CppString* message, std::initializer_list<::Il2CppObject*> args) {
      That(actual, expression, message, ::Array<::Il2CppObject*>::New(args));
    }
    // Creating TArgs -> initializer_list proxy for: System.Void That(TActual actual, NUnit.Framework.Constraints.IResolveConstraint expression, System.String message, params System.Object[] args)
    template<class TActual, class ...TParams>
    static void That(TActual actual, NUnit::Framework::Constraints::IResolveConstraint* expression, ::Il2CppString* message, TParams&&... args) {
      That(actual, expression, message, {args...});
    }
    // static public System.Void AreEqual(System.Object expected, System.Object actual)
    // Offset: 0x16968D8
    static void AreEqual(::Il2CppObject* expected, ::Il2CppObject* actual);
    // static private System.Void IncrementAssertCount()
    // Offset: 0x169694C
    static void IncrementAssertCount();
  }; // NUnit.Framework.Assert
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(NUnit::Framework::_Assert*, "NUnit.Framework", "Assert");
