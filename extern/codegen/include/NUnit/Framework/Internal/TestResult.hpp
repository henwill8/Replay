// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: NUnit::Framework::Interfaces
namespace NUnit::Framework::Interfaces {
  // Forward declaring type: ResultState
  class ResultState;
  // Forward declaring type: ITest
  class ITest;
  // Forward declaring type: FailureSite
  struct FailureSite;
  // Forward declaring type: TNode
  class TNode;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: TextWriter
  class TextWriter;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: NUnit.Framework.Internal
namespace NUnit::Framework::Internal {
  // Autogenerated type: NUnit.Framework.Internal.TestResult
  class TestResult : public ::Il2CppObject, public NUnit::Framework::Interfaces::ITestResult {
    public:
    // private System.Text.StringBuilder _output
    // Offset: 0x10
    System::Text::StringBuilder* output;
    // private System.Double _duration
    // Offset: 0x18
    double duration;
    // protected System.Int32 InternalAssertCount
    // Offset: 0x20
    int InternalAssertCount;
    // private NUnit.Framework.Interfaces.ResultState _resultState
    // Offset: 0x28
    NUnit::Framework::Interfaces::ResultState* resultState;
    // private System.String _message
    // Offset: 0x30
    ::Il2CppString* message;
    // private System.String _stackTrace
    // Offset: 0x38
    ::Il2CppString* stackTrace;
    // private NUnit.Framework.Interfaces.ITest <Test>k__BackingField
    // Offset: 0x40
    NUnit::Framework::Interfaces::ITest* Test;
    // private System.DateTime <StartTime>k__BackingField
    // Offset: 0x48
    System::DateTime StartTime;
    // private System.DateTime <EndTime>k__BackingField
    // Offset: 0x50
    System::DateTime EndTime;
    // private System.IO.TextWriter <OutWriter>k__BackingField
    // Offset: 0x58
    System::IO::TextWriter* OutWriter;
    // static field const value: static System.Double MIN_DURATION
    static constexpr const double MIN_DURATION = 1e-06;
    // Get static field: static System.Double MIN_DURATION
    static double _get_MIN_DURATION();
    // Set static field: static System.Double MIN_DURATION
    static void _set_MIN_DURATION(double value);
    // Get static field: static readonly System.String CHILD_ERRORS_MESSAGE
    static ::Il2CppString* _get_CHILD_ERRORS_MESSAGE();
    // Set static field: static readonly System.String CHILD_ERRORS_MESSAGE
    static void _set_CHILD_ERRORS_MESSAGE(::Il2CppString* value);
    // Get static field: static readonly System.String CHILD_IGNORE_MESSAGE
    static ::Il2CppString* _get_CHILD_IGNORE_MESSAGE();
    // Set static field: static readonly System.String CHILD_IGNORE_MESSAGE
    static void _set_CHILD_IGNORE_MESSAGE(::Il2CppString* value);
    // public System.Void .ctor(NUnit.Framework.Interfaces.ITest test)
    // Offset: 0x18F3C9C
    static TestResult* New_ctor(NUnit::Framework::Interfaces::ITest* test);
    // private System.Void set_Test(NUnit.Framework.Interfaces.ITest value)
    // Offset: 0x18F7910
    void set_Test(NUnit::Framework::Interfaces::ITest* value);
    // private System.Void set_ResultState(NUnit.Framework.Interfaces.ResultState value)
    // Offset: 0x18F7900
    void set_ResultState(NUnit::Framework::Interfaces::ResultState* value);
    // public System.Void set_Duration(System.Double value)
    // Offset: 0x18F7A88
    void set_Duration(double value);
    // public System.Void set_StartTime(System.DateTime value)
    // Offset: 0x18F7AB4
    void set_StartTime(System::DateTime value);
    // public System.Void set_EndTime(System.DateTime value)
    // Offset: 0x18F7AC4
    void set_EndTime(System::DateTime value);
    // private System.Void set_Message(System.String value)
    // Offset: 0x18F7AD4
    void set_Message(::Il2CppString* value);
    // private System.Void set_StackTrace(System.String value)
    // Offset: 0x18F7AE4
    void set_StackTrace(::Il2CppString* value);
    // public System.IO.TextWriter get_OutWriter()
    // Offset: 0x18F42B4
    System::IO::TextWriter* get_OutWriter();
    // private System.Void set_OutWriter(System.IO.TextWriter value)
    // Offset: 0x18F7AF4
    void set_OutWriter(System::IO::TextWriter* value);
    // public System.Void SetResult(NUnit.Framework.Interfaces.ResultState resultState)
    // Offset: 0x18F856C
    void SetResult(NUnit::Framework::Interfaces::ResultState* resultState);
    // public System.Void SetResult(NUnit.Framework.Interfaces.ResultState resultState, System.String message)
    // Offset: 0x18F85FC
    void SetResult(NUnit::Framework::Interfaces::ResultState* resultState, ::Il2CppString* message);
    // public System.Void SetResult(NUnit.Framework.Interfaces.ResultState resultState, System.String message, System.String stackTrace)
    // Offset: 0x18F8578
    void SetResult(NUnit::Framework::Interfaces::ResultState* resultState, ::Il2CppString* message, ::Il2CppString* stackTrace);
    // public System.Void RecordException(System.Exception ex)
    // Offset: 0x18F8604
    void RecordException(System::Exception* ex);
    // public System.Void RecordException(System.Exception ex, NUnit.Framework.Interfaces.FailureSite site)
    // Offset: 0x18F8814
    void RecordException(System::Exception* ex, NUnit::Framework::Interfaces::FailureSite site);
    // public System.Void RecordTearDownException(System.Exception ex)
    // Offset: 0x18F8A64
    void RecordTearDownException(System::Exception* ex);
    // private NUnit.Framework.Interfaces.TNode AddReasonElement(NUnit.Framework.Interfaces.TNode targetNode)
    // Offset: 0x18F8468
    NUnit::Framework::Interfaces::TNode* AddReasonElement(NUnit::Framework::Interfaces::TNode* targetNode);
    // private NUnit.Framework.Interfaces.TNode AddFailureElement(NUnit.Framework.Interfaces.TNode targetNode)
    // Offset: 0x18F8384
    NUnit::Framework::Interfaces::TNode* AddFailureElement(NUnit::Framework::Interfaces::TNode* targetNode);
    // private NUnit.Framework.Interfaces.TNode AddOutputElement(NUnit.Framework.Interfaces.TNode targetNode)
    // Offset: 0x18F84EC
    NUnit::Framework::Interfaces::TNode* AddOutputElement(NUnit::Framework::Interfaces::TNode* targetNode);
    // static private System.Void .cctor()
    // Offset: 0x18F8DA4
    static void _cctor();
    // public NUnit.Framework.Interfaces.ITest get_Test()
    // Offset: 0x18F7908
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: NUnit.Framework.Interfaces.ITest ITestResult::get_Test()
    NUnit::Framework::Interfaces::ITest* get_Test();
    // public NUnit.Framework.Interfaces.ResultState get_ResultState()
    // Offset: 0x18F3DF4
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: NUnit.Framework.Interfaces.ResultState ITestResult::get_ResultState()
    NUnit::Framework::Interfaces::ResultState* get_ResultState();
    // public System.String get_Name()
    // Offset: 0x18F7918
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.String ITestResult::get_Name()
    ::Il2CppString* get_Name();
    // public System.String get_FullName()
    // Offset: 0x18F79CC
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.String ITestResult::get_FullName()
    ::Il2CppString* get_FullName();
    // public System.Double get_Duration()
    // Offset: 0x18F7A80
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.Double ITestResult::get_Duration()
    double get_Duration();
    // public System.DateTime get_StartTime()
    // Offset: 0x18F7AAC
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.DateTime ITestResult::get_StartTime()
    System::DateTime get_StartTime();
    // public System.DateTime get_EndTime()
    // Offset: 0x18F7ABC
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.DateTime ITestResult::get_EndTime()
    System::DateTime get_EndTime();
    // public System.String get_Message()
    // Offset: 0x18F7ACC
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.String ITestResult::get_Message()
    ::Il2CppString* get_Message();
    // public System.String get_StackTrace()
    // Offset: 0x18F7ADC
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.String ITestResult::get_StackTrace()
    ::Il2CppString* get_StackTrace();
    // public System.Int32 get_AssertCount()
    // Offset: 0x18F7AEC
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.Int32 ITestResult::get_AssertCount()
    int get_AssertCount();
    // public System.Int32 get_FailCount()
    // Offset: 0xFFFFFFFF
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.Int32 ITestResult::get_FailCount()
    int get_FailCount();
    // public System.Int32 get_PassCount()
    // Offset: 0xFFFFFFFF
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.Int32 ITestResult::get_PassCount()
    int get_PassCount();
    // public System.Int32 get_SkipCount()
    // Offset: 0xFFFFFFFF
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.Int32 ITestResult::get_SkipCount()
    int get_SkipCount();
    // public System.Int32 get_InconclusiveCount()
    // Offset: 0xFFFFFFFF
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.Int32 ITestResult::get_InconclusiveCount()
    int get_InconclusiveCount();
    // public System.Boolean get_HasChildren()
    // Offset: 0xFFFFFFFF
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.Boolean ITestResult::get_HasChildren()
    bool get_HasChildren();
    // public System.Collections.Generic.IEnumerable`1<NUnit.Framework.Interfaces.ITestResult> get_Children()
    // Offset: 0xFFFFFFFF
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.Collections.Generic.IEnumerable`1<NUnit.Framework.Interfaces.ITestResult> ITestResult::get_Children()
    System::Collections::Generic::IEnumerable_1<NUnit::Framework::Interfaces::ITestResult*>* get_Children();
    // public System.String get_Output()
    // Offset: 0x18F7AFC
    // Implemented from: NUnit.Framework.Interfaces.ITestResult
    // Base method: System.String ITestResult::get_Output()
    ::Il2CppString* get_Output();
    // public NUnit.Framework.Interfaces.TNode ToXml(System.Boolean recursive)
    // Offset: 0x18F7B1C
    // Implemented from: NUnit.Framework.Interfaces.IXmlNodeBuilder
    // Base method: NUnit.Framework.Interfaces.TNode IXmlNodeBuilder::ToXml(System.Boolean recursive)
    NUnit::Framework::Interfaces::TNode* ToXml(bool recursive);
    // public NUnit.Framework.Interfaces.TNode AddToXml(NUnit.Framework.Interfaces.TNode parentNode, System.Boolean recursive)
    // Offset: 0x18F7BA8
    // Implemented from: NUnit.Framework.Interfaces.IXmlNodeBuilder
    // Base method: NUnit.Framework.Interfaces.TNode IXmlNodeBuilder::AddToXml(NUnit.Framework.Interfaces.TNode parentNode, System.Boolean recursive)
    NUnit::Framework::Interfaces::TNode* AddToXml(NUnit::Framework::Interfaces::TNode* parentNode, bool recursive);
  }; // NUnit.Framework.Internal.TestResult
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(NUnit::Framework::Internal::TestResult*, "NUnit.Framework.Internal", "TestResult");
#pragma pack(pop)
