// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.ConstraintResult
#include "NUnit/Framework/Constraints/ConstraintResult.hpp"
// Including type: NUnit.Framework.Constraints.NUnitEqualityComparer
#include "NUnit/Framework/Constraints/NUnitEqualityComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: NUnit::Framework::Constraints
namespace NUnit::Framework::Constraints {
  // Forward declaring type: Tolerance
  class Tolerance;
  // Forward declaring type: EqualConstraint
  class EqualConstraint;
  // Forward declaring type: MessageWriter
  class MessageWriter;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ICollection
  class ICollection;
  // Forward declaring type: IEnumerable
  class IEnumerable;
}
// Completed forward declares
// Type namespace: NUnit.Framework.Constraints
namespace NUnit::Framework::Constraints {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: NUnit.Framework.Constraints.EqualConstraintResult
  // [] Offset: FFFFFFFF
  class EqualConstraintResult : public NUnit::Framework::Constraints::ConstraintResult {
    public:
    // Writing base type padding for base size: 0x24 to desired offset: 0x28
    char ___base_padding[0x4] = {};
    // private System.Object expectedValue
    // Size: 0x8
    // Offset: 0x28
    ::Il2CppObject* expectedValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private NUnit.Framework.Constraints.Tolerance tolerance
    // Size: 0x8
    // Offset: 0x30
    NUnit::Framework::Constraints::Tolerance* tolerance;
    // Field size check
    static_assert(sizeof(NUnit::Framework::Constraints::Tolerance*) == 0x8);
    // private System.Boolean caseInsensitive
    // Size: 0x1
    // Offset: 0x38
    bool caseInsensitive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean clipStrings
    // Size: 0x1
    // Offset: 0x39
    bool clipStrings;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: clipStrings and: failurePoints
    char __padding3[0x6] = {};
    // private System.Collections.Generic.IList`1<NUnit.Framework.Constraints.NUnitEqualityComparer/FailurePoint> failurePoints
    // Size: 0x8
    // Offset: 0x40
    System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>* failurePoints;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>*) == 0x8);
    // Creating value type constructor for type: EqualConstraintResult
    EqualConstraintResult(::Il2CppObject* expectedValue_ = {}, NUnit::Framework::Constraints::Tolerance* tolerance_ = {}, bool caseInsensitive_ = {}, bool clipStrings_ = {}, System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>* failurePoints_ = {}) noexcept : expectedValue{expectedValue_}, tolerance{tolerance_}, caseInsensitive{caseInsensitive_}, clipStrings{clipStrings_}, failurePoints{failurePoints_} {}
    // Get static field: static private readonly System.String StringsDiffer_1
    static ::Il2CppString* _get_StringsDiffer_1();
    // Set static field: static private readonly System.String StringsDiffer_1
    static void _set_StringsDiffer_1(::Il2CppString* value);
    // Get static field: static private readonly System.String StringsDiffer_2
    static ::Il2CppString* _get_StringsDiffer_2();
    // Set static field: static private readonly System.String StringsDiffer_2
    static void _set_StringsDiffer_2(::Il2CppString* value);
    // Get static field: static private readonly System.String StreamsDiffer_1
    static ::Il2CppString* _get_StreamsDiffer_1();
    // Set static field: static private readonly System.String StreamsDiffer_1
    static void _set_StreamsDiffer_1(::Il2CppString* value);
    // Get static field: static private readonly System.String StreamsDiffer_2
    static ::Il2CppString* _get_StreamsDiffer_2();
    // Set static field: static private readonly System.String StreamsDiffer_2
    static void _set_StreamsDiffer_2(::Il2CppString* value);
    // Get static field: static private readonly System.String CollectionType_1
    static ::Il2CppString* _get_CollectionType_1();
    // Set static field: static private readonly System.String CollectionType_1
    static void _set_CollectionType_1(::Il2CppString* value);
    // Get static field: static private readonly System.String CollectionType_2
    static ::Il2CppString* _get_CollectionType_2();
    // Set static field: static private readonly System.String CollectionType_2
    static void _set_CollectionType_2(::Il2CppString* value);
    // Get static field: static private readonly System.String ValuesDiffer_1
    static ::Il2CppString* _get_ValuesDiffer_1();
    // Set static field: static private readonly System.String ValuesDiffer_1
    static void _set_ValuesDiffer_1(::Il2CppString* value);
    // Get static field: static private readonly System.String ValuesDiffer_2
    static ::Il2CppString* _get_ValuesDiffer_2();
    // Set static field: static private readonly System.String ValuesDiffer_2
    static void _set_ValuesDiffer_2(::Il2CppString* value);
    // public System.Void .ctor(NUnit.Framework.Constraints.EqualConstraint constraint, System.Object actual, System.Boolean hasSucceeded)
    // Offset: 0x1699944
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EqualConstraintResult* New_ctor(NUnit::Framework::Constraints::EqualConstraint* constraint, ::Il2CppObject* actual, bool hasSucceeded) {
      static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::EqualConstraintResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EqualConstraintResult*, creationType>(constraint, actual, hasSucceeded)));
    }
    // private System.Void DisplayDifferences(NUnit.Framework.Constraints.MessageWriter writer, System.Object expected, System.Object actual, System.Int32 depth)
    // Offset: 0x1699D3C
    void DisplayDifferences(NUnit::Framework::Constraints::MessageWriter* writer, ::Il2CppObject* expected, ::Il2CppObject* actual, int depth);
    // private System.Void DisplayStringDifferences(NUnit.Framework.Constraints.MessageWriter writer, System.String expected, System.String actual)
    // Offset: 0x169A020
    void DisplayStringDifferences(NUnit::Framework::Constraints::MessageWriter* writer, ::Il2CppString* expected, ::Il2CppString* actual);
    // private System.Void DisplayStreamDifferences(NUnit.Framework.Constraints.MessageWriter writer, System.IO.Stream expected, System.IO.Stream actual, System.Int32 depth)
    // Offset: 0x169A758
    void DisplayStreamDifferences(NUnit::Framework::Constraints::MessageWriter* writer, System::IO::Stream* expected, System::IO::Stream* actual, int depth);
    // private System.Void DisplayCollectionDifferences(NUnit.Framework.Constraints.MessageWriter writer, System.Collections.ICollection expected, System.Collections.ICollection actual, System.Int32 depth)
    // Offset: 0x169A34C
    void DisplayCollectionDifferences(NUnit::Framework::Constraints::MessageWriter* writer, System::Collections::ICollection* expected, System::Collections::ICollection* actual, int depth);
    // private System.Void DisplayTypesAndSizes(NUnit.Framework.Constraints.MessageWriter writer, System.Collections.IEnumerable expected, System.Collections.IEnumerable actual, System.Int32 indent)
    // Offset: 0x169AC24
    void DisplayTypesAndSizes(NUnit::Framework::Constraints::MessageWriter* writer, System::Collections::IEnumerable* expected, System::Collections::IEnumerable* actual, int indent);
    // private System.Void DisplayFailurePoint(NUnit.Framework.Constraints.MessageWriter writer, System.Collections.IEnumerable expected, System.Collections.IEnumerable actual, NUnit.Framework.Constraints.NUnitEqualityComparer/FailurePoint failurePoint, System.Int32 indent)
    // Offset: 0x169B0F4
    void DisplayFailurePoint(NUnit::Framework::Constraints::MessageWriter* writer, System::Collections::IEnumerable* expected, System::Collections::IEnumerable* actual, NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint* failurePoint, int indent);
    // private System.Void DisplayEnumerableDifferences(NUnit.Framework.Constraints.MessageWriter writer, System.Collections.IEnumerable expected, System.Collections.IEnumerable actual, System.Int32 depth)
    // Offset: 0x169A5A0
    void DisplayEnumerableDifferences(NUnit::Framework::Constraints::MessageWriter* writer, System::Collections::IEnumerable* expected, System::Collections::IEnumerable* actual, int depth);
    // static private System.Void .cctor()
    // Offset: 0x169B8D4
    static void _cctor();
    // public override System.Void WriteMessageTo(NUnit.Framework.Constraints.MessageWriter writer)
    // Offset: 0x1699D2C
    // Implemented from: NUnit.Framework.Constraints.ConstraintResult
    // Base method: System.Void ConstraintResult::WriteMessageTo(NUnit.Framework.Constraints.MessageWriter writer)
    void WriteMessageTo(NUnit::Framework::Constraints::MessageWriter* writer);
  }; // NUnit.Framework.Constraints.EqualConstraintResult
  #pragma pack(pop)
  static check_size<sizeof(EqualConstraintResult), 64 + sizeof(System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>*)> __NUnit_Framework_Constraints_EqualConstraintResultSizeCheck;
  static_assert(sizeof(EqualConstraintResult) == 0x48);
}
DEFINE_IL2CPP_ARG_TYPE(NUnit::Framework::Constraints::EqualConstraintResult*, "NUnit.Framework.Constraints", "EqualConstraintResult");
