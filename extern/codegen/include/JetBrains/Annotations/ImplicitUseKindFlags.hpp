// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: JetBrains.Annotations
namespace JetBrains::Annotations {
  // Autogenerated type: JetBrains.Annotations.ImplicitUseKindFlags
  struct ImplicitUseKindFlags : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: ImplicitUseKindFlags
    constexpr ImplicitUseKindFlags(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public JetBrains.Annotations.ImplicitUseKindFlags Default
    static constexpr const int Default = 7;
    // Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags Default
    static JetBrains::Annotations::ImplicitUseKindFlags _get_Default();
    // Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags Default
    static void _set_Default(JetBrains::Annotations::ImplicitUseKindFlags value);
    // static field const value: static public JetBrains.Annotations.ImplicitUseKindFlags Access
    static constexpr const int Access = 1;
    // Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags Access
    static JetBrains::Annotations::ImplicitUseKindFlags _get_Access();
    // Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags Access
    static void _set_Access(JetBrains::Annotations::ImplicitUseKindFlags value);
    // static field const value: static public JetBrains.Annotations.ImplicitUseKindFlags Assign
    static constexpr const int Assign = 2;
    // Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags Assign
    static JetBrains::Annotations::ImplicitUseKindFlags _get_Assign();
    // Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags Assign
    static void _set_Assign(JetBrains::Annotations::ImplicitUseKindFlags value);
    // static field const value: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature
    static constexpr const int InstantiatedWithFixedConstructorSignature = 4;
    // Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature
    static JetBrains::Annotations::ImplicitUseKindFlags _get_InstantiatedWithFixedConstructorSignature();
    // Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature
    static void _set_InstantiatedWithFixedConstructorSignature(JetBrains::Annotations::ImplicitUseKindFlags value);
    // static field const value: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature
    static constexpr const int InstantiatedNoFixedConstructorSignature = 8;
    // Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature
    static JetBrains::Annotations::ImplicitUseKindFlags _get_InstantiatedNoFixedConstructorSignature();
    // Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature
    static void _set_InstantiatedNoFixedConstructorSignature(JetBrains::Annotations::ImplicitUseKindFlags value);
  }; // JetBrains.Annotations.ImplicitUseKindFlags
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(JetBrains::Annotations::ImplicitUseKindFlags, "JetBrains.Annotations", "ImplicitUseKindFlags");
#pragma pack(pop)
