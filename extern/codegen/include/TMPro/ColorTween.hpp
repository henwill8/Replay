// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: TMPro.ITweenValue
#include "TMPro/ITweenValue.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Skipping declaration: ColorTweenMode because it is already included!
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityAction`1<T0>
  template<typename T0>
  class UnityAction_1;
}
// Completed forward declares
// Type namespace: TMPro
namespace TMPro {
  // Autogenerated type: TMPro.ColorTween
  struct ColorTween : public System::ValueType, public TMPro::ITweenValue {
    public:
    // Nested type: TMPro::ColorTween::ColorTweenMode
    struct ColorTweenMode;
    // Nested type: TMPro::ColorTween::ColorTweenCallback
    class ColorTweenCallback;
    // Autogenerated type: TMPro.ColorTween/ColorTweenMode
    struct ColorTweenMode : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: ColorTweenMode
      constexpr ColorTweenMode(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public TMPro.ColorTween/ColorTweenMode All
      static constexpr const int All = 0;
      // Get static field: static public TMPro.ColorTween/ColorTweenMode All
      static TMPro::ColorTween::ColorTweenMode _get_All();
      // Set static field: static public TMPro.ColorTween/ColorTweenMode All
      static void _set_All(TMPro::ColorTween::ColorTweenMode value);
      // static field const value: static public TMPro.ColorTween/ColorTweenMode RGB
      static constexpr const int RGB = 1;
      // Get static field: static public TMPro.ColorTween/ColorTweenMode RGB
      static TMPro::ColorTween::ColorTweenMode _get_RGB();
      // Set static field: static public TMPro.ColorTween/ColorTweenMode RGB
      static void _set_RGB(TMPro::ColorTween::ColorTweenMode value);
      // static field const value: static public TMPro.ColorTween/ColorTweenMode Alpha
      static constexpr const int Alpha = 2;
      // Get static field: static public TMPro.ColorTween/ColorTweenMode Alpha
      static TMPro::ColorTween::ColorTweenMode _get_Alpha();
      // Set static field: static public TMPro.ColorTween/ColorTweenMode Alpha
      static void _set_Alpha(TMPro::ColorTween::ColorTweenMode value);
    }; // TMPro.ColorTween/ColorTweenMode
    // private TMPro.ColorTween/ColorTweenCallback m_Target
    // Offset: 0x0
    TMPro::ColorTween::ColorTweenCallback* m_Target;
    // private UnityEngine.Color m_StartColor
    // Offset: 0x8
    UnityEngine::Color m_StartColor;
    // private UnityEngine.Color m_TargetColor
    // Offset: 0x18
    UnityEngine::Color m_TargetColor;
    // private TMPro.ColorTween/ColorTweenMode m_TweenMode
    // Offset: 0x28
    TMPro::ColorTween::ColorTweenMode m_TweenMode;
    // private System.Single m_Duration
    // Offset: 0x2C
    float m_Duration;
    // private System.Boolean m_IgnoreTimeScale
    // Offset: 0x30
    bool m_IgnoreTimeScale;
    // Creating value type constructor for type: ColorTween
    constexpr ColorTween(TMPro::ColorTween::ColorTweenCallback* m_Target_ = {}, UnityEngine::Color m_StartColor_ = {}, UnityEngine::Color m_TargetColor_ = {}, TMPro::ColorTween::ColorTweenMode m_TweenMode_ = {}, float m_Duration_ = {}, bool m_IgnoreTimeScale_ = {}) noexcept : m_Target{m_Target_}, m_StartColor{m_StartColor_}, m_TargetColor{m_TargetColor_}, m_TweenMode{m_TweenMode_}, m_Duration{m_Duration_}, m_IgnoreTimeScale{m_IgnoreTimeScale_} {}
    // public UnityEngine.Color get_startColor()
    // Offset: 0xA2B414
    UnityEngine::Color get_startColor();
    // public System.Void set_startColor(UnityEngine.Color value)
    // Offset: 0xA2B420
    void set_startColor(UnityEngine::Color value);
    // public UnityEngine.Color get_targetColor()
    // Offset: 0xA2B42C
    UnityEngine::Color get_targetColor();
    // public System.Void set_targetColor(UnityEngine.Color value)
    // Offset: 0xA2B438
    void set_targetColor(UnityEngine::Color value);
    // public TMPro.ColorTween/ColorTweenMode get_tweenMode()
    // Offset: 0xA2B444
    TMPro::ColorTween::ColorTweenMode get_tweenMode();
    // public System.Void set_tweenMode(TMPro.ColorTween/ColorTweenMode value)
    // Offset: 0xA2B44C
    void set_tweenMode(TMPro::ColorTween::ColorTweenMode value);
    // public System.Void set_duration(System.Single value)
    // Offset: 0xA2B45C
    void set_duration(float value);
    // public System.Void set_ignoreTimeScale(System.Boolean value)
    // Offset: 0xA2B46C
    void set_ignoreTimeScale(bool value);
    // public System.Void AddOnChangedCallback(UnityEngine.Events.UnityAction`1<UnityEngine.Color> callback)
    // Offset: 0xA2B480
    void AddOnChangedCallback(UnityEngine::Events::UnityAction_1<UnityEngine::Color>* callback);
    // public System.Boolean GetIgnoreTimescale()
    // Offset: 0xA2B488
    bool GetIgnoreTimescale();
    // public System.Single GetDuration()
    // Offset: 0xA2B490
    float GetDuration();
    // public System.Single get_duration()
    // Offset: 0xA2B454
    // Implemented from: TMPro.ITweenValue
    // Base method: System.Single ITweenValue::get_duration()
    float get_duration();
    // public System.Boolean get_ignoreTimeScale()
    // Offset: 0xA2B464
    // Implemented from: TMPro.ITweenValue
    // Base method: System.Boolean ITweenValue::get_ignoreTimeScale()
    bool get_ignoreTimeScale();
    // public System.Void TweenValue(System.Single floatPercentage)
    // Offset: 0xA2B478
    // Implemented from: TMPro.ITweenValue
    // Base method: System.Void ITweenValue::TweenValue(System.Single floatPercentage)
    void TweenValue(float floatPercentage);
    // public System.Boolean ValidTarget()
    // Offset: 0xA2B498
    // Implemented from: TMPro.ITweenValue
    // Base method: System.Boolean ITweenValue::ValidTarget()
    bool ValidTarget();
  }; // TMPro.ColorTween
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(TMPro::ColorTween, "TMPro", "ColorTween");
DEFINE_IL2CPP_ARG_TYPE(TMPro::ColorTween::ColorTweenMode, "TMPro", "ColorTween/ColorTweenMode");
#pragma pack(pop)
