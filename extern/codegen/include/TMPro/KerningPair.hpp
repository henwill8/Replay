// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.GlyphValueRecord_Legacy
#include "TMPro/GlyphValueRecord_Legacy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: TMPro
namespace TMPro {
  // Size: 0x3D
  #pragma pack(push, 1)
  // Autogenerated type: TMPro.KerningPair
  // [] Offset: FFFFFFFF
  class KerningPair : public ::Il2CppObject {
    public:
    // [FormerlySerializedAsAttribute] Offset: 0xCFD5A0
    // private System.UInt32 m_FirstGlyph
    // Size: 0x4
    // Offset: 0x10
    uint m_FirstGlyph;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private TMPro.GlyphValueRecord_Legacy m_FirstGlyphAdjustments
    // Size: 0x10
    // Offset: 0x14
    TMPro::GlyphValueRecord_Legacy m_FirstGlyphAdjustments;
    // Field size check
    static_assert(sizeof(TMPro::GlyphValueRecord_Legacy) == 0x10);
    // [FormerlySerializedAsAttribute] Offset: 0xCFD5FC
    // private System.UInt32 m_SecondGlyph
    // Size: 0x4
    // Offset: 0x24
    uint m_SecondGlyph;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private TMPro.GlyphValueRecord_Legacy m_SecondGlyphAdjustments
    // Size: 0x10
    // Offset: 0x28
    TMPro::GlyphValueRecord_Legacy m_SecondGlyphAdjustments;
    // Field size check
    static_assert(sizeof(TMPro::GlyphValueRecord_Legacy) == 0x10);
    // [FormerlySerializedAsAttribute] Offset: 0xCFD658
    // public System.Single xOffset
    // Size: 0x4
    // Offset: 0x38
    float xOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_IgnoreSpacingAdjustments
    // Size: 0x1
    // Offset: 0x3C
    bool m_IgnoreSpacingAdjustments;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: KerningPair
    KerningPair(uint m_FirstGlyph_ = {}, TMPro::GlyphValueRecord_Legacy m_FirstGlyphAdjustments_ = {}, uint m_SecondGlyph_ = {}, TMPro::GlyphValueRecord_Legacy m_SecondGlyphAdjustments_ = {}, float xOffset_ = {}, bool m_IgnoreSpacingAdjustments_ = {}) noexcept : m_FirstGlyph{m_FirstGlyph_}, m_FirstGlyphAdjustments{m_FirstGlyphAdjustments_}, m_SecondGlyph{m_SecondGlyph_}, m_SecondGlyphAdjustments{m_SecondGlyphAdjustments_}, xOffset{xOffset_}, m_IgnoreSpacingAdjustments{m_IgnoreSpacingAdjustments_} {}
    // Get static field: static TMPro.KerningPair empty
    static TMPro::KerningPair* _get_empty();
    // Set static field: static TMPro.KerningPair empty
    static void _set_empty(TMPro::KerningPair* value);
    // public System.UInt32 get_firstGlyph()
    // Offset: 0xF966B4
    uint get_firstGlyph();
    // public System.Void set_firstGlyph(System.UInt32 value)
    // Offset: 0xF966BC
    void set_firstGlyph(uint value);
    // public TMPro.GlyphValueRecord_Legacy get_firstGlyphAdjustments()
    // Offset: 0xF966C4
    TMPro::GlyphValueRecord_Legacy get_firstGlyphAdjustments();
    // public System.UInt32 get_secondGlyph()
    // Offset: 0xF966D0
    uint get_secondGlyph();
    // public System.Void set_secondGlyph(System.UInt32 value)
    // Offset: 0xF966D8
    void set_secondGlyph(uint value);
    // public TMPro.GlyphValueRecord_Legacy get_secondGlyphAdjustments()
    // Offset: 0xF966E0
    TMPro::GlyphValueRecord_Legacy get_secondGlyphAdjustments();
    // public System.Boolean get_ignoreSpacingAdjustments()
    // Offset: 0xF966EC
    bool get_ignoreSpacingAdjustments();
    // public System.Void .ctor(System.UInt32 left, System.UInt32 right, System.Single offset)
    // Offset: 0xF96724
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static KerningPair* New_ctor(uint left, uint right, float offset) {
      static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<KerningPair*, creationType>(left, right, offset)));
    }
    // public System.Void .ctor(System.UInt32 firstGlyph, TMPro.GlyphValueRecord_Legacy firstGlyphAdjustments, System.UInt32 secondGlyph, TMPro.GlyphValueRecord_Legacy secondGlyphAdjustments)
    // Offset: 0xF96770
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static KerningPair* New_ctor(uint firstGlyph, TMPro::GlyphValueRecord_Legacy firstGlyphAdjustments, uint secondGlyph, TMPro::GlyphValueRecord_Legacy secondGlyphAdjustments) {
      static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<KerningPair*, creationType>(firstGlyph, firstGlyphAdjustments, secondGlyph, secondGlyphAdjustments)));
    }
    // System.Void ConvertLegacyKerningData()
    // Offset: 0xF967FC
    void ConvertLegacyKerningData();
    // static private System.Void .cctor()
    // Offset: 0xF96808
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0xF966F4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static KerningPair* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<KerningPair*, creationType>()));
    }
  }; // TMPro.KerningPair
  #pragma pack(pop)
  static check_size<sizeof(KerningPair), 60 + sizeof(bool)> __TMPro_KerningPairSizeCheck;
  static_assert(sizeof(KerningPair) == 0x3D);
}
DEFINE_IL2CPP_ARG_TYPE(TMPro::KerningPair*, "TMPro", "KerningPair");
