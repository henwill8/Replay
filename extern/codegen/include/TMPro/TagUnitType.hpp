// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: TMPro
namespace TMPro {
  // Autogenerated type: TMPro.TagUnitType
  struct TagUnitType : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: TagUnitType
    constexpr TagUnitType(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public TMPro.TagUnitType Pixels
    static constexpr const int Pixels = 0;
    // Get static field: static public TMPro.TagUnitType Pixels
    static TMPro::TagUnitType _get_Pixels();
    // Set static field: static public TMPro.TagUnitType Pixels
    static void _set_Pixels(TMPro::TagUnitType value);
    // static field const value: static public TMPro.TagUnitType FontUnits
    static constexpr const int FontUnits = 1;
    // Get static field: static public TMPro.TagUnitType FontUnits
    static TMPro::TagUnitType _get_FontUnits();
    // Set static field: static public TMPro.TagUnitType FontUnits
    static void _set_FontUnits(TMPro::TagUnitType value);
    // static field const value: static public TMPro.TagUnitType Percentage
    static constexpr const int Percentage = 2;
    // Get static field: static public TMPro.TagUnitType Percentage
    static TMPro::TagUnitType _get_Percentage();
    // Set static field: static public TMPro.TagUnitType Percentage
    static void _set_Percentage(TMPro::TagUnitType value);
  }; // TMPro.TagUnitType
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(TMPro::TagUnitType, "TMPro", "TagUnitType");
#pragma pack(pop)
