// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker
#include "TMPro/SpriteAssetUtilities/TexturePacker.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteData
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteData.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: TMPro.SpriteAssetUtilities
namespace TMPro::SpriteAssetUtilities {
  // Autogenerated type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteDataObject
  class TexturePacker::SpriteDataObject : public ::Il2CppObject {
    public:
    // public System.Collections.Generic.List`1<TMPro.SpriteAssetUtilities.TexturePacker/SpriteData> frames
    // Offset: 0x10
    System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TexturePacker::SpriteData>* frames;
    // Creating conversion operator: operator System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TexturePacker::SpriteData>*
    constexpr operator System::Collections::Generic::List_1<TMPro::SpriteAssetUtilities::TexturePacker::SpriteData>*() const noexcept {
      return frames;
    }
    // public System.Void .ctor()
    // Offset: 0xB54F00
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static TexturePacker::SpriteDataObject* New_ctor();
  }; // TMPro.SpriteAssetUtilities.TexturePacker/SpriteDataObject
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(TMPro::SpriteAssetUtilities::TexturePacker::SpriteDataObject*, "TMPro.SpriteAssetUtilities", "TexturePacker/SpriteDataObject");
#pragma pack(pop)
