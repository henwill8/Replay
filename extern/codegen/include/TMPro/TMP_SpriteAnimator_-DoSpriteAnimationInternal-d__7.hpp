// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_SpriteAnimator
#include "TMPro/TMP_SpriteAnimator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: TMPro.TMP_CharacterInfo
#include "TMPro/TMP_CharacterInfo.hpp"
// Including type: TMPro.TMP_MeshInfo
#include "TMPro/TMP_MeshInfo.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TMP_SpriteAsset
  class TMP_SpriteAsset;
}
// Completed forward declares
// Type namespace: TMPro
namespace TMPro {
  // Autogenerated type: TMPro.TMP_SpriteAnimator/<DoSpriteAnimationInternal>d__7
  class TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7 : public ::Il2CppObject, public System::Collections::Generic::IEnumerator_1<::Il2CppObject*> {
    public:
    // private System.Int32 <>1__state
    // Offset: 0x10
    int $$1__state;
    // private System.Object <>2__current
    // Offset: 0x18
    ::Il2CppObject* $$2__current;
    // public TMPro.TMP_SpriteAnimator <>4__this
    // Offset: 0x20
    TMPro::TMP_SpriteAnimator* $$4__this;
    // public System.Int32 start
    // Offset: 0x28
    int start;
    // public System.Int32 end
    // Offset: 0x2C
    int end;
    // public TMPro.TMP_SpriteAsset spriteAsset
    // Offset: 0x30
    TMPro::TMP_SpriteAsset* spriteAsset;
    // public System.Int32 currentCharacter
    // Offset: 0x38
    int currentCharacter;
    // public System.Int32 framerate
    // Offset: 0x3C
    int framerate;
    // private System.Int32 <currentFrame>5__2
    // Offset: 0x40
    int $currentFrame$5__2;
    // private TMPro.TMP_CharacterInfo <charInfo>5__3
    // Offset: 0x48
    TMPro::TMP_CharacterInfo $charInfo$5__3;
    // private System.Int32 <materialIndex>5__4
    // Offset: 0x1A0
    int $materialIndex$5__4;
    // private System.Int32 <vertexIndex>5__5
    // Offset: 0x1A4
    int $vertexIndex$5__5;
    // private TMPro.TMP_MeshInfo <meshInfo>5__6
    // Offset: 0x1A8
    TMPro::TMP_MeshInfo $meshInfo$5__6;
    // private System.Single <elapsedTime>5__7
    // Offset: 0x1F0
    float $elapsedTime$5__7;
    // private System.Single <targetTime>5__8
    // Offset: 0x1F4
    float $targetTime$5__8;
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0xBB37B8
    static TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7* New_ctor(int $$1__state);
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0xBB3864
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0xBB3868
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Boolean IEnumerator::MoveNext()
    bool MoveNext();
    // private System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()
    // Offset: 0xBB41D4
    // Implemented from: System.Collections.Generic.IEnumerator`1
    // Base method: T IEnumerator`1::get_Current()
    ::Il2CppObject* System_Collections_Generic_IEnumerator_1_get_Current();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0xBB41DC
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Void IEnumerator::Reset()
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0xBB423C
    // Implemented from: System.Collections.IEnumerator
    // Base method: System.Object IEnumerator::get_Current()
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
  }; // TMPro.TMP_SpriteAnimator/<DoSpriteAnimationInternal>d__7
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7*, "TMPro", "TMP_SpriteAnimator/<DoSpriteAnimationInternal>d__7");
#pragma pack(pop)
