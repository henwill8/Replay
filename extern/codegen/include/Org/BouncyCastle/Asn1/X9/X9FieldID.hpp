// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Asn1
namespace Org::BouncyCastle::Asn1 {
  // Forward declaring type: DerObjectIdentifier
  class DerObjectIdentifier;
  // Forward declaring type: Asn1Object
  class Asn1Object;
  // Forward declaring type: Asn1Sequence
  class Asn1Sequence;
}
// Forward declaring namespace: Org::BouncyCastle::Math
namespace Org::BouncyCastle::Math {
  // Forward declaring type: BigInteger
  class BigInteger;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Asn1.X9
namespace Org::BouncyCastle::Asn1::X9 {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Org.BouncyCastle.Asn1.X9.X9FieldID
  // [] Offset: FFFFFFFF
  class X9FieldID : public Org::BouncyCastle::Asn1::Asn1Encodable {
    public:
    // private readonly Org.BouncyCastle.Asn1.DerObjectIdentifier id
    // Size: 0x8
    // Offset: 0x10
    Org::BouncyCastle::Asn1::DerObjectIdentifier* id;
    // Field size check
    static_assert(sizeof(Org::BouncyCastle::Asn1::DerObjectIdentifier*) == 0x8);
    // private readonly Org.BouncyCastle.Asn1.Asn1Object parameters
    // Size: 0x8
    // Offset: 0x18
    Org::BouncyCastle::Asn1::Asn1Object* parameters;
    // Field size check
    static_assert(sizeof(Org::BouncyCastle::Asn1::Asn1Object*) == 0x8);
    // Creating value type constructor for type: X9FieldID
    X9FieldID(Org::BouncyCastle::Asn1::DerObjectIdentifier* id_ = {}, Org::BouncyCastle::Asn1::Asn1Object* parameters_ = {}) noexcept : id{id_}, parameters{parameters_} {}
    // public System.Void .ctor(Org.BouncyCastle.Math.BigInteger primeP)
    // Offset: 0x190B968
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static X9FieldID* New_ctor(Org::BouncyCastle::Math::BigInteger* primeP) {
      static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9FieldID::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<X9FieldID*, creationType>(primeP)));
    }
    // public System.Void .ctor(System.Int32 m, System.Int32 k1)
    // Offset: 0x190BA24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static X9FieldID* New_ctor(int m, int k1) {
      static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9FieldID::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<X9FieldID*, creationType>(m, k1)));
    }
    // public System.Void .ctor(System.Int32 m, System.Int32 k1, System.Int32 k2, System.Int32 k3)
    // Offset: 0x190BA30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static X9FieldID* New_ctor(int m, int k1, int k2, int k3) {
      static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9FieldID::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<X9FieldID*, creationType>(m, k1, k2, k3)));
    }
    // private System.Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence seq)
    // Offset: 0x190C438
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static X9FieldID* New_ctor(Org::BouncyCastle::Asn1::Asn1Sequence* seq) {
      static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9FieldID::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<X9FieldID*, creationType>(seq)));
    }
    // static public Org.BouncyCastle.Asn1.X9.X9FieldID GetInstance(System.Object obj)
    // Offset: 0x190B880
    static Org::BouncyCastle::Asn1::X9::X9FieldID* GetInstance(::Il2CppObject* obj);
    // public Org.BouncyCastle.Asn1.DerObjectIdentifier get_Identifier()
    // Offset: 0x190C520
    Org::BouncyCastle::Asn1::DerObjectIdentifier* get_Identifier();
    // public Org.BouncyCastle.Asn1.Asn1Object get_Parameters()
    // Offset: 0x190C528
    Org::BouncyCastle::Asn1::Asn1Object* get_Parameters();
    // public override Org.BouncyCastle.Asn1.Asn1Object ToAsn1Object()
    // Offset: 0x190C530
    // Implemented from: Org.BouncyCastle.Asn1.Asn1Encodable
    // Base method: Org.BouncyCastle.Asn1.Asn1Object Asn1Encodable::ToAsn1Object()
    Org::BouncyCastle::Asn1::Asn1Object* ToAsn1Object();
  }; // Org.BouncyCastle.Asn1.X9.X9FieldID
  #pragma pack(pop)
  static check_size<sizeof(X9FieldID), 24 + sizeof(Org::BouncyCastle::Asn1::Asn1Object*)> __Org_BouncyCastle_Asn1_X9_X9FieldIDSizeCheck;
  static_assert(sizeof(X9FieldID) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Asn1::X9::X9FieldID*, "Org.BouncyCastle.Asn1.X9", "X9FieldID");
