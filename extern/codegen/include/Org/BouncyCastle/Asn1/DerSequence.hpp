// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
// Including type: Org.BouncyCastle.Asn1.Asn1Sequence
#include "Org/BouncyCastle/Asn1/Asn1Sequence.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Asn1
namespace Org::BouncyCastle::Asn1 {
  // Forward declaring type: Asn1EncodableVector
  class Asn1EncodableVector;
  // Skipping declaration: Asn1Encodable because it is already included!
  // Forward declaring type: DerOutputStream
  class DerOutputStream;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Asn1
namespace Org::BouncyCastle::Asn1 {
  // Autogenerated type: Org.BouncyCastle.Asn1.DerSequence
  class DerSequence : public Org::BouncyCastle::Asn1::Asn1Sequence {
    public:
    // Get static field: static public readonly Org.BouncyCastle.Asn1.DerSequence Empty
    static Org::BouncyCastle::Asn1::DerSequence* _get_Empty();
    // Set static field: static public readonly Org.BouncyCastle.Asn1.DerSequence Empty
    static void _set_Empty(Org::BouncyCastle::Asn1::DerSequence* value);
    // static public Org.BouncyCastle.Asn1.DerSequence FromVector(Org.BouncyCastle.Asn1.Asn1EncodableVector elementVector)
    // Offset: 0x13728DC
    static Org::BouncyCastle::Asn1::DerSequence* FromVector(Org::BouncyCastle::Asn1::Asn1EncodableVector* elementVector);
    // static private System.Void .cctor()
    // Offset: 0x13851C8
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x137996C
    // Implemented from: Org.BouncyCastle.Asn1.Asn1Sequence
    // Base method: System.Void Asn1Sequence::.ctor()
    // Base method: System.Void Asn1Object::.ctor()
    // Base method: System.Void Asn1Encodable::.ctor()
    // Base method: System.Void Object::.ctor()
    static DerSequence* New_ctor();
    // public System.Void .ctor(Org.BouncyCastle.Asn1.Asn1Encodable element)
    // Offset: 0x1375A70
    // Implemented from: Org.BouncyCastle.Asn1.Asn1Sequence
    // Base method: System.Void Asn1Sequence::.ctor(Org.BouncyCastle.Asn1.Asn1Encodable element)
    static DerSequence* New_ctor(Org::BouncyCastle::Asn1::Asn1Encodable* element);
    // public System.Void .ctor(params Org.BouncyCastle.Asn1.Asn1Encodable[] elements)
    // Offset: 0x137F044
    // Implemented from: Org.BouncyCastle.Asn1.Asn1Sequence
    // Base method: System.Void Asn1Sequence::.ctor(params Org.BouncyCastle.Asn1.Asn1Encodable[] elements)
    static DerSequence* New_ctor(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* elements);
    // Creating initializer_list -> params proxy for: System.Void .ctor(params Org.BouncyCastle.Asn1.Asn1Encodable[] elements)
    static DerSequence* New_ctor(std::initializer_list<Org::BouncyCastle::Asn1::Asn1Encodable*> elements);
    // Creating TArgs -> initializer_list proxy for: System.Void .ctor(params Org.BouncyCastle.Asn1.Asn1Encodable[] elements)
    template<class ...TParams>
    static DerSequence* New_ctor(TParams&&... elements) {
      return New_ctor({elements...});
    }
    // public System.Void .ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector elementVector)
    // Offset: 0x1379970
    // Implemented from: Org.BouncyCastle.Asn1.Asn1Sequence
    // Base method: System.Void Asn1Sequence::.ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector elementVector)
    static DerSequence* New_ctor(Org::BouncyCastle::Asn1::Asn1EncodableVector* elementVector);
    // override System.Void Encode(Org.BouncyCastle.Asn1.DerOutputStream derOut)
    // Offset: 0x1379CB8
    // Implemented from: Org.BouncyCastle.Asn1.Asn1Object
    // Base method: System.Void Asn1Object::Encode(Org.BouncyCastle.Asn1.DerOutputStream derOut)
    void Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut);
  }; // Org.BouncyCastle.Asn1.DerSequence
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Asn1::DerSequence*, "Org.BouncyCastle.Asn1", "DerSequence");
#pragma pack(pop)
