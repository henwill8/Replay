// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.IO.BaseInputStream
#include "Org/BouncyCastle/Utilities/IO/BaseInputStream.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Skipping declaration: Stream because it is already included!
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Asn1
namespace Org::BouncyCastle::Asn1 {
  // Autogenerated type: Org.BouncyCastle.Asn1.LimitedInputStream
  class LimitedInputStream : public Org::BouncyCastle::Utilities::IO::BaseInputStream {
    public:
    // protected readonly System.IO.Stream _in
    // Offset: 0x30
    System::IO::Stream* in;
    // private System.Int32 _limit
    // Offset: 0x38
    int limit;
    // System.Void .ctor(System.IO.Stream inStream, System.Int32 limit)
    // Offset: 0x13F50F4
    static LimitedInputStream* New_ctor(System::IO::Stream* inStream, int limit);
    // System.Int32 get_Limit()
    // Offset: 0x13F5C3C
    int get_Limit();
    // protected System.Void SetParentEofDetect(System.Boolean on)
    // Offset: 0x13F5C44
    void SetParentEofDetect(bool on);
  }; // Org.BouncyCastle.Asn1.LimitedInputStream
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Asn1::LimitedInputStream*, "Org.BouncyCastle.Asn1", "LimitedInputStream");
#pragma pack(pop)
