// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Math
namespace Org::BouncyCastle::Math {
  // Forward declaring type: BigInteger
  class BigInteger;
}
// Forward declaring namespace: Org::BouncyCastle::Asn1
namespace Org::BouncyCastle::Asn1 {
  // Forward declaring type: Asn1Sequence
  class Asn1Sequence;
  // Forward declaring type: Asn1Object
  class Asn1Object;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Asn1.Pkcs
namespace Org::BouncyCastle::Asn1::Pkcs {
  // Autogenerated type: Org.BouncyCastle.Asn1.Pkcs.RsaPrivateKeyStructure
  class RsaPrivateKeyStructure : public Org::BouncyCastle::Asn1::Asn1Encodable {
    public:
    // private readonly Org.BouncyCastle.Math.BigInteger modulus
    // Offset: 0x10
    Org::BouncyCastle::Math::BigInteger* modulus;
    // private readonly Org.BouncyCastle.Math.BigInteger publicExponent
    // Offset: 0x18
    Org::BouncyCastle::Math::BigInteger* publicExponent;
    // private readonly Org.BouncyCastle.Math.BigInteger privateExponent
    // Offset: 0x20
    Org::BouncyCastle::Math::BigInteger* privateExponent;
    // private readonly Org.BouncyCastle.Math.BigInteger prime1
    // Offset: 0x28
    Org::BouncyCastle::Math::BigInteger* prime1;
    // private readonly Org.BouncyCastle.Math.BigInteger prime2
    // Offset: 0x30
    Org::BouncyCastle::Math::BigInteger* prime2;
    // private readonly Org.BouncyCastle.Math.BigInteger exponent1
    // Offset: 0x38
    Org::BouncyCastle::Math::BigInteger* exponent1;
    // private readonly Org.BouncyCastle.Math.BigInteger exponent2
    // Offset: 0x40
    Org::BouncyCastle::Math::BigInteger* exponent2;
    // private readonly Org.BouncyCastle.Math.BigInteger coefficient
    // Offset: 0x48
    Org::BouncyCastle::Math::BigInteger* coefficient;
    // static public Org.BouncyCastle.Asn1.Pkcs.RsaPrivateKeyStructure GetInstance(System.Object obj)
    // Offset: 0x13FE784
    static Org::BouncyCastle::Asn1::Pkcs::RsaPrivateKeyStructure* GetInstance(::Il2CppObject* obj);
    // public System.Void .ctor(Org.BouncyCastle.Asn1.Asn1Sequence seq)
    // Offset: 0x13FE828
    static RsaPrivateKeyStructure* New_ctor(Org::BouncyCastle::Asn1::Asn1Sequence* seq);
    // public Org.BouncyCastle.Math.BigInteger get_Modulus()
    // Offset: 0x13FEC08
    Org::BouncyCastle::Math::BigInteger* get_Modulus();
    // public Org.BouncyCastle.Math.BigInteger get_PublicExponent()
    // Offset: 0x13FEC10
    Org::BouncyCastle::Math::BigInteger* get_PublicExponent();
    // public Org.BouncyCastle.Math.BigInteger get_PrivateExponent()
    // Offset: 0x13FEC18
    Org::BouncyCastle::Math::BigInteger* get_PrivateExponent();
    // public Org.BouncyCastle.Math.BigInteger get_Prime1()
    // Offset: 0x13FEC20
    Org::BouncyCastle::Math::BigInteger* get_Prime1();
    // public Org.BouncyCastle.Math.BigInteger get_Prime2()
    // Offset: 0x13FEC28
    Org::BouncyCastle::Math::BigInteger* get_Prime2();
    // public Org.BouncyCastle.Math.BigInteger get_Exponent1()
    // Offset: 0x13FEC30
    Org::BouncyCastle::Math::BigInteger* get_Exponent1();
    // public Org.BouncyCastle.Math.BigInteger get_Exponent2()
    // Offset: 0x13FEC38
    Org::BouncyCastle::Math::BigInteger* get_Exponent2();
    // public Org.BouncyCastle.Math.BigInteger get_Coefficient()
    // Offset: 0x13FEC40
    Org::BouncyCastle::Math::BigInteger* get_Coefficient();
    // public override Org.BouncyCastle.Asn1.Asn1Object ToAsn1Object()
    // Offset: 0x13FEC48
    // Implemented from: Org.BouncyCastle.Asn1.Asn1Encodable
    // Base method: Org.BouncyCastle.Asn1.Asn1Object Asn1Encodable::ToAsn1Object()
    Org::BouncyCastle::Asn1::Asn1Object* ToAsn1Object();
  }; // Org.BouncyCastle.Asn1.Pkcs.RsaPrivateKeyStructure
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Asn1::Pkcs::RsaPrivateKeyStructure*, "Org.BouncyCastle.Asn1.Pkcs", "RsaPrivateKeyStructure");
#pragma pack(pop)
