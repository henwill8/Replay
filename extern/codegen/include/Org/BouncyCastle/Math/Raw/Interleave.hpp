// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Type namespace: Org.BouncyCastle.Math.Raw
namespace Org::BouncyCastle::Math::Raw {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Org.BouncyCastle.Math.Raw.Interleave
  // [] Offset: FFFFFFFF
  class Interleave : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Interleave
    Interleave() noexcept {}
    // static System.UInt32 Expand8to16(System.UInt32 x)
    // Offset: 0x1BCA250
    static uint Expand8to16(uint x);
    // static System.UInt64 Expand32to64(System.UInt32 x)
    // Offset: 0x1BCA270
    static uint64_t Expand32to64(uint x);
    // static System.Void Expand64To128(System.UInt64 x, System.UInt64[] z, System.Int32 zOff)
    // Offset: 0x1BCA2C8
    static void Expand64To128(uint64_t x, ::Array<uint64_t>* z, int zOff);
    // static System.UInt32 Shuffle2(System.UInt32 x)
    // Offset: 0x1BC5DB8
    static uint Shuffle2(uint x);
    // static System.UInt64 Unshuffle(System.UInt64 x)
    // Offset: 0x1BCA37C
    static uint64_t Unshuffle(uint64_t x);
  }; // Org.BouncyCastle.Math.Raw.Interleave
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Math::Raw::Interleave*, "Org.BouncyCastle.Math.Raw", "Interleave");
