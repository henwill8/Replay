// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Math
namespace Org::BouncyCastle::Math {
  // Forward declaring type: BigInteger
  class BigInteger;
}
// Forward declaring namespace: Org::BouncyCastle::Math::EC::Endo
namespace Org::BouncyCastle::Math::EC::Endo {
  // Forward declaring type: ScalarSplitParameters
  class ScalarSplitParameters;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Math.EC.Endo
namespace Org::BouncyCastle::Math::EC::Endo {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Org.BouncyCastle.Math.EC.Endo.GlvTypeBParameters
  // [] Offset: FFFFFFFF
  class GlvTypeBParameters : public ::Il2CppObject {
    public:
    // protected readonly Org.BouncyCastle.Math.BigInteger m_beta
    // Size: 0x8
    // Offset: 0x10
    Org::BouncyCastle::Math::BigInteger* m_beta;
    // Field size check
    static_assert(sizeof(Org::BouncyCastle::Math::BigInteger*) == 0x8);
    // protected readonly Org.BouncyCastle.Math.BigInteger m_lambda
    // Size: 0x8
    // Offset: 0x18
    Org::BouncyCastle::Math::BigInteger* m_lambda;
    // Field size check
    static_assert(sizeof(Org::BouncyCastle::Math::BigInteger*) == 0x8);
    // protected readonly Org.BouncyCastle.Math.EC.Endo.ScalarSplitParameters m_splitParams
    // Size: 0x8
    // Offset: 0x20
    Org::BouncyCastle::Math::EC::Endo::ScalarSplitParameters* m_splitParams;
    // Field size check
    static_assert(sizeof(Org::BouncyCastle::Math::EC::Endo::ScalarSplitParameters*) == 0x8);
    // Creating value type constructor for type: GlvTypeBParameters
    GlvTypeBParameters(Org::BouncyCastle::Math::BigInteger* m_beta_ = {}, Org::BouncyCastle::Math::BigInteger* m_lambda_ = {}, Org::BouncyCastle::Math::EC::Endo::ScalarSplitParameters* m_splitParams_ = {}) noexcept : m_beta{m_beta_}, m_lambda{m_lambda_}, m_splitParams{m_splitParams_} {}
    // public System.Void .ctor(Org.BouncyCastle.Math.BigInteger beta, Org.BouncyCastle.Math.BigInteger lambda, Org.BouncyCastle.Math.EC.Endo.ScalarSplitParameters splitParams)
    // Offset: 0x2098DDC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GlvTypeBParameters* New_ctor(Org::BouncyCastle::Math::BigInteger* beta, Org::BouncyCastle::Math::BigInteger* lambda, Org::BouncyCastle::Math::EC::Endo::ScalarSplitParameters* splitParams) {
      static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Math::EC::Endo::GlvTypeBParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GlvTypeBParameters*, creationType>(beta, lambda, splitParams)));
    }
    // public Org.BouncyCastle.Math.BigInteger get_Beta()
    // Offset: 0x2098E40
    Org::BouncyCastle::Math::BigInteger* get_Beta();
    // public Org.BouncyCastle.Math.EC.Endo.ScalarSplitParameters get_SplitParams()
    // Offset: 0x2098E48
    Org::BouncyCastle::Math::EC::Endo::ScalarSplitParameters* get_SplitParams();
  }; // Org.BouncyCastle.Math.EC.Endo.GlvTypeBParameters
  #pragma pack(pop)
  static check_size<sizeof(GlvTypeBParameters), 32 + sizeof(Org::BouncyCastle::Math::EC::Endo::ScalarSplitParameters*)> __Org_BouncyCastle_Math_EC_Endo_GlvTypeBParametersSizeCheck;
  static_assert(sizeof(GlvTypeBParameters) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Math::EC::Endo::GlvTypeBParameters*, "Org.BouncyCastle.Math.EC.Endo", "GlvTypeBParameters");
