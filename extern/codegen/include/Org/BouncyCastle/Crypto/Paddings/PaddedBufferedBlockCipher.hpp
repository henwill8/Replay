// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.BufferedBlockCipher
#include "Org/BouncyCastle/Crypto/BufferedBlockCipher.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Crypto::Paddings
namespace Org::BouncyCastle::Crypto::Paddings {
  // Forward declaring type: IBlockCipherPadding
  class IBlockCipherPadding;
}
// Forward declaring namespace: Org::BouncyCastle::Crypto
namespace Org::BouncyCastle::Crypto {
  // Forward declaring type: IBlockCipher
  class IBlockCipher;
  // Forward declaring type: ICipherParameters
  class ICipherParameters;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Crypto.Paddings
namespace Org::BouncyCastle::Crypto::Paddings {
  // Autogenerated type: Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher
  class PaddedBufferedBlockCipher : public Org::BouncyCastle::Crypto::BufferedBlockCipher {
    public:
    // private readonly Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding padding
    // Offset: 0x28
    Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding* padding;
    // Creating conversion operator: operator Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding*
    constexpr operator Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding*() const noexcept {
      return padding;
    }
    // public System.Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher cipher, Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding padding)
    // Offset: 0x1041714
    static PaddedBufferedBlockCipher* New_ctor(Org::BouncyCastle::Crypto::IBlockCipher* cipher, Org::BouncyCastle::Crypto::Paddings::IBlockCipherPadding* padding);
    // public System.Void .ctor(Org.BouncyCastle.Crypto.IBlockCipher cipher)
    // Offset: 0x1041830
    // Implemented from: Org.BouncyCastle.Crypto.BufferedBlockCipher
    // Base method: System.Void BufferedBlockCipher::.ctor(Org.BouncyCastle.Crypto.IBlockCipher cipher)
    static PaddedBufferedBlockCipher* New_ctor(Org::BouncyCastle::Crypto::IBlockCipher* cipher);
    // public override System.Void Init(System.Boolean forEncryption, Org.BouncyCastle.Crypto.ICipherParameters parameters)
    // Offset: 0x10418AC
    // Implemented from: Org.BouncyCastle.Crypto.BufferedBlockCipher
    // Base method: System.Void BufferedBlockCipher::Init(System.Boolean forEncryption, Org.BouncyCastle.Crypto.ICipherParameters parameters)
    void Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters);
    // public override System.Int32 GetOutputSize(System.Int32 length)
    // Offset: 0x1041A54
    // Implemented from: Org.BouncyCastle.Crypto.BufferedBlockCipher
    // Base method: System.Int32 BufferedBlockCipher::GetOutputSize(System.Int32 length)
    int GetOutputSize(int length);
    // public override System.Int32 GetUpdateOutputSize(System.Int32 length)
    // Offset: 0x1041AA0
    // Implemented from: Org.BouncyCastle.Crypto.BufferedBlockCipher
    // Base method: System.Int32 BufferedBlockCipher::GetUpdateOutputSize(System.Int32 length)
    int GetUpdateOutputSize(int length);
    // public override System.Int32 ProcessBytes(System.Byte[] input, System.Int32 inOff, System.Int32 length, System.Byte[] output, System.Int32 outOff)
    // Offset: 0x1041AD8
    // Implemented from: Org.BouncyCastle.Crypto.BufferedBlockCipher
    // Base method: System.Int32 BufferedBlockCipher::ProcessBytes(System.Byte[] input, System.Int32 inOff, System.Int32 length, System.Byte[] output, System.Int32 outOff)
    int ProcessBytes(::Array<uint8_t>* input, int inOff, int length, ::Array<uint8_t>* output, int outOff);
    // public override System.Int32 DoFinal(System.Byte[] output, System.Int32 outOff)
    // Offset: 0x1041D88
    // Implemented from: Org.BouncyCastle.Crypto.BufferedBlockCipher
    // Base method: System.Int32 BufferedBlockCipher::DoFinal(System.Byte[] output, System.Int32 outOff)
    int DoFinal(::Array<uint8_t>* output, int outOff);
  }; // Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Paddings::PaddedBufferedBlockCipher*, "Org.BouncyCastle.Crypto.Paddings", "PaddedBufferedBlockCipher");
#pragma pack(pop)
