// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.ISigner
#include "Org/BouncyCastle/Crypto/ISigner.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Crypto
namespace Org::BouncyCastle::Crypto {
  // Forward declaring type: IDigest
  class IDigest;
  // Forward declaring type: IAsymmetricBlockCipher
  class IAsymmetricBlockCipher;
  // Forward declaring type: ICipherParameters
  class ICipherParameters;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Crypto.Signers
namespace Org::BouncyCastle::Crypto::Signers {
  // Autogenerated type: Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer
  class Iso9796d2Signer : public ::Il2CppObject/*, public Org::BouncyCastle::Crypto::ISigner*/ {
    public:
    // private Org.BouncyCastle.Crypto.IDigest digest
    // Offset: 0x10
    Org::BouncyCastle::Crypto::IDigest* digest;
    // private Org.BouncyCastle.Crypto.IAsymmetricBlockCipher cipher
    // Offset: 0x18
    Org::BouncyCastle::Crypto::IAsymmetricBlockCipher* cipher;
    // private System.Int32 trailer
    // Offset: 0x20
    int trailer;
    // private System.Int32 keyBits
    // Offset: 0x24
    int keyBits;
    // private System.Byte[] block
    // Offset: 0x28
    ::Array<uint8_t>* block;
    // private System.Byte[] mBuf
    // Offset: 0x30
    ::Array<uint8_t>* mBuf;
    // private System.Int32 messageLength
    // Offset: 0x38
    int messageLength;
    // private System.Boolean fullMessage
    // Offset: 0x3C
    bool fullMessage;
    // private System.Byte[] recoveredMessage
    // Offset: 0x40
    ::Array<uint8_t>* recoveredMessage;
    // private System.Byte[] preSig
    // Offset: 0x48
    ::Array<uint8_t>* preSig;
    // private System.Byte[] preBlock
    // Offset: 0x50
    ::Array<uint8_t>* preBlock;
    // Creating interface conversion operator: operator Org::BouncyCastle::Crypto::ISigner
    operator Org::BouncyCastle::Crypto::ISigner() noexcept {
      return *reinterpret_cast<Org::BouncyCastle::Crypto::ISigner*>(this);
    }
    // public System.Void .ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher cipher, Org.BouncyCastle.Crypto.IDigest digest, System.Boolean isImplicit)
    // Offset: 0x10502F4
    static Iso9796d2Signer* New_ctor(Org::BouncyCastle::Crypto::IAsymmetricBlockCipher* cipher, Org::BouncyCastle::Crypto::IDigest* digest, bool isImplicit);
    // private System.Void ClearBlock(System.Byte[] block)
    // Offset: 0x1050920
    void ClearBlock(::Array<uint8_t>* block);
    // public System.Void Update(System.Byte input)
    // Offset: 0x1050944
    void Update(uint8_t input);
    // public System.Void Init(System.Boolean forSigning, Org.BouncyCastle.Crypto.ICipherParameters parameters)
    // Offset: 0x10506FC
    // Implemented from: Org.BouncyCastle.Crypto.ISigner
    // Base method: System.Void ISigner::Init(System.Boolean forSigning, Org.BouncyCastle.Crypto.ICipherParameters parameters)
    void Init(bool forSigning, Org::BouncyCastle::Crypto::ICipherParameters* parameters);
    // public System.Void BlockUpdate(System.Byte[] input, System.Int32 inOff, System.Int32 length)
    // Offset: 0x1050A4C
    // Implemented from: Org.BouncyCastle.Crypto.ISigner
    // Base method: System.Void ISigner::BlockUpdate(System.Byte[] input, System.Int32 inOff, System.Int32 length)
    void BlockUpdate(::Array<uint8_t>* input, int inOff, int length);
    // public System.Void Reset()
    // Offset: 0x1050BA8
    // Implemented from: Org.BouncyCastle.Crypto.ISigner
    // Base method: System.Void ISigner::Reset()
    void Reset();
    // public System.Byte[] GenerateSignature()
    // Offset: 0x1050CC8
    // Implemented from: Org.BouncyCastle.Crypto.ISigner
    // Base method: System.Byte[] ISigner::GenerateSignature()
    ::Array<uint8_t>* GenerateSignature();
  }; // Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Signers::Iso9796d2Signer*, "Org.BouncyCastle.Crypto.Signers", "Iso9796d2Signer");
#pragma pack(pop)
