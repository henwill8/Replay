// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
#include "Org/BouncyCastle/Crypto/Signers/IDsaKCalculator.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Math
namespace Org::BouncyCastle::Math {
  // Forward declaring type: BigInteger
  class BigInteger;
}
// Forward declaring namespace: Org::BouncyCastle::Security
namespace Org::BouncyCastle::Security {
  // Forward declaring type: SecureRandom
  class SecureRandom;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Crypto.Signers
namespace Org::BouncyCastle::Crypto::Signers {
  // Autogenerated type: Org.BouncyCastle.Crypto.Signers.RandomDsaKCalculator
  class RandomDsaKCalculator : public ::Il2CppObject/*, public Org::BouncyCastle::Crypto::Signers::IDsaKCalculator*/ {
    public:
    // private Org.BouncyCastle.Math.BigInteger q
    // Offset: 0x10
    Org::BouncyCastle::Math::BigInteger* q;
    // private Org.BouncyCastle.Security.SecureRandom random
    // Offset: 0x18
    Org::BouncyCastle::Security::SecureRandom* random;
    // Creating interface conversion operator: operator Org::BouncyCastle::Crypto::Signers::IDsaKCalculator
    operator Org::BouncyCastle::Crypto::Signers::IDsaKCalculator() noexcept {
      return *reinterpret_cast<Org::BouncyCastle::Crypto::Signers::IDsaKCalculator*>(this);
    }
    // public System.Boolean get_IsDeterministic()
    // Offset: 0x1052CE0
    // Implemented from: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
    // Base method: System.Boolean IDsaKCalculator::get_IsDeterministic()
    bool get_IsDeterministic();
    // public System.Void Init(Org.BouncyCastle.Math.BigInteger n, Org.BouncyCastle.Security.SecureRandom random)
    // Offset: 0x1052CE8
    // Implemented from: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
    // Base method: System.Void IDsaKCalculator::Init(Org.BouncyCastle.Math.BigInteger n, Org.BouncyCastle.Security.SecureRandom random)
    void Init(Org::BouncyCastle::Math::BigInteger* n, Org::BouncyCastle::Security::SecureRandom* random);
    // public System.Void Init(Org.BouncyCastle.Math.BigInteger n, Org.BouncyCastle.Math.BigInteger d, System.Byte[] message)
    // Offset: 0x1052D1C
    // Implemented from: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
    // Base method: System.Void IDsaKCalculator::Init(Org.BouncyCastle.Math.BigInteger n, Org.BouncyCastle.Math.BigInteger d, System.Byte[] message)
    void Init(Org::BouncyCastle::Math::BigInteger* n, Org::BouncyCastle::Math::BigInteger* d, ::Array<uint8_t>* message);
    // public Org.BouncyCastle.Math.BigInteger NextK()
    // Offset: 0x1052D88
    // Implemented from: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
    // Base method: Org.BouncyCastle.Math.BigInteger IDsaKCalculator::NextK()
    Org::BouncyCastle::Math::BigInteger* NextK();
    // public System.Void .ctor()
    // Offset: 0x104BA5C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static RandomDsaKCalculator* New_ctor();
  }; // Org.BouncyCastle.Crypto.Signers.RandomDsaKCalculator
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Signers::RandomDsaKCalculator*, "Org.BouncyCastle.Crypto.Signers", "RandomDsaKCalculator");
#pragma pack(pop)
