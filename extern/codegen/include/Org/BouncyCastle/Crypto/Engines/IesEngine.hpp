// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Crypto
namespace Org::BouncyCastle::Crypto {
  // Forward declaring type: IBasicAgreement
  class IBasicAgreement;
  // Forward declaring type: IDerivationFunction
  class IDerivationFunction;
  // Forward declaring type: IMac
  class IMac;
  // Forward declaring type: BufferedBlockCipher
  class BufferedBlockCipher;
  // Forward declaring type: ICipherParameters
  class ICipherParameters;
}
// Forward declaring namespace: Org::BouncyCastle::Crypto::Parameters
namespace Org::BouncyCastle::Crypto::Parameters {
  // Forward declaring type: IesParameters
  class IesParameters;
  // Forward declaring type: KdfParameters
  class KdfParameters;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Crypto.Engines
namespace Org::BouncyCastle::Crypto::Engines {
  // Autogenerated type: Org.BouncyCastle.Crypto.Engines.IesEngine
  class IesEngine : public ::Il2CppObject {
    public:
    // private readonly Org.BouncyCastle.Crypto.IBasicAgreement agree
    // Offset: 0x10
    Org::BouncyCastle::Crypto::IBasicAgreement* agree;
    // private readonly Org.BouncyCastle.Crypto.IDerivationFunction kdf
    // Offset: 0x18
    Org::BouncyCastle::Crypto::IDerivationFunction* kdf;
    // private readonly Org.BouncyCastle.Crypto.IMac mac
    // Offset: 0x20
    Org::BouncyCastle::Crypto::IMac* mac;
    // private readonly Org.BouncyCastle.Crypto.BufferedBlockCipher cipher
    // Offset: 0x28
    Org::BouncyCastle::Crypto::BufferedBlockCipher* cipher;
    // private readonly System.Byte[] macBuf
    // Offset: 0x30
    ::Array<uint8_t>* macBuf;
    // private System.Boolean forEncryption
    // Offset: 0x38
    bool forEncryption;
    // private Org.BouncyCastle.Crypto.ICipherParameters privParam
    // Offset: 0x40
    Org::BouncyCastle::Crypto::ICipherParameters* privParam;
    // private Org.BouncyCastle.Crypto.ICipherParameters pubParam
    // Offset: 0x48
    Org::BouncyCastle::Crypto::ICipherParameters* pubParam;
    // private Org.BouncyCastle.Crypto.Parameters.IesParameters param
    // Offset: 0x50
    Org::BouncyCastle::Crypto::Parameters::IesParameters* param;
    // public System.Void .ctor(Org.BouncyCastle.Crypto.IBasicAgreement agree, Org.BouncyCastle.Crypto.IDerivationFunction kdf, Org.BouncyCastle.Crypto.IMac mac)
    // Offset: 0x17D2E24
    static IesEngine* New_ctor(Org::BouncyCastle::Crypto::IBasicAgreement* agree, Org::BouncyCastle::Crypto::IDerivationFunction* kdf, Org::BouncyCastle::Crypto::IMac* mac);
    // private System.Byte[] DecryptBlock(System.Byte[] in_enc, System.Int32 inOff, System.Int32 inLen, System.Byte[] z)
    // Offset: 0x17D2F54
    ::Array<uint8_t>* DecryptBlock(::Array<uint8_t>* in_enc, int inOff, int inLen, ::Array<uint8_t>* z);
    // private System.Byte[] EncryptBlock(System.Byte[] input, System.Int32 inOff, System.Int32 inLen, System.Byte[] z)
    // Offset: 0x17D3768
    ::Array<uint8_t>* EncryptBlock(::Array<uint8_t>* input, int inOff, int inLen, ::Array<uint8_t>* z);
    // private System.Byte[] GenerateKdfBytes(Org.BouncyCastle.Crypto.Parameters.KdfParameters kParam, System.Int32 length)
    // Offset: 0x17D35FC
    ::Array<uint8_t>* GenerateKdfBytes(Org::BouncyCastle::Crypto::Parameters::KdfParameters* kParam, int length);
    // public System.Byte[] ProcessBlock(System.Byte[] input, System.Int32 inOff, System.Int32 inLen)
    // Offset: 0x17D3D6C
    ::Array<uint8_t>* ProcessBlock(::Array<uint8_t>* input, int inOff, int inLen);
  }; // Org.BouncyCastle.Crypto.Engines.IesEngine
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Engines::IesEngine*, "Org.BouncyCastle.Crypto.Engines", "IesEngine");
#pragma pack(pop)
