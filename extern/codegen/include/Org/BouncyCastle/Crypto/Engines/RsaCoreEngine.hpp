// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IRsa
#include "Org/BouncyCastle/Crypto/IRsa.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Crypto::Parameters
namespace Org::BouncyCastle::Crypto::Parameters {
  // Forward declaring type: RsaKeyParameters
  class RsaKeyParameters;
}
// Forward declaring namespace: Org::BouncyCastle::Crypto
namespace Org::BouncyCastle::Crypto {
  // Forward declaring type: ICipherParameters
  class ICipherParameters;
}
// Forward declaring namespace: Org::BouncyCastle::Math
namespace Org::BouncyCastle::Math {
  // Forward declaring type: BigInteger
  class BigInteger;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Crypto.Engines
namespace Org::BouncyCastle::Crypto::Engines {
  // Autogenerated type: Org.BouncyCastle.Crypto.Engines.RsaCoreEngine
  class RsaCoreEngine : public ::Il2CppObject/*, public Org::BouncyCastle::Crypto::IRsa*/ {
    public:
    // private Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters key
    // Offset: 0x10
    Org::BouncyCastle::Crypto::Parameters::RsaKeyParameters* key;
    // private System.Boolean forEncryption
    // Offset: 0x18
    bool forEncryption;
    // private System.Int32 bitSize
    // Offset: 0x1C
    int bitSize;
    // Creating interface conversion operator: operator Org::BouncyCastle::Crypto::IRsa
    operator Org::BouncyCastle::Crypto::IRsa() noexcept {
      return *reinterpret_cast<Org::BouncyCastle::Crypto::IRsa*>(this);
    }
    // private System.Void CheckInitialised()
    // Offset: 0x1808D08
    void CheckInitialised();
    // public System.Void Init(System.Boolean forEncryption, Org.BouncyCastle.Crypto.ICipherParameters parameters)
    // Offset: 0x1808D8C
    // Implemented from: Org.BouncyCastle.Crypto.IRsa
    // Base method: System.Void IRsa::Init(System.Boolean forEncryption, Org.BouncyCastle.Crypto.ICipherParameters parameters)
    void Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters);
    // public System.Int32 GetInputBlockSize()
    // Offset: 0x1808EC8
    // Implemented from: Org.BouncyCastle.Crypto.IRsa
    // Base method: System.Int32 IRsa::GetInputBlockSize()
    int GetInputBlockSize();
    // public System.Int32 GetOutputBlockSize()
    // Offset: 0x1808F10
    // Implemented from: Org.BouncyCastle.Crypto.IRsa
    // Base method: System.Int32 IRsa::GetOutputBlockSize()
    int GetOutputBlockSize();
    // public Org.BouncyCastle.Math.BigInteger ConvertInput(System.Byte[] inBuf, System.Int32 inOff, System.Int32 inLen)
    // Offset: 0x1808F58
    // Implemented from: Org.BouncyCastle.Crypto.IRsa
    // Base method: Org.BouncyCastle.Math.BigInteger IRsa::ConvertInput(System.Byte[] inBuf, System.Int32 inOff, System.Int32 inLen)
    Org::BouncyCastle::Math::BigInteger* ConvertInput(::Array<uint8_t>* inBuf, int inOff, int inLen);
    // public System.Byte[] ConvertOutput(Org.BouncyCastle.Math.BigInteger result)
    // Offset: 0x180906C
    // Implemented from: Org.BouncyCastle.Crypto.IRsa
    // Base method: System.Byte[] IRsa::ConvertOutput(Org.BouncyCastle.Math.BigInteger result)
    ::Array<uint8_t>* ConvertOutput(Org::BouncyCastle::Math::BigInteger* result);
    // public Org.BouncyCastle.Math.BigInteger ProcessBlock(Org.BouncyCastle.Math.BigInteger input)
    // Offset: 0x1809140
    // Implemented from: Org.BouncyCastle.Crypto.IRsa
    // Base method: Org.BouncyCastle.Math.BigInteger IRsa::ProcessBlock(Org.BouncyCastle.Math.BigInteger input)
    Org::BouncyCastle::Math::BigInteger* ProcessBlock(Org::BouncyCastle::Math::BigInteger* input);
    // public System.Void .ctor()
    // Offset: 0x18084DC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static RsaCoreEngine* New_ctor();
  }; // Org.BouncyCastle.Crypto.Engines.RsaCoreEngine
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Engines::RsaCoreEngine*, "Org.BouncyCastle.Crypto.Engines", "RsaCoreEngine");
#pragma pack(pop)
