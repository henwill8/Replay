// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.KeccakDigest
#include "Org/BouncyCastle/Crypto/Digests/KeccakDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Utilities
namespace Org::BouncyCastle::Utilities {
  // Skipping declaration: IMemoable because it is already included!
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Crypto.Digests
namespace Org::BouncyCastle::Crypto::Digests {
  // Size: 0x2D
  #pragma pack(push, 1)
  // Autogenerated type: Org.BouncyCastle.Crypto.Digests.Sha3Digest
  // [] Offset: FFFFFFFF
  class Sha3Digest : public Org::BouncyCastle::Crypto::Digests::KeccakDigest {
    public:
    // Creating value type constructor for type: Sha3Digest
    Sha3Digest() noexcept {}
    // static private System.Int32 CheckBitLength(System.Int32 bitLength)
    // Offset: 0x17E44BC
    static int CheckBitLength(int bitLength);
    // public System.Void .ctor(Org.BouncyCastle.Crypto.Digests.Sha3Digest source)
    // Offset: 0x17E4630
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Sha3Digest* New_ctor(Org::BouncyCastle::Crypto::Digests::Sha3Digest* source) {
      static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha3Digest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Sha3Digest*, creationType>(source)));
    }
    // public System.Void .ctor(System.Int32 bitLength)
    // Offset: 0x17E45A8
    // Implemented from: Org.BouncyCastle.Crypto.Digests.KeccakDigest
    // Base method: System.Void KeccakDigest::.ctor(System.Int32 bitLength)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Sha3Digest* New_ctor(int bitLength) {
      static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha3Digest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Sha3Digest*, creationType>(bitLength)));
    }
    // public override System.String get_AlgorithmName()
    // Offset: 0x17E46A8
    // Implemented from: Org.BouncyCastle.Crypto.Digests.KeccakDigest
    // Base method: System.String KeccakDigest::get_AlgorithmName()
    ::Il2CppString* get_AlgorithmName();
    // public override System.Int32 DoFinal(System.Byte[] output, System.Int32 outOff)
    // Offset: 0x17E4728
    // Implemented from: Org.BouncyCastle.Crypto.Digests.KeccakDigest
    // Base method: System.Int32 KeccakDigest::DoFinal(System.Byte[] output, System.Int32 outOff)
    int DoFinal(::Array<uint8_t>* output, int outOff);
    // public override Org.BouncyCastle.Utilities.IMemoable Copy()
    // Offset: 0x17E4774
    // Implemented from: Org.BouncyCastle.Crypto.Digests.KeccakDigest
    // Base method: Org.BouncyCastle.Utilities.IMemoable KeccakDigest::Copy()
    Org::BouncyCastle::Utilities::IMemoable* Copy();
  }; // Org.BouncyCastle.Crypto.Digests.Sha3Digest
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Digests::Sha3Digest*, "Org.BouncyCastle.Crypto.Digests", "Sha3Digest");
