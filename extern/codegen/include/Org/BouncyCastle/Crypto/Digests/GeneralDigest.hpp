// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IDigest
#include "Org/BouncyCastle/Crypto/IDigest.hpp"
// Including type: Org.BouncyCastle.Utilities.IMemoable
#include "Org/BouncyCastle/Utilities/IMemoable.hpp"
// Completed includes
// Type namespace: Org.BouncyCastle.Crypto.Digests
namespace Org::BouncyCastle::Crypto::Digests {
  // Autogenerated type: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  class GeneralDigest : public ::Il2CppObject/*, public Org::BouncyCastle::Crypto::IDigest, public Org::BouncyCastle::Utilities::IMemoable*/ {
    public:
    // private System.Byte[] xBuf
    // Offset: 0x10
    ::Array<uint8_t>* xBuf;
    // private System.Int32 xBufOff
    // Offset: 0x18
    int xBufOff;
    // private System.Int64 byteCount
    // Offset: 0x20
    int64_t byteCount;
    // Creating interface conversion operator: operator Org::BouncyCastle::Crypto::IDigest
    operator Org::BouncyCastle::Crypto::IDigest() noexcept {
      return *reinterpret_cast<Org::BouncyCastle::Crypto::IDigest*>(this);
    }
    // Creating interface conversion operator: operator Org::BouncyCastle::Utilities::IMemoable
    operator Org::BouncyCastle::Utilities::IMemoable() noexcept {
      return *reinterpret_cast<Org::BouncyCastle::Utilities::IMemoable*>(this);
    }
    // System.Void .ctor(Org.BouncyCastle.Crypto.Digests.GeneralDigest t)
    // Offset: 0x175BC4C
    static GeneralDigest* New_ctor(Org::BouncyCastle::Crypto::Digests::GeneralDigest* t);
    // protected System.Void CopyIn(Org.BouncyCastle.Crypto.Digests.GeneralDigest t)
    // Offset: 0x175BCE0
    void CopyIn(Org::BouncyCastle::Crypto::Digests::GeneralDigest* t);
    // public System.Void Finish()
    // Offset: 0x175BFB0
    void Finish();
    // System.Void ProcessWord(System.Byte[] input, System.Int32 inOff)
    // Offset: 0xFFFFFFFF
    void ProcessWord(::Array<uint8_t>* input, int inOff);
    // System.Void ProcessLength(System.Int64 bitLength)
    // Offset: 0xFFFFFFFF
    void ProcessLength(int64_t bitLength);
    // System.Void ProcessBlock()
    // Offset: 0xFFFFFFFF
    void ProcessBlock();
    // System.Void .ctor()
    // Offset: 0x175BBE0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static GeneralDigest* New_ctor();
    // public System.Void Update(System.Byte input)
    // Offset: 0x175BD38
    // Implemented from: Org.BouncyCastle.Crypto.IDigest
    // Base method: System.Void IDigest::Update(System.Byte input)
    void Update(uint8_t input);
    // public System.Void BlockUpdate(System.Byte[] input, System.Int32 inOff, System.Int32 length)
    // Offset: 0x175BDCC
    // Implemented from: Org.BouncyCastle.Crypto.IDigest
    // Base method: System.Void IDigest::BlockUpdate(System.Byte[] input, System.Int32 inOff, System.Int32 length)
    void BlockUpdate(::Array<uint8_t>* input, int inOff, int length);
    // public System.Void Reset()
    // Offset: 0x175C018
    // Implemented from: Org.BouncyCastle.Crypto.IDigest
    // Base method: System.Void IDigest::Reset()
    void Reset();
    // public System.Int32 GetByteLength()
    // Offset: 0x175C048
    // Implemented from: Org.BouncyCastle.Crypto.IDigest
    // Base method: System.Int32 IDigest::GetByteLength()
    int GetByteLength();
    // public System.String get_AlgorithmName()
    // Offset: 0xFFFFFFFF
    // Implemented from: Org.BouncyCastle.Crypto.IDigest
    // Base method: System.String IDigest::get_AlgorithmName()
    ::Il2CppString* get_AlgorithmName();
    // public System.Int32 GetDigestSize()
    // Offset: 0xFFFFFFFF
    // Implemented from: Org.BouncyCastle.Crypto.IDigest
    // Base method: System.Int32 IDigest::GetDigestSize()
    int GetDigestSize();
    // public System.Int32 DoFinal(System.Byte[] output, System.Int32 outOff)
    // Offset: 0xFFFFFFFF
    // Implemented from: Org.BouncyCastle.Crypto.IDigest
    // Base method: System.Int32 IDigest::DoFinal(System.Byte[] output, System.Int32 outOff)
    int DoFinal(::Array<uint8_t>* output, int outOff);
    // public Org.BouncyCastle.Utilities.IMemoable Copy()
    // Offset: 0xFFFFFFFF
    // Implemented from: Org.BouncyCastle.Utilities.IMemoable
    // Base method: Org.BouncyCastle.Utilities.IMemoable IMemoable::Copy()
    Org::BouncyCastle::Utilities::IMemoable* Copy();
    // public System.Void Reset(Org.BouncyCastle.Utilities.IMemoable t)
    // Offset: 0xFFFFFFFF
    // Implemented from: Org.BouncyCastle.Utilities.IMemoable
    // Base method: System.Void IMemoable::Reset(Org.BouncyCastle.Utilities.IMemoable t)
    void Reset(Org::BouncyCastle::Utilities::IMemoable* t);
  }; // Org.BouncyCastle.Crypto.Digests.GeneralDigest
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Digests::GeneralDigest*, "Org.BouncyCastle.Crypto.Digests", "GeneralDigest");
#pragma pack(pop)
