// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.LongDigest
#include "Org/BouncyCastle/Crypto/Digests/LongDigest.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Utilities
namespace Org::BouncyCastle::Utilities {
  // Skipping declaration: IMemoable because it is already included!
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Crypto.Digests
namespace Org::BouncyCastle::Crypto::Digests {
  // Autogenerated type: Org.BouncyCastle.Crypto.Digests.Sha512tDigest
  class Sha512tDigest : public Org::BouncyCastle::Crypto::Digests::LongDigest {
    public:
    // private readonly System.Int32 digestLength
    // Offset: 0x84
    int digestLength;
    // private System.UInt64 H1t
    // Offset: 0x88
    uint64_t H1t;
    // private System.UInt64 H2t
    // Offset: 0x90
    uint64_t H2t;
    // private System.UInt64 H3t
    // Offset: 0x98
    uint64_t H3t;
    // private System.UInt64 H4t
    // Offset: 0xA0
    uint64_t H4t;
    // private System.UInt64 H5t
    // Offset: 0xA8
    uint64_t H5t;
    // private System.UInt64 H6t
    // Offset: 0xB0
    uint64_t H6t;
    // private System.UInt64 H7t
    // Offset: 0xB8
    uint64_t H7t;
    // private System.UInt64 H8t
    // Offset: 0xC0
    uint64_t H8t;
    // public System.Void .ctor(System.Int32 bitLength)
    // Offset: 0x14B63F4
    static Sha512tDigest* New_ctor(int bitLength);
    // public System.Void .ctor(Org.BouncyCastle.Crypto.Digests.Sha512tDigest t)
    // Offset: 0x14B66E0
    static Sha512tDigest* New_ctor(Org::BouncyCastle::Crypto::Digests::Sha512tDigest* t);
    // private System.Void tIvGenerate(System.Int32 bitLength)
    // Offset: 0x14B654C
    void tIvGenerate(int bitLength);
    // static private System.Void UInt64_To_BE(System.UInt64 n, System.Byte[] bs, System.Int32 off, System.Int32 max)
    // Offset: 0x14B6914
    static void UInt64_To_BE(uint64_t n, ::Array<uint8_t>* bs, int off, int max);
    // static private System.Void UInt32_To_BE(System.UInt32 n, System.Byte[] bs, System.Int32 off, System.Int32 max)
    // Offset: 0x14B69C0
    static void UInt32_To_BE(uint n, ::Array<uint8_t>* bs, int off, int max);
    // public override System.String get_AlgorithmName()
    // Offset: 0x14B6780
    // Implemented from: Org.BouncyCastle.Crypto.Digests.LongDigest
    // Base method: System.String LongDigest::get_AlgorithmName()
    ::Il2CppString* get_AlgorithmName();
    // public override System.Int32 GetDigestSize()
    // Offset: 0x14B6804
    // Implemented from: Org.BouncyCastle.Crypto.Digests.LongDigest
    // Base method: System.Int32 LongDigest::GetDigestSize()
    int GetDigestSize();
    // public override System.Int32 DoFinal(System.Byte[] output, System.Int32 outOff)
    // Offset: 0x14B680C
    // Implemented from: Org.BouncyCastle.Crypto.Digests.LongDigest
    // Base method: System.Int32 LongDigest::DoFinal(System.Byte[] output, System.Int32 outOff)
    int DoFinal(::Array<uint8_t>* output, int outOff);
    // public override System.Void Reset()
    // Offset: 0x14B697C
    // Implemented from: Org.BouncyCastle.Crypto.Digests.LongDigest
    // Base method: System.Void LongDigest::Reset()
    void Reset();
    // public override Org.BouncyCastle.Utilities.IMemoable Copy()
    // Offset: 0x14B6A98
    // Implemented from: Org.BouncyCastle.Crypto.Digests.LongDigest
    // Base method: Org.BouncyCastle.Utilities.IMemoable LongDigest::Copy()
    Org::BouncyCastle::Utilities::IMemoable* Copy();
    // public override System.Void Reset(Org.BouncyCastle.Utilities.IMemoable other)
    // Offset: 0x14B6AF8
    // Implemented from: Org.BouncyCastle.Crypto.Digests.LongDigest
    // Base method: System.Void LongDigest::Reset(Org.BouncyCastle.Utilities.IMemoable other)
    void Reset(Org::BouncyCastle::Utilities::IMemoable* other);
  }; // Org.BouncyCastle.Crypto.Digests.Sha512tDigest
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Digests::Sha512tDigest*, "Org.BouncyCastle.Crypto.Digests", "Sha512tDigest");
#pragma pack(pop)
