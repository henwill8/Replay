// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IMac
#include "Org/BouncyCastle/Crypto/IMac.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Crypto
namespace Org::BouncyCastle::Crypto {
  // Forward declaring type: ICipherParameters
  class ICipherParameters;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Crypto.Macs
namespace Org::BouncyCastle::Crypto::Macs {
  // Autogenerated type: Org.BouncyCastle.Crypto.Macs.SipHash
  class SipHash : public ::Il2CppObject/*, public Org::BouncyCastle::Crypto::IMac*/ {
    public:
    // protected readonly System.Int32 c
    // Offset: 0x10
    int c;
    // protected readonly System.Int32 d
    // Offset: 0x14
    int d;
    // protected System.Int64 k0
    // Offset: 0x18
    int64_t k0;
    // protected System.Int64 k1
    // Offset: 0x20
    int64_t k1;
    // protected System.Int64 v0
    // Offset: 0x28
    int64_t v0;
    // protected System.Int64 v1
    // Offset: 0x30
    int64_t v1;
    // protected System.Int64 v2
    // Offset: 0x38
    int64_t v2;
    // protected System.Int64 v3
    // Offset: 0x40
    int64_t v3;
    // protected System.Int64 m
    // Offset: 0x48
    int64_t m;
    // protected System.Int32 wordPos
    // Offset: 0x50
    int wordPos;
    // protected System.Int32 wordCount
    // Offset: 0x54
    int wordCount;
    // Creating interface conversion operator: operator Org::BouncyCastle::Crypto::IMac
    operator Org::BouncyCastle::Crypto::IMac() noexcept {
      return *reinterpret_cast<Org::BouncyCastle::Crypto::IMac*>(this);
    }
    // public System.Void .ctor(System.Int32 c, System.Int32 d)
    // Offset: 0x14A1238
    static SipHash* New_ctor(int c, int d);
    // public System.Int64 DoFinal()
    // Offset: 0x14A15E0
    int64_t DoFinal();
    // protected System.Void ProcessMessageWord()
    // Offset: 0x14A172C
    void ProcessMessageWord();
    // protected System.Void ApplySipRounds(System.Int32 n)
    // Offset: 0x14A1784
    void ApplySipRounds(int n);
    // static protected System.Int64 RotateLeft(System.Int64 x, System.Int32 n)
    // Offset: 0x14A17D0
    static int64_t RotateLeft(int64_t x, int n);
    // public System.Void .ctor()
    // Offset: 0x14A1204
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static SipHash* New_ctor();
    // public System.Int32 GetMacSize()
    // Offset: 0x14A1274
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Int32 IMac::GetMacSize()
    int GetMacSize();
    // public System.Void Init(Org.BouncyCastle.Crypto.ICipherParameters parameters)
    // Offset: 0x14A127C
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::Init(Org.BouncyCastle.Crypto.ICipherParameters parameters)
    void Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters);
    // public System.Void Update(System.Byte input)
    // Offset: 0x14A13C0
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::Update(System.Byte input)
    void Update(uint8_t input);
    // public System.Void BlockUpdate(System.Byte[] input, System.Int32 offset, System.Int32 length)
    // Offset: 0x14A1410
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::BlockUpdate(System.Byte[] input, System.Int32 offset, System.Int32 length)
    void BlockUpdate(::Array<uint8_t>* input, int offset, int length);
    // public System.Int32 DoFinal(System.Byte[] output, System.Int32 outOff)
    // Offset: 0x14A1680
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Int32 IMac::DoFinal(System.Byte[] output, System.Int32 outOff)
    int DoFinal(::Array<uint8_t>* output, int outOff);
    // public System.Void Reset()
    // Offset: 0x14A16C8
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::Reset()
    void Reset();
  }; // Org.BouncyCastle.Crypto.Macs.SipHash
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Macs::SipHash*, "Org.BouncyCastle.Crypto.Macs", "SipHash");
#pragma pack(pop)
