// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IMac
#include "Org/BouncyCastle/Crypto/IMac.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Crypto
namespace Org::BouncyCastle::Crypto {
  // Forward declaring type: ICipherParameters
  class ICipherParameters;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Crypto.Macs
namespace Org::BouncyCastle::Crypto::Macs {
  // Autogenerated type: Org.BouncyCastle.Crypto.Macs.VmpcMac
  class VmpcMac : public ::Il2CppObject/*, public Org::BouncyCastle::Crypto::IMac*/ {
    public:
    // private System.Byte g
    // Offset: 0x10
    uint8_t g;
    // private System.Byte n
    // Offset: 0x11
    uint8_t n;
    // private System.Byte[] P
    // Offset: 0x18
    ::Array<uint8_t>* P;
    // private System.Byte s
    // Offset: 0x20
    uint8_t s;
    // private System.Byte[] T
    // Offset: 0x28
    ::Array<uint8_t>* T;
    // private System.Byte[] workingIV
    // Offset: 0x30
    ::Array<uint8_t>* workingIV;
    // private System.Byte[] workingKey
    // Offset: 0x38
    ::Array<uint8_t>* workingKey;
    // private System.Byte x1
    // Offset: 0x40
    uint8_t x1;
    // private System.Byte x2
    // Offset: 0x41
    uint8_t x2;
    // private System.Byte x3
    // Offset: 0x42
    uint8_t x3;
    // private System.Byte x4
    // Offset: 0x43
    uint8_t x4;
    // Creating interface conversion operator: operator Org::BouncyCastle::Crypto::IMac
    operator Org::BouncyCastle::Crypto::IMac() noexcept {
      return *reinterpret_cast<Org::BouncyCastle::Crypto::IMac*>(this);
    }
    // private System.Void initKey(System.Byte[] keyBytes, System.Byte[] ivBytes)
    // Offset: 0x14A1E10
    void initKey(::Array<uint8_t>* keyBytes, ::Array<uint8_t>* ivBytes);
    // public System.Int32 DoFinal(System.Byte[] output, System.Int32 outOff)
    // Offset: 0x14A17DC
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Int32 IMac::DoFinal(System.Byte[] output, System.Int32 outOff)
    int DoFinal(::Array<uint8_t>* output, int outOff);
    // public System.Int32 GetMacSize()
    // Offset: 0x14A1C5C
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Int32 IMac::GetMacSize()
    int GetMacSize();
    // public System.Void Init(Org.BouncyCastle.Crypto.ICipherParameters parameters)
    // Offset: 0x14A1C64
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::Init(Org.BouncyCastle.Crypto.ICipherParameters parameters)
    void Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters);
    // public System.Void Reset()
    // Offset: 0x14A2048
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::Reset()
    void Reset();
    // public System.Void Update(System.Byte input)
    // Offset: 0x14A2100
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::Update(System.Byte input)
    void Update(uint8_t input);
    // public System.Void BlockUpdate(System.Byte[] input, System.Int32 inOff, System.Int32 len)
    // Offset: 0x14A236C
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::BlockUpdate(System.Byte[] input, System.Int32 inOff, System.Int32 len)
    void BlockUpdate(::Array<uint8_t>* input, int inOff, int len);
    // public System.Void .ctor()
    // Offset: 0x14A2494
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static VmpcMac* New_ctor();
  }; // Org.BouncyCastle.Crypto.Macs.VmpcMac
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Macs::VmpcMac*, "Org.BouncyCastle.Crypto.Macs", "VmpcMac");
#pragma pack(pop)
