// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IMac
#include "Org/BouncyCastle/Crypto/IMac.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Crypto
namespace Org::BouncyCastle::Crypto {
  // Forward declaring type: IBlockCipher
  class IBlockCipher;
  // Forward declaring type: ICipherParameters
  class ICipherParameters;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Crypto.Macs
namespace Org::BouncyCastle::Crypto::Macs {
  // Autogenerated type: Org.BouncyCastle.Crypto.Macs.Poly1305
  class Poly1305 : public ::Il2CppObject/*, public Org::BouncyCastle::Crypto::IMac*/ {
    public:
    // private readonly Org.BouncyCastle.Crypto.IBlockCipher cipher
    // Offset: 0x10
    Org::BouncyCastle::Crypto::IBlockCipher* cipher;
    // private readonly System.Byte[] singleByte
    // Offset: 0x18
    ::Array<uint8_t>* singleByte;
    // private System.UInt32 r0
    // Offset: 0x20
    uint r0;
    // private System.UInt32 r1
    // Offset: 0x24
    uint r1;
    // private System.UInt32 r2
    // Offset: 0x28
    uint r2;
    // private System.UInt32 r3
    // Offset: 0x2C
    uint r3;
    // private System.UInt32 r4
    // Offset: 0x30
    uint r4;
    // private System.UInt32 s1
    // Offset: 0x34
    uint s1;
    // private System.UInt32 s2
    // Offset: 0x38
    uint s2;
    // private System.UInt32 s3
    // Offset: 0x3C
    uint s3;
    // private System.UInt32 s4
    // Offset: 0x40
    uint s4;
    // private System.UInt32 k0
    // Offset: 0x44
    uint k0;
    // private System.UInt32 k1
    // Offset: 0x48
    uint k1;
    // private System.UInt32 k2
    // Offset: 0x4C
    uint k2;
    // private System.UInt32 k3
    // Offset: 0x50
    uint k3;
    // private System.Byte[] currentBlock
    // Offset: 0x58
    ::Array<uint8_t>* currentBlock;
    // private System.Int32 currentBlockOffset
    // Offset: 0x60
    int currentBlockOffset;
    // private System.UInt32 h0
    // Offset: 0x64
    uint h0;
    // private System.UInt32 h1
    // Offset: 0x68
    uint h1;
    // private System.UInt32 h2
    // Offset: 0x6C
    uint h2;
    // private System.UInt32 h3
    // Offset: 0x70
    uint h3;
    // private System.UInt32 h4
    // Offset: 0x74
    uint h4;
    // Creating interface conversion operator: operator Org::BouncyCastle::Crypto::IMac
    operator Org::BouncyCastle::Crypto::IMac() noexcept {
      return *reinterpret_cast<Org::BouncyCastle::Crypto::IMac*>(this);
    }
    // private System.Void SetKey(System.Byte[] key, System.Byte[] nonce)
    // Offset: 0x14A0960
    void SetKey(::Array<uint8_t>* key, ::Array<uint8_t>* nonce);
    // private System.Void ProcessBlock()
    // Offset: 0x14A0DDC
    void ProcessBlock();
    // static private System.UInt64 mul32x32_64(System.UInt32 i1, System.UInt32 i2)
    // Offset: 0x14A100C
    static uint64_t mul32x32_64(uint i1, uint i2);
    // public System.Void .ctor()
    // Offset: 0x14A0748
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static Poly1305* New_ctor();
    // public System.Void Init(Org.BouncyCastle.Crypto.ICipherParameters parameters)
    // Offset: 0x14A07E4
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::Init(Org.BouncyCastle.Crypto.ICipherParameters parameters)
    void Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters);
    // public System.Int32 GetMacSize()
    // Offset: 0x14A0C9C
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Int32 IMac::GetMacSize()
    int GetMacSize();
    // public System.Void Update(System.Byte input)
    // Offset: 0x14A0CA4
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::Update(System.Byte input)
    void Update(uint8_t input);
    // public System.Void BlockUpdate(System.Byte[] input, System.Int32 inOff, System.Int32 len)
    // Offset: 0x14A0CE4
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::BlockUpdate(System.Byte[] input, System.Int32 inOff, System.Int32 len)
    void BlockUpdate(::Array<uint8_t>* input, int inOff, int len);
    // public System.Int32 DoFinal(System.Byte[] output, System.Int32 outOff)
    // Offset: 0x14A1014
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Int32 IMac::DoFinal(System.Byte[] output, System.Int32 outOff)
    int DoFinal(::Array<uint8_t>* output, int outOff);
    // public System.Void Reset()
    // Offset: 0x14A0C90
    // Implemented from: Org.BouncyCastle.Crypto.IMac
    // Base method: System.Void IMac::Reset()
    void Reset();
  }; // Org.BouncyCastle.Crypto.Macs.Poly1305
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Macs::Poly1305*, "Org.BouncyCastle.Crypto.Macs", "Poly1305");
#pragma pack(pop)
