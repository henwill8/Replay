// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Modes.Gcm.IGcmMultiplier
#include "Org/BouncyCastle/Crypto/Modes/Gcm/IGcmMultiplier.hpp"
// Completed includes
// Type namespace: Org.BouncyCastle.Crypto.Modes.Gcm
namespace Org::BouncyCastle::Crypto::Modes::Gcm {
  // Autogenerated type: Org.BouncyCastle.Crypto.Modes.Gcm.Tables8kGcmMultiplier
  class Tables8kGcmMultiplier : public ::Il2CppObject/*, public Org::BouncyCastle::Crypto::Modes::Gcm::IGcmMultiplier*/ {
    public:
    // private System.Byte[] H
    // Offset: 0x10
    ::Array<uint8_t>* H;
    // private System.UInt32[][][] M
    // Offset: 0x18
    ::Array<::Array<::Array<uint>*>*>* M;
    // Creating interface conversion operator: operator Org::BouncyCastle::Crypto::Modes::Gcm::IGcmMultiplier
    operator Org::BouncyCastle::Crypto::Modes::Gcm::IGcmMultiplier() noexcept {
      return *reinterpret_cast<Org::BouncyCastle::Crypto::Modes::Gcm::IGcmMultiplier*>(this);
    }
    // public System.Void Init(System.Byte[] H)
    // Offset: 0x14AACB0
    // Implemented from: Org.BouncyCastle.Crypto.Modes.Gcm.IGcmMultiplier
    // Base method: System.Void IGcmMultiplier::Init(System.Byte[] H)
    void Init(::Array<uint8_t>* H);
    // public System.Void MultiplyH(System.Byte[] x)
    // Offset: 0x14AB5D4
    // Implemented from: Org.BouncyCastle.Crypto.Modes.Gcm.IGcmMultiplier
    // Base method: System.Void IGcmMultiplier::MultiplyH(System.Byte[] x)
    void MultiplyH(::Array<uint8_t>* x);
    // public System.Void .ctor()
    // Offset: 0x14AB7F8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static Tables8kGcmMultiplier* New_ctor();
  }; // Org.BouncyCastle.Crypto.Modes.Gcm.Tables8kGcmMultiplier
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Crypto::Modes::Gcm::Tables8kGcmMultiplier*, "Org.BouncyCastle.Crypto.Modes.Gcm", "Tables8kGcmMultiplier");
#pragma pack(pop)
