// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IList
  class IList;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Utilities.IO.Pem
namespace Org::BouncyCastle::Utilities::IO::Pem {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Org.BouncyCastle.Utilities.IO.Pem.PemObject
  // [] Offset: FFFFFFFF
  class PemObject : public ::Il2CppObject {
    public:
    // private System.String type
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* type;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Collections.IList headers
    // Size: 0x8
    // Offset: 0x18
    System::Collections::IList* headers;
    // Field size check
    static_assert(sizeof(System::Collections::IList*) == 0x8);
    // private System.Byte[] content
    // Size: 0x8
    // Offset: 0x20
    ::Array<uint8_t>* content;
    // Field size check
    static_assert(sizeof(::Array<uint8_t>*) == 0x8);
    // Creating value type constructor for type: PemObject
    PemObject(::Il2CppString* type_ = {}, System::Collections::IList* headers_ = {}, ::Array<uint8_t>* content_ = {}) noexcept : type{type_}, headers{headers_}, content{content_} {}
    // public System.Void .ctor(System.String type, System.Collections.IList headers, System.Byte[] content)
    // Offset: 0x1E5DA98
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PemObject* New_ctor(::Il2CppString* type, System::Collections::IList* headers, ::Array<uint8_t>* content) {
      static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::Pem::PemObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PemObject*, creationType>(type, headers, content)));
    }
    // public System.String get_Type()
    // Offset: 0x1E5DBB8
    ::Il2CppString* get_Type();
    // public System.Collections.IList get_Headers()
    // Offset: 0x1E5DBC0
    System::Collections::IList* get_Headers();
    // public System.Byte[] get_Content()
    // Offset: 0x1E5DBC8
    ::Array<uint8_t>* get_Content();
  }; // Org.BouncyCastle.Utilities.IO.Pem.PemObject
  #pragma pack(pop)
  static check_size<sizeof(PemObject), 32 + sizeof(::Array<uint8_t>*)> __Org_BouncyCastle_Utilities_IO_Pem_PemObjectSizeCheck;
  static_assert(sizeof(PemObject) == 0x28);
}
DEFINE_IL2CPP_ARG_TYPE(Org::BouncyCastle::Utilities::IO::Pem::PemObject*, "Org.BouncyCastle.Utilities.IO.Pem", "PemObject");
