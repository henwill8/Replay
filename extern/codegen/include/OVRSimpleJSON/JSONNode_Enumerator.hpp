// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Collections.Generic.Dictionary`2/Enumerator
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1/Enumerator
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: KeyValuePair`2 because it is already included!
}
// Completed forward declares
// Type namespace: OVRSimpleJSON
namespace OVRSimpleJSON {
  // Autogenerated type: OVRSimpleJSON.JSONNode/Enumerator
  struct JSONNode::Enumerator : public System::ValueType {
    public:
    // Nested type: OVRSimpleJSON::JSONNode::Enumerator::Type
    struct Type;
    // Autogenerated type: OVRSimpleJSON.JSONNode/Enumerator/Type
    struct Type : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // Creating value type constructor for type: Type
      constexpr Type(int value_ = {}) noexcept : value{value_} {}
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public OVRSimpleJSON.JSONNode/Enumerator/Type None
      static constexpr const int None = 0;
      // Get static field: static public OVRSimpleJSON.JSONNode/Enumerator/Type None
      static OVRSimpleJSON::JSONNode::Enumerator::Type _get_None();
      // Set static field: static public OVRSimpleJSON.JSONNode/Enumerator/Type None
      static void _set_None(OVRSimpleJSON::JSONNode::Enumerator::Type value);
      // static field const value: static public OVRSimpleJSON.JSONNode/Enumerator/Type Array
      static constexpr const int Array = 1;
      // Get static field: static public OVRSimpleJSON.JSONNode/Enumerator/Type Array
      static OVRSimpleJSON::JSONNode::Enumerator::Type _get_Array();
      // Set static field: static public OVRSimpleJSON.JSONNode/Enumerator/Type Array
      static void _set_Array(OVRSimpleJSON::JSONNode::Enumerator::Type value);
      // static field const value: static public OVRSimpleJSON.JSONNode/Enumerator/Type Object
      static constexpr const int Object = 2;
      // Get static field: static public OVRSimpleJSON.JSONNode/Enumerator/Type Object
      static OVRSimpleJSON::JSONNode::Enumerator::Type _get_Object();
      // Set static field: static public OVRSimpleJSON.JSONNode/Enumerator/Type Object
      static void _set_Object(OVRSimpleJSON::JSONNode::Enumerator::Type value);
    }; // OVRSimpleJSON.JSONNode/Enumerator/Type
    // private OVRSimpleJSON.JSONNode/Enumerator/Type type
    // Offset: 0x0
    OVRSimpleJSON::JSONNode::Enumerator::Type type;
    // private System.Collections.Generic.Dictionary`2/Enumerator<System.String,OVRSimpleJSON.JSONNode> m_Object
    // Offset: 0x8
    typename System::Collections::Generic::Dictionary_2<::Il2CppString*, OVRSimpleJSON::JSONNode*>::Enumerator m_Object;
    // private System.Collections.Generic.List`1/Enumerator<OVRSimpleJSON.JSONNode> m_Array
    // Offset: 0x30
    typename System::Collections::Generic::List_1<OVRSimpleJSON::JSONNode*>::Enumerator m_Array;
    // Creating value type constructor for type: Enumerator
    constexpr Enumerator(OVRSimpleJSON::JSONNode::Enumerator::Type type_ = {}, typename System::Collections::Generic::Dictionary_2<::Il2CppString*, OVRSimpleJSON::JSONNode*>::Enumerator m_Object_ = {}, typename System::Collections::Generic::List_1<OVRSimpleJSON::JSONNode*>::Enumerator m_Array_ = {}) noexcept : type{type_}, m_Object{m_Object_}, m_Array{m_Array_} {}
    // public System.Boolean get_IsValid()
    // Offset: 0xC9BFAC
    bool get_IsValid();
    // public System.Void .ctor(System.Collections.Generic.List`1/Enumerator<OVRSimpleJSON.JSONNode> aArrayEnum)
    // Offset: 0xC9BFBC
    Enumerator(typename System::Collections::Generic::List_1<OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum);
    // public System.Void .ctor(System.Collections.Generic.Dictionary`2/Enumerator<System.String,OVRSimpleJSON.JSONNode> aDictEnum)
    // Offset: 0xC9C004
    Enumerator(typename System::Collections::Generic::Dictionary_2<::Il2CppString*, OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum);
    // public System.Collections.Generic.KeyValuePair`2<System.String,OVRSimpleJSON.JSONNode> get_Current()
    // Offset: 0xC9C064
    System::Collections::Generic::KeyValuePair_2<::Il2CppString*, OVRSimpleJSON::JSONNode*> get_Current();
    // public System.Boolean MoveNext()
    // Offset: 0xC9C06C
    bool MoveNext();
  }; // OVRSimpleJSON.JSONNode/Enumerator
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(OVRSimpleJSON::JSONNode::Enumerator, "OVRSimpleJSON", "JSONNode/Enumerator");
DEFINE_IL2CPP_ARG_TYPE(OVRSimpleJSON::JSONNode::Enumerator::Type, "OVRSimpleJSON", "JSONNode/Enumerator/Type");
#pragma pack(pop)
