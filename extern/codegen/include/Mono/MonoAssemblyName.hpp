// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include <stdint.h>
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Type namespace: Mono
namespace Mono {
  // Autogenerated type: Mono.MonoAssemblyName
  struct MonoAssemblyName : public System::ValueType {
    public:
    // Nested type: Mono::MonoAssemblyName::$public_key_token$e__FixedBuffer
    struct $public_key_token$e__FixedBuffer;
    // Autogenerated type: Mono.MonoAssemblyName/<public_key_token>e__FixedBuffer
    struct $public_key_token$e__FixedBuffer : public System::ValueType {
      public:
      // public System.Byte FixedElementField
      // Offset: 0x0
      uint8_t FixedElementField;
      // Creating value type constructor for type: $public_key_token$e__FixedBuffer
      constexpr $public_key_token$e__FixedBuffer(uint8_t FixedElementField_ = {}) noexcept : FixedElementField{FixedElementField_} {}
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return FixedElementField;
      }
    }; // Mono.MonoAssemblyName/<public_key_token>e__FixedBuffer
    // System.IntPtr name
    // Offset: 0x0
    System::IntPtr name;
    // System.IntPtr culture
    // Offset: 0x8
    System::IntPtr culture;
    // System.IntPtr hash_value
    // Offset: 0x10
    System::IntPtr hash_value;
    // System.IntPtr public_key
    // Offset: 0x18
    System::IntPtr public_key;
    // Mono.MonoAssemblyName/<public_key_token>e__FixedBuffer public_key_token
    // Offset: 0x20
    Mono::MonoAssemblyName::$public_key_token$e__FixedBuffer public_key_token;
    // System.UInt32 hash_alg
    // Offset: 0x34
    uint hash_alg;
    // System.UInt32 hash_len
    // Offset: 0x38
    uint hash_len;
    // System.UInt32 flags
    // Offset: 0x3C
    uint flags;
    // System.UInt16 major
    // Offset: 0x40
    uint16_t major;
    // System.UInt16 minor
    // Offset: 0x42
    uint16_t minor;
    // System.UInt16 build
    // Offset: 0x44
    uint16_t build;
    // System.UInt16 revision
    // Offset: 0x46
    uint16_t revision;
    // System.UInt16 arch
    // Offset: 0x48
    uint16_t arch;
    // Creating value type constructor for type: MonoAssemblyName
    constexpr MonoAssemblyName(System::IntPtr name_ = {}, System::IntPtr culture_ = {}, System::IntPtr hash_value_ = {}, System::IntPtr public_key_ = {}, Mono::MonoAssemblyName::$public_key_token$e__FixedBuffer public_key_token_ = {}, uint hash_alg_ = {}, uint hash_len_ = {}, uint flags_ = {}, uint16_t major_ = {}, uint16_t minor_ = {}, uint16_t build_ = {}, uint16_t revision_ = {}, uint16_t arch_ = {}) noexcept : name{name_}, culture{culture_}, hash_value{hash_value_}, public_key{public_key_}, public_key_token{public_key_token_}, hash_alg{hash_alg_}, hash_len{hash_len_}, flags{flags_}, major{major_}, minor{minor_}, build{build_}, revision{revision_}, arch{arch_} {}
  }; // Mono.MonoAssemblyName
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Mono::MonoAssemblyName, "Mono", "MonoAssemblyName");
DEFINE_IL2CPP_ARG_TYPE(Mono::MonoAssemblyName::$public_key_token$e__FixedBuffer, "Mono", "MonoAssemblyName/<public_key_token>e__FixedBuffer");
#pragma pack(pop)
