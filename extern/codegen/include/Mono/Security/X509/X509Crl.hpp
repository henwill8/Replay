// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Security::X509
namespace Mono::Security::X509 {
  // Forward declaring type: X509ExtensionCollection
  class X509ExtensionCollection;
  // Forward declaring type: X509Certificate
  class X509Certificate;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: DSA
  class DSA;
  // Forward declaring type: RSA
  class RSA;
  // Forward declaring type: AsymmetricAlgorithm
  class AsymmetricAlgorithm;
}
// Completed forward declares
// Type namespace: Mono.Security.X509
namespace Mono::Security::X509 {
  // Autogenerated type: Mono.Security.X509.X509Crl
  class X509Crl : public ::Il2CppObject {
    public:
    // Nested type: Mono::Security::X509::X509Crl::X509CrlEntry
    class X509CrlEntry;
    // private System.String issuer
    // Offset: 0x10
    ::Il2CppString* issuer;
    // private System.Byte version
    // Offset: 0x18
    uint8_t version;
    // private System.DateTime thisUpdate
    // Offset: 0x20
    System::DateTime thisUpdate;
    // private System.DateTime nextUpdate
    // Offset: 0x28
    System::DateTime nextUpdate;
    // private System.Collections.ArrayList entries
    // Offset: 0x30
    System::Collections::ArrayList* entries;
    // private System.String signatureOID
    // Offset: 0x38
    ::Il2CppString* signatureOID;
    // private System.Byte[] signature
    // Offset: 0x40
    ::Array<uint8_t>* signature;
    // private Mono.Security.X509.X509ExtensionCollection extensions
    // Offset: 0x48
    Mono::Security::X509::X509ExtensionCollection* extensions;
    // private System.Byte[] encoded
    // Offset: 0x50
    ::Array<uint8_t>* encoded;
    // private System.Byte[] hash_value
    // Offset: 0x58
    ::Array<uint8_t>* hash_value;
    // public System.Void .ctor(System.Byte[] crl)
    // Offset: 0x19C3F78
    static X509Crl* New_ctor(::Array<uint8_t>* crl);
    // private System.Void Parse(System.Byte[] crl)
    // Offset: 0x19C4060
    void Parse(::Array<uint8_t>* crl);
    // public Mono.Security.X509.X509ExtensionCollection get_Extensions()
    // Offset: 0x19C482C
    Mono::Security::X509::X509ExtensionCollection* get_Extensions();
    // public System.Byte[] get_Hash()
    // Offset: 0x19C4834
    ::Array<uint8_t>* get_Hash();
    // public System.String get_IssuerName()
    // Offset: 0x19C49EC
    ::Il2CppString* get_IssuerName();
    // public System.DateTime get_NextUpdate()
    // Offset: 0x19C49F4
    System::DateTime get_NextUpdate();
    // private System.Boolean Compare(System.Byte[] array1, System.Byte[] array2)
    // Offset: 0x19C49FC
    bool Compare(::Array<uint8_t>* array1, ::Array<uint8_t>* array2);
    // public Mono.Security.X509.X509Crl/X509CrlEntry GetCrlEntry(Mono.Security.X509.X509Certificate x509)
    // Offset: 0x19C4A7C
    Mono::Security::X509::X509Crl::X509CrlEntry* GetCrlEntry(Mono::Security::X509::X509Certificate* x509);
    // public Mono.Security.X509.X509Crl/X509CrlEntry GetCrlEntry(System.Byte[] serialNumber)
    // Offset: 0x19C4B24
    Mono::Security::X509::X509Crl::X509CrlEntry* GetCrlEntry(::Array<uint8_t>* serialNumber);
    // System.Boolean VerifySignature(System.Security.Cryptography.DSA dsa)
    // Offset: 0x19C4CEC
    bool VerifySignature(System::Security::Cryptography::DSA* dsa);
    // System.Boolean VerifySignature(System.Security.Cryptography.RSA rsa)
    // Offset: 0x19C4F88
    bool VerifySignature(System::Security::Cryptography::RSA* rsa);
    // public System.Boolean VerifySignature(System.Security.Cryptography.AsymmetricAlgorithm aa)
    // Offset: 0x19C5060
    bool VerifySignature(System::Security::Cryptography::AsymmetricAlgorithm* aa);
  }; // Mono.Security.X509.X509Crl
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Mono::Security::X509::X509Crl*, "Mono.Security.X509", "X509Crl");
#pragma pack(pop)
