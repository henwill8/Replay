// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Security
namespace Mono::Security {
  // Forward declaring type: ASN1
  class ASN1;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: Mono.Security.X509
namespace Mono::Security::X509 {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Security.X509.X501
  // [] Offset: FFFFFFFF
  class X501 : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: X501
    X501() noexcept {}
    // Get static field: static private System.Byte[] countryName
    static ::Array<uint8_t>* _get_countryName();
    // Set static field: static private System.Byte[] countryName
    static void _set_countryName(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] organizationName
    static ::Array<uint8_t>* _get_organizationName();
    // Set static field: static private System.Byte[] organizationName
    static void _set_organizationName(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] organizationalUnitName
    static ::Array<uint8_t>* _get_organizationalUnitName();
    // Set static field: static private System.Byte[] organizationalUnitName
    static void _set_organizationalUnitName(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] commonName
    static ::Array<uint8_t>* _get_commonName();
    // Set static field: static private System.Byte[] commonName
    static void _set_commonName(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] localityName
    static ::Array<uint8_t>* _get_localityName();
    // Set static field: static private System.Byte[] localityName
    static void _set_localityName(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] stateOrProvinceName
    static ::Array<uint8_t>* _get_stateOrProvinceName();
    // Set static field: static private System.Byte[] stateOrProvinceName
    static void _set_stateOrProvinceName(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] streetAddress
    static ::Array<uint8_t>* _get_streetAddress();
    // Set static field: static private System.Byte[] streetAddress
    static void _set_streetAddress(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] domainComponent
    static ::Array<uint8_t>* _get_domainComponent();
    // Set static field: static private System.Byte[] domainComponent
    static void _set_domainComponent(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] userid
    static ::Array<uint8_t>* _get_userid();
    // Set static field: static private System.Byte[] userid
    static void _set_userid(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] email
    static ::Array<uint8_t>* _get_email();
    // Set static field: static private System.Byte[] email
    static void _set_email(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] dnQualifier
    static ::Array<uint8_t>* _get_dnQualifier();
    // Set static field: static private System.Byte[] dnQualifier
    static void _set_dnQualifier(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] title
    static ::Array<uint8_t>* _get_title();
    // Set static field: static private System.Byte[] title
    static void _set_title(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] surname
    static ::Array<uint8_t>* _get_surname();
    // Set static field: static private System.Byte[] surname
    static void _set_surname(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] givenName
    static ::Array<uint8_t>* _get_givenName();
    // Set static field: static private System.Byte[] givenName
    static void _set_givenName(::Array<uint8_t>* value);
    // Get static field: static private System.Byte[] initial
    static ::Array<uint8_t>* _get_initial();
    // Set static field: static private System.Byte[] initial
    static void _set_initial(::Array<uint8_t>* value);
    // static public System.String ToString(Mono.Security.ASN1 seq)
    // Offset: 0x228F398
    static ::Il2CppString* ToString(Mono::Security::ASN1* seq);
    // static public System.String ToString(Mono.Security.ASN1 seq, System.Boolean reversed, System.String separator, System.Boolean quotes)
    // Offset: 0x228FBF0
    static ::Il2CppString* ToString(Mono::Security::ASN1* seq, bool reversed, ::Il2CppString* separator, bool quotes);
    // static private System.Void AppendEntry(System.Text.StringBuilder sb, Mono.Security.ASN1 entry, System.Boolean quotes)
    // Offset: 0x228F4C8
    static void AppendEntry(System::Text::StringBuilder* sb, Mono::Security::ASN1* entry, bool quotes);
    // static private System.Void .cctor()
    // Offset: 0x228FDB8
    static void _cctor();
  }; // Mono.Security.X509.X501
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Mono::Security::X509::X501*, "Mono.Security.X509", "X501");
