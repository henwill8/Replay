// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.PKCS7
#include "Mono/Security/PKCS7.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Security
namespace Mono::Security {
  // Forward declaring type: ASN1
  class ASN1;
}
// Completed forward declares
// Type namespace: Mono.Security
namespace Mono::Security {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Security.PKCS7/ContentInfo
  // [] Offset: FFFFFFFF
  class PKCS7::ContentInfo : public ::Il2CppObject {
    public:
    // private System.String contentType
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* contentType;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private Mono.Security.ASN1 content
    // Size: 0x8
    // Offset: 0x18
    Mono::Security::ASN1* content;
    // Field size check
    static_assert(sizeof(Mono::Security::ASN1*) == 0x8);
    // Creating value type constructor for type: ContentInfo
    ContentInfo(::Il2CppString* contentType_ = {}, Mono::Security::ASN1* content_ = {}) noexcept : contentType{contentType_}, content{content_} {}
    // public System.Void .ctor(System.String oid)
    // Offset: 0x1BF1298
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PKCS7::ContentInfo* New_ctor(::Il2CppString* oid) {
      static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::ContentInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PKCS7::ContentInfo*, creationType>(oid)));
    }
    // public System.Void .ctor(System.Byte[] data)
    // Offset: 0x1BF12C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PKCS7::ContentInfo* New_ctor(::Array<uint8_t>* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::ContentInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PKCS7::ContentInfo*, creationType>(data)));
    }
    // public System.Void .ctor(Mono.Security.ASN1 asn1)
    // Offset: 0x1BF1338
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PKCS7::ContentInfo* New_ctor(Mono::Security::ASN1* asn1) {
      static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::ContentInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PKCS7::ContentInfo*, creationType>(asn1)));
    }
    // public Mono.Security.ASN1 get_ASN1()
    // Offset: 0x1BF14F8
    Mono::Security::ASN1* get_ASN1();
    // public Mono.Security.ASN1 get_Content()
    // Offset: 0x1BF15C4
    Mono::Security::ASN1* get_Content();
    // public System.Void set_Content(Mono.Security.ASN1 value)
    // Offset: 0x1BF15CC
    void set_Content(Mono::Security::ASN1* value);
    // public System.String get_ContentType()
    // Offset: 0x1BF15D4
    ::Il2CppString* get_ContentType();
    // public System.Void set_ContentType(System.String value)
    // Offset: 0x1BF15DC
    void set_ContentType(::Il2CppString* value);
    // Mono.Security.ASN1 GetASN1()
    // Offset: 0x1BF14FC
    Mono::Security::ASN1* GetASN1();
    // public System.Void .ctor()
    // Offset: 0x1BF120C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PKCS7::ContentInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::ContentInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PKCS7::ContentInfo*, creationType>()));
    }
  }; // Mono.Security.PKCS7/ContentInfo
  #pragma pack(pop)
  static check_size<sizeof(PKCS7::ContentInfo), 24 + sizeof(Mono::Security::ASN1*)> __Mono_Security_PKCS7_ContentInfoSizeCheck;
  static_assert(sizeof(PKCS7::ContentInfo) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(Mono::Security::PKCS7::ContentInfo*, "Mono.Security", "PKCS7/ContentInfo");
