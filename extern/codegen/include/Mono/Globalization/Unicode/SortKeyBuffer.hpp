// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: SortKey
  class SortKey;
}
// Completed forward declares
// Type namespace: Mono.Globalization.Unicode
namespace Mono::Globalization::Unicode {
  // Autogenerated type: Mono.Globalization.Unicode.SortKeyBuffer
  class SortKeyBuffer : public ::Il2CppObject {
    public:
    // private System.Byte[] l1b
    // Offset: 0x10
    ::Array<uint8_t>* l1b;
    // private System.Byte[] l2b
    // Offset: 0x18
    ::Array<uint8_t>* l2b;
    // private System.Byte[] l3b
    // Offset: 0x20
    ::Array<uint8_t>* l3b;
    // private System.Byte[] l4sb
    // Offset: 0x28
    ::Array<uint8_t>* l4sb;
    // private System.Byte[] l4tb
    // Offset: 0x30
    ::Array<uint8_t>* l4tb;
    // private System.Byte[] l4kb
    // Offset: 0x38
    ::Array<uint8_t>* l4kb;
    // private System.Byte[] l4wb
    // Offset: 0x40
    ::Array<uint8_t>* l4wb;
    // private System.Byte[] l5b
    // Offset: 0x48
    ::Array<uint8_t>* l5b;
    // private System.String source
    // Offset: 0x50
    ::Il2CppString* source;
    // private System.Int32 l1
    // Offset: 0x58
    int l1;
    // private System.Int32 l2
    // Offset: 0x5C
    int l2;
    // private System.Int32 l3
    // Offset: 0x60
    int l3;
    // private System.Int32 l4s
    // Offset: 0x64
    int l4s;
    // private System.Int32 l4t
    // Offset: 0x68
    int l4t;
    // private System.Int32 l4k
    // Offset: 0x6C
    int l4k;
    // private System.Int32 l4w
    // Offset: 0x70
    int l4w;
    // private System.Int32 l5
    // Offset: 0x74
    int l5;
    // private System.Int32 lcid
    // Offset: 0x78
    int lcid;
    // private System.Globalization.CompareOptions options
    // Offset: 0x7C
    System::Globalization::CompareOptions options;
    // private System.Boolean processLevel2
    // Offset: 0x80
    bool processLevel2;
    // private System.Boolean frenchSort
    // Offset: 0x81
    bool frenchSort;
    // private System.Boolean frenchSorted
    // Offset: 0x82
    bool frenchSorted;
    // public System.Void .ctor(System.Int32 lcid)
    // Offset: 0x10B4568
    static SortKeyBuffer* New_ctor(int lcid);
    // public System.Void Reset()
    // Offset: 0x10B8BB4
    void Reset();
    // System.Void Initialize(System.Globalization.CompareOptions options, System.Int32 lcid, System.String s, System.Boolean frenchSort)
    // Offset: 0x10B4570
    void Initialize(System::Globalization::CompareOptions options, int lcid, ::Il2CppString* s, bool frenchSort);
    // System.Void AppendCJKExtension(System.Byte lv1msb, System.Byte lv1lsb)
    // Offset: 0x10B50D8
    void AppendCJKExtension(uint8_t lv1msb, uint8_t lv1lsb);
    // System.Void AppendKana(System.Byte category, System.Byte lv1, System.Byte lv2, System.Byte lv3, System.Boolean isSmallKana, System.Byte markType, System.Boolean isKatakana, System.Boolean isHalfWidth)
    // Offset: 0x10B5230
    void AppendKana(uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3, bool isSmallKana, uint8_t markType, bool isKatakana, bool isHalfWidth);
    // System.Void AppendNormal(System.Byte category, System.Byte lv1, System.Byte lv2, System.Byte lv3)
    // Offset: 0x10B4F88
    void AppendNormal(uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3);
    // private System.Void AppendLevel5(System.Byte category, System.Byte lv1)
    // Offset: 0x10B8CB4
    void AppendLevel5(uint8_t category, uint8_t lv1);
    // private System.Void AppendBufferPrimitive(System.Byte value, ref System.Byte[] buf, ref System.Int32 bidx)
    // Offset: 0x10B8BC4
    void AppendBufferPrimitive(uint8_t value, ::Array<uint8_t>*& buf, int& bidx);
    // public System.Globalization.SortKey GetResultAndReset()
    // Offset: 0x10B4B60
    System::Globalization::SortKey* GetResultAndReset();
    // private System.Int32 GetOptimizedLength(System.Byte[] data, System.Int32 len, System.Byte defaultValue)
    // Offset: 0x10B9238
    int GetOptimizedLength(::Array<uint8_t>* data, int len, uint8_t defaultValue);
    // public System.Globalization.SortKey GetResult()
    // Offset: 0x10B8D58
    System::Globalization::SortKey* GetResult();
  }; // Mono.Globalization.Unicode.SortKeyBuffer
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Mono::Globalization::Unicode::SortKeyBuffer*, "Mono.Globalization.Unicode", "SortKeyBuffer");
#pragma pack(pop)
