// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Completed includes
// Type namespace: Mono.Math
namespace Mono::Math {
  // Autogenerated type: Mono.Math.BigInteger/ModulusRing
  class BigInteger::ModulusRing : public ::Il2CppObject {
    public:
    // private Mono.Math.BigInteger mod
    // Offset: 0x10
    Mono::Math::BigInteger* mod;
    // private Mono.Math.BigInteger constant
    // Offset: 0x18
    Mono::Math::BigInteger* constant;
    // public System.Void .ctor(Mono.Math.BigInteger modulus)
    // Offset: 0x17AD614
    static BigInteger::ModulusRing* New_ctor(Mono::Math::BigInteger* modulus);
    // public System.Void BarrettReduction(Mono.Math.BigInteger x)
    // Offset: 0x17AD948
    void BarrettReduction(Mono::Math::BigInteger* x);
    // public Mono.Math.BigInteger Multiply(Mono.Math.BigInteger a, Mono.Math.BigInteger b)
    // Offset: 0x17ADBB8
    Mono::Math::BigInteger* Multiply(Mono::Math::BigInteger* a, Mono::Math::BigInteger* b);
    // public Mono.Math.BigInteger Difference(Mono.Math.BigInteger a, Mono.Math.BigInteger b)
    // Offset: 0x17AD738
    Mono::Math::BigInteger* Difference(Mono::Math::BigInteger* a, Mono::Math::BigInteger* b);
    // public Mono.Math.BigInteger Pow(Mono.Math.BigInteger a, Mono.Math.BigInteger k)
    // Offset: 0x17ADD88
    Mono::Math::BigInteger* Pow(Mono::Math::BigInteger* a, Mono::Math::BigInteger* k);
    // public Mono.Math.BigInteger Pow(System.UInt32 b, Mono.Math.BigInteger exp)
    // Offset: 0x17ADEA4
    Mono::Math::BigInteger* Pow(uint b, Mono::Math::BigInteger* exp);
  }; // Mono.Math.BigInteger/ModulusRing
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Mono::Math::BigInteger::ModulusRing*, "Mono.Math", "BigInteger/ModulusRing");
#pragma pack(pop)
