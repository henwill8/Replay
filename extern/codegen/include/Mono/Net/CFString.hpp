// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFObject
#include "Mono/Net/CFObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Net
namespace Mono::Net {
  // Forward declaring type: CFRange
  struct CFRange;
}
// Completed forward declares
// Type namespace: Mono.Net
namespace Mono::Net {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Net.CFString
  // [] Offset: FFFFFFFF
  class CFString : public Mono::Net::CFObject {
    public:
    // private System.String str
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* str;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: CFString
    CFString(::Il2CppString* str_ = {}) noexcept : str{str_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // static private System.IntPtr CFStringCreateWithCharacters(System.IntPtr alloc, System.IntPtr chars, System.IntPtr length)
    // Offset: 0x14A0D04
    static System::IntPtr CFStringCreateWithCharacters(System::IntPtr alloc, System::IntPtr chars, System::IntPtr length);
    // static public Mono.Net.CFString Create(System.String value)
    // Offset: 0x149E3DC
    static Mono::Net::CFString* Create(::Il2CppString* value);
    // static private System.IntPtr CFStringGetLength(System.IntPtr handle)
    // Offset: 0x14A0D9C
    static System::IntPtr CFStringGetLength(System::IntPtr handle);
    // static private System.IntPtr CFStringGetCharactersPtr(System.IntPtr handle)
    // Offset: 0x14A0E1C
    static System::IntPtr CFStringGetCharactersPtr(System::IntPtr handle);
    // static private System.IntPtr CFStringGetCharacters(System.IntPtr handle, Mono.Net.CFRange range, System.IntPtr buffer)
    // Offset: 0x14A0E9C
    static System::IntPtr CFStringGetCharacters(System::IntPtr handle, Mono::Net::CFRange range, System::IntPtr buffer);
    // static public System.String AsString(System.IntPtr handle)
    // Offset: 0x14A06A8
    static ::Il2CppString* AsString(System::IntPtr handle);
    // public System.Void .ctor(System.IntPtr handle, System.Boolean own)
    // Offset: 0x14A0CB4
    // Implemented from: Mono.Net.CFObject
    // Base method: System.Void CFObject::.ctor(System.IntPtr handle, System.Boolean own)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CFString* New_ctor(System::IntPtr handle, bool own) {
      static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::CFString::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CFString*, creationType>(handle, own)));
    }
    // public override System.String ToString()
    // Offset: 0x14A0F44
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // Mono.Net.CFString
  #pragma pack(pop)
  static check_size<sizeof(CFString), 24 + sizeof(::Il2CppString*)> __Mono_Net_CFStringSizeCheck;
  static_assert(sizeof(CFString) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(Mono::Net::CFString*, "Mono.Net", "CFString");
