// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Mono.Net.Security
namespace Mono::Net::Security {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Net.Security.BufferOffsetSize2
  // [] Offset: FFFFFFFF
  class BufferOffsetSize2 : public Mono::Net::Security::BufferOffsetSize {
    public:
    // Writing base type padding for base size: 0x25 to desired offset: 0x28
    char ___base_padding[0x3] = {};
    // public readonly System.Int32 InitialSize
    // Size: 0x4
    // Offset: 0x28
    int InitialSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: BufferOffsetSize2
    BufferOffsetSize2(int InitialSize_ = {}) noexcept : InitialSize{InitialSize_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return InitialSize;
    }
    // public System.Void .ctor(System.Int32 size)
    // Offset: 0x14A2DB0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BufferOffsetSize2* New_ctor(int size) {
      static auto ___internal__logger = ::Logger::get().WithContext("Mono::Net::Security::BufferOffsetSize2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BufferOffsetSize2*, creationType>(size)));
    }
    // public System.Void Reset()
    // Offset: 0x14A2E28
    void Reset();
    // public System.Void MakeRoom(System.Int32 size)
    // Offset: 0x14A2EC4
    void MakeRoom(int size);
    // public System.Void AppendData(System.Byte[] buffer, System.Int32 offset, System.Int32 size)
    // Offset: 0x14A2FAC
    void AppendData(::Array<uint8_t>* buffer, int offset, int size);
  }; // Mono.Net.Security.BufferOffsetSize2
  #pragma pack(pop)
  static check_size<sizeof(BufferOffsetSize2), 40 + sizeof(int)> __Mono_Net_Security_BufferOffsetSize2SizeCheck;
  static_assert(sizeof(BufferOffsetSize2) == 0x2C);
}
DEFINE_IL2CPP_ARG_TYPE(Mono::Net::Security::BufferOffsetSize2*, "Mono.Net.Security", "BufferOffsetSize2");
