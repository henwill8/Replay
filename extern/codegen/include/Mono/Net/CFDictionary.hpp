// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFObject
#include "Mono/Net/CFObject.hpp"
// Completed includes
// Type namespace: Mono.Net
namespace Mono::Net {
  // Autogenerated type: Mono.Net.CFDictionary
  class CFDictionary : public Mono::Net::CFObject {
    public:
    // Get static field: static private readonly System.IntPtr KeyCallbacks
    static System::IntPtr _get_KeyCallbacks();
    // Set static field: static private readonly System.IntPtr KeyCallbacks
    static void _set_KeyCallbacks(System::IntPtr value);
    // Get static field: static private readonly System.IntPtr ValueCallbacks
    static System::IntPtr _get_ValueCallbacks();
    // Set static field: static private readonly System.IntPtr ValueCallbacks
    static void _set_ValueCallbacks(System::IntPtr value);
    // static private System.Void .cctor()
    // Offset: 0x12600FC
    static void _cctor();
    // static private System.IntPtr CFDictionaryGetValue(System.IntPtr handle, System.IntPtr key)
    // Offset: 0x126023C
    static System::IntPtr CFDictionaryGetValue(System::IntPtr handle, System::IntPtr key);
    // public System.IntPtr GetValue(System.IntPtr key)
    // Offset: 0x12602CC
    System::IntPtr GetValue(System::IntPtr key);
    // public System.IntPtr get_Item(System.IntPtr key)
    // Offset: 0x1260344
    System::IntPtr get_Item(System::IntPtr key);
    // public System.Void .ctor(System.IntPtr handle, System.Boolean own)
    // Offset: 0x12601EC
    // Implemented from: Mono.Net.CFObject
    // Base method: System.Void CFObject::.ctor(System.IntPtr handle, System.Boolean own)
    static CFDictionary* New_ctor(System::IntPtr handle, bool own);
  }; // Mono.Net.CFDictionary
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Mono::Net::CFDictionary*, "Mono.Net", "CFDictionary");
#pragma pack(pop)
