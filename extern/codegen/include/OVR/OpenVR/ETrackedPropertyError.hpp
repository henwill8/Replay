// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: OVR.OpenVR
namespace OVR::OpenVR {
  // Autogenerated type: OVR.OpenVR.ETrackedPropertyError
  struct ETrackedPropertyError : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // Creating value type constructor for type: ETrackedPropertyError
    constexpr ETrackedPropertyError(int value_ = {}) noexcept : value{value_} {}
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
    static constexpr const int TrackedProp_Success = 0;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_Success();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
    static void _set_TrackedProp_Success(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
    static constexpr const int TrackedProp_WrongDataType = 1;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_WrongDataType();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
    static void _set_TrackedProp_WrongDataType(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
    static constexpr const int TrackedProp_WrongDeviceClass = 2;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_WrongDeviceClass();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
    static void _set_TrackedProp_WrongDeviceClass(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
    static constexpr const int TrackedProp_BufferTooSmall = 3;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_BufferTooSmall();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
    static void _set_TrackedProp_BufferTooSmall(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
    static constexpr const int TrackedProp_UnknownProperty = 4;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_UnknownProperty();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
    static void _set_TrackedProp_UnknownProperty(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
    static constexpr const int TrackedProp_InvalidDevice = 5;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_InvalidDevice();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
    static void _set_TrackedProp_InvalidDevice(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
    static constexpr const int TrackedProp_CouldNotContactServer = 6;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_CouldNotContactServer();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
    static void _set_TrackedProp_CouldNotContactServer(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
    static constexpr const int TrackedProp_ValueNotProvidedByDevice = 7;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_ValueNotProvidedByDevice();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
    static void _set_TrackedProp_ValueNotProvidedByDevice(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
    static constexpr const int TrackedProp_StringExceedsMaximumLength = 8;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_StringExceedsMaximumLength();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
    static void _set_TrackedProp_StringExceedsMaximumLength(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
    static constexpr const int TrackedProp_NotYetAvailable = 9;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_NotYetAvailable();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
    static void _set_TrackedProp_NotYetAvailable(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
    static constexpr const int TrackedProp_PermissionDenied = 10;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_PermissionDenied();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
    static void _set_TrackedProp_PermissionDenied(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
    static constexpr const int TrackedProp_InvalidOperation = 11;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_InvalidOperation();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
    static void _set_TrackedProp_InvalidOperation(OVR::OpenVR::ETrackedPropertyError value);
    // static field const value: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
    static constexpr const int TrackedProp_CannotWriteToWildcards = 12;
    // Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
    static OVR::OpenVR::ETrackedPropertyError _get_TrackedProp_CannotWriteToWildcards();
    // Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
    static void _set_TrackedProp_CannotWriteToWildcards(OVR::OpenVR::ETrackedPropertyError value);
  }; // OVR.OpenVR.ETrackedPropertyError
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(OVR::OpenVR::ETrackedPropertyError, "OVR.OpenVR", "ETrackedPropertyError");
#pragma pack(pop)
