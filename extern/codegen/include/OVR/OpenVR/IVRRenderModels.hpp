// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OVR::OpenVR
namespace OVR::OpenVR {
}
// Completed forward declares
// Type namespace: OVR.OpenVR
namespace OVR::OpenVR {
  // Size: 0x98
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVR.OpenVR.IVRRenderModels
  // [] Offset: FFFFFFFF
  struct IVRRenderModels/*, public System::ValueType*/ {
    public:
    // Nested type: OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async
    class _LoadRenderModel_Async;
    // Nested type: OVR::OpenVR::IVRRenderModels::_FreeRenderModel
    class _FreeRenderModel;
    // Nested type: OVR::OpenVR::IVRRenderModels::_LoadTexture_Async
    class _LoadTexture_Async;
    // Nested type: OVR::OpenVR::IVRRenderModels::_FreeTexture
    class _FreeTexture;
    // Nested type: OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async
    class _LoadTextureD3D11_Async;
    // Nested type: OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async
    class _LoadIntoTextureD3D11_Async;
    // Nested type: OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11
    class _FreeTextureD3D11;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetRenderModelName
    class _GetRenderModelName;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetRenderModelCount
    class _GetRenderModelCount;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetComponentCount
    class _GetComponentCount;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetComponentName
    class _GetComponentName;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask
    class _GetComponentButtonMask;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName
    class _GetComponentRenderModelName;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath
    class _GetComponentStateForDevicePath;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetComponentState
    class _GetComponentState;
    // Nested type: OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent
    class _RenderModelHasComponent;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL
    class _GetRenderModelThumbnailURL;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath
    class _GetRenderModelOriginalPath;
    // Nested type: OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum
    class _GetRenderModelErrorNameFromEnum;
    // OVR.OpenVR.IVRRenderModels/_LoadRenderModel_Async LoadRenderModel_Async
    // Size: 0x8
    // Offset: 0x0
    OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async* LoadRenderModel_Async;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_FreeRenderModel FreeRenderModel
    // Size: 0x8
    // Offset: 0x8
    OVR::OpenVR::IVRRenderModels::_FreeRenderModel* FreeRenderModel;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_FreeRenderModel*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_LoadTexture_Async LoadTexture_Async
    // Size: 0x8
    // Offset: 0x10
    OVR::OpenVR::IVRRenderModels::_LoadTexture_Async* LoadTexture_Async;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_LoadTexture_Async*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_FreeTexture FreeTexture
    // Size: 0x8
    // Offset: 0x18
    OVR::OpenVR::IVRRenderModels::_FreeTexture* FreeTexture;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_FreeTexture*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_LoadTextureD3D11_Async LoadTextureD3D11_Async
    // Size: 0x8
    // Offset: 0x20
    OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async* LoadTextureD3D11_Async;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async
    // Size: 0x8
    // Offset: 0x28
    OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async* LoadIntoTextureD3D11_Async;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_FreeTextureD3D11 FreeTextureD3D11
    // Size: 0x8
    // Offset: 0x30
    OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11* FreeTextureD3D11;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetRenderModelName GetRenderModelName
    // Size: 0x8
    // Offset: 0x38
    OVR::OpenVR::IVRRenderModels::_GetRenderModelName* GetRenderModelName;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetRenderModelName*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetRenderModelCount GetRenderModelCount
    // Size: 0x8
    // Offset: 0x40
    OVR::OpenVR::IVRRenderModels::_GetRenderModelCount* GetRenderModelCount;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetRenderModelCount*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetComponentCount GetComponentCount
    // Size: 0x8
    // Offset: 0x48
    OVR::OpenVR::IVRRenderModels::_GetComponentCount* GetComponentCount;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetComponentCount*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetComponentName GetComponentName
    // Size: 0x8
    // Offset: 0x50
    OVR::OpenVR::IVRRenderModels::_GetComponentName* GetComponentName;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetComponentName*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetComponentButtonMask GetComponentButtonMask
    // Size: 0x8
    // Offset: 0x58
    OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask* GetComponentButtonMask;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetComponentRenderModelName GetComponentRenderModelName
    // Size: 0x8
    // Offset: 0x60
    OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName* GetComponentRenderModelName;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetComponentStateForDevicePath GetComponentStateForDevicePath
    // Size: 0x8
    // Offset: 0x68
    OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath* GetComponentStateForDevicePath;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetComponentState GetComponentState
    // Size: 0x8
    // Offset: 0x70
    OVR::OpenVR::IVRRenderModels::_GetComponentState* GetComponentState;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetComponentState*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_RenderModelHasComponent RenderModelHasComponent
    // Size: 0x8
    // Offset: 0x78
    OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent* RenderModelHasComponent;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetRenderModelThumbnailURL GetRenderModelThumbnailURL
    // Size: 0x8
    // Offset: 0x80
    OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL* GetRenderModelThumbnailURL;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetRenderModelOriginalPath GetRenderModelOriginalPath
    // Size: 0x8
    // Offset: 0x88
    OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath* GetRenderModelOriginalPath;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath*) == 0x8);
    // OVR.OpenVR.IVRRenderModels/_GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum
    // Size: 0x8
    // Offset: 0x90
    OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum* GetRenderModelErrorNameFromEnum;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum*) == 0x8);
    // Creating value type constructor for type: IVRRenderModels
    constexpr IVRRenderModels(OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async* LoadRenderModel_Async_ = {}, OVR::OpenVR::IVRRenderModels::_FreeRenderModel* FreeRenderModel_ = {}, OVR::OpenVR::IVRRenderModels::_LoadTexture_Async* LoadTexture_Async_ = {}, OVR::OpenVR::IVRRenderModels::_FreeTexture* FreeTexture_ = {}, OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async* LoadTextureD3D11_Async_ = {}, OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async* LoadIntoTextureD3D11_Async_ = {}, OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11* FreeTextureD3D11_ = {}, OVR::OpenVR::IVRRenderModels::_GetRenderModelName* GetRenderModelName_ = {}, OVR::OpenVR::IVRRenderModels::_GetRenderModelCount* GetRenderModelCount_ = {}, OVR::OpenVR::IVRRenderModels::_GetComponentCount* GetComponentCount_ = {}, OVR::OpenVR::IVRRenderModels::_GetComponentName* GetComponentName_ = {}, OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask* GetComponentButtonMask_ = {}, OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName* GetComponentRenderModelName_ = {}, OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath* GetComponentStateForDevicePath_ = {}, OVR::OpenVR::IVRRenderModels::_GetComponentState* GetComponentState_ = {}, OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent* RenderModelHasComponent_ = {}, OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL* GetRenderModelThumbnailURL_ = {}, OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath* GetRenderModelOriginalPath_ = {}, OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum* GetRenderModelErrorNameFromEnum_ = {}) noexcept : LoadRenderModel_Async{LoadRenderModel_Async_}, FreeRenderModel{FreeRenderModel_}, LoadTexture_Async{LoadTexture_Async_}, FreeTexture{FreeTexture_}, LoadTextureD3D11_Async{LoadTextureD3D11_Async_}, LoadIntoTextureD3D11_Async{LoadIntoTextureD3D11_Async_}, FreeTextureD3D11{FreeTextureD3D11_}, GetRenderModelName{GetRenderModelName_}, GetRenderModelCount{GetRenderModelCount_}, GetComponentCount{GetComponentCount_}, GetComponentName{GetComponentName_}, GetComponentButtonMask{GetComponentButtonMask_}, GetComponentRenderModelName{GetComponentRenderModelName_}, GetComponentStateForDevicePath{GetComponentStateForDevicePath_}, GetComponentState{GetComponentState_}, RenderModelHasComponent{RenderModelHasComponent_}, GetRenderModelThumbnailURL{GetRenderModelThumbnailURL_}, GetRenderModelOriginalPath{GetRenderModelOriginalPath_}, GetRenderModelErrorNameFromEnum{GetRenderModelErrorNameFromEnum_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // OVR.OpenVR.IVRRenderModels
  #pragma pack(pop)
  static check_size<sizeof(IVRRenderModels), 144 + sizeof(OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum*)> __OVR_OpenVR_IVRRenderModelsSizeCheck;
  static_assert(sizeof(IVRRenderModels) == 0x98);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(OVR::OpenVR::IVRRenderModels, "OVR.OpenVR", "IVRRenderModels");
