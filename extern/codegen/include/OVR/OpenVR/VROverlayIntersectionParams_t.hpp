// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: OVR.OpenVR.HmdVector3_t
#include "OVR/OpenVR/HmdVector3_t.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Completed includes
// Type namespace: OVR.OpenVR
namespace OVR::OpenVR {
  // Size: 0x1C
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVR.OpenVR.VROverlayIntersectionParams_t
  // [] Offset: FFFFFFFF
  struct VROverlayIntersectionParams_t/*, public System::ValueType*/ {
    public:
    // public OVR.OpenVR.HmdVector3_t vSource
    // Size: 0xC
    // Offset: 0x0
    OVR::OpenVR::HmdVector3_t vSource;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::HmdVector3_t) == 0xC);
    // public OVR.OpenVR.HmdVector3_t vDirection
    // Size: 0xC
    // Offset: 0xC
    OVR::OpenVR::HmdVector3_t vDirection;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::HmdVector3_t) == 0xC);
    // public OVR.OpenVR.ETrackingUniverseOrigin eOrigin
    // Size: 0x4
    // Offset: 0x18
    OVR::OpenVR::ETrackingUniverseOrigin eOrigin;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::ETrackingUniverseOrigin) == 0x4);
    // Creating value type constructor for type: VROverlayIntersectionParams_t
    constexpr VROverlayIntersectionParams_t(OVR::OpenVR::HmdVector3_t vSource_ = {}, OVR::OpenVR::HmdVector3_t vDirection_ = {}, OVR::OpenVR::ETrackingUniverseOrigin eOrigin_ = {}) noexcept : vSource{vSource_}, vDirection{vDirection_}, eOrigin{eOrigin_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // OVR.OpenVR.VROverlayIntersectionParams_t
  #pragma pack(pop)
  static check_size<sizeof(VROverlayIntersectionParams_t), 24 + sizeof(OVR::OpenVR::ETrackingUniverseOrigin)> __OVR_OpenVR_VROverlayIntersectionParams_tSizeCheck;
  static_assert(sizeof(VROverlayIntersectionParams_t) == 0x1C);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(OVR::OpenVR::VROverlayIntersectionParams_t, "OVR.OpenVR", "VROverlayIntersectionParams_t");
