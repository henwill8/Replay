// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: OVR.OpenVR.HmdVector3_t
#include "OVR/OpenVR/HmdVector3_t.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Completed includes
// Type namespace: OVR.OpenVR
namespace OVR::OpenVR {
  // Autogenerated type: OVR.OpenVR.VROverlayIntersectionParams_t
  struct VROverlayIntersectionParams_t : public System::ValueType {
    public:
    // public OVR.OpenVR.HmdVector3_t vSource
    // Offset: 0x0
    OVR::OpenVR::HmdVector3_t vSource;
    // public OVR.OpenVR.HmdVector3_t vDirection
    // Offset: 0xC
    OVR::OpenVR::HmdVector3_t vDirection;
    // public OVR.OpenVR.ETrackingUniverseOrigin eOrigin
    // Offset: 0x18
    OVR::OpenVR::ETrackingUniverseOrigin eOrigin;
    // Creating value type constructor for type: VROverlayIntersectionParams_t
    constexpr VROverlayIntersectionParams_t(OVR::OpenVR::HmdVector3_t vSource_ = {}, OVR::OpenVR::HmdVector3_t vDirection_ = {}, OVR::OpenVR::ETrackingUniverseOrigin eOrigin_ = {}) noexcept : vSource{vSource_}, vDirection{vDirection_}, eOrigin{eOrigin_} {}
  }; // OVR.OpenVR.VROverlayIntersectionParams_t
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(OVR::OpenVR::VROverlayIntersectionParams_t, "OVR.OpenVR", "VROverlayIntersectionParams_t");
#pragma pack(pop)
