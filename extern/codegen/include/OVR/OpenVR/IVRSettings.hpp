// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OVR::OpenVR
namespace OVR::OpenVR {
}
// Completed forward declares
// Type namespace: OVR.OpenVR
namespace OVR::OpenVR {
  // Size: 0x60
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OVR.OpenVR.IVRSettings
  // [] Offset: FFFFFFFF
  struct IVRSettings/*, public System::ValueType*/ {
    public:
    // Nested type: OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum
    class _GetSettingsErrorNameFromEnum;
    // Nested type: OVR::OpenVR::IVRSettings::_Sync
    class _Sync;
    // Nested type: OVR::OpenVR::IVRSettings::_SetBool
    class _SetBool;
    // Nested type: OVR::OpenVR::IVRSettings::_SetInt32
    class _SetInt32;
    // Nested type: OVR::OpenVR::IVRSettings::_SetFloat
    class _SetFloat;
    // Nested type: OVR::OpenVR::IVRSettings::_SetString
    class _SetString;
    // Nested type: OVR::OpenVR::IVRSettings::_GetBool
    class _GetBool;
    // Nested type: OVR::OpenVR::IVRSettings::_GetInt32
    class _GetInt32;
    // Nested type: OVR::OpenVR::IVRSettings::_GetFloat
    class _GetFloat;
    // Nested type: OVR::OpenVR::IVRSettings::_GetString
    class _GetString;
    // Nested type: OVR::OpenVR::IVRSettings::_RemoveSection
    class _RemoveSection;
    // Nested type: OVR::OpenVR::IVRSettings::_RemoveKeyInSection
    class _RemoveKeyInSection;
    // OVR.OpenVR.IVRSettings/_GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum
    // Size: 0x8
    // Offset: 0x0
    OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum* GetSettingsErrorNameFromEnum;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum*) == 0x8);
    // OVR.OpenVR.IVRSettings/_Sync Sync
    // Size: 0x8
    // Offset: 0x8
    OVR::OpenVR::IVRSettings::_Sync* Sync;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_Sync*) == 0x8);
    // OVR.OpenVR.IVRSettings/_SetBool SetBool
    // Size: 0x8
    // Offset: 0x10
    OVR::OpenVR::IVRSettings::_SetBool* SetBool;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_SetBool*) == 0x8);
    // OVR.OpenVR.IVRSettings/_SetInt32 SetInt32
    // Size: 0x8
    // Offset: 0x18
    OVR::OpenVR::IVRSettings::_SetInt32* SetInt32;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_SetInt32*) == 0x8);
    // OVR.OpenVR.IVRSettings/_SetFloat SetFloat
    // Size: 0x8
    // Offset: 0x20
    OVR::OpenVR::IVRSettings::_SetFloat* SetFloat;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_SetFloat*) == 0x8);
    // OVR.OpenVR.IVRSettings/_SetString SetString
    // Size: 0x8
    // Offset: 0x28
    OVR::OpenVR::IVRSettings::_SetString* SetString;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_SetString*) == 0x8);
    // OVR.OpenVR.IVRSettings/_GetBool GetBool
    // Size: 0x8
    // Offset: 0x30
    OVR::OpenVR::IVRSettings::_GetBool* GetBool;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_GetBool*) == 0x8);
    // OVR.OpenVR.IVRSettings/_GetInt32 GetInt32
    // Size: 0x8
    // Offset: 0x38
    OVR::OpenVR::IVRSettings::_GetInt32* GetInt32;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_GetInt32*) == 0x8);
    // OVR.OpenVR.IVRSettings/_GetFloat GetFloat
    // Size: 0x8
    // Offset: 0x40
    OVR::OpenVR::IVRSettings::_GetFloat* GetFloat;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_GetFloat*) == 0x8);
    // OVR.OpenVR.IVRSettings/_GetString GetString
    // Size: 0x8
    // Offset: 0x48
    OVR::OpenVR::IVRSettings::_GetString* GetString;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_GetString*) == 0x8);
    // OVR.OpenVR.IVRSettings/_RemoveSection RemoveSection
    // Size: 0x8
    // Offset: 0x50
    OVR::OpenVR::IVRSettings::_RemoveSection* RemoveSection;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_RemoveSection*) == 0x8);
    // OVR.OpenVR.IVRSettings/_RemoveKeyInSection RemoveKeyInSection
    // Size: 0x8
    // Offset: 0x58
    OVR::OpenVR::IVRSettings::_RemoveKeyInSection* RemoveKeyInSection;
    // Field size check
    static_assert(sizeof(OVR::OpenVR::IVRSettings::_RemoveKeyInSection*) == 0x8);
    // Creating value type constructor for type: IVRSettings
    constexpr IVRSettings(OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum* GetSettingsErrorNameFromEnum_ = {}, OVR::OpenVR::IVRSettings::_Sync* Sync_ = {}, OVR::OpenVR::IVRSettings::_SetBool* SetBool_ = {}, OVR::OpenVR::IVRSettings::_SetInt32* SetInt32_ = {}, OVR::OpenVR::IVRSettings::_SetFloat* SetFloat_ = {}, OVR::OpenVR::IVRSettings::_SetString* SetString_ = {}, OVR::OpenVR::IVRSettings::_GetBool* GetBool_ = {}, OVR::OpenVR::IVRSettings::_GetInt32* GetInt32_ = {}, OVR::OpenVR::IVRSettings::_GetFloat* GetFloat_ = {}, OVR::OpenVR::IVRSettings::_GetString* GetString_ = {}, OVR::OpenVR::IVRSettings::_RemoveSection* RemoveSection_ = {}, OVR::OpenVR::IVRSettings::_RemoveKeyInSection* RemoveKeyInSection_ = {}) noexcept : GetSettingsErrorNameFromEnum{GetSettingsErrorNameFromEnum_}, Sync{Sync_}, SetBool{SetBool_}, SetInt32{SetInt32_}, SetFloat{SetFloat_}, SetString{SetString_}, GetBool{GetBool_}, GetInt32{GetInt32_}, GetFloat{GetFloat_}, GetString{GetString_}, RemoveSection{RemoveSection_}, RemoveKeyInSection{RemoveKeyInSection_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
  }; // OVR.OpenVR.IVRSettings
  #pragma pack(pop)
  static check_size<sizeof(IVRSettings), 88 + sizeof(OVR::OpenVR::IVRSettings::_RemoveKeyInSection*)> __OVR_OpenVR_IVRSettingsSizeCheck;
  static_assert(sizeof(IVRSettings) == 0x60);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(OVR::OpenVR::IVRSettings, "OVR.OpenVR", "IVRSettings");
